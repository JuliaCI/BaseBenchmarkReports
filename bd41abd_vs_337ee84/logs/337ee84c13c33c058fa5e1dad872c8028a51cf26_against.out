cset: moving following pidspec: 30783
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.689900227 seconds)
loading group "string"... done (took 0.566272282 seconds)
loading group "linalg"... done (took 9.506864548 seconds)
loading group "parallel"... done (took 0.183657804 seconds)
loading group "find"... done (took 1.566704447 seconds)
loading group "tuple"... done (took 2.214078021 seconds)
loading group "dates"... done (took 1.499523671 seconds)
loading group "micro"... done (took 0.215369476 seconds)
loading group "io"... done (took 0.617399905 seconds)
loading group "scalar"... done (took 47.613593061 seconds)
loading group "sparse"... done (took 14.577741077 seconds)
loading group "broadcast"... done (took 1.299258417 seconds)
loading group "union"... done (took 11.310867865 seconds)
loading group "simd"... done (took 2.835694399 seconds)
loading group "random"... done (took 10.939133823 seconds)
loading group "problem"... done (took 2.388831296 seconds)
loading group "array"... done (took 26.246330763 seconds)
loading group "misc"... done (took 1.198568837 seconds)
loading group "sort"... done (took 4.064173238 seconds)
loading group "collection"... done (took 20.931808093 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.715073858 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14911453 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.237682889 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.380927118 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.242897776 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.167643733 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.166196621 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.289293551 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.240472528 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.232374904 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151322235 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.599196659 seconds)
done (took 6.275379085 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.255966191 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.264778883 seconds)
    (2/2) benchmarking "String"...
    done (took 0.17303629 seconds)
  done (took 1.08143071 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.086766535 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.177000441 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094983298 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.111375282 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.111093018 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109722983 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095460676 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109521954 seconds)
  done (took 1.453309621 seconds)
done (took 3.529268129 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.553215194 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.9039595 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.580356774 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.163618596 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.327388573 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.357930526 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.347857743 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.209595899 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.104397602 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.106477546 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.179380284 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.43919497 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.45182984 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.057433814 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.106369126 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093921153 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.131520214 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.815150512 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.076124295 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.132217344 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.594176214 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.202773843 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115060856 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.131411971 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.199154101 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.119453662 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.177882624 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103272563 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.667392817 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.1307945 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.205823708 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.079268395 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.175125745 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.249227032 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.227491326 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.105987024 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.664658385 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.200926826 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097988092 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.09939315 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.67644716 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.13192432 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.169975077 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104738478 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.093171246 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.188743328 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.117742197 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.091931414 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.116315469 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.087582939 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16679872 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.463005846 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.090184312 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.172136628 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.089307738 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.694973756 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.100200746 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.2854799 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.135895268 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.106089145 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.073927227 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.101292624 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.162256833 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.106789688 seconds)
  done (took 20.900151484 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.165436865 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.173693274 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075241518 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.159107957 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.147976197 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.095346538 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.0851368 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.092793013 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.127992346 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.246345648 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.140620994 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.171919965 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.074334065 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.101665259 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.152257899 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.252198403 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107603679 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.123255242 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099784246 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.092559355 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.145049847 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113236793 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094181686 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.1129974 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170547918 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206817474 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.120656231 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122137139 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.101205809 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.102268384 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141340015 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.165390548 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090933062 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083810426 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.190985772 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120671335 seconds)
  done (took 5.433594526 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.193637317 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.254148592 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.105195966 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.244702841 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.18545248 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.151777126 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.188287284 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.146630269 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.32941207 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.260149058 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178644707 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112721549 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.109284414 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091971376 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084998056 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095947954 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.641177077 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.186586279 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.15244528 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.154143083 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10355585 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086577572 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.387134368 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099111916 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096552476 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086485104 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.091880615 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.210726134 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102699809 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.229305856 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.081400589 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.107505522 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130338459 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191009385 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.135789926 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12751417 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102672884 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.097359912 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.227789424 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.111827495 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.075084712 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.13394948 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131272735 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134854523 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097657701 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.095186512 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.246999745 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082346426 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123709009 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.156253226 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197040043 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.140288212 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.079104725 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.326926848 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.115552635 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086530599 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.100042912 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.320742674 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.115629894 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097498804 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095309593 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084855044 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.094949914 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.435548856 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110329675 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.980919172 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.0811673 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.166986702 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100396671 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106462404 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101651422 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088087812 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11719202 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07769467 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.09533759 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077523962 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095193102 seconds)
    (78/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.079744816 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.098074539 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.100278248 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.103094413 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101275133 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096115168 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145917613 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.112832846 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098709739 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124528045 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101602272 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.076760308 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128307061 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096291534 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.08297615 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.173057806 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106498658 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.119176888 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081058645 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101346558 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142179548 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096633718 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.225929491 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.078874628 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123796791 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097418617 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113061938 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114498484 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095896462 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083073939 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.09434993 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077449216 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163138788 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079741499 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.09737796 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098993522 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.094954028 seconds)
  done (took 24.251542156 seconds)
done (took 51.229220799 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.542751794 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.119367956 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.120403352 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102288835 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.118911628 seconds)
  done (took 1.731201462 seconds)
done (took 2.428626655 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.417512018 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.210760647 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.11815942 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.20148141 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.103227081 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.211574135 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.21198694 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.09167443 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.242750374 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.099983016 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.206676394 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102360085 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104148083 seconds)
  done (took 3.047852081 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098104156 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.12872356 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095545383 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112966392 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076532279 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116320121 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11293104 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115450341 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113487932 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088943371 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095308393 seconds)
  done (took 1.847972861 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094999889 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.124134169 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085722366 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111856221 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076914441 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110627946 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092717074 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.127899025 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10930714 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090660288 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09354515 seconds)
  done (took 1.813407448 seconds)
done (took 7.398622562 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.191385076 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.300575163 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.149801624 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.204325941 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.382288666 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.257600164 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.645345882 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.168031602 seconds)
  done (took 13.187870979 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.184195328 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084189523 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.102169542 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084096921 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102777492 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101924041 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083774576 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.100822848 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085317116 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.099035153 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.0861019 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.099745186 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.084918982 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100074136 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083464973 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.101303961 seconds)
  done (took 2.351587017 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.124516169 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.124172252 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.109043116 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112104261 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089864722 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106874094 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.091780901 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.107470563 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.104414973 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.088170201 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.11072466 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.092660679 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.109404213 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.105026949 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.09139189 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.112127965 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087676091 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10950831 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108898413 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092910555 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.110977504 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.105779161 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.092861614 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.110579033 seconds)
  done (took 3.313944461 seconds)
done (took 19.549283414 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.18388263 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100855958 seconds)
  done (took 0.989264287 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.155745371 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.157109523 seconds)
  done (took 1.021092409 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113686222 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.099119663 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.145419761 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.119902635 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084228298 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099437367 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.140489591 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.083902902 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.100587586 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.083733391 seconds)
  done (took 1.781612498 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088474115 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.104208659 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.0967191 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.152350567 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.113743235 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.105336371 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.08929099 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.105903876 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.089653847 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.100452805 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.108936937 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.109670018 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.106945832 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.128436436 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104469684 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.093688474 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.11520207 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.108324342 seconds)
  done (took 2.635539105 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083400992 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.101546789 seconds)
  done (took 0.895993902 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.089559255 seconds)
    (2/7) benchmarking "second"...
    done (took 0.101095234 seconds)
    (3/7) benchmarking "month"...
    done (took 0.089901039 seconds)
    (4/7) benchmarking "year"...
    done (took 0.105330144 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.084582129 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.101461279 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.100617061 seconds)
  done (took 1.383187678 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.5248646 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.297018603 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.362863791 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.122174667 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.16401728 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.386489325 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.149197071 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.119751403 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.120362676 seconds)
  done (took 3.001205431 seconds)
done (took 12.418180627 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090110021 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.230867645 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.667846846 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.120621238 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.080251471 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.158016138 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.317630308 seconds)
done (took 2.380493056 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.356897247 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.162830046 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.091615893 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081714974 seconds)
  done (took 1.405094341 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.07817844 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10906233 seconds)
  done (took 0.907638267 seconds)
done (took 3.040193453 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080898716 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079150526 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.097537295 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079967455 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.096881746 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079908971 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.119403439 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.099530057 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.080253054 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.099363057 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.081637369 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.09852083 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.080132197 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.096526738 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080477864 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097440976 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081112225 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09674333 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080650599 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097229855 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08163812 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096935522 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080725081 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.097498231 seconds)
  done (took 2.937313073 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.108119283 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.101995137 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.088035925 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.106102858 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.106963038 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088365902 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.106081687 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.100692874 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088652156 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.1007595 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08983691 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.10649103 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083475377 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.106782379 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101150375 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.090401757 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.106496849 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084950506 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100896938 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.107147554 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.089497778 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102766296 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.091387414 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105235344 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.106486595 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090602637 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.102084457 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084962641 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104907775 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.10706995 seconds)
  done (took 3.679582043 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.0914015 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094516473 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081246951 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.105996882 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079093011 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099585132 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.07884574 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096261297 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.083601625 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097626954 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.085322625 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097749218 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079565908 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.100112532 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.083857053 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.10228855 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.094346398 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.096630975 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.078424235 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.101513853 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084333833 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.096160463 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.081721574 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.098057413 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.081855526 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.095438145 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.082591124 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.097550257 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.083125795 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.098416001 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.083723148 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.101138003 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081910316 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.109559334 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.086311448 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.099243517 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.086405163 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.094021321 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.084407526 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096513872 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079207482 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.098819832 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078371468 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.108052704 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.082372089 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.100513052 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079354782 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.101357088 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082517077 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.104212731 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078904002 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097003014 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.086510337 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.10238947 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.086764811 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096104746 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.083355668 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.096085587 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.084966548 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.099615087 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.079361505 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.095875859 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.086250873 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.100235085 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.101806148 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.107574424 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.078597609 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.103289296 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.101320577 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.088209932 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.102065636 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095714323 seconds)
  done (took 7.342469213 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.097559337 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112731853 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08395748 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10152138 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082948817 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.100279167 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.090838484 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099677716 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084318468 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.110368919 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099495152 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.085709054 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101406283 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083815057 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098616843 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082414315 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.107932332 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082784933 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.099951879 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08254816 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098349105 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.107241351 seconds)
  done (took 2.826048161 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.247471304 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.108024493 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.156064402 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119326774 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.123655703 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.100347015 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106259277 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091047455 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105371314 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112253374 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096072503 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106125571 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.126203197 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095294536 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11222526 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.115016013 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087701077 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.114179333 seconds)
  done (took 2.851972102 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.102715252 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.103328047 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.109936227 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.104878092 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.104021889 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085900585 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112679432 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.102588454 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.10382752 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.104814872 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.097491807 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10388097 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.084986902 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104054283 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086085935 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106240358 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102220681 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085969263 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113484163 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111104119 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.0943224 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113055852 seconds)
  done (took 2.969001358 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103215761 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103154615 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.139185548 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090772117 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.102600494 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.084973177 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.11120783 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.085524373 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.111959651 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100729697 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087330722 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.101365635 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.095395133 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104022519 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.094491753 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104402873 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085428701 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104549088 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104508127 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084834525 seconds)
  done (took 2.730985423 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.185817093 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100240704 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.119916731 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133290445 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101814474 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.117588404 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.130340993 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099758186 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.116347344 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134597522 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098683484 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.115421175 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128934515 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107218939 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115562444 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128226917 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129339711 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112037659 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115164594 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116757504 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.132237878 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.098844432 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129323012 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116337912 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099220184 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116157732 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098874209 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.124424461 seconds)
  done (took 4.058678246 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082271879 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079954654 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.096599291 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.080460703 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.096996457 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.079323885 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.096547122 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.080632875 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096887449 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.0801229 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.096752834 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.198202799 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097083355 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.079600044 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09720962 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.080400607 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097029815 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.080532609 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097137385 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080415862 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.096119434 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079625543 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.096081486 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079724887 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097887682 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.08010429 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097505286 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080333415 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096603288 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.080077499 seconds)
  done (took 3.494688122 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.096318843 seconds)
    (2/2) benchmarking "in"...
    done (took 0.111871361 seconds)
  done (took 0.948001577 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.093575108 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.121256747 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084020396 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103067624 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094992529 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101739744 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114914028 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094639669 seconds)
  done (took 1.545063488 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.15647062 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.158463811 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.091444046 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114905823 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.153471599 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.147841765 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128850378 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.104665679 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.10206945 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.075291607 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.146889946 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.098808277 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.087375328 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100919294 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.085089957 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110645098 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.082640281 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108272852 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.106509232 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083650768 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103951581 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093256417 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106126123 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.092103215 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.09559168 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.106696628 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.090977599 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.111886448 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084323221 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109302942 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.085320983 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.098883855 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.103371946 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.088727056 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.099186957 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.149164308 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096082284 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.101499905 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.086078469 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106179776 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109123053 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.081878426 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.105646183 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.084232307 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106938266 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.086373751 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.105583713 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.082596248 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.095661931 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.078606559 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.100845149 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081794093 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09875746 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105379753 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.086936045 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111866577 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083735396 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.096642307 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.080760603 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.099474722 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.084751129 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.099392101 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106374459 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.085258535 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102988588 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089038996 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10810631 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.084990561 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.105930557 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.085645898 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.104326486 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121431776 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088835292 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.106212063 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087600899 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.100591471 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083717135 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105391982 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103863185 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.088338243 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.10440633 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090735809 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.105214989 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080906329 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.099638957 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107026847 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.087003085 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.106076154 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.079946034 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119477792 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.08824449 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.104740897 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082564703 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107133376 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084958488 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.107886622 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081332741 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109057428 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.083899471 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.109590295 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106012378 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08025593 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.107773101 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088503549 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105586333 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.085703435 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.143732417 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101804993 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.081798165 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.102435276 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087056426 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.098404132 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.103528748 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.080697955 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096515384 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081887837 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.10449573 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.086882671 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.101362607 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.087248712 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102285811 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.088912266 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.101734733 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.080375123 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.098641659 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.102959666 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091842745 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107560429 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.084052124 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.100328238 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082469822 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.104317588 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.086240533 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.101819284 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10579207 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084008327 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.098926909 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082375797 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105571024 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.088135647 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100092206 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085745598 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.105371112 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.10391769 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085212297 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.105655367 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.080847684 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.096391683 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088294773 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.099413202 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.082809089 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110996646 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.100677614 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.084489384 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.099884255 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092730515 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.100995939 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.08890835 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102571219 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088734137 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106051078 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.075909588 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101567772 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084394484 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11079789 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.100506007 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.083985268 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.099303048 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089243062 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.096841621 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.086026884 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.095531878 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.079470291 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.10598697 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.083636025 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.103789833 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.082120166 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117807793 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.113956131 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089094791 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.103488396 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.085986639 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.104748574 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.086086624 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.10459413 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107363832 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.088476933 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.103964592 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.085220166 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106398339 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.080428689 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.103802789 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085591908 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107026186 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.077872979 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.102342065 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.076884367 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104812886 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107373421 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087557023 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10655464 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085323818 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103472365 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093234283 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.101570577 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.086029736 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.097009854 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.088150764 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.110512532 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106303171 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091028966 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.105947606 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085686503 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.101707547 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092638564 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102010103 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.086813273 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.101481696 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079231164 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.097804429 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.106297096 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.085855663 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.099489599 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.08131932 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106871447 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089626017 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.102239412 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.078720119 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.105230235 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091446208 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.100314535 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104868877 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.081761779 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.102981446 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096796369 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.106454949 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.081248263 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.108875943 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.106556348 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.08261991 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.101448721 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.086402251 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.10663713 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085304728 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.102979019 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084747244 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108979851 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.0844701 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.097924358 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08358972 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.103380483 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.079688503 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.101747621 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.105261031 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.083825689 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.100554006 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093275184 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107790678 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.09022884 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.102840405 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.095021127 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.106897751 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.106759077 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.081909458 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.106718825 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.082540016 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.096749051 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08312818 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.095152887 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083668019 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.100013395 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.088665847 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102445347 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085518207 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.104187619 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107345676 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084467931 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.106538635 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100159297 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.097567645 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.097833355 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085636344 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10533506 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.08420458 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.10148651 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.084008176 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106665235 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.088009425 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108060813 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.080690628 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.099997531 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106414545 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084176352 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107281473 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.088906181 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.107619935 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.082925999 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.105679297 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.083823213 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111585506 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.080505425 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.105286168 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105737358 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086876002 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.102260482 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.08537167 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.100794123 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.079042089 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.100778875 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.088890339 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.098746621 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104455369 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.085748489 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.102054413 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.081869268 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100540742 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.090128639 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.098269029 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.091343828 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.101184754 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.079231655 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.098842283 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.088285396 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106688125 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.088279848 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.100860353 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.103245577 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090722253 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.104912912 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.083065503 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110843839 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091739952 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.107275486 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094398219 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.096138815 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085035103 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112739703 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.099994284 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.085843188 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.102241164 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081606451 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108374031 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.090464287 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.106723226 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085019562 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.098563745 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.083546358 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.107825225 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.085764426 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.105332473 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.084037326 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107407141 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.100697045 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086958071 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.107611016 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087912903 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107779698 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088221677 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.105466658 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082901519 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.108695891 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.082275128 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.098312575 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.097719566 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085122888 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.108059051 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.077988991 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.105674965 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.088095452 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101414637 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085412826 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.105266545 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.083346966 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10459711 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088275677 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.101903529 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094047979 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.103074765 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.100513037 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08880848 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.105971056 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.080117569 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.10157762 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083051825 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10954316 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.086810405 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.106460472 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088297256 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106510364 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083732647 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.106742198 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.088071634 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.10694697 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.09755374 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.089996077 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109742782 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.08570675 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.10276319 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085549245 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.099195694 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.085577815 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.108868632 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.084091159 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11141052 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.106869551 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086716454 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.103092777 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088813977 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105454831 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090801892 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.100424576 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087787793 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.098789164 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.10896444 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.087100995 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.1094261 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.083459665 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.099476048 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08901307 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.106482196 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08800789 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109518309 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.089225006 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.098920511 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.080140594 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.103324501 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.102929715 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09490275 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.101983001 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085645497 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105425962 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.084797794 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.103009218 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090448153 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100522525 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084313261 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.107927797 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106112934 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.082617826 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.098985144 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.0880962 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.103612094 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087400769 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.104757969 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081745802 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.104505187 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.09074485 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104840259 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.078946627 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103025396 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108950092 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.086748078 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.102835843 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.081043917 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112594001 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089669734 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10924304 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.099582071 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.089076125 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102199792 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.08622209 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.10834505 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086638429 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106661563 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.086258809 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107623779 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113384108 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08041869 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.099725297 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094576169 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10606213 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.092089025 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.10450465 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.08653953 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109592829 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091020204 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.103516413 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.098799511 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081676766 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.099942143 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081974977 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.103876325 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095202362 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.105728247 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.08471671 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105762425 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086912965 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.104363685 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.085314889 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.099974846 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090552344 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103337158 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.109954022 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.080623441 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.097571973 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.086370636 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10720592 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083757561 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10073289 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08430776 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.103537436 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082447197 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.10420963 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092023423 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106036193 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.08994667 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105735232 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103849096 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.085767242 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113355501 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083603408 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.103308166 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096958589 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.108823484 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087467424 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.106861789 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111417503 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.091051975 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.104712512 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.091368656 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.104163232 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08183088 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.110065421 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.091204649 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118544111 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10365103 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.078854011 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.105940701 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.082460134 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.099601144 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.092587635 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109998053 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.091909053 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.10655082 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.083648255 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111174916 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103386771 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088770594 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.103308152 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.08582147 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.106030112 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085041689 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.105991537 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084536623 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.110335446 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.089904787 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107482359 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111296126 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.079889424 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113733081 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.091315801 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.11043156 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083476939 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.100060094 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.082125758 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.105517897 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.091239573 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.108757266 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.087013011 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.105820703 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087056062 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.10773258 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10711014 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.08530227 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.109510212 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.089658157 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.102291086 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.08994047 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.102097095 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082893205 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.102897778 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.089616494 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.109607304 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.08893255 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115453393 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.108571753 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087004476 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.103225247 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089073583 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.104545123 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.08908432 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106372371 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.083586683 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.100140836 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089907128 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.11029695 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087468572 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111145473 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.11209636 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086212951 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.10925867 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093690065 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.107387338 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.084586613 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.108272544 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.085928358 seconds)
  done (took 58.53441692 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.170850269 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093368378 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104180654 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.086211192 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135895349 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105710424 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086031815 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105637535 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087633133 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.118857807 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08538744 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104682404 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12992995 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137316854 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134463501 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.101963398 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104192403 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.087334963 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.104842647 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10547518 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109571043 seconds)
  done (took 3.090965404 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116070386 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.127636627 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.122735951 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.127144865 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096587007 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.121781325 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.122444729 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121284405 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106987993 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.118578077 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.126175909 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120817474 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.098495263 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.117845241 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117243769 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098396744 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.126340195 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.114961226 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.121901974 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103608588 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118063736 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.123656882 seconds)
  done (took 3.359673219 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.099070923 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.106664606 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.091770394 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.104408526 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.089007246 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.102844326 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.096261541 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.104211422 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.095003421 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.104867615 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.083114883 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.102765809 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086734882 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.104240335 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.08316738 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.103372904 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.093994118 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.108157924 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.089453312 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.103663514 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.121000509 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.085421178 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.104801426 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.083497276 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.118243463 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.091549431 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.105109774 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.08859324 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.10007848 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.088466052 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.104928719 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.087130853 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.108663323 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.101109599 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.080910633 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.107670856 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.088323705 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.104114092 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.085979207 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.101029799 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.087699902 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.109286581 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.092940841 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.104472121 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.08486595 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.102855208 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088709704 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.104581162 seconds)
  done (took 5.474334371 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.13093636 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.172577 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090846095 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.153540167 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.128872575 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.120991326 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.090006266 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.130492175 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.109739882 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.089641088 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.130569311 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.1302322 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.112390139 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.096037746 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.11418168 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.111685534 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.094224929 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.109955693 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.118588522 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.092166689 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.118874013 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.113363596 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.108550979 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.128911211 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114837301 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.091143309 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.11142358 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.114724796 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.108895094 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.120782157 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.1151291 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.098313988 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.127720029 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.11450829 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110870416 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.093105144 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.129600178 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.113221729 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093478926 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.107992674 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.092668674 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.115823484 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.114348732 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.110549657 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.114171965 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.114200876 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.093799426 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.108057672 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.128313979 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.092983298 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.122288636 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.130394851 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094803697 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.113849396 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114798316 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.128210856 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.094062187 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.109749719 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.095166132 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.128613237 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.107957506 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.095879202 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.130566896 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.111502129 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.10089207 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.129291953 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.115730391 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.114790671 seconds)
  done (took 8.641031184 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.130818057 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.117740456 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131580067 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.130757723 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09747652 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.116164568 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096105002 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.116410574 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116252466 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106360419 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11707423 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.204558814 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.113726469 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.122622041 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.097437753 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.117881938 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115632431 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.097621646 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.117226647 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116033855 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.096590351 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.13127226 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.116624393 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.129623518 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11366013 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.112026352 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.116075831 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.097873573 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130534663 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.115526634 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.132066611 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.09786545 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116583888 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.130201312 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.132858799 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09724761 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108586295 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097907171 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.117587566 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.116663934 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.093567989 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130037847 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.117255817 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.093185942 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117378159 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116197851 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.109756757 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.133486381 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.122685151 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.125997698 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.097949934 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.130676901 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117174136 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.116092365 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111655599 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.140169802 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130815462 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.130886277 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115821335 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111378203 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131963198 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.140395654 seconds)
  done (took 8.117065131 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091274936 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084833568 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.106721963 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084817007 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105309098 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086026021 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106957369 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.08654123 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.106564345 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.085702287 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10602846 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086157964 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105672743 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086349756 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10593718 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086526793 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106286846 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08695375 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.1052422 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086518479 seconds)
  done (took 2.7060382 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.103744979 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.132728943 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.090187502 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.119867811 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109667722 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.099862815 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10892886 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090587263 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111064474 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110375265 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102787873 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.122793647 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110262707 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099951214 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.123397402 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.119207017 seconds)
  done (took 2.558670254 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.122323134 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.133662507 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.17106572 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.112493121 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.091731693 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.118772415 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.089456814 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.112659163 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.087672307 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.11774361 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.113162475 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.094583751 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.109784134 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.090872673 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.110528372 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.09438026 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.109184268 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.094447164 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.110584974 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.172071757 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.11664926 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.093006119 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.112617192 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.093532188 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.114928909 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.116500538 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.098547111 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.111739735 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.09281586 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.111563097 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.113263903 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.100027414 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.108477994 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.096094858 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.110024466 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.091776097 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.109962608 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089590022 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.115512271 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.109147906 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.091355933 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.113533962 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.090172065 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.113134602 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.088248794 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.111716749 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.088425088 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.118015766 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.111136841 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.094546564 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.109936637 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.096173538 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.116129873 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.120006116 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.099561244 seconds)
  done (took 6.728822956 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108357381 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110681905 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.105230716 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.107620819 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089824834 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113119079 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110994033 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094194707 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112131247 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087700526 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.111656848 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.093092426 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112523407 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092234106 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113498248 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11171765 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.088376013 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111797797 seconds)
  done (took 2.685925446 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103031174 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.11067246 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095802179 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109204372 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.09075705 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109347293 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088626632 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.108282055 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087801526 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.110270453 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089363951 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.109981209 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088032359 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.110280971 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109899119 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090605336 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109320827 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08911846 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.109821792 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088489278 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109922098 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089146114 seconds)
  done (took 3.015148485 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.111902154 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.175939511 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.123584818 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.186057814 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.112163861 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.089493166 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.122784248 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.110725974 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.112105638 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.109714515 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.089735718 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.111894048 seconds)
  done (took 2.270216152 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125031743 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150394881 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110500533 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09100016 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12369391 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097447824 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117829152 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117004542 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108262199 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135576802 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117662082 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128769402 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128901591 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110362982 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123189997 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123792151 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097366851 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117752312 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11105089 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140020749 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097735272 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130016289 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116660395 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097980495 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117363158 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130754473 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109066004 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134437054 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117532376 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128217195 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102573055 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117014699 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128235377 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13488819 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090507562 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128606742 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11701918 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141267228 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103902775 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13140115 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109829293 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104110323 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129607293 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127063782 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129477854 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096302456 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127401024 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117952573 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097738147 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148609129 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124346487 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131687192 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124090845 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12935152 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109797787 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149202556 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133392351 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130714993 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123073056 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135908564 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110774076 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123492017 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132827475 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135791604 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123226805 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110841308 seconds)
  done (took 8.782475491 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144611278 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.112723837 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117533241 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134545993 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11142511 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118482182 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117634565 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098087913 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118533577 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091322679 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.188295948 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098502613 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134038769 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131996394 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097250861 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11815746 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117428058 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130926186 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093266667 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.149559581 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118233669 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130175809 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111155931 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131562754 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135217064 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124292461 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096253702 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118848766 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117609108 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098820718 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127767436 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117369378 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131142934 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09273844 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132090796 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117361073 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09766277 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126953841 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117773114 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103191519 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131890949 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141337871 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117655695 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097397213 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135315892 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118464333 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117770889 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093390659 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117530397 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093499364 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135984904 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134959901 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1353359 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131695072 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098078974 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118496992 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117624969 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097932041 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118517107 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124094558 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1120914 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117308024 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150913158 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118866977 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097491273 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132398738 seconds)
  done (took 8.698737145 seconds)
done (took 160.766039371 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.138736632 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.195443088 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.130451894 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170808903 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.104871536 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120749706 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138624422 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.153853601 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.084850897 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.10430891 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.084357614 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.10828179 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.151099033 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.103888712 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.084910235 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.110021814 seconds)
  done (took 2.799815423 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.186811718 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.346533755 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.124944893 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.11431716 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.094148993 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108375646 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.094145663 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.117590431 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.107621053 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.101705697 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.107542333 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.088615775 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.121017315 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107539692 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.08965926 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.108135428 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.099857014 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.107885119 seconds)
  done (took 3.049545336 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118318864 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150143226 seconds)
  done (took 1.090957439 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129365546 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.194154199 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.325041318 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157017371 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.116859363 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.134473392 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.160313571 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.126566401 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.20040422 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.13075861 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.129735709 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.092246506 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140363232 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.118405978 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.104252739 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.111151171 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141776042 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.101571459 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.120802186 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.094277171 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.134888447 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.116351113 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.099577757 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.122942099 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.190317136 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.129189433 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.116764327 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.096841108 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114889871 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.100574799 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.115601277 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.132112376 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.129117354 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.182432388 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.118535915 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.178732018 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.124652897 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091826003 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.122230071 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.110901756 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.096754666 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118592772 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.131422396 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.091069683 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.116310402 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.124399236 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.096632905 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.116536621 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116279986 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.105957928 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.11693895 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113503015 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.177241706 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.125635533 seconds)
  done (took 7.828739139 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.868245046 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155125335 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111175481 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.029066788 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139608259 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106941735 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.881786974 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11368491 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.275847872 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.884111946 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10626893 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.129853887 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.260200528 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.290460947 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.186182861 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.371512021 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.72444422 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126990671 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.140567734 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162888797 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.102412092 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141642396 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.136733677 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.443080896 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.113070749 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089795664 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122817621 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123246555 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177458286 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.10997294 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095458016 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.220686981 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.283339429 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.229010294 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111172384 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089860546 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108682198 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.187155813 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.304489056 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.251066718 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180700891 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106881789 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089693951 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.120523803 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134128247 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087120108 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.200689155 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.191385213 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.19153672 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117110541 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123133053 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.103151065 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120092488 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.176676395 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.108954578 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.368964484 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.371861251 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110452393 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100770424 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.129221938 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.295378923 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110806247 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.258249959 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140338931 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.241326402 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090847396 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.838692024 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.184179212 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111293707 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.116901757 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.099822074 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119467936 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.119092842 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178323483 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.392995144 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102937862 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.117841817 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109507796 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.248936362 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.110805321 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.087506054 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.203266981 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091308156 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121815512 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126239354 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.102416467 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.210339356 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.265729168 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125406292 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121979273 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097473057 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12726926 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.111607879 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.229593455 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.248827135 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.17426851 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.253841019 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099189334 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.203647019 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.183289408 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119332388 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.188523398 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122244538 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126967938 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09940438 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.245276064 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.152420732 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.112925566 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117150098 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.103048448 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.156351224 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.115046103 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122148317 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.187577922 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.482651916 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.184918217 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.086008722 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.116296939 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123801162 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181542209 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120239812 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.291886432 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104173711 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.205586077 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10005149 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.108084003 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120861338 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.183095591 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121911415 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102450657 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120987052 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124367232 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.269731107 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.250972039 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125954532 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.263137391 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18587458 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.098002243 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.211695787 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101270924 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.209907495 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100407719 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122371818 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112670965 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.824560196 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.106416893 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123205916 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117890081 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.205344866 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089318436 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.113090658 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.088629525 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109247525 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.834252149 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.092711703 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.108823336 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.09025969 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12050087 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120852752 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.101584426 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119975424 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17774697 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.285741292 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10491431 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122522062 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.088181657 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.200647269 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.091757882 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.112556303 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08927905 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.113269786 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122759551 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097557964 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.112413007 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191416194 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.175036897 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.273460042 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.530329154 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112818138 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.110426508 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.262851108 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090115235 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.34032347 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123535873 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.259433807 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.204659997 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.088142434 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.370877658 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.208818914 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205198974 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.094279981 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.209695025 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087858328 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121588362 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.178789484 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110141503 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100429263 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.197049364 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10553461 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12680937 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.198390045 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111826928 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.246626882 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.107876507 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.188834898 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.113108906 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098786188 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.33987539 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11280953 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129243468 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.181068005 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11684692 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.091972578 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.64156747 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.089949849 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12655324 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118726549 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.255094991 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184010711 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123793587 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124458039 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.104134713 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.202330118 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.228974271 seconds)
  done (took 46.756241148 seconds)
done (took 62.348656363 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.321295701 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.282464224 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.34196674 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.21018237 seconds)
  done (took 2.088002117 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.235437157 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.162461275 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.193143106 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.110940893 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.203386396 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.110127232 seconds)
  done (took 1.867835982 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.54992906 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.444057182 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.352988797 seconds)
  done (took 2.198807556 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.282429354 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.296541478 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.340807139 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.521864977 seconds)
  done (took 2.40846253 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.286590016 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.112649584 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.1300017 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.186186 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.225067365 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.22394939 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.153678482 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.169951424 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.113629586 seconds)
  done (took 2.506363423 seconds)
done (took 11.925117191 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.393633044 seconds)
    (2/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.377074627 seconds)
    (3/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.213195054 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.212304777 seconds)
    (5/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.272480312 seconds)
    (6/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.123193273 seconds)
    (7/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.228707299 seconds)
    (8/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.335270482 seconds)
    (9/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.13189494 seconds)
    (10/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.152531712 seconds)
    (11/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.172529902 seconds)
    (12/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.256343805 seconds)
    (13/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.096693839 seconds)
    (14/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.105180499 seconds)
    (15/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.249742332 seconds)
    (16/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.262319982 seconds)
    (17/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.192271082 seconds)
    (18/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.131925873 seconds)
    (19/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.283497719 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.130468284 seconds)
    (21/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.18119085 seconds)
    (22/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.305329595 seconds)
    (23/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.123020937 seconds)
    (24/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.290456004 seconds)
    (25/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.161304619 seconds)
    (26/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.179679605 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.131824 seconds)
    (28/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.283971109 seconds)
    (29/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.276290508 seconds)
    (30/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.172552432 seconds)
    (31/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.098185811 seconds)
    (32/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.121784628 seconds)
    (33/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.315966874 seconds)
    (34/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.261498143 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.132521847 seconds)
    (36/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.244051911 seconds)
    (37/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.120425671 seconds)
    (38/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.284151938 seconds)
    (39/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097007739 seconds)
    (40/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.176792268 seconds)
    (41/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.25473455 seconds)
    (42/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.117927698 seconds)
    (43/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.279629766 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.155899406 seconds)
    (45/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.09613272 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.154215518 seconds)
    (47/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.102465977 seconds)
    (48/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.097482603 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.120683374 seconds)
    (50/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.081923498 seconds)
    (51/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.208041991 seconds)
    (52/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.225849009 seconds)
    (53/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.097437025 seconds)
    (54/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.212110007 seconds)
    (55/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.113014301 seconds)
    (56/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.09671262 seconds)
    (57/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.113418402 seconds)
    (58/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.080504678 seconds)
    (59/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.204020641 seconds)
    (60/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.105981006 seconds)
    (61/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.158262311 seconds)
    (62/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.228580844 seconds)
    (63/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.174353208 seconds)
    (64/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.081461769 seconds)
    (65/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.184924356 seconds)
    (66/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.081291909 seconds)
    (67/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.120328159 seconds)
    (68/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.222865134 seconds)
    (69/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.080806611 seconds)
    (70/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.208542834 seconds)
    (71/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.209918887 seconds)
    (72/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.087241618 seconds)
    (73/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.12723143 seconds)
    (74/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.082252571 seconds)
    (75/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.084751025 seconds)
    (76/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.17696991 seconds)
    (77/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.113192195 seconds)
    (78/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.224705756 seconds)
    (79/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.092989897 seconds)
    (80/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.136753412 seconds)
    (81/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.081574113 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.121238882 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.098086204 seconds)
    (84/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.119218674 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.159323961 seconds)
    (86/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.247171125 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.09150847 seconds)
    (88/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.119753882 seconds)
    (89/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.081526971 seconds)
    (90/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.103754297 seconds)
    (91/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.086970668 seconds)
    (92/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.080403132 seconds)
    (93/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.114578255 seconds)
    (94/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.083103581 seconds)
    (95/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127582487 seconds)
    (96/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.099458199 seconds)
    (97/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.183893123 seconds)
    (98/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.184789133 seconds)
    (99/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.088455781 seconds)
    (100/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.242583267 seconds)
    (101/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.102887788 seconds)
    (102/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.181520108 seconds)
    (103/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.105439307 seconds)
    (104/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.081222798 seconds)
    (105/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.103940429 seconds)
    (106/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.096519136 seconds)
    (107/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118313601 seconds)
    (108/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.092027042 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.120598595 seconds)
    (110/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.183966425 seconds)
    (111/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.120950977 seconds)
    (112/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.080340064 seconds)
    (113/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.119489015 seconds)
    (114/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.208171867 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.109450226 seconds)
    (116/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.17439373 seconds)
    (117/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.126235516 seconds)
    (118/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.102070561 seconds)
    (119/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.104648562 seconds)
    (120/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.088559035 seconds)
    (121/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.160825412 seconds)
    (122/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.138798686 seconds)
    (123/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.082775367 seconds)
    (124/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.20716615 seconds)
    (125/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.093288103 seconds)
    (126/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.211139328 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.121561414 seconds)
    (128/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.087642183 seconds)
    (129/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.104012323 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.100167377 seconds)
    (131/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.107416748 seconds)
    (132/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.099303281 seconds)
    (133/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.121385349 seconds)
    (134/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.090683734 seconds)
    (135/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.107824807 seconds)
    (136/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.093849141 seconds)
    (137/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.103941865 seconds)
    (138/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.228055746 seconds)
    (139/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.083731392 seconds)
    (140/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.081323083 seconds)
    (141/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.103539209 seconds)
    (142/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.082146597 seconds)
    (143/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118366558 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.099700629 seconds)
    (145/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.103965043 seconds)
    (146/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.096811139 seconds)
    (147/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.121057043 seconds)
    (148/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.082462137 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.133014475 seconds)
    (150/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.091382473 seconds)
    (151/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.103815248 seconds)
    (152/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.099773379 seconds)
    (153/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.111511153 seconds)
    (154/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.082859004 seconds)
    (155/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.115555647 seconds)
    (156/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.082479786 seconds)
    (157/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.095914415 seconds)
    (158/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.123111134 seconds)
    (159/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.103075782 seconds)
    (160/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.081659701 seconds)
    (161/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.138346458 seconds)
    (162/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.098194739 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.123033307 seconds)
    (164/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.081430826 seconds)
    (165/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.134265229 seconds)
    (166/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.087243018 seconds)
    (167/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.189363852 seconds)
    (168/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.159166182 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.123708088 seconds)
    (170/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.12215506 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.10005639 seconds)
    (172/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.13889157 seconds)
    (173/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.082457613 seconds)
    (174/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.103159018 seconds)
    (175/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.082097172 seconds)
    (176/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.122689789 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.099021797 seconds)
    (178/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.122816892 seconds)
    (179/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.082535475 seconds)
    (180/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.103397609 seconds)
    (181/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.082579715 seconds)
    (182/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.080622123 seconds)
    (183/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.106327641 seconds)
    (184/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.081879397 seconds)
    (185/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.106082715 seconds)
    (186/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.091401692 seconds)
    (187/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.103682677 seconds)
    (188/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.087774307 seconds)
    (189/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.081453866 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.122537424 seconds)
    (191/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.080114995 seconds)
    (192/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.102684897 seconds)
  done (took 27.980776548 seconds)
done (took 28.848177309 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.236071989 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.10525703 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.125657714 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.124209212 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.184215118 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.10397757 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.134056257 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.103236063 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.13080906 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.120622638 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.091058545 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.130428976 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.101105109 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.183670123 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.128610506 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.116344995 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.093693689 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.129744806 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.110345181 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.134750893 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.185377579 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093122807 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.130414941 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.115894039 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.18562668 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094586878 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.123669316 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.101652222 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.131094194 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.098540879 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.124185058 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.116831643 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111286557 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.132537055 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091849355 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.121167091 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091707838 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.11134642 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.098905958 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.121252792 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.108276429 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.123425167 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.124879451 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.094069458 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.122674724 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.098084408 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114999539 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.104270782 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.113932534 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.12325883 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094447584 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.13289517 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.097867319 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.114005877 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.090919559 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.118202528 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.105716114 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115400053 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.130983599 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092110404 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.115464734 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091356806 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.122869354 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092181691 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.119277526 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.093825203 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.121287473 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.100132705 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.12025144 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093204449 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114737756 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.119115804 seconds)
done (took 9.392447713 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.105422924 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.180369211 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.185522444 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.190874732 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.149641985 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.136270015 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.137059067 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.124139489 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.133842145 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143533499 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.130070787 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.146176934 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.19668791 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.130487329 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.135642207 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.100974607 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.131567354 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103257553 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.192440441 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.143235757 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.153012344 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.129607658 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.129625195 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137545083 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.123516158 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.147875135 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.102055395 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.123581985 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.10146575 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.140824315 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.141877049 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.100751638 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.123725719 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.137261899 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.112037307 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.128125861 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.134657396 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.101436774 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.121460878 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.099831908 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.135788464 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132323944 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.099324929 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.13595267 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.122390947 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.109313787 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.13000521 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.106750955 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.126371944 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.100594992 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127631131 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.152579321 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.128762068 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.111612043 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.129131153 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.105383743 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.130945549 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.12734917 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.10116187 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.128645712 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.099140427 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.124641313 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126362948 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.126263344 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.124120895 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.128447573 seconds)
  done (took 9.452331474 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125268128 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.159313941 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.132668499 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109226516 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.130233881 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.111596353 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.089005841 seconds)
  done (took 1.762954491 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.095202578 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.188305998 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.188269444 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.187809759 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.184501335 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.221571703 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.113266667 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.114450269 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.127026165 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.129350063 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.186438502 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.219326097 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.12208626 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.133933938 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.191633403 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.09013401 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.191501451 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.115920309 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.12631933 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.188487848 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.10727994 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.146788792 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.132006098 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.093000131 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.181249229 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116524226 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.244986073 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.133659021 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.098004413 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.126118966 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.104464825 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.227004341 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.183752021 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.107575037 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.119096343 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.187784063 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.182992858 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.128115543 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.198077591 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095634642 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.183433951 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.127094285 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.128835511 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.106724274 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.126591717 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.168166222 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.109844414 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.129216933 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.100985203 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.213968441 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.105352007 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.183388898 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.124976644 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.102669962 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.129586402 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.129295788 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.111432914 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.126688611 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.191338259 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.106555635 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.183666382 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.208334446 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.183605739 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.186522523 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.114624442 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.184636617 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.182893984 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.127066962 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.125224871 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.104119742 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.185749333 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.127990122 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.105153002 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.170909622 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.132221601 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.18488211 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.185132864 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.1250348 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.107348755 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.120620448 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.101577584 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.117117911 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.409600814 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.1025421 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.125372559 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.136703293 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.107507197 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.128299106 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.097459451 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.142818699 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.127456367 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.13012642 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.108939821 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.126706758 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.110627346 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.21244297 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.10570474 seconds)
  done (took 15.087068797 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.102480283 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116249185 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.098929425 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.117156903 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.094303192 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11794293 seconds)
  done (took 1.574846695 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.12995658 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.129369254 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.138954414 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.106144578 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.18801622 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.191305506 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.192550059 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126576325 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.146704476 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.116489031 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.191430912 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.195648154 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.216507192 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.108560081 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.194633147 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.132234991 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.194002461 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.128226297 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.11382772 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126964225 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.111193186 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.132351887 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126431584 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.182544302 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.107516283 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.133100804 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129972998 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.114550823 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.138257129 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125995673 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.108723216 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.13015662 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.099352249 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.126560625 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.193111036 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.123289374 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101002294 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.135729766 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.131938705 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.10846574 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.195360925 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.127295487 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.137749192 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.111435219 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.12715818 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.099160733 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.135704306 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12930854 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.195226355 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.135222622 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.111850707 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.130577626 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.107827385 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.135734789 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123463466 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102237391 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.135023992 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.193719369 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.13577494 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.099539492 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.13189283 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.13189235 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.102694186 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.134903943 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.130935806 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.109932624 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.124386898 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.106349549 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126559775 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.130126831 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.112273712 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.131073348 seconds)
  done (took 10.698286841 seconds)
done (took 39.473500044 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.155009735 seconds)
  done (took 2.077363199 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.943034022 seconds)
  done (took 1.86754304 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.80677381 seconds)
  done (took 17.77166845 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.572905954 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.659300633 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.959656017 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.166805493 seconds)
  done (took 3.283554821 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.992694976 seconds)
  done (took 1.938288814 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.352266902 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.28314054 seconds)
  done (took 1.565707248 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.726252765 seconds)
  done (took 1.664574797 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.58278756 seconds)
  done (took 2.510491522 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.389479249 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.213178271 seconds)
  done (took 1.550196064 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.696803681 seconds)
  done (took 1.637525162 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.765327807 seconds)
  done (took 18.707316948 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.23153497 seconds)
  done (took 1.186842375 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.321568258 seconds)
  done (took 1.290773941 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.559696533 seconds)
  done (took 4.506066701 seconds)
done (took 62.490313702 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.110370262 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.131654366 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108660952 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.1299301 seconds)
  done (took 1.419931613 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.114690298 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12869252 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.108935644 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.126570162 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.134700778 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.104595851 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.128949504 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10823807 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.128819331 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.106076992 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.128582661 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.128133184 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.107455753 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.12812974 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.101457128 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.132062649 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.108235613 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.129209034 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.131439421 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.105113684 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.129993153 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.106775713 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.131561216 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.130593273 seconds)
  done (took 3.837348835 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.108728747 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.12062165 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099747884 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.120047992 seconds)
  done (took 1.397032427 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.117752529 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142117567 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.1141458 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.1352168 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142234857 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.115991306 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.126856553 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.099458052 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.127626693 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.136937894 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.122863543 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.142914059 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.14096202 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.106319155 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.138858533 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.098260459 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.130348589 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.141078577 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.111398584 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.138116263 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.10390181 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.136238389 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.133447274 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.115500194 seconds)
  done (took 3.966915089 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.213417695 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.118776789 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.154064922 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.178169572 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.160263277 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.102756841 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.155955437 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.135106914 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.111486906 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.132644179 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.131329055 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.155759272 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.135663998 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.128450112 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.105253158 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.134293165 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.14270287 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.111665913 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.176380481 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.135494613 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.109971555 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.143903524 seconds)
  done (took 4.031282454 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.116502975 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.122848564 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093656357 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.122157284 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.111073783 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.125303935 seconds)
  done (took 1.650872123 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.105231838 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114818532 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.096970786 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.117640889 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.096083708 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115146949 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090630173 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114783795 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091074781 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.089856174 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.117815131 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.088734612 seconds)
  done (took 2.197167907 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.322286648 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.094462903 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.123182297 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.120530478 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.104729587 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.119489863 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.112414712 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.119916245 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.242265424 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.117158301 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.112399108 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.227406715 seconds)
  done (took 2.776704038 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235989653 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105031254 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.360197258 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.374452829 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172400066 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181134194 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.288309182 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178942918 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.206126641 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151656063 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239547859 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145562845 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167226707 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198363133 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151706724 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.226189294 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193083215 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222903488 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163926277 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226446802 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202624695 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160031843 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.222548737 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139851724 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147255267 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167541746 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.129978149 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113620228 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189380328 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21258016 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195010138 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161948971 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127405831 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24973743 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20984194 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198775356 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.345304858 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117508562 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.209484121 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.197556478 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.300540561 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152227268 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218089395 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170601416 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139657108 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201748835 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170891076 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.19856501 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.14290498 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125800083 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230079173 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194901392 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.20330065 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148135766 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315822804 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161726622 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.160943704 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192437559 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208026648 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208844891 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18585384 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.131964433 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201034117 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196358748 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195111109 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.159121533 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.186814406 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137549541 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189241493 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.214973811 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232715358 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179019633 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.205918113 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140365549 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175173618 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185188354 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168268204 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196042365 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176228311 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.103059536 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165864372 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149479826 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11022 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.199156323 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131206185 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226413565 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145465796 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.401726186 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225106382 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171743543 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178266542 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181171683 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180922619 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160105585 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.103997858 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160403479 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.176266988 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17226911 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150525069 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170858816 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126052451 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.144843124 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167542032 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.130483311 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176875078 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.136073787 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182781385 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177625099 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.143864316 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182919464 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163282378 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.169091552 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187564176 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203769634 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114486812 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144230151 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205999441 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172454618 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.146139922 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191591759 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208057435 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.180323179 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149380706 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18271375 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212861998 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155836109 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206813592 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149344987 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117899308 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.169759857 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177307956 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172561854 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.167287983 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136063519 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.168468849 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212504251 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.111469586 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14761214 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189825953 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147716181 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110412115 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152392474 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149185101 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.15400909 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.133233679 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.150527849 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170158552 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177416151 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169712184 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176350445 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147016087 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193807625 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141106134 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.15009921 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160750676 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.131190122 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.200903015 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203250496 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140172663 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217269133 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.186569637 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241443705 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176205371 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118120654 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194271269 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13749469 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.102332652 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178614289 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174945346 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17845258 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.227528734 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212031548 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.187298552 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.169204062 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162316056 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184385627 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.191876431 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173649683 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.156274002 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173149149 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186045964 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.102716627 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.136264954 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.137374427 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126849994 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142746561 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140931201 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202494892 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181714917 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204443749 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172504939 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152994508 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201687353 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.140323873 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181698575 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.191412679 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150673588 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.20579525 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199697598 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185734921 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153414459 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18116473 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.102377186 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136857192 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.147445646 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184668672 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115497238 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145780483 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156551746 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200174806 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192774431 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163297918 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221285787 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21061137 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211500721 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.10317243 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.176972269 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188017334 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173158347 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.197105816 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126194432 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.175732982 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195883348 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151376879 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209493996 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174473738 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181807972 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246754498 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.171347854 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113542354 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163143761 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181369878 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1540417 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177684909 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157366243 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114160867 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167712758 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.148643439 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111923529 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229042529 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127805287 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224153286 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.170373448 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19339149 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107515915 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156886445 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17816433 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158934787 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.102077911 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186673372 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234340972 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158478813 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172590843 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190844567 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114506126 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.340782541 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233069622 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202993262 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14680104 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13042752 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178657418 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17476166 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179775613 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195953274 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156762891 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19639766 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176031308 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.153605343 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113824062 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161065894 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163767381 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.169804956 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.144945068 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.14842996 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.15375036 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204328959 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152266709 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177119728 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177307896 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.158288689 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.168597847 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1265266 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243708388 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146133863 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223111551 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.145482659 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.183040223 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246052382 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106483686 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141198735 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.145680817 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196679228 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113756127 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17881137 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.198944006 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243323883 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178147081 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182298608 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148554048 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.110402173 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173438765 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162846801 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216768822 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147044459 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.152280242 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209182292 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.166020281 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114005379 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178869043 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.322898829 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131459413 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215484666 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.1140955 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.289149056 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136838918 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114919906 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17335372 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186759806 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.145680528 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.195558792 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178370678 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154927301 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146970201 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149005592 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.231507617 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228437549 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185124068 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193638137 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.155472024 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174559221 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179610326 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193591565 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15487588 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.132043316 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175978084 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200274883 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.230655404 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.119191488 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175371759 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175502027 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170964063 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191626706 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145287895 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218106278 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141234632 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179402599 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151553703 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10887048 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174120176 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.197945363 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143241201 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19190717 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17654491 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145811525 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111232349 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160117498 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17291943 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152517099 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.139487434 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201099607 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.110349143 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180412497 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198938123 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140185316 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169832904 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130563898 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144196583 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158355838 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157037029 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114032882 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.180202308 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201208761 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.144708486 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19360793 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182776101 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184490188 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176698613 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156423121 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.650361595 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.140150583 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199240447 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160223913 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206139837 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162924839 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18020626 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173546906 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162882702 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180952542 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136184555 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.236104282 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178507195 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.175714353 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142399713 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156443643 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12674048 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144791209 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166655321 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17373103 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125327364 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.150873846 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.175094183 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158067052 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.156999392 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123348871 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201930588 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160466297 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230816682 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197812971 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120595046 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178279581 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194321832 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142448953 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180628571 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18978957 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153508384 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160160721 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.115405525 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.150154897 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197778119 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.104356798 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177359435 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177945383 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173912569 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176672737 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.150211568 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17968806 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15611098 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176298613 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112422197 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.169988351 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174591089 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142102877 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.112097736 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172834893 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175822582 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.169811571 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110831282 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.181845767 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199150943 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.132645418 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118403266 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.321820671 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148048853 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238037239 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.140351837 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146219149 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157496247 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17244632 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.173073879 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175050022 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.114014874 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142699117 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.115499465 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.197650705 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.169725437 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17299631 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19889444 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177382393 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219172296 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.15840363 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281724958 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150228759 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145834751 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.145060402 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.14191743 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127148005 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146502953 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153312639 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208166073 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193958971 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.167708233 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.157582937 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112603154 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.134645342 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113506407 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175792246 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16883584 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176331323 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159286521 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102672061 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159392659 seconds)
  done (took 84.281714912 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.159029659 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.14346955 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.155631873 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202945793 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175080498 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270214085 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.214512248 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237178106 seconds)
  done (took 2.601673001 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.11123717 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.142512575 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.149940617 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.130327857 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.130582926 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.404047749 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.143439079 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.104964688 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.192208098 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.145425611 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.127063474 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.648216942 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.100894125 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.132121046 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.124082696 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.130471133 seconds)
  done (took 3.948035476 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.332375088 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.539738625 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.863655823 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.246198882 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.255190278 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.167839515 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.744098957 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.178589654 seconds)
  done (took 12.366426764 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.13969368 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.152105579 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.328818839 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.228308833 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.169184373 seconds)
  done (took 2.068781634 seconds)
done (took 127.488951598 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.113977675 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.134536251 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.108649999 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.138586539 seconds)
  done (took 1.527372784 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.162976748 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.118810539 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094104101 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.116544355 seconds)
  done (took 1.5358197 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.540770075 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.090215867 seconds)
  done (took 1.699995634 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.140506956 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.155144207 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.152439961 seconds)
  done (took 1.502807567 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.119184817 seconds)
  done (took 1.164702211 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.119562434 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128962985 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.199805389 seconds)
  done (took 1.501460521 seconds)
done (took 9.978428196 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113539713 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.439515818 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.4214374 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118435397 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.732953593 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.383070157 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.084356173 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.169827651 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.217521802 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.1231479 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119516282 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.702864368 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.038022428 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.350764407 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.017567009 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.346834462 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.706439769 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095539891 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.134021183 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097896699 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.060790297 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121933951 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098297147 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12348324 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.676261013 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.445142182 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095591331 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.391797682 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123158658 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104638571 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.410118789 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096877379 seconds)
  done (took 17.199551924 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.109265294 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.198073841 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134410546 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099186046 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.131781766 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097809879 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.137674968 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.113067416 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.236018605 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096665406 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.149433667 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.096150677 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.13027893 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095862324 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.151046064 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095840073 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125628846 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096608849 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.13569079 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126282883 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.119787224 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123234632 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098623324 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.124641157 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096511371 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.157052016 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123971104 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.113398119 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12398855 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103642517 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126932933 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096203903 seconds)
  done (took 5.022924246 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.152113261 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.2075409 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.138031223 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.160310755 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.157306431 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127214149 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.220658749 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.168725683 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.208363791 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122855746 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.121774438 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123021757 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.144777468 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.126943372 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.151100655 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097197412 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125063663 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097089241 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.13496743 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098697731 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.149519792 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123424872 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099672054 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.124496343 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097486786 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.159717284 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096473791 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.141092312 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12359628 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.105806656 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128221219 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09726595 seconds)
  done (took 5.390479328 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.113506482 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.136257754 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.123412957 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.150974416 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.102875542 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.136925678 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.107960216 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.131879909 seconds)
  done (took 2.066765722 seconds)
done (took 30.728637659 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127483665 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.144440931 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.117064303 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.139841233 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.188627906 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.099320409 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.143872362 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.099677886 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.13922986 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.118717289 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.125929331 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.102516198 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.14630743 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.106223186 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.187790986 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.140084599 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.194937252 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.190210286 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.102371007 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.139594626 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.101799949 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.194616466 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.138527037 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.102636259 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.197790319 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.130274868 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.185206996 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.105923686 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.135785112 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.104685746 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.190787355 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.138643051 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.1022811 seconds)
  done (took 5.632351892 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.174997016 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.135363403 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.130762065 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.103115717 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.133002796 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.101153982 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.204049787 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.100508127 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.131289427 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.101328288 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.132272291 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.196962121 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.108242788 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.126921772 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.105842557 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.132167631 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.201822506 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.105342594 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.126751497 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.092686386 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.126542841 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.100948097 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.209046758 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.127154366 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.10277125 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.132333695 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.106671477 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.137139758 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.104455099 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.133308259 seconds)
  done (took 4.995267009 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.116060195 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.148918788 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.128039111 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.204813889 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.164532156 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.110068513 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.151906195 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.148002744 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.130958481 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.128188477 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.115868611 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.163839267 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.148022487 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.111510074 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.131782216 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.116728197 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.15063897 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.099078777 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.136232094 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.1457765 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.118306645 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.145439201 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.121278192 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.13734076 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.096345428 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13587431 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.13673089 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.116404589 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.139618381 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.117391672 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.133997188 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.102784443 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.130766937 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.110643353 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.134172912 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.137415577 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.123324575 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.141564391 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.113044801 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.157824932 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.131798026 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.104792498 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.15668212 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.159825033 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.129579493 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.138967879 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.112821879 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.144082371 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.100480557 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.147309752 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.116659034 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.128628033 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.121170961 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.12823889 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.099224042 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140421919 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.127301846 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.106837696 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.148228418 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.102887877 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.151427735 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.106383181 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141105679 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.100896436 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.139098907 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.09916618 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.127141343 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.103135857 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.158974996 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.137051889 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.138721668 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.128460043 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.109516194 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.140840107 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.109654734 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.141697533 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.098081031 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140599552 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138934402 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.106773029 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.143517359 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.102325011 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.132007787 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.115531487 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.147639717 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.137318556 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.109404211 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.139098076 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.103556475 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.131160774 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.118009693 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.129457988 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.105025482 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.147868186 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.098131327 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.135505148 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.138404474 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.109264826 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.126849982 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125087916 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.134625936 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.09881339 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.154540421 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.106137798 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.135777428 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.136987109 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.116109213 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.126202563 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.108905818 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.140928617 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.099358293 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.135714098 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.102700656 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.126848052 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.115104504 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.144809679 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.135576922 seconds)
  done (took 16.051623947 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.299392214 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.31627184 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.21570337 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.378220772 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.147170951 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.21029458 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.280731097 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.319052136 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.13461765 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.175378724 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.19652604 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.253847834 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.130698232 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.130332711 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.31628401 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.380356751 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.163617076 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.177793667 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.176168901 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.116161502 seconds)
  done (took 5.595406586 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.128585356 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.166491103 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.152067229 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.133280773 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.136815268 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.141275813 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.100805162 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.156028832 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.107391221 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.136799875 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.099121858 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.143874213 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.137022157 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.113932801 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.147599519 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.148806537 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.136280282 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.133796496 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.125421133 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.134534732 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.138785728 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.131865363 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.141287381 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.149399291 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.115112845 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.140908818 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.098874546 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.136694399 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.10261047 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.13471594 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.104911278 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.151124057 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.134153226 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106279474 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.137940465 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.11234271 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.132147998 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100834538 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.130610088 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.1037476 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.145078309 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.108700375 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.133355978 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096452388 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.145001814 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.100705927 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.14050809 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.107961245 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.141860592 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.113133165 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.13858933 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.140090931 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.105947595 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.147929074 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.101527455 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.144988067 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.112452053 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.140104565 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.135871728 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.098267947 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.126443051 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.104492429 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.13424132 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.111196203 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.138869202 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.152652888 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.114635005 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.128748742 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.10565193 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.133491201 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.103385299 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.145766268 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.154187752 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.104119201 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.132038164 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.111531934 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.133495483 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.091635675 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.139636995 seconds)
  done (took 11.142725669 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.13444981 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.133843127 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.12019911 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.167359341 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.109403126 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.135754783 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.132729166 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.121822749 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.140724956 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.111134007 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.141108467 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.115761745 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.154330745 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.146238037 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.104406457 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.148238615 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.109605288 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.171265262 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.149419918 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.16069197 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.112606145 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.135916586 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.112524936 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.141659569 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.133371504 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.141210722 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.161603833 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.108743256 seconds)
  done (took 4.847102122 seconds)
done (took 49.327469253 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.188268355 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.399481839 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.157939865 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.163104692 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.168587237 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.172419124 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.16047385 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.161812962 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.072764345 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.153806732 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.161420223 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.158508173 seconds)
done (took 27.206897802 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.204833149 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.659414673 seconds)
    (2/2) benchmarking "String"...
    done (took 1.419579913 seconds)
  done (took 4.159380345 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.165947456 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.160507051 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.403963961 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.155480319 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.173018697 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.169964305 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.15966249 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.156512145 seconds)
  done (took 15.460325238 seconds)
done (took 25.072938289 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.19698704 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.332375014 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.408826379 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.174340152 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.154263855 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.15322555 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.156071186 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.178752024 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.162360083 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.156221997 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.549916763 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.408363424 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.177370476 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.530263201 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.159023903 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.180534065 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.152428603 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.388270168 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.161586814 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.211890204 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.145007768 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.14853461 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.214421559 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.167818858 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.163278315 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.168726104 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.175483391 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.165913807 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.323507323 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.173489457 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.196470587 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.15644816 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.180676077 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.158576769 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.168943144 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.156298742 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.333698743 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.166226934 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.153222195 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.165050636 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.337155153 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.177082245 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.15569482 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.162342858 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.159064037 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.1826905 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.154822371 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.263761353 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.18271024 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.179552787 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.224488959 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.538940886 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.16097228 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.160457768 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.182662986 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.36753075 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.171513103 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.206313724 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.185326104 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.163608853 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.172712967 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.157589414 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.222664712 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.160059519 seconds)
  done (took 140.78528342 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.161079508 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.161441737 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.16403218 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.181495124 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.164108532 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.164617516 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.162305078 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.162853257 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.165151084 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.165461478 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.164687955 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.165778935 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.162834968 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.185306274 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.169949405 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.18812262 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.163268643 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.164271986 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.187267048 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.161687247 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.171506538 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.16361427 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.178729518 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.165888703 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.209581064 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.249448656 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.204959464 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.190909798 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.169558984 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.164717546 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.202161024 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.184740716 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.749887717 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.029605836 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.17455886 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.178691267 seconds)
  done (took 78.83944303 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.164889429 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.163077379 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.164040377 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.165054024 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.1948854 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.16329964 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.720756635 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.721473729 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.889339098 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.508575474 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.464999772 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.420669045 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.164534057 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.259148043 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.171774646 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.159887342 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.181124309 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.207186047 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.165409079 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.166051504 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.722670073 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.177366251 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.349144492 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.332819151 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.173622613 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.195764994 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.569230007 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.164618845 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.196802002 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.494083447 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.208743267 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.160533679 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.508493947 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.188631082 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.272701859 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.163938324 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.196415672 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.163210404 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.444557901 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.164465922 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.165577912 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.168386982 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.816794804 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.164652758 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.716141794 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.16456021 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.103399006 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.162964922 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.165891795 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.133901463 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.803008899 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.179755053 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.165103807 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.166963745 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.163328705 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.163676227 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.194713115 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.109666086 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.25371347 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.177538505 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.165277486 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.192082773 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.162622067 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.296373676 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.156364091 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.837792437 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.233174123 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.280486788 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.699307173 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.160767348 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.255887103 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.278041285 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.159070635 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.159438132 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.162154401 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.163433507 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.272772017 seconds)
    (78/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.160114643 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.162628158 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.163886081 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.550713611 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.32657883 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.173118213 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.407064791 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.257734576 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.157641389 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.493781722 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.165023738 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.162738103 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.852636068 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.253445424 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.159532146 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.163762082 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.162244402 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.556708431 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.15768906 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.700384339 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.365168048 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.162196039 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.364147636 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.165300494 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.560848611 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.678631087 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.807099148 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.165269338 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.274825848 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.331686026 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.17468948 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.163721798 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.413340701 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.163588103 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.220127737 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.157964726 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.565764283 seconds)
  done (took 361.852308645 seconds)
done (took 582.56131869 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.926459281 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.870667412 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.001227121 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.897937458 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.864179701 seconds)
  done (took 10.643729735 seconds)
done (took 11.729101218 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.349243348 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.34601945 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.218789117 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.349689329 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.192375882 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.367820803 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.331195731 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.187580455 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.273060311 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.243887145 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.273137227 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.220700361 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.196716089 seconds)
  done (took 17.633423452 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.430822361 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.167603302 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.245925428 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.420452585 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.20486489 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.427301513 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.455553477 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.168656014 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.312676227 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.195383478 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.181630663 seconds)
  done (took 17.299385501 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.465711913 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.168474752 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.253018413 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.410559725 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.209181744 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.438021382 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.456198159 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.168778229 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.329206653 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.184898019 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.186790837 seconds)
  done (took 17.358045743 seconds)
done (took 53.378963137 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.208940549 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.332646151 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.196646917 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.186754095 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.180624112 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.18140718 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.183111167 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.179000455 seconds)
  done (took 10.735366221 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.179229802 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.178787097 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.177360593 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.176460605 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.17721718 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.175091882 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.176207696 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.178627296 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.17741629 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.176556659 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.179409929 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.17804264 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.178161526 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.177906619 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.177877284 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.178121117 seconds)
  done (took 19.930181211 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.180030283 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.177529575 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.177918947 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.178312156 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.178049842 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.17782354 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.179841108 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.1799493 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.17940004 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.177553767 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.179857192 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.181558929 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.180322732 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.179277514 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.178183102 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.180160247 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.179709161 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.17828419 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.184485894 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.179501331 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.177929947 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.178278871 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.178524166 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.1798165 seconds)
  done (took 29.391299101 seconds)
done (took 61.143788579 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.166340132 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.168383891 seconds)
  done (took 5.422387533 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.239814224 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.23731235 seconds)
  done (took 3.566077198 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.179441045 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.179624444 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.180822149 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.182451873 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.179183351 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.180552869 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.179664942 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.179793909 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.178285014 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.180261418 seconds)
  done (took 12.885843354 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.179506351 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.17784807 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.180345935 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.175976526 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.178583474 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.180082404 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.178777996 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.178531511 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.180276493 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.1804343 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.179543364 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.1772122 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.179611195 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.179481007 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.179362906 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.179169603 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.180130507 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.179805713 seconds)
  done (took 22.314082442 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.194054932 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.199666373 seconds)
  done (took 3.481122428 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.319815355 seconds)
    (2/7) benchmarking "second"...
    done (took 1.221316525 seconds)
    (3/7) benchmarking "month"...
    done (took 1.296549269 seconds)
    (4/7) benchmarking "year"...
    done (took 1.286750513 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.222579793 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.202417084 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.222488621 seconds)
  done (took 9.861125347 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.181263423 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.385184093 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.491478955 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.735236909 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.183368232 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.184305041 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.023975938 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.183963505 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.183874919 seconds)
  done (took 13.640469408 seconds)
done (took 72.259998284 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.179008157 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.200334518 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.198653594 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.204235422 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.527077233 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.227272509 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.17986695 seconds)
done (took 15.807485351 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.168354335 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.172078929 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.168020093 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.181251531 seconds)
  done (took 9.779871913 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.150986187 seconds)
    (2/2) benchmarking "read"...
    done (took 1.508032402 seconds)
  done (took 4.747722182 seconds)
done (took 15.620025828 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.182788816 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.181441922 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.180001768 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.181433829 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.179043597 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.179596306 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.18098038 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.179761386 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.180486311 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.18213618 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.179212 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.180602336 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.181293773 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.181375565 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.179505159 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.180531342 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.182413345 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.18173546 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.181955523 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.180143798 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.180488582 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.180709988 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.179666877 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.182797605 seconds)
  done (took 29.430762436 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.180833905 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.18001798 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.178712926 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.180279411 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.17868725 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.180828383 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.181169746 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.179760155 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.180867533 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.180010747 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.180574472 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.1807707 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.182752555 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.182236483 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.182280162 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.179573005 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.182026125 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.177970806 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.180171512 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.17880686 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.183331674 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.180020591 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.182788206 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.184561879 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.180452013 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.182969098 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.180856968 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.179985265 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.182194544 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.181475359 seconds)
  done (took 36.516787236 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.186509372 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.185260473 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.18232755 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.182039862 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.183433128 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.183253179 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.182890647 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.18327088 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.18248121 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.18281081 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.182081773 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.183598516 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.184305313 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.183748278 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.183436471 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.182994832 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.182909057 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.182671533 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.183912493 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.18454743 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.184745366 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.183137117 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.184522221 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.184746653 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.18277386 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.183088751 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.184464249 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.18401906 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.182456075 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.183994915 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.182855386 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.183582608 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.182855697 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.184944316 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.184680927 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.184247059 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.190756417 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.19058147 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.184314958 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.184807518 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.185995381 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.1848346 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.185612072 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.185955515 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.185149306 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.185297268 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.184017527 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.184369349 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.186320605 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.185574408 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.186307226 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.184753721 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.18513748 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.186311279 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.185854425 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.184992935 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.188183729 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.18644032 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.186832452 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.184762533 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.186781505 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.187831221 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.184329344 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.185034727 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.187465575 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.186467628 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.185229038 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.18475761 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.189190687 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.188601764 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.185160983 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.185869339 seconds)
  done (took 86.403171762 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.18757449 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.18577069 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.185128004 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.186134113 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.186989469 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.189664532 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.187825448 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.185886287 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.18858084 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.188830616 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.187014985 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.186982366 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.188769314 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.189763132 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.188739423 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.188809801 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.188318322 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.187680047 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.186977322 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.18783561 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.189766283 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.188641752 seconds)
  done (took 27.224235877 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.186950833 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.188074681 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.187796783 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.19145187 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.190031475 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.190244916 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.187789482 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.190278153 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.188350709 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.186889248 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.188556651 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.186686199 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.190870235 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.188251277 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.186513977 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.191254413 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.187712743 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.189124036 seconds)
  done (took 22.491252917 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.189086685 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.187659897 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.187687472 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.188505381 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.190403987 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.190432518 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.189631812 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.190870803 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.19011833 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.189774035 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.188929024 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.189571308 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.188790733 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.189628407 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.18926399 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.190395846 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.189695394 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.188454233 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.190693071 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.188209106 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.188139882 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.191703066 seconds)
  done (took 27.264727159 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.191426537 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.190622703 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.190404342 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.191492797 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.190234964 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.189969348 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.192229064 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.190503194 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.191506886 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.190182269 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.188328339 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.19003818 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.191197711 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.188084319 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.186377611 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.187798157 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.192026907 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.188309362 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.189912803 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.188108483 seconds)
  done (took 24.895335184 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.191922293 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.192184078 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.192436579 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.190605374 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.192766537 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.192393334 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.191010308 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.190340186 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.191391011 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.190039215 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.190690958 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.189836815 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.192787871 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.189673031 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.193049098 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.192848121 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.192255986 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.190064064 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.191140535 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.191336563 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.192812374 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.190858303 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.189973001 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.191919145 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.192855842 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.190935415 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.189152527 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.190910206 seconds)
  done (took 34.455591476 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.194261975 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.188594287 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.189544529 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.189101395 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.188146177 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.190886557 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.190689087 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.190966019 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.191407915 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.189298793 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.189481757 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.190457025 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.190919845 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.18904111 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.189212954 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.190181044 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.189008397 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.191342081 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.189081365 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.190833821 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.187249579 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.189667076 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.189287792 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.190019502 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.190099546 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.191338585 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.187703795 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.188556614 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.188065113 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.190690541 seconds)
  done (took 36.792637334 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.238634849 seconds)
    (2/2) benchmarking "in"...
    done (took 1.238588116 seconds)
  done (took 3.574678549 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.191407628 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.18936785 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.191384515 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.190951602 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.190996929 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.189477316 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.191559031 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.190727754 seconds)
  done (took 10.624433868 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.185770741 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.192476873 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.190204643 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.191864434 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.19225714 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.186848088 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.194821863 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.198333797 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.189186049 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.186505222 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.186891218 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.18726347 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.189928429 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.189531179 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.186697903 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.188830257 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.1959166 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.189950941 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.189674005 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.190879846 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.190670813 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.184394431 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.189778185 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.193080932 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.184403658 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.193352666 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.193174848 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.192352797 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.18612229 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.188783845 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.187024483 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.191069611 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.189615524 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.190144817 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.187791217 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.191675138 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.194069598 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.208356961 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.193897553 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.195417673 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.192186389 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.19093483 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.186004707 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.187994728 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.188312706 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.194611947 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.190076639 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.18923479 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.185565021 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.188980912 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.194543241 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.183669085 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.191361036 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.189746 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.191113156 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.195836197 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.213650413 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.189909445 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.191980162 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.194425467 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.20403257 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.197674409 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.190771873 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.191964628 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.193675921 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.20322192 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.199560388 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.197685575 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.191302347 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.189124968 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.194138268 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.202058929 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.20445305 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.192431314 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.189947404 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.192583956 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.188616992 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.194384943 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.196228234 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.198966938 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.19751564 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.192783614 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.196331146 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.202239521 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.190097195 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.194257688 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.193027835 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.193533776 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.188637934 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.199391891 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.214580221 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.194977277 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.187889191 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.187524034 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.190502259 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.194274376 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.18667152 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.189059503 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.193531324 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.19399882 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.194048987 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.192689483 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.195438193 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.195696882 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.192854384 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.197499282 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.197291809 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.189826235 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.197495662 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.198312591 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.192800893 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.190277459 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.192513685 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.194166979 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.193483038 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.195713385 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.197444514 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.191919336 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.196568267 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.195389134 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.197319672 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.210290468 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.198247048 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.194253283 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.194345179 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.204485421 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.196984498 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.194108045 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.199983681 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.195020122 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.195039654 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.193004128 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.198552755 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.190465508 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.198156685 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.193096614 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.197559715 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.193686807 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.194520285 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.193898784 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.193863373 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.19253191 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.192196217 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.194591097 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.197433178 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.193362878 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.200453198 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.196501684 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.193181319 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.196870456 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.196321912 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.196485251 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.193137017 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.197721365 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.193871961 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.197747311 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.191493887 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.197574412 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.198482841 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.196721451 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.194276302 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.191236553 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.19407192 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.197506045 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.197567573 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.196188383 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.196225325 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.196275526 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.197791071 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.193877919 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.197718772 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.19179928 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.195477411 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.202165987 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.200079161 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.196900519 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.197252043 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.201033031 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.198810884 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.197972411 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.196363901 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.197768891 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.198578132 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.201513348 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.203404613 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.198730129 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.19779805 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.192879168 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.196364119 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.197993674 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.19402152 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.201956505 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.206347996 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.208648876 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.195122383 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.199034141 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.193481047 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.2016623 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.200668005 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.199755311 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.199115488 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.199752179 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.195105577 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.200581061 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.197178435 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.20254857 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.194450316 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.197600624 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.198473886 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.199077279 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.199648822 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.195095683 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.19403544 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.199899343 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.200822273 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.199188336 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.194436691 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.200029452 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.193321586 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.196436496 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.200143262 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.19835403 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.203196757 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.201682321 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.198771286 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.200610424 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.199461673 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.194933641 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.201408508 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.199896194 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.199033567 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.206595037 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.20505972 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.199263449 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.206341179 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.219344775 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.197009183 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.202610134 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.206148415 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.202582777 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.199954356 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.208192941 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.202808259 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.203769756 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.203663182 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.200552716 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.202278819 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.205903542 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.207678107 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.19713803 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.201776561 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.198976837 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.201562133 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.201095975 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.200523269 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.20207535 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.20350311 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.205988954 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.203066913 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.197970867 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.206062126 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.205886045 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.205847937 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.201172136 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.208861228 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.205733985 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.203168151 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.202209591 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.202616539 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.20617538 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.197546484 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.205647735 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.199593673 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.213227971 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.215939212 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.206586103 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.20736011 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.207604798 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.206257666 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.207454399 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.202509236 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.201968124 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.201494669 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.203106511 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.20301736 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.206823317 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.202332651 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.206699154 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.203151159 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.205349167 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.208030063 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.20438569 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.203342986 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.209018875 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.206052793 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.205941877 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.200336175 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.206387773 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.20233148 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.206652411 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.203364528 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.204272879 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.212073214 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.207079948 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.20435891 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.202061545 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.203834559 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.202310826 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.203709996 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.209445826 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.205041715 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.212847047 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.2022542 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.207632837 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.203877686 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.211121803 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.211387667 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.205242734 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.212797079 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.207792145 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.202007901 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.203934151 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.207633279 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.212636867 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.214681934 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.203779059 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.210458965 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.207916635 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.206163566 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.206728993 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.208112288 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.207176215 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.20892769 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.212840699 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.226298826 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.204062373 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.20840155 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.209530304 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.210295545 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.206621242 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.201935069 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.207714371 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.209910275 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.207020917 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.205127426 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.20508346 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.209000651 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.207708599 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.209647451 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.210284431 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.208936681 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.211614645 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.211192045 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.213388928 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.208032521 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.210958426 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.21367967 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.214133901 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.214710217 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.204963718 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.212395552 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.206868952 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.205984617 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.204070515 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.206778108 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.211479895 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.203298606 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.212103644 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.212149205 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.20639461 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.20683803 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.21333988 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.203143507 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.211830487 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.22231612 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.208360884 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.210157611 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.210504836 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.206454291 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.212712447 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.208612868 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.20522 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.20668836 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.212071317 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.210983652 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.206819604 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.213538787 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.206293347 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.213525808 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.208842195 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.210397755 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.2111959 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.211308991 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.207206023 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.214158392 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.20824429 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.212761902 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.208006015 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.209608135 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.205299461 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.214550753 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.216494721 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.208073038 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.213501717 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.213955342 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.208802148 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.209506473 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.212894149 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.209185042 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.213868923 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.206758589 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.211037885 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.210936196 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.212654827 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.209811635 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.2150813 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.209501865 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.208912897 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.21277165 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.211745971 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.213557408 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.209397983 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.216582362 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.209235148 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.210644499 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.2133456 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.210038789 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.215751037 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.209985099 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.213498326 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.20927554 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.215015007 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.213928887 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.213156225 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.209381468 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.211473262 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.220001132 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.212595121 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.214071911 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.211746059 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.217467234 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.209529997 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.212088507 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.214124949 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.209729107 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.211926334 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.216693666 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.209069557 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.212138583 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.213204647 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.217151421 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.215877648 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.213716649 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.212227522 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.21846227 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.232771829 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.215411945 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.208872518 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.212793898 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.210427477 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.214620528 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.213215118 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.20975051 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.216948105 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.216559833 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.21555172 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.213041972 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.21292116 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.210674447 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.217959351 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.214433117 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.212763291 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.215700412 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.210624526 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.215344657 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.213981485 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.214835581 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.21372522 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.210717712 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.211694944 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.213553477 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.216926612 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.214353032 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.210123237 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.20745492 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.210499522 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.209561767 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.209351553 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.208412665 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.206160369 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.210833363 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.194104239 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.198750306 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.195202875 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.195049255 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.201809524 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.200589426 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.195826047 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.202383256 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.197584318 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.196267412 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.193226553 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.191014814 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.196281525 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.200218251 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.197509494 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.191728123 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.196751994 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.195084051 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.192726437 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.196252542 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.190599882 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.204737697 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.215895989 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.190637087 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.193256607 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.188268498 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.192829455 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.190854665 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.187419553 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.188596757 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.19031604 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.196378138 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.19323767 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.191062556 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.20757684 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.18803944 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.193464378 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.188130886 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.18823309 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.189654492 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.192813942 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.18856496 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.185224576 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.195696573 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.190511518 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.191217494 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.204548756 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.191047802 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.186116773 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.190613726 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.17550927 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.181279825 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.177701912 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.181317022 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.179428252 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.179206627 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.18118919 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.176482864 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.181108856 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.177857823 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.183800605 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.179048157 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.1755312 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.174804425 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.178252516 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.17899718 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.178638332 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.178931262 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.177824827 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.179121303 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.174140312 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.187830835 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.191951909 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.181043833 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.179925003 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.17782693 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.181086321 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.181989429 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.181139962 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.184581838 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.181739627 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.180515014 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.177426861 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.182199129 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.180314181 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.177091209 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.178017718 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.175784716 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.182117742 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.189843788 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.192861071 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.182548706 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.176581765 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.175199722 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.174372487 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.173994214 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.178281682 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.175478821 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.169638334 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.173667862 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.177203239 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.175029105 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.173739991 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.169361042 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.178260084 seconds)
  done (took 716.073489298 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.173078552 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.174693765 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.173835612 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.172963793 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.169430283 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.169636675 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.170310167 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.171480381 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.169814339 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.169628124 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.170595405 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.173486781 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.168766274 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.16547902 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.166200769 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.16785124 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.167527239 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.1685729 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.167063634 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.166145906 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.167094464 seconds)
  done (took 25.64742127 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.166856405 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.165699921 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.166210391 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.168185576 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.166363244 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.166961808 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.166547595 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.167670672 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.165228973 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.166330873 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.167243771 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.166924846 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.168037669 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.166339796 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.16712358 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.166720157 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.167890213 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.168225023 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.167112496 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.167436677 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.16966044 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.166590666 seconds)
  done (took 26.752500699 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.168614977 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.168682359 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.162737522 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.169331693 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.170760998 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.167586257 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.168911798 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.168009875 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.169459766 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.164914563 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.165383789 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.165106699 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.169669944 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.173773522 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.165790069 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.170246235 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.169325661 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.169803843 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.169831181 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.169849791 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.171885634 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.174667281 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.167899884 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.164569586 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.169751236 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.170256276 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.170435461 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.169870186 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.165240539 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.172225157 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.170080588 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.16659436 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.169511141 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.168866682 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.167414 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.172360334 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.170566474 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.169717122 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.171475172 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.174655432 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.18482097 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.171737978 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.17361422 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.176578513 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.17127398 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.168126288 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.175165101 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.17192856 seconds)
  done (took 57.238273437 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.170982968 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.169575962 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.170455618 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.170700194 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.171496981 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.170845108 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.170402037 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.170817809 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.171008634 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.171205618 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.171775455 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.171821932 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.170353475 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.170631339 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.170865737 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.172461519 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.172400514 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.17125134 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.171051602 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.172611703 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.171202599 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.170994912 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.170137118 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.172535444 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.174451261 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.169281657 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.172678288 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.172152321 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.173198225 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.173151478 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.17102109 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.171871136 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.171937833 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.172695306 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.172269979 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.172204633 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.172618626 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.171697101 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.172174016 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.173581436 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.174388551 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.173954467 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.173099552 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.173039765 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.173484376 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.174562654 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.173787351 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.173877856 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.174306388 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.172364683 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.173764525 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.176294726 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.174080634 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.172861705 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.17448427 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.174697928 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.174557572 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.174632583 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.174281596 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.172919293 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.175240189 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.172760022 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.172560841 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.174098154 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.174693495 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.176409667 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.176021878 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.173432686 seconds)
  done (took 80.823058307 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.177635458 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.176054336 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.175717609 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.175218492 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.175196035 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.175441866 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.174555564 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.174608833 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.174721193 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.174439224 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.175838118 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.175936436 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.172133925 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.171817792 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.172163229 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.172044363 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.171931461 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.170715094 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.170548667 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.174235815 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.170368558 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.171166852 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.172762002 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.172593812 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.170542937 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.170935885 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.169863436 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.169630597 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.170465006 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.168251731 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.170409861 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.168013777 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.166909534 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.169319552 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.167631121 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.167618317 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.170732712 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.167199711 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.16929636 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.169407054 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.169033203 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.16887399 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.168088701 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.170112573 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.171165806 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.17043804 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.165936282 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.167635169 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.168996945 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.168922039 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.170739562 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.171432734 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.170397213 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.168896881 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.168471461 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.168030216 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.167147462 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.169195166 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.169223526 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.170803226 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.170391383 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.171178681 seconds)
  done (took 73.684609893 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.170795141 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.168197223 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.169699743 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.169796867 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.168975014 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.1685277 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.169988494 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.170627687 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.172576956 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.170081887 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.170217783 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.170028803 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.168269549 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.170862918 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.168951826 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.170020281 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.171351718 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.171265716 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.170257545 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.1679813 seconds)
  done (took 24.478004776 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.170030368 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.171290988 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.169196523 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.169248016 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.170603617 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.169816462 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.170545435 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.167447278 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.170361483 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.171362483 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.169957495 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.168212231 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.17117442 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.170314223 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.168873292 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.17196331 seconds)
  done (took 19.799651385 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.171223396 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.171973372 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.169819689 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.169282814 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.169538482 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.17227684 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.171260767 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.168891397 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.17219076 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.17131048 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.170961332 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.173091752 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.172463045 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.170357114 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.172362968 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.171519411 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.170968433 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.171705547 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.171966296 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.171507986 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.174433563 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.171005647 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.173805104 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.173304213 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.173502448 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.17026706 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.171514911 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.174682208 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.171208829 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.171589591 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.173607665 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.172530123 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.17223774 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.172626315 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.172227534 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.17192644 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.172257535 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.170439806 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.172461613 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.172964333 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.17374454 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.174512153 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.173882829 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.17193782 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.172803185 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.172893901 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.173767603 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.173461819 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.171890061 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.173141395 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.173665326 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.173961314 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.17351327 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.174799191 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.174567429 seconds)
  done (took 65.557524388 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.173260265 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.174711037 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.174072951 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.175433915 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.172693436 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.172800719 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.174127151 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.177683435 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.174999017 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.173603911 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.176118376 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.176138359 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.174067905 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.173836975 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.173708099 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.176021239 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.175755683 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.174824063 seconds)
  done (took 22.2277858 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.173362057 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.173559067 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.175008697 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.173943517 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.17519209 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.176262479 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.173395593 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.176655829 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.175933288 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.176129983 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.175553464 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.175144164 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.1736099 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.176805487 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.175296443 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.175324447 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.174198253 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.175457021 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.175269517 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.175495509 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.175254384 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.175452144 seconds)
  done (took 26.936593143 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.172320842 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.171329274 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.170856353 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.185760545 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.183999906 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.171456393 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.172387242 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.173088469 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.192635298 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.213310508 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.207769657 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.18601487 seconds)
  done (took 15.284650557 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.177792814 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.176850937 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.17897692 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.177996056 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.177438641 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.178441939 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.177849946 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.17525853 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.177373183 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.177196242 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.174899429 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.178376176 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.17735486 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.177750037 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.176632465 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.177971721 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.176455624 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.178414779 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.177714292 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.177601282 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.179027401 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.179154231 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.178422061 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.178355978 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.178333045 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.179075237 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.180393541 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.179057768 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.179793068 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.180430203 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.180268441 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.177633615 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.180537599 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.17834016 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.178131047 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.179888228 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.180151417 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.179036384 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.178608525 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.181218669 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.179651465 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.180603587 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.181207267 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.178361039 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.180147482 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.181068577 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.178706664 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.178531723 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.178392367 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.180607088 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.180974032 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.179591351 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.180680147 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.181782107 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.179495778 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.181688452 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.180927151 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.18076635 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.180961538 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.181819306 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.181449506 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.180569758 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.182582639 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.180888251 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.181064457 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.182155918 seconds)
  done (took 78.916299647 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.181641097 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.183453049 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.180374268 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.182963607 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.182379808 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.181064477 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.1815469 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.182055389 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.182635299 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.181204348 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.183721403 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.182328604 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.181437864 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.180648048 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.180908075 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.18274705 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.182130912 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.181810831 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.181563309 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.183608977 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.181428986 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.182825804 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.181187879 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.184405939 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.181695882 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.181744977 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.182581917 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.183702622 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.182403887 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.182805047 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.18356264 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.182309932 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.182514916 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.182968616 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.183303812 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.182678613 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.18320142 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.18302802 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.182775787 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.18397688 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.183013397 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.184988643 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.184085811 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.182048867 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.184384883 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.184108617 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.182969461 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.184918154 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.183926406 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.182741489 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.186000287 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.184099849 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.185367103 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.185878606 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.185279286 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.184301913 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.182811062 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.184208943 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.185524924 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.184967016 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.182740597 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.185627345 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.185742395 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.186696738 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.185125076 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.185073637 seconds)
  done (took 79.184397716 seconds)
done (took 1653.372232605 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.343968601 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.299019826 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.180812074 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.190816988 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.17772241 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.204531917 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.190553534 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.176369525 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.180580313 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.179816505 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.180723804 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.368796949 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.178399008 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.176740338 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.179944581 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.277534543 seconds)
  done (took 24.578619153 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.203290559 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.196713124 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.296170456 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.204252148 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.213324756 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.365938513 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.243634446 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.192770464 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.347563496 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.210472957 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.186629734 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.213372946 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.189674642 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.190214013 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.209753657 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.365659254 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.418937242 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.193520999 seconds)
  done (took 26.537137631 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.590735126 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.196396056 seconds)
  done (took 4.887700815 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.206351551 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.190478752 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.190800345 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.187219917 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.181332471 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.185419633 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.1867237 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.183640657 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.185032156 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.301954877 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.194396355 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.20253353 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.206117195 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.189856389 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.194831284 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.231182566 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.358420236 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.19815778 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.194818115 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.196771388 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.188977669 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.293223821 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.228717877 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.194493492 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.299595442 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.194876513 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.194217702 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.198565243 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.324349474 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.195750727 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.189469328 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.191052672 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.195657033 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.183049684 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.633713209 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.199946786 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.197647007 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.217220433 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.195083579 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.352113887 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.194407181 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.198337017 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.192902088 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.625718294 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.341337044 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.307688723 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.199732632 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.207931869 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.193035357 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.25282002 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.194329206 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.194078218 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.247700076 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.01640398 seconds)
  done (took 77.507278223 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.238838441 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.183789775 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.36638365 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.207445371 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.183370672 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.183436018 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.198808647 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.445021326 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.19471384 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.195385897 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.470021581 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.737153024 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.202650517 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.25678036 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.05492952 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.272019574 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.187309705 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.187928353 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.193636467 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.187759449 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.717893461 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.191696211 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.18877203 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.355065547 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.221654193 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.681087587 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.200119392 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.18994724 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.19547283 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.184096251 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.689266115 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.214676897 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.252384159 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.186431621 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.44865221 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.537319181 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.498239574 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.194429928 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.187061185 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.187905608 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.186267727 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.65817058 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.517318935 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.185996216 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.205173291 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.676986663 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.185933888 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.192311709 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.194014578 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.43249106 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.184609068 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.190011532 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.188499489 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.198992728 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.187115678 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.272027471 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.278255897 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.679178349 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.187515424 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.18756713 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.208944148 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.188315007 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.192154746 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.191864508 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.205266903 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.523913928 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.368339756 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.193881998 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.521260351 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.681487419 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.200804971 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.7500117 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.201404232 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.200474629 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.404939075 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.192978603 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.187947088 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.687282004 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.203279442 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.188141565 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.505875258 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.192204576 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.466313277 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.203215029 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.199494015 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.746449831 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.197586916 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.195617352 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.189274362 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.188803804 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.190003315 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.194463821 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.452440243 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.228748613 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.189138192 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.190726969 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.230692229 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.195367602 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.189432253 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.198071025 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.750150721 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.211720535 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.190938951 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.190636873 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.188724818 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.18864028 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.190867688 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.194731997 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.454813966 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.189452007 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.19763651 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.190708338 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.189612527 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.195196567 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.25250754 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.193646738 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.470097627 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.194027364 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.189536168 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.189682225 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.190722024 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.249848183 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.192677086 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.193863715 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.024473635 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.449263748 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.205984852 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.192501529 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.19205568 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.190401478 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.190806051 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.192619766 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.236958234 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.194184952 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.960801922 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.206212807 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.197186546 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.1929794 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.201059395 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.193227396 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.198552019 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.194240234 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.475736956 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.451795543 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.360785977 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.190596539 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.19294804 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.935776269 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.214124899 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.370247536 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.208199827 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.191502511 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.450296234 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.402263232 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.195549539 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.19221958 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.196095361 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.449459205 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.191454649 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.490316932 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.718567916 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.207219942 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.200487589 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.971468015 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.905149536 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.197884974 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.197607855 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.466324817 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.208569861 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.193971568 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.194340139 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.19591639 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.208083465 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.21108266 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.198531472 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.194882387 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.194721295 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.486249946 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.384944232 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.20819227 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.202465953 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.674456456 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.224715556 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.19391409 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.194055614 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.19543251 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.193715052 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.302320139 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.195757397 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.236420279 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.200143928 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.196356305 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.69704885 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.194334922 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.196820331 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.386525146 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.868580086 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.208407974 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.195809726 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.195879913 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.15609513 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.702558394 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.224896197 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.477092879 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.20362394 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.233974957 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.198761359 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.240020241 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.706733702 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.199577907 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.196283238 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.843913201 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.210267745 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.673905657 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.1970554 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.199561852 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.777392434 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.212719521 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.198133573 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.197347509 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.202841443 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.492329709 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.198343569 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.20598561 seconds)
  done (took 465.869114594 seconds)
done (took 600.473457889 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.199979577 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.203005034 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.193016544 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.202130891 seconds)
  done (took 9.913026434 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.21648867 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.205652872 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.213414867 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.205164491 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.213088449 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.206247249 seconds)
  done (took 8.376557937 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.199517723 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.204380013 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.202801236 seconds)
  done (took 7.723195647 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.398492828 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.213107986 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.531694894 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.220860547 seconds)
  done (took 8.47976382 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.210197314 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.211823424 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.21255446 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.212433046 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.218218532 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.219821295 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.215769794 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.21306131 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.217236007 seconds)
  done (took 12.046907761 seconds)
done (took 47.655691071 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.193932957 seconds)
    (2/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.193354242 seconds)
    (3/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.255508002 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.266765377 seconds)
    (5/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.854707944 seconds)
    (6/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.233762194 seconds)
    (7/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.19354414 seconds)
    (8/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.196051503 seconds)
    (9/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.242459861 seconds)
    (10/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.237248765 seconds)
    (11/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.194277114 seconds)
    (12/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.205624874 seconds)
    (13/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.229930294 seconds)
    (14/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.192825114 seconds)
    (15/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.28145888 seconds)
    (16/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.192490271 seconds)
    (17/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.340045082 seconds)
    (18/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.259483584 seconds)
    (19/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.332121144 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.243684671 seconds)
    (21/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.247391042 seconds)
    (22/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.957424456 seconds)
    (23/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.238496686 seconds)
    (24/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.868629645 seconds)
    (25/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.277212856 seconds)
    (26/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.338541477 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.28984608 seconds)
    (28/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.363722842 seconds)
    (29/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.193219896 seconds)
    (30/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.292742694 seconds)
    (31/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.251144149 seconds)
    (32/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.298002393 seconds)
    (33/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.111192706 seconds)
    (34/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.250724656 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.4074943 seconds)
    (36/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.376511074 seconds)
    (37/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.371357348 seconds)
    (38/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.199435272 seconds)
    (39/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.237873277 seconds)
    (40/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.239256533 seconds)
    (41/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.198094021 seconds)
    (42/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.236905058 seconds)
    (43/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.906491864 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.337262092 seconds)
    (45/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.23801174 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.340999388 seconds)
    (47/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.192551017 seconds)
    (48/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.244839456 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.39664859 seconds)
    (50/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.858153788 seconds)
    (51/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.97031161 seconds)
    (52/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.357957556 seconds)
    (53/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.296448765 seconds)
    (54/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.402102902 seconds)
    (55/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.295731068 seconds)
    (56/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.26727323 seconds)
    (57/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.355397672 seconds)
    (58/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.070932182 seconds)
    (59/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.298299396 seconds)
    (60/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.199429566 seconds)
    (61/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.285729853 seconds)
    (62/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.306419943 seconds)
    (63/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.279168751 seconds)
    (64/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.195108758 seconds)
    (65/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.220433216 seconds)
    (66/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.943944093 seconds)
    (67/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.302340255 seconds)
    (68/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.280749433 seconds)
    (69/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.198126189 seconds)
    (70/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.348944814 seconds)
    (71/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.196364164 seconds)
    (72/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.347526088 seconds)
    (73/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.256363044 seconds)
    (74/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.195175552 seconds)
    (75/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.266696388 seconds)
    (76/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.283777881 seconds)
    (77/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.320466181 seconds)
    (78/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.39313634 seconds)
    (79/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.1954582 seconds)
    (80/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.289091896 seconds)
    (81/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.349135822 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.355575371 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.299603741 seconds)
    (84/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.23588467 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.285539179 seconds)
    (86/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.380443767 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.309993184 seconds)
    (88/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.236476732 seconds)
    (89/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.336747629 seconds)
    (90/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.986369073 seconds)
    (91/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.282336972 seconds)
    (92/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.86949817 seconds)
    (93/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.198896877 seconds)
    (94/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.199395644 seconds)
    (95/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.25917507 seconds)
    (96/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.246314197 seconds)
    (97/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.426087977 seconds)
    (98/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.310559279 seconds)
    (99/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.349930266 seconds)
    (100/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.214353418 seconds)
    (101/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.951174704 seconds)
    (102/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.016845751 seconds)
    (103/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.19746898 seconds)
    (104/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.947805332 seconds)
    (105/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.19737245 seconds)
    (106/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.251239009 seconds)
    (107/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.242832528 seconds)
    (108/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.264809117 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.33468911 seconds)
    (110/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.196636146 seconds)
    (111/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.255070992 seconds)
    (112/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.955267032 seconds)
    (113/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.25514646 seconds)
    (114/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.368073328 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.302132037 seconds)
    (116/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.295083368 seconds)
    (117/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.229879573 seconds)
    (118/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.226934251 seconds)
    (119/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.197655796 seconds)
    (120/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.459198916 seconds)
    (121/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.341966629 seconds)
    (122/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.283818136 seconds)
    (123/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.198335894 seconds)
    (124/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.3421152 seconds)
    (125/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.231104591 seconds)
    (126/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.205576603 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.351366497 seconds)
    (128/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.369251321 seconds)
    (129/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.340902083 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.346180322 seconds)
    (131/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.264032364 seconds)
    (132/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.247091214 seconds)
    (133/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.212627277 seconds)
    (134/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.278404244 seconds)
    (135/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.214487099 seconds)
    (136/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.229726891 seconds)
    (137/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.202100396 seconds)
    (138/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.017228325 seconds)
    (139/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.903964201 seconds)
    (140/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.201971522 seconds)
    (141/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.278126447 seconds)
    (142/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.215722405 seconds)
    (143/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.241357427 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.299458839 seconds)
    (145/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.029713907 seconds)
    (146/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.245445791 seconds)
    (147/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.243949279 seconds)
    (148/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.202001263 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.32309993 seconds)
    (150/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.259478467 seconds)
    (151/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.38474531 seconds)
    (152/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.323011391 seconds)
    (153/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.357955587 seconds)
    (154/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.108487124 seconds)
    (155/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.12051522 seconds)
    (156/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.212380867 seconds)
    (157/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.249231642 seconds)
    (158/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.223814067 seconds)
    (159/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.892425841 seconds)
    (160/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.355090005 seconds)
    (161/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.328524077 seconds)
    (162/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.254903949 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.413384007 seconds)
    (164/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.34717027 seconds)
    (165/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.223427713 seconds)
    (166/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.298369271 seconds)
    (167/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.233082735 seconds)
    (168/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.384897941 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.335886296 seconds)
    (170/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.228973274 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.320183103 seconds)
    (172/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.435136314 seconds)
    (173/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.201412809 seconds)
    (174/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.202123632 seconds)
    (175/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.002271336 seconds)
    (176/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.223143198 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.331216633 seconds)
    (178/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.260195323 seconds)
    (179/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.992726113 seconds)
    (180/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.946076183 seconds)
    (181/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.262819372 seconds)
    (182/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.3789914 seconds)
    (183/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.216119946 seconds)
    (184/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.900320782 seconds)
    (185/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.898181666 seconds)
    (186/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.301792658 seconds)
    (187/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.200305076 seconds)
    (188/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.384920863 seconds)
    (189/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.453537023 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.296445061 seconds)
    (191/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.314515829 seconds)
    (192/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.30927966 seconds)
  done (took 312.352935178 seconds)
done (took 313.470204145 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.24751592 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.276453555 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.231088368 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.232295105 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.231943936 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.216066711 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.234519529 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.229797675 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.231484479 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.232224637 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.215467754 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.22388021 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.244914376 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.228464655 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.267630757 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.234287741 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.234082673 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.228844283 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.233365449 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.23512712 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.235537257 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.235976914 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.24413671 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.233575462 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.244433078 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.243259256 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.239934962 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.22954237 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.22391766 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.233039365 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.229306934 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.237592998 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.237423676 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.230250591 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.236613119 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.22995222 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.23539846 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.2779688 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.239502742 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.229705073 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.227630118 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.234758197 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.241140321 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.241698951 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.233650302 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.241311303 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.24270918 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.251721304 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.227696509 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.211501404 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.248982676 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.233267076 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.226928693 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.206687869 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.225013279 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.253059143 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.232244705 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.250842822 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.229046651 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.236709417 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.270823828 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.253801386 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.233997508 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.242792521 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.229145791 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.247411897 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.231542021 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.236856066 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.229924968 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.235310449 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.238410339 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.230019448 seconds)
done (took 98.164435839 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.354759169 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.224346378 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.365728845 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.228989456 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.386519439 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.370493809 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.228631178 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.230397799 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.22825734 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.079199289 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.227899772 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.228491955 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.226847343 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.232147591 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.358806571 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.231599559 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.227799042 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.964632341 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.231420096 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.367045442 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.222897807 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.231874573 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.229175329 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.094564599 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.22741431 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.220152081 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.367745025 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.230007219 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.986220058 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.22086837 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.223451016 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.984017866 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.370827056 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.251890242 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.238659839 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.240989043 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.387490281 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.243741619 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.356625933 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.356632839 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.36750031 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.270855571 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.220795122 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.223403888 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.231928102 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.233392968 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.230225223 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.25879252 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.226512986 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.232304772 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.969041468 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.241558483 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.240598913 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.231718835 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.231197034 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.253044699 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.233923364 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.233863025 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.371355569 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.235049614 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.357887857 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.095542432 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.081552828 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.233022261 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.223005624 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.23277189 seconds)
  done (took 101.773039516 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.29435183 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.308725119 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.333766639 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.239118326 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.280982156 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.33766437 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.238445231 seconds)
  done (took 10.16831238 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.234961033 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.232353002 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.276411675 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.277479206 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.234818472 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.382088462 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.234571299 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.240140073 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.233186279 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.278922186 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.234950892 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.232734632 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.241286512 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.228303796 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.277790102 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.241802276 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.345489421 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.231608144 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.236414593 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.381055405 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.235429116 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.243318518 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.281334363 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.242429327 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.234914679 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.234837572 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.999273312 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.237053092 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.234937841 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.235787995 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.23550816 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.282689478 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.23515433 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.228812396 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.234541147 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.347820565 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.237487524 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.233722762 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.236450683 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.232951793 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.234564346 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.235268885 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.235153535 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.235802747 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.236024266 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.254066538 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.235846274 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.235184272 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.233912522 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.235818129 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.282855724 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.236949202 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.235491455 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.235390074 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.286817096 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.24482028 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.234436415 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.235818929 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.236335061 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.237474985 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.383589918 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.281301087 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.236747681 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.27826312 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.237450797 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.239079938 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.236573455 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.238109183 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.322767482 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.235649204 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.280997688 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.237063875 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.414325638 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.257048281 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.23987696 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.235488889 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.238098204 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.239649556 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.23055891 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.238794674 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.238477236 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.233750212 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.241756747 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.237831345 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.238352244 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.389690638 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.343268567 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.238687106 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.247625055 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.241458013 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.238916156 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.289106497 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.240778599 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.236587556 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.283686692 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.34947264 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.28599846 seconds)
  done (took 127.814164161 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.247680052 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.248539393 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.237978585 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.262697291 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.236679829 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.235475894 seconds)
  done (took 8.610287721 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.23757874 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.241603007 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.239698576 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.239834814 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.240783328 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.242429512 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.242386383 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.234644293 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.243120902 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.239422152 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.240023121 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.242620284 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.245062505 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.241297267 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.241712901 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.240820611 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.241736104 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.241279502 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.240776123 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.240109344 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.235391124 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.24351065 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.24335602 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.239101539 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.243264883 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.242566975 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.257306551 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.241069477 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.240702644 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.243573205 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.25897188 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.243738016 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.237148608 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.243583375 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.246250328 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.238221223 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.243319264 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.243066025 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.24244403 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.241889489 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.243074421 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.2436922 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.241909894 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.244378116 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.241682232 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.242108365 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.248033039 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.261016777 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.244677367 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.243611983 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.243353485 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.24454944 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.244054583 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.245562696 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.241660997 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.25556326 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.24722899 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.244837301 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.245422944 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.240983575 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.245944634 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.24476494 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.241254947 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.248418656 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.24426561 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.245090396 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.239815285 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.247327098 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.24401127 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.24228051 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.247891535 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.244295662 seconds)
  done (took 91.671223561 seconds)
done (took 341.169952824 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.091215307 seconds)
  done (took 4.236089876 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.271906117 seconds)
  done (took 3.419293421 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.183402288 seconds)
  done (took 21.334343765 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.244129334 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.287502614 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.261299335 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.238440475 seconds)
  done (took 10.177699228 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.467269998 seconds)
  done (took 3.612763464 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.240930589 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.237332597 seconds)
  done (took 5.627143221 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.394305916 seconds)
  done (took 3.540381859 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.424160695 seconds)
  done (took 3.575446859 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.25672578 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.25517708 seconds)
  done (took 5.668951112 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.233451716 seconds)
  done (took 3.381992611 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.477607829 seconds)
  done (took 18.626130057 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.245053344 seconds)
  done (took 3.395148831 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.282331096 seconds)
  done (took 3.429805637 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.655844167 seconds)
  done (took 5.802688781 seconds)
done (took 96.973466943 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.239030546 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.24207374 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.239019541 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.237798792 seconds)
  done (took 10.105238012 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.326978127 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.326641287 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.334925324 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.320519448 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.316559545 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.325728782 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.2719995 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.276056919 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.325178043 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.316131756 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.333026631 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.31607581 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.326599327 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.275060438 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.316563074 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.336570747 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.315686641 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.335482912 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.275071781 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.319065096 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.249319374 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.317879362 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.319301154 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.252633959 seconds)
  done (took 32.577913799 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.761889529 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.318702653 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.402040435 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.29843302 seconds)
  done (took 6.930840208 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.328269448 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.327594495 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.354418655 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.385611675 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.413382013 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.354667302 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.279104878 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.272661452 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.258063645 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.329536927 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.380382885 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.328268384 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.432661848 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.250244047 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.46928115 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.252052965 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.251122849 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.329393284 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.384010472 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.412078941 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.252320663 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.328743409 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.335678536 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.329314595 seconds)
  done (took 33.189927818 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.263563062 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.266773506 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.254891549 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.269642953 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.254992544 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.255234742 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.256259672 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.259489126 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.254065588 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.250144675 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.2542998 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.267110855 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.252916718 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.254068428 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.263038471 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.255260582 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.257000264 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.259839956 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.262458164 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.253615295 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.252967351 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.260570366 seconds)
  done (took 28.83084444 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.244087564 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.24297321 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.591101039 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.496677903 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.243826914 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.243285105 seconds)
  done (took 13.214542242 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.314283832 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.459520146 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.247248209 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.580090479 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.669825363 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.252010945 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.251612634 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.485887172 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.773913533 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.755980414 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.307504442 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.314778932 seconds)
  done (took 18.56596916 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.250918831 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.244667632 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.253171403 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.26106233 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.300845204 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.264012719 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.256572388 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.244536144 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.303405661 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.315190903 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.264845445 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.301634717 seconds)
  done (took 20.416300546 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.337197071 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.247268249 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.247597508 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269078737 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251097423 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.165140462 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.31435725 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.975284961 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.273589459 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.525347871 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255638364 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.342095791 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.503422399 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252410393 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.251600457 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.207304918 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.478929349 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.704557579 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252383053 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.248769747 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285232048 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.250435326 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.250261814 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.463619186 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.096963348 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.247733048 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.570971942 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.250995214 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512911309 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.265448908 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.260396432 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.251621402 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.524397748 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885550322 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365658142 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443586732 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254902908 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.250363971 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.239406791 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.254276226 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.256953044 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.271965821 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.263101372 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251794815 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.25123654 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.252991382 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981721895 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.279368511 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.25342444 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.253104998 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.488546716 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352251759 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.2592009 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.252696514 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29343516 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256196163 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.258555433 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376210746 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847926704 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261398787 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256968278 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.25194805 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.26929144 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260110502 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830941928 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.263591395 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.257733439 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.256963843 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254231122 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.260063221 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.280599273 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253334913 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.279352004 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25434926 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923691347 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.270140161 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259108055 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.772591151 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254043181 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.267426113 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.486600471 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253766719 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253607121 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.254189187 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.25505134 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904874788 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.264841207 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.238043906 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.299487962 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.98788816 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.468639254 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275190186 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285482177 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.47665319 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.242024336 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256735152 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.253003679 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259441954 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272881098 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.9708273 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274005434 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.259229326 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.513181609 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.463867274 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254491256 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.222027476 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.722244496 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272063854 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.279976674 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.257285025 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.449135062 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.809957746 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.27373086 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257928966 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290099266 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.257936827 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956938714 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258953425 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.259913429 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.257562899 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.537923181 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.009886605 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261469771 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.323632658 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.258621863 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.259651958 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.263961883 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262627189 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.25796731 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.4462876 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.279510659 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.263621156 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.258652382 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258678954 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.257324067 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259503283 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.261927749 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.48042379 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256121555 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.532913518 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257008201 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25871344 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25699816 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.477208462 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.255952645 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.275755501 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.521026254 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260246482 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.261390078 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.268148154 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288752099 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365457977 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.286366683 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.264565879 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.510923572 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.262802949 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.26427388 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.262269797 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.264061236 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267533003 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.268562956 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255538744 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.82084599 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2385924 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.261796984 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.261018542 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.27499251 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.327890663 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.268930488 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.458163672 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.273250671 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258916876 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.266677097 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.262492605 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.489706659 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.269857208 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.260948732 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.341166322 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.721511653 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.833166925 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.281842856 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.263175203 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.262592906 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.263152722 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264085213 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262460249 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.264443946 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459864256 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.277739072 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.278994419 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.815575237 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269736706 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.26268648 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.273451747 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.274180415 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.269093387 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264546178 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.273912509 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264657253 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277644982 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.277339325 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398637705 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.279805695 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.262986341 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.779032849 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.27122179 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.263866893 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.264091478 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295980576 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.267560939 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131857204 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.524898329 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.258232393 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.498980447 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.268803435 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.284752612 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.264170087 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274350848 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279097762 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.270730743 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282665492 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.274640671 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.271891674 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269070819 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831363276 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.95742854 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771515314 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.284232642 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.267390399 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.28504831 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.986359635 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283320972 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.265083047 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.491093451 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.9814984 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282934565 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.728227881 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.282917106 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.98771276 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.507190589 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.498509197 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.278460151 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.279990649 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.507933915 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.48123858 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298554942 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.269630167 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2678836 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.250180091 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.822368345 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.292827466 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.34977586 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991387422 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295363396 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.271210511 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.299987801 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.282649124 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.650498897 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.285181763 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268803232 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.26475 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.284501101 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139549085 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.273123539 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.267879422 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847824443 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.269187923 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.733163417 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286098159 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.468783044 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.280916061 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.273150966 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.282594761 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.282583782 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.523091943 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.509265741 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272126505 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.271515139 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776462895 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.139130357 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.279275883 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271983576 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970270971 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280391504 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539654399 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.286579798 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.269757309 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291533734 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.272247376 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271106504 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.271717534 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.274347478 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272796866 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.725293998 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.270542454 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283714069 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.28150051 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275907737 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.523828174 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.287647254 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.825564025 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.503687381 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.287268226 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300819113 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.276291133 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272905242 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.263004904 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.273783825 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.272784406 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31226331 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.495462236 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.270111019 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.260688828 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.335815285 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.497288603 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.272732458 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.274252737 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50723997 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.276458082 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.28749826 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976188466 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308468056 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.27571145 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277428979 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.280501038 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.309992936 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.341459449 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.476779324 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.286900825 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.284418783 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.656747484 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297502143 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277696774 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.289294633 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.370631187 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27636792 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.280820098 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.064501255 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.830064461 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.971269912 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.836336969 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.520856405 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.276166073 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279282515 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275071503 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409335294 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275266143 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.550419746 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276303368 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.27372668 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294899528 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276699422 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279708394 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.490680207 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.552125853 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.276103047 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28417819 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275956596 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.277594836 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.286729517 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.487041345 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.73666692 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.798094569 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275095858 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.277777072 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.003999032 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.568387643 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278028329 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.2774791 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278578748 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.295236917 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.290426351 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.303912019 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291339193 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41385479 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.516556623 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922370233 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.30316181 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.314061677 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.796548923 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277978763 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.55153494 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.286280019 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.480423903 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.839902064 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.944376679 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.542911051 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.346423311 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.478873922 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.280281467 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412675364 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.288853833 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.275918761 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277306582 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279843338 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.278628524 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.287110202 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842516496 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.546264634 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.283389818 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.285524684 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307628937 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.288645795 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.500980857 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952535362 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.50346551 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.288370833 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.283008623 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.279716083 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.844623173 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525033599 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282807683 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.282283603 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509193217 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.282844264 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.309013692 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.018433783 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.281141569 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.798046668 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.16674425 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298936926 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284506817 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.949210534 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.845730244 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.288109891 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.741201711 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.278597718 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280567505 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555780226 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.288725357 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.291862761 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562663132 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.287806833 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.281532915 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.487173344 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.841502134 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.020785487 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.300906497 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305342071 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.288163159 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280077444 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298960186 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285757022 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.281962932 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.679932437 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.299603211 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28382566 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.293021531 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.287433845 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285499838 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.300762268 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28223602 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.287111004 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.281653773 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.276861509 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.302436201 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407097073 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849653216 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310440826 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.963305786 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.610882628 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.538348306 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.283543418 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.272728657 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.290410255 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283454541 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285450265 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28049076 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.279545289 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.814829331 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.286002429 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.292370359 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.289067185 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.284583723 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.493453546 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.296299334 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.489653051 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293503287 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.307503638 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.272148449 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283142577 seconds)
  done (took 922.881252816 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.319035248 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.322085497 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.300322735 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.33807585 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.331753123 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.345533973 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.309422464 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.378865211 seconds)
  done (took 19.832597114 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.289826523 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.289537372 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.290884526 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.287538138 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.282476575 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.752826327 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.295652759 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.287789592 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.302608683 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.284664176 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.28323038 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.929901273 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.307537095 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.288040484 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.276371678 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.289560864 seconds)
  done (took 30.930430311 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.119822028 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.371494558 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.989294473 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.28163556 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.281612297 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.28147534 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.461572849 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.295918648 seconds)
  done (took 25.272725785 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.296875617 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.298204762 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.296546535 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.298537715 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.29772818 seconds)
  done (took 7.676808337 seconds)
done (took 1171.575767508 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.295551578 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.295398637 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.29491416 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.294305812 seconds)
  done (took 6.366084831 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.273878023 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.272454837 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.272662861 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.282150742 seconds)
  done (took 9.288193212 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.95288914 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.891470494 seconds)
  done (took 5.034547035 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.755893579 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.757428773 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.753599697 seconds)
  done (took 6.455979948 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.577261784 seconds)
  done (took 2.768183078 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.170095338 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.247596796 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.937881701 seconds)
  done (took 7.545150646 seconds)
done (took 38.645844693 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.285857089 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.526915629 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.440007353 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.285686729 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.441936259 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.440495313 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.090693548 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.28617936 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.31101049 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.291997283 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.282612372 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.440862291 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.005656876 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.542506558 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.007811675 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.531743363 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.446663111 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.294672522 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.279414764 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.283384972 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.101324493 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.286270437 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.295905334 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.2812484 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.441869428 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.478649614 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.293867378 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.529342993 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.295589132 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.283619377 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.446303183 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.286693867 seconds)
  done (took 79.72640913 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.289663162 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.28318078 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.294983537 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.285295142 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.28612345 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.29262699 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.284837859 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.285104876 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.297474369 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.292296204 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.285294511 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.285415123 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.287942693 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.298532917 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.284876747 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.296501034 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.288430056 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.290356486 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.284656607 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.298275383 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.284293231 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.286230578 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.303799812 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.28603282 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.298922102 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.294883645 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.285977013 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.297558887 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.286192605 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.284996832 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.31016827 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.288093532 seconds)
  done (took 74.491720227 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.288276103 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.29959545 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.300616167 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.294365047 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.293255031 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.287414638 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.287095849 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.28674262 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.288569864 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.287677418 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.294372696 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.291459201 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.289783375 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.284828774 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.289429351 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.285787046 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.300568806 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.286606207 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.288223349 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.285551388 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.307111933 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.286208468 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.287566457 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.28790973 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.287874815 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.286562478 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.287483841 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.304013893 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.290671987 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.285965355 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.28719647 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.290504272 seconds)
  done (took 74.492853982 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.615906349 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.301393318 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.305118085 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.296885393 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.304588416 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.3022375 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.296021513 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.616900057 seconds)
  done (took 14.235857486 seconds)
done (took 244.136170611 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.295591459 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.776568277 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.338802061 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.294661765 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.310938721 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.322507432 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.520010563 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.332302257 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.518117926 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.312319649 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.30952826 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.307346429 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.064215531 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.450098477 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.126600528 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.24706719 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.143066238 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.295625255 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.851516653 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.573432422 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.317224124 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.293016918 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.119938767 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.171157993 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.280759502 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.374617662 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.394992216 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.518788103 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.453343097 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.373963183 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.796101649 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.305696532 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.297572382 seconds)
  done (took 61.282023941 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.303485638 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.307307868 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.308686045 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.309000603 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.308172004 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.310241152 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.301684216 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.308627702 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.31190277 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.308580406 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.309197964 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.309793454 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.311652228 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.310814335 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.310466149 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.300850485 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.305647567 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.308136898 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.304370216 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.300395986 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.307713917 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.311158302 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.310810228 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.310042931 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.308710688 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.309194048 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.309982792 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.309733224 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.30944364 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.307722929 seconds)
  done (took 40.445686983 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.3098798 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.874608644 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.009983679 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.309597112 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.307165632 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.312994984 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.579814622 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.306798649 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.311837446 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.312537109 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.781118741 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.313858044 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.343902196 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.034139171 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.309704624 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.3124226 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.312339733 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.309277069 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.882538348 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.317388022 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.594254236 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.313513785 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.578085875 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.318806702 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.326927438 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.309795393 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.312433921 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.134046755 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.323199377 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.777666838 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.040513956 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.573100154 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.043120957 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.033573909 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.046082068 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.314111517 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.312618866 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.790504465 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.311837174 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.310323891 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.579710766 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.308143042 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.019427928 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.980578405 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.323924808 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.312555085 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.150682523 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.808405904 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.540993024 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.31653213 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.025645802 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.310774561 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.315169587 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.311378914 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.537950667 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.311724806 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.309387953 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.135690315 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.329672208 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.582375531 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.316831905 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.311604576 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.883839698 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.313024471 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.879471659 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.314461243 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.318212326 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.327731968 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.028372136 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.312225828 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.996978071 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.328507255 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.315934133 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.775228293 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.881390311 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.203628109 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.312678708 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.88954013 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.084244635 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.596694658 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.3164897 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.120874408 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.598708691 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.314163434 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.319042546 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.318118099 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.313965822 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.425491758 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.579916874 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.927727505 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.995360855 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.15831672 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.603882001 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.322960586 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.317130076 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.152838489 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.336831276 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.317133506 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.024168905 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.003203109 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.328189193 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.31836989 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.003839082 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.332150442 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.587787661 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.31605688 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.037674952 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.316258045 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.379777211 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.316547872 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.32528021 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.336261117 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.590614005 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.320197801 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.319730218 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.987563307 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.812143605 seconds)
  done (took 184.517430186 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.3064117 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.30570024 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.310693683 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.303851226 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.313718093 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.320908262 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.310647307 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.30809804 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.314406752 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.310697916 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.30969575 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.317761735 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.31586788 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.312512455 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.31114342 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.305901327 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.307383825 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.325136922 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.305539961 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.315165239 seconds)
  done (took 43.441315165 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.321485544 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.85204154 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.818041407 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.317095159 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.322878104 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.318950191 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.369480948 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.322104261 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.320462763 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.60641707 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.478000405 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.338586676 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.321580564 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.32188294 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.820326449 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.309989567 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.605245254 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.857834542 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.320468538 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.855220074 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.310955561 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.319244689 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.315210666 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.858709987 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.609545916 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.587941955 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.372389144 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.855791155 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.321474188 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.324524871 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.855791208 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.320833829 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.318277859 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.855768659 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.336397845 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.337444055 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.323498482 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.372007889 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.370248498 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.608706489 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.864969734 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.594782096 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.333738731 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.497743425 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.320191613 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.312825945 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.864693449 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.337240882 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.312019765 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.324507756 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.328625664 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.828401471 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.333652026 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.832355818 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.336666081 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.325199041 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.859570967 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.829584685 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.838639693 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.480513984 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.336326722 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.589663165 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.32539331 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.861990723 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.33520959 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.323574748 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.32553654 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.483591167 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.874424034 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.5927392 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.613194997 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.609879601 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.325191992 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.382175775 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.337480178 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.608491209 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.377538979 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.727697571 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.608024482 seconds)
  done (took 119.98067769 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.581779385 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.432884894 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.694218819 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.90013363 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.809442396 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.458242218 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.426705628 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.567001686 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.322816906 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.410971007 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.947812355 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.432462046 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.034010901 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.400129895 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.417995595 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.472169038 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.700195802 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.284991685 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.98274867 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.911133805 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.31950689 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.43585847 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.845399401 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.502317073 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.318013763 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.897724293 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.253212087 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.825423291 seconds)
  done (took 50.802111016 seconds)
done (took 501.664196359 seconds)
SAVING RESULT...
DONE!
