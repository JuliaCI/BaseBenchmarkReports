cset: moving following pidspec: 24049
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.699635069 seconds)
loading group "string"... done (took 0.669781655 seconds)
loading group "linalg"... done (took 9.863385317 seconds)
loading group "parallel"... done (took 0.19292979 seconds)
loading group "find"... done (took 1.53598536 seconds)
loading group "tuple"... done (took 2.197219866 seconds)
loading group "dates"... done (took 1.506681551 seconds)
loading group "micro"... done (took 0.217862807 seconds)
loading group "io"... done (took 0.616891978 seconds)
loading group "scalar"... done (took 47.200890228 seconds)
loading group "sparse"... done (took 14.438268823 seconds)
loading group "broadcast"... done (took 1.268297217 seconds)
loading group "union"... done (took 11.326680074 seconds)
loading group "simd"... done (took 2.796780148 seconds)
loading group "random"... done (took 10.891352573 seconds)
loading group "problem"... done (took 2.301256857 seconds)
loading group "array"... done (took 25.829916991 seconds)
loading group "misc"... done (took 1.195319881 seconds)
loading group "sort"... done (took 4.002297452 seconds)
loading group "collection"... done (took 20.342953445 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.753463678 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.149402284 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.251174476 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.352069414 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.241636363 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.144709161 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.166636211 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.351617657 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.985872499 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.231085743 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.149773522 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.5852634 seconds)
done (took 6.022533293 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.255690288 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.326051082 seconds)
    (2/2) benchmarking "String"...
    done (took 0.172619957 seconds)
  done (took 1.101010627 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.086516668 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.180093079 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.10688241 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093145559 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.108521618 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108640686 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.108054135 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107221628 seconds)
  done (took 1.416740169 seconds)
done (took 3.472083318 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.532782751 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.904441271 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.574510974 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.161048903 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.331305834 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.397613825 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.333733414 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.202099496 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.103493019 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.103375499 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.173691816 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.435655829 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.469439851 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.044277774 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.103441064 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.091631021 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.126119209 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.817484942 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.075260741 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.127810738 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.568823484 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.209870061 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.107463486 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.11315336 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.1947183 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.112362757 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.170227344 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.099853742 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.655645522 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.124537986 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.195611236 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.092879742 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.165355155 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.227443006 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.239560048 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.088126987 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.710510421 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.194435201 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09697081 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.096325557 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.67167229 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.128286567 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.162288546 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.101719955 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.087319409 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.196626614 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.11305383 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.088929569 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.110601798 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.083854256 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.157095774 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.451007877 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.088556097 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.163936735 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.087954365 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.729188581 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.095561577 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.285637212 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.130542419 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.10075343 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.072153937 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.100963652 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.151164801 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.10514251 seconds)
  done (took 20.683657847 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.156218543 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.164559267 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.088226715 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138114122 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.14110023 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.090401926 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.079142445 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.087317164 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124955749 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.232404836 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.137275951 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.168595046 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.08604587 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081708241 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.1417162 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247686858 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.11733903 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102754998 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.09757522 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.10141941 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124046563 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.108440772 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.105501265 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.106800522 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166423551 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.197995934 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102926062 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115716214 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.093934906 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112467588 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.133930556 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145183021 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.087160903 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080805424 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.184703296 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.11525167 seconds)
  done (took 5.190165301 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.221724857 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121805186 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.234950886 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.168752401 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.1453585 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.167607509 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.154353065 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.308270316 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.241130794 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177139107 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122783069 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.092366012 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090904414 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081208122 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.187019673 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.076114618 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.658082556 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.187015377 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.14641698 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.146966237 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101004195 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097060005 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.735141857 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081190541 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.094360063 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082644948 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.087888725 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.201877083 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09945727 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.2099498 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.097616687 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08471425 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12735342 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.205567863 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128490302 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125192825 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095579071 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.092876111 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.21566583 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093462175 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.094113568 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.088664594 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.128856757 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125522523 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116348748 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09676117 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.102809921 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.233397506 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.077392163 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121811918 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.127036438 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.201789899 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.114605605 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.094033636 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.329863459 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.109662905 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084780283 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.094504185 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.292056105 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.127983251 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.075663077 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.09149014 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080249939 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.088970126 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.454990629 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105169485 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.09093049 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.088904314 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.163331366 seconds)
    (70/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093344245 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098375014 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.0848356 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097181864 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080442018 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.111819432 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.075361015 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.08948465 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.09156714 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.074336015 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.096319079 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.098895133 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.094367335 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.092403964 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.142410113 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.105696361 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.10955578 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103833985 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.095759236 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.091319157 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120252187 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075001655 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.095632635 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.168625074 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101655102 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.099428269 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099329143 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.137566144 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.090713642 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.198431141 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.075845334 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.120164638 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.094462798 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078666595 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123311299 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.109947825 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076266049 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09691739 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.089405428 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.075522966 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.154485862 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.074529133 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.092494916 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080883974 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108240333 seconds)
  done (took 24.130462339 seconds)
done (took 50.605674134 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.557046322 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.114205297 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.114944766 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.115181049 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.098510803 seconds)
  done (took 1.688650707 seconds)
done (took 2.348882962 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.373778583 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.179752674 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.122889335 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.180009172 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.099653499 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.187364362 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.186017814 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.097756869 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.217233064 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095792811 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.178606624 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095072944 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085310102 seconds)
  done (took 2.790442494 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093646992 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.124854495 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09489412 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10935252 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074208706 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108815507 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106504982 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109362025 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107547525 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085508361 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089622153 seconds)
  done (took 1.764012918 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09049888 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116502561 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082503484 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106343069 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074228709 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106091645 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.089902678 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119349413 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105144902 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086499441 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090633098 seconds)
  done (took 1.727007527 seconds)
done (took 6.936030678 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.168205446 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.618284023 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.148361239 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.196811832 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.376403197 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.242739738 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.608564802 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.162857617 seconds)
  done (took 12.390092113 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.114967701 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.139598448 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097936045 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.096609088 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083080347 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.096797754 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.082399442 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.096765457 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.082583853 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095088504 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.083235828 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.096393907 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.081826652 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.094328843 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.09653488 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.080470288 seconds)
  done (took 2.250276536 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.121406095 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118710313 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.103746287 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107977047 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085478285 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.101202736 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10273734 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088300319 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.099022392 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.085592564 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.105763916 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104415903 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089108378 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.09875176 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.103972366 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.092298185 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.099691269 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.102707396 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.089991714 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.104035557 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.093188125 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.102562398 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.103788395 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.092171615 seconds)
  done (took 3.170738191 seconds)
done (took 18.470737056 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.172460452 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.094032541 seconds)
  done (took 0.935482759 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.143462591 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.146754053 seconds)
  done (took 0.963866407 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109465177 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094010893 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137813124 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.113573829 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080610644 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09417023 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.131090341 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081781995 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.093882017 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079685373 seconds)
  done (took 1.69359869 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084220614 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098888503 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.092954615 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.159017091 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.092967438 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.099613116 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086126462 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099230914 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.086469479 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.095500177 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104695315 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.119505583 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087044004 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.120066413 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.099767622 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.090514708 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.109099339 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.102669428 seconds)
  done (took 2.506337634 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078496046 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.094703168 seconds)
  done (took 0.850605675 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.084984837 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094951579 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085585398 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099237458 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095410627 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.080950583 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096402906 seconds)
  done (took 1.31438729 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.561284497 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.273791235 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.378388597 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.118432169 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.139784668 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.398501499 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.141087284 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.111811987 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.095669678 seconds)
  done (took 2.937728052 seconds)
done (took 11.879305184 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.086327657 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.217980522 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.681709268 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.103254745 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.094936331 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.139099033 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.313442363 seconds)
done (took 2.323256826 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344501922 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.152345752 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087728192 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091973161 seconds)
  done (took 1.354495996 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075132646 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103086146 seconds)
  done (took 0.861429404 seconds)
done (took 2.906092425 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078162958 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.129588837 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.076155079 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.09401562 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.077401546 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.093378892 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077166237 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.093351403 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.076843938 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.091715437 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.077050102 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.092461767 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07685945 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091543219 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077135719 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092422294 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.076973071 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.092256801 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076864517 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092098156 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.077719911 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091030651 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077407967 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.092010129 seconds)
  done (took 2.795320132 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101490499 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097064398 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.099565063 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084116628 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10114189 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084121478 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.098750277 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096511773 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084979686 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.095264024 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087171374 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.100063699 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.09633723 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084638657 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096181073 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.085058365 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.100031773 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095985138 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081263448 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100562413 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.084309879 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095974795 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100577339 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085159746 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.099917688 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10136159 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081761167 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097205549 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085732919 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.10119699 seconds)
  done (took 3.49084188 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087298387 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.089840238 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078701055 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.099151336 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.075441253 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.094053755 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.075018343 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.090879796 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079834446 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093827419 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081347192 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094642152 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.076173917 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096404031 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080200698 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09783173 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.089982983 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.091523692 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.075694767 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.09593939 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.081148028 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091077566 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.078459984 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.093607926 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.078989843 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.091818891 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.07780515 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.093590253 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.079729482 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.093206402 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.080605332 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.097291686 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.078744544 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.102941237 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082320596 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093424942 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083986066 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.090845107 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080588813 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.091946857 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076106645 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094101015 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.075765373 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102298253 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.094776456 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.07999556 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.091209249 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.080669895 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.094785707 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.083554431 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.090548753 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.076382974 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.097939764 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080570822 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.09689644 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.075709694 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094899552 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07552336 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095154658 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077978785 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.091173763 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076002114 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098893842 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079395188 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111890604 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087549687 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.090685848 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081164405 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.094911091 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08346944 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096814115 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.106540817 seconds)
  done (took 7.012635748 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093787141 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106636476 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080330602 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097208367 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079476377 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094352226 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.087486741 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093563436 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095801257 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088527362 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0942096 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079741527 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096736754 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080721178 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095862434 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.081428197 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103787419 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095129297 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079963101 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095603946 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081037978 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.103196898 seconds)
  done (took 2.701269985 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.254908253 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086576929 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.148013914 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.114301613 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.116594012 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096644417 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.09968546 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101023728 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084767653 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106760525 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106215568 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085007797 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119158678 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106647835 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090973612 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108241766 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100970622 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092888227 seconds)
  done (took 2.717580167 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.097414426 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098377325 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.220779764 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097184536 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099186851 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.081740751 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106121251 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113063465 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082589341 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097612868 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092506344 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097548443 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.08226656 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096406811 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097211928 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082209985 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.098039301 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082243177 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107724337 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108453987 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089602717 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107344887 seconds)
  done (took 2.937829258 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099230587 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097276913 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.131815643 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086582747 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097533012 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079571745 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.103947239 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.08264011 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105158891 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.096675789 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082960536 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096503894 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090725201 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097447591 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105513417 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082510033 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097795143 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082746618 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097591596 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080333367 seconds)
  done (took 2.591700875 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.174676345 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097193934 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112410387 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12714853 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098662056 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112677665 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125937831 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.097479825 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112295488 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128842143 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097222638 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112378194 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126531534 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120595308 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09777009 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125355827 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125766006 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125525352 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.097842089 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112118581 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129693039 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.096300399 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.125325885 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114246085 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09745593 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113304676 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113588363 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.105426995 seconds)
  done (took 3.925725989 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078836516 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078718357 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093900414 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.078721562 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095660385 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.078642723 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.093708574 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.079049457 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093818213 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07885558 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.094988226 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.079995736 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.094942068 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.078243306 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095142703 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.0789929 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095182699 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.079322008 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095810342 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079275699 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.095398699 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079692885 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.095491621 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.080134965 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094773817 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.078411602 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094586963 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079392511 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095748093 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078778344 seconds)
  done (took 3.301034884 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090179921 seconds)
    (2/2) benchmarking "in"...
    done (took 0.121984671 seconds)
  done (took 0.917832341 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.088203702 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11560466 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079146519 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.096410131 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090705376 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095674556 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.1068237 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090337542 seconds)
  done (took 1.468267709 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.145222274 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.146206055 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086132006 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.109954242 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.145596164 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.14101989 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.143208824 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086253531 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.098828364 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.074771079 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.141025225 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.093242121 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.084748966 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097904186 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.084399118 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106956762 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096011997 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090202515 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103990442 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082114361 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101732273 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094384421 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103079647 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.107873977 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.078306885 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.104162293 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.090241288 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.109506402 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096805779 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.087436536 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.098636551 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.080751321 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.101181154 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085954096 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.097461964 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.145559875 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111356098 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082487076 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.101721861 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08578549 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108882758 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.080658699 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.104782338 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.098197214 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08858209 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.102790199 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086667812 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.097596949 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.077563452 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.093863983 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.08222495 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.095717459 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.080871227 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103332827 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.102154424 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093973343 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.099281654 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.07839906 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.097048073 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.081758359 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.100856992 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.097290125 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089313913 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.10098082 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081750725 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.101523586 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085197043 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.098198586 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.084848449 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097377349 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.101105647 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101049438 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.103113556 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.08620331 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103469597 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.098510035 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082919961 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103467687 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084544429 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.10437247 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086082481 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105659037 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099526065 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080732385 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.096922951 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.088300242 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099158998 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083681054 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.091668383 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095537726 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098733115 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080908569 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.094613967 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.100658847 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.080622091 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100675491 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078148382 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101984052 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079660143 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.104523873 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086830869 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093960469 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.104406046 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086981895 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104264945 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.084784764 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.139674505 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100096797 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.080173353 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.100879234 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087341186 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.096405044 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.08512367 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.096383002 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079262407 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.096658872 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103234481 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.086502669 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.099319498 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.086026776 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.099868065 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.088654094 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.099792759 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.07953032 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.096144891 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086225953 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106332417 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.104076965 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.082923877 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.099435354 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.081990495 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103206987 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085358044 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102557019 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103460238 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.082777439 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.098818759 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081835441 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.102969124 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.087326969 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.097780698 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084919367 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104313272 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.100986898 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083829531 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.104930052 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.080403866 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.093319785 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.086949911 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.097783978 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.098273314 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091621284 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.097728766 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083998102 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.098255356 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09049929 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.098248661 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.104373775 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083645182 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.103644329 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088684629 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.091978963 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082304457 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100496571 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.089044565 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.097875706 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.083379797 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098430147 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089297108 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.096747966 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101769332 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.077515645 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.095483921 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087447781 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099882253 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084336728 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.098559679 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099273782 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.114017788 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105428571 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.085723763 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.102196461 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.086053301 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101915477 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085254132 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104049243 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.087467721 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.098576158 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.100841563 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087849981 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.095490233 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.087353079 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.1020923 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087294814 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.092729458 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.082413572 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.092304453 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.084865756 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.105483178 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.103069158 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.088047041 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099507781 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084406314 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10777346 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.081838573 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102339682 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.077665061 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.102854767 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.109748966 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.088587306 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104571257 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.087263651 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100739005 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.083150668 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107943613 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084786312 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.101272075 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.099357936 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079184168 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.095735232 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.095936818 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.101622185 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.081406454 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.098439624 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088369592 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105526836 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.09980538 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.078947936 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103865614 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089713771 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.097588131 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087009393 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.097759932 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.08616652 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110761858 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.095469945 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.080728739 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.106243877 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.086793924 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.097403579 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.082084375 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.101645986 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097194339 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.101968856 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083632757 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100391592 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106224193 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.083802489 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.09770118 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.081602051 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100834036 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.077985187 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.100697258 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.08671974 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.09897867 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083200198 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108123023 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106083884 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086913385 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.101684143 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.086555695 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105145352 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.105306336 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08021027 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.104370289 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.080756721 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.095483745 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.082298486 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.094279375 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082803522 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.099250031 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.087881932 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100424649 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085210385 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101514528 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103950523 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.083098324 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104979763 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.115339967 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.079084731 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.095203554 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083446778 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102634531 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.081975557 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.098563042 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.083013158 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104981003 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086245428 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105810432 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.096418168 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.080883798 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.105021351 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.082802274 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.10602804 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08795777 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.105435504 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.080594757 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.102654755 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.083234173 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107725972 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.095451841 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.085547049 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102054021 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085305116 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.0995513 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.100733893 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.080689533 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.095765538 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.081773208 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.105406178 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.079259343 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.102892881 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.083995778 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.100832544 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.079193983 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098338395 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10621453 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.079513803 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105903213 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.082681935 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.095660432 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.079540424 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.104109778 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086024831 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.106241951 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08121783 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.102642124 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090295452 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.10207665 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.081788841 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.108384748 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107109944 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088776907 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10890874 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.077852545 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.101013163 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110140866 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.081195559 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102005125 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083937472 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.097480986 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089897648 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.105409355 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.086500247 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101269599 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.07928645 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099850534 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087998701 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.103338014 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.086009885 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100453165 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103723769 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.080797948 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102873801 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.088090968 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103983347 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089447734 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103028525 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.086369199 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.09926616 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.104635926 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083025867 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.097802714 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.07773768 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.101234897 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.088826961 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.095266813 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.086409982 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.105186617 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.082874248 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.101420994 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087564234 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.099154531 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101499261 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086469073 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.099260617 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092105533 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.099911177 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.082674659 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.103655818 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086464579 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.097570137 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.08321182 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09887902 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08968905 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.100976759 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.103929493 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086551258 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104254216 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083660548 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.10452474 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.086506506 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.105335611 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.079507292 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.106480253 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107939032 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.084022656 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.101746531 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084402652 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.097096705 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.084008722 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.107043986 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.08378016 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109154874 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105958522 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.083981002 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.10160445 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087227727 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102469072 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08962591 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.098504129 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08685895 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.096713474 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.089787167 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101482501 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.106241373 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.082893329 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.098367405 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086227606 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.105313501 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086181494 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.10739255 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.090627655 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.097271491 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.097435685 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.0848647 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.100603265 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09394048 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100523064 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085046647 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102773295 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.08421109 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.100099856 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088618685 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.098978274 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.100807904 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.086503695 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104179478 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.080807133 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.097429021 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086390293 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.103255844 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086924 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.103745536 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080735523 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.10366676 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.106018192 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085353813 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.095921616 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083232774 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107677819 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.085480316 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.100352489 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.080466091 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109984796 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105475437 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091287098 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.098666293 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.088535751 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101718493 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.083892954 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.106937824 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.101434733 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08738859 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.102303869 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088174882 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.109774865 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.079007513 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.097491568 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110697321 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086845823 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106085459 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.083967707 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103897144 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090050394 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109606175 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.084531987 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.097242344 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080217055 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.098051387 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.080336767 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.102201765 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110738518 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.084992306 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.101676945 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086416787 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105009787 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.084735822 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.102999183 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.081233766 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108270393 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.083075355 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.10905062 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.096958181 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.077860279 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.103002102 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087979702 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.099686749 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.082416275 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.102250492 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.084716882 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.098649373 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.084110127 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108960725 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086673317 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.105586461 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10364298 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.084675548 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102636112 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094180302 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.101835305 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.08441836 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113503658 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105914547 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087650377 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.103747479 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091075524 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.107752285 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.084709786 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10775403 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.083779165 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.098514566 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.108459368 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.090317273 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114717145 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084869076 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.09624413 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.087535167 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.098378448 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08122459 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.107898244 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108023599 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.090785649 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.103784845 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084630769 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109669028 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084261714 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104984219 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.101516638 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.084289078 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104855298 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084180618 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.103406952 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.083938322 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.108248951 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.090355784 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107392111 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.091632335 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.097206605 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110929239 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.090035075 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.109524623 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083600351 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.099425592 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.081733938 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.103421658 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.08985393 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.107263993 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.085843834 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.104142052 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087951618 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.10533981 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.104331223 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.083652385 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.107859369 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.087504654 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.101702555 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.089692423 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.098573621 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082515665 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.101475969 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.089976619 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.109170742 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088383474 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112861368 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.10668402 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085467411 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.10124832 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087188348 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.103652899 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.088005458 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104434289 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.083156037 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.098114704 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105929529 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.090912147 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104597797 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090002764 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110197109 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086272069 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.107695471 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110293872 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.087458391 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.101933143 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.088200379 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103164872 seconds)
  done (took 57.516580282 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.158873564 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091927053 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103108211 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08502823 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130994362 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104777853 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08512689 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103316347 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087000283 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.115472982 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103220395 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084523157 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.125523349 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133222869 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130011168 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.117420227 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085443965 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10392603 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084782522 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10434295 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.125743912 seconds)
  done (took 3.017723492 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107781008 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120822715 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.119683149 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123675204 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094637744 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.118752213 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.120936598 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11906686 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10548623 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113813604 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.124477176 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118974355 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.097661673 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.115057327 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114786406 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115444933 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.104923899 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.1131838 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.119620176 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.119485981 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09744302 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.120637768 seconds)
  done (took 3.258468029 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.09267323 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.106352278 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089479158 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.103212555 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.088653261 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.101948244 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.093678988 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.101896171 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.09294252 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.102511211 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.08199765 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.10141068 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085199233 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.102320677 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.082035451 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.102772797 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.111232683 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.088044319 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107498023 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.083795025 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.118493085 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.085046919 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.102576277 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.082315758 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.116914879 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.107519413 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.084329857 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10549367 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.080118673 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.106320568 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.084711242 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104484238 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089302007 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.100305092 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.080628652 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.106516167 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.088000396 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.103165522 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.085583117 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.099606312 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.085405425 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.10709822 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.108929197 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.084655977 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.102280515 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.08310359 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.107350704 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.085089688 seconds)
  done (took 5.371890215 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.122431107 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16071202 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089021876 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.150061477 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.124146313 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.117623295 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088856894 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.129227087 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.108583304 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.108250158 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.108221315 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.127360078 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10832657 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.1136496 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.09396898 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109710302 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.093910084 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.109394333 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.115311594 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.091034506 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.11564093 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.111318398 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.124076655 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.1069318 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111503912 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108569315 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.091748292 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.11235371 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.123952187 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.098765638 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.113187297 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.115010256 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.123582996 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.093844001 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10826496 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.091718773 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.126379021 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.109678059 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.109107311 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.088588081 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.109763911 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09677267 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111437708 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.127326168 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.092608675 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.113892243 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.110471098 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.087697675 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.12463627 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.109457934 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.099350905 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.126624824 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111451539 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.111062235 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.095647256 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.125532176 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.109876951 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.090466552 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.113371604 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.123197483 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.087575335 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111630557 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.125796027 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.091646861 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.117369793 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.125444332 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111763413 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09383919 seconds)
  done (took 8.438804948 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121703002 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.114508534 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12891375 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.127794233 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098199316 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.114156767 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113937622 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.095489231 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115580121 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121376689 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095725161 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.220965913 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.091207653 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120859694 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11443684 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095723945 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114027054 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113854328 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09637645 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1130988 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113719066 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.108937114 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.113910263 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126478178 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130910376 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.091118583 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.11443736 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114579598 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108705698 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.114553158 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12997456 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.11466791 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095764798 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.127899 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.129498786 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.114886744 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08880891 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114973674 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.114470188 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.097069142 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10965654 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126578472 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.096119537 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110099392 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09584423 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.09729641 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.125925471 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.129461322 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121126243 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.104504479 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114071292 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.127693745 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115239163 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095841018 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.128067708 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.137897579 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127342512 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126506474 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096857553 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.127588721 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.127133434 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.137872742 seconds)
  done (took 7.958886106 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085251863 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084713121 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.1052768 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.085938252 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.104456242 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087454813 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10441248 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.086021036 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10320429 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.085834723 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10385209 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085063132 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104047383 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085511309 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.103662362 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085575656 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103368862 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085252933 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.1033988 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086021773 seconds)
  done (took 2.647236893 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.097031822 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127499974 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089566084 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116583682 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10765888 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.098258233 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107895208 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088595932 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107805305 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108394128 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101262236 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.119626342 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107063893 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097661032 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.119772241 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.116592464 seconds)
  done (took 2.484544448 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.112281682 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.12878207 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.167470836 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.111159696 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.090006993 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.117882026 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.088605315 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.110167338 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.106850684 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.096610308 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.113389759 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.092879364 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.108257425 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.090592802 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.107698284 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.111900137 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.088464945 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.110922622 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.08981841 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.166581078 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.114328544 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.09226257 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.111113021 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.111699518 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.092289132 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.114019331 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.116318734 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.090953695 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.110034639 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.089893249 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.112543211 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.098582031 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.108773683 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.112964866 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.089886962 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.108881417 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.089492854 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.108266573 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.092871527 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.107952845 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.091425242 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.111482658 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.107249257 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.09301881 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.106441083 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.090690653 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.106921856 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.096818999 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.110935312 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.113037777 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.089270708 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.115214051 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.094898679 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.119029136 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.116738856 seconds)
  done (took 6.619424248 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102905405 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110358606 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.103647939 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104889452 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089947821 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.110388433 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108626217 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092394818 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110410701 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086555667 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110924981 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091812692 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111846029 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109247981 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092648946 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109914576 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086233301 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110472244 seconds)
  done (took 2.618101346 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095271778 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107430055 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097021265 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108410601 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089109399 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108855433 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087590903 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105963512 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088951602 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.108801598 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089993894 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.108229318 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106310375 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089008401 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108055201 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089610042 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107665674 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088066564 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.107931462 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087287097 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108718787 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08713927 seconds)
  done (took 2.952225781 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.102838434 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.167564878 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.119554785 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.177273111 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.109192106 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.08844886 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.118057444 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.106917101 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.108776848 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.105810932 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.086465871 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.107390965 seconds)
  done (took 2.179088312 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118559689 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148974267 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109860502 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089729158 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122484328 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116429346 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096716387 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114885326 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125836829 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112514632 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115559118 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126097768 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12495944 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129186888 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102319034 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12066575 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115061744 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0958615 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110031986 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137913746 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097144813 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125871601 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113665866 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115800198 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096756562 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127716162 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127315925 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131370019 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098446335 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126001209 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121163156 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115268306 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108223146 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131865331 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109125399 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127591004 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097631586 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138091476 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121102678 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128600931 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089509732 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121652931 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12660109 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122469198 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107291976 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115058699 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122556736 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09688997 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116127108 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145088725 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12107015 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129446115 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102775012 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12678639 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125152732 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146361996 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131730232 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12816567 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120413452 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132100336 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108884716 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120975502 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129038436 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131681147 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12119932 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109781146 seconds)
  done (took 8.624261632 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137766596 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110512261 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11550002 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132083241 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109752362 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116108265 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116494938 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097050821 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116004133 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110978033 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165266748 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097140734 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130387381 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127312466 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116778057 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097369572 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117688697 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128257635 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09289769 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145949863 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116215149 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129049915 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128791604 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128318426 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113717027 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121914601 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115901702 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097596257 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115835427 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114871505 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105864352 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115695973 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127743679 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111760988 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109689079 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115522853 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116269637 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105085933 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115971605 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122151069 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129519254 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137356056 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098246956 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116674257 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132514911 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097867324 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116391481 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1115036 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0978419 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111698797 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13308899 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132089554 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132713667 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109247766 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116405719 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115978128 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097849183 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11543743 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117291585 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102920344 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128607805 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115796072 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146837381 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117342527 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097380843 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128071893 seconds)
  done (took 8.554993114 seconds)
done (took 156.788191285 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.149830725 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.170133882 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.147627587 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.148026617 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.103407957 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119206311 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.136780526 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.148445195 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.083042627 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.10309189 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.083417622 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.107656052 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.149587506 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.103086295 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.084961389 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.10768342 seconds)
  done (took 2.726652005 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.206298761 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.318621908 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.124194725 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.11427965 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.093018872 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.107068479 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.093792915 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.114629901 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.108086485 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.099576987 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.1061393 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.088230836 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.117826573 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.106608901 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.089378028 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.106807694 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.118961398 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086894174 seconds)
  done (took 2.988679059 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112336197 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146494338 seconds)
  done (took 1.05306911 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.12483632 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.19152876 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.32678345 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.158647867 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.135297598 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.131314527 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.140126731 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.124493303 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.203187591 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.129144539 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.129138887 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.110363853 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.119404572 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.118837167 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.121699708 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.091595046 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140686478 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.120757484 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.100530329 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.114165731 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.136845451 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.093752402 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117442283 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.121367187 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.192811486 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.128626797 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.094035066 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.111867742 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.094311046 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.119789221 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.111957248 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.109309084 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.128192236 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.199130527 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.098047076 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.193411384 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.120166723 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.09133101 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.119055365 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091245134 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.115496179 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.1158536 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.127127504 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.09135456 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.112099519 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.101194509 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.112246552 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.11277974 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.094946266 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.122465542 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.11485842 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.094056784 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.190859038 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.121183472 seconds)
  done (took 7.721649433 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.915243928 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.153629295 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090522314 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.059403994 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118329017 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126283037 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.920113472 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114332533 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.276639156 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.916655072 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126920854 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.10365183 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.275110458 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.270633754 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.194614152 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.387436072 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.753695723 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124263079 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.120938757 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.179956789 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099846095 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138408996 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.134336731 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.440954193 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.11116558 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090493396 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119257601 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121890319 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177531787 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.10940304 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095520956 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.218831942 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.282076308 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.225496132 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111506897 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.087967814 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108692113 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.185500768 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.313767611 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.242562683 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179729505 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086111321 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.108440941 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.098329027 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13268807 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.104524073 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181023556 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.210781294 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.191626308 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116241519 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12314113 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102876536 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.118461295 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.178441218 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.106503991 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.367619229 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.372162893 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108075649 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120428229 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105053768 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.290515459 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109989062 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.25604114 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138384975 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.238829115 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.108531218 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.810115083 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.18543011 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.107918064 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096786527 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11952297 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117328344 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.098584439 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177420715 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.411566954 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121967559 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115763293 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088834694 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.24707828 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.108384625 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.08903727 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.200378013 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093727008 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120713433 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123777192 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.101516424 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.206995066 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.267221394 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122461442 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120968917 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097002796 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124914367 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.113065504 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.22916281 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.24616588 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.194599817 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.231728676 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120083949 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.181892566 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.202445891 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097555985 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.208855138 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119217867 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10543936 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117676864 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.24403113 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.151464741 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.111152813 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096033528 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121628766 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.153355935 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.113130472 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.101827087 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.207064883 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.500592811 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.184726264 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.105642673 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093700386 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120876629 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179799456 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119468396 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.288013186 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122165316 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.186157276 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120334894 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086086932 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119190684 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.183030139 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120127386 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125463192 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117339304 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100674033 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.287216422 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.246142975 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10304192 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.261032998 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183552749 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117083967 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.189872441 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12185881 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.207505453 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10261691 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118579542 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112280621 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.806143071 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.106681949 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120169771 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115671806 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.199544495 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08959464 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110536069 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.088710879 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107197408 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.829051684 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.092073505 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.106617724 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.09068397 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117408185 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120160623 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099635307 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116986829 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.198529677 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.26285938 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122764508 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098887173 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.108406423 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.179046061 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.114209629 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.091517477 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.109283667 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.090689362 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121710433 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115636494 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.092193361 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.210769997 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.176680728 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.246693904 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.561838975 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.109191655 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.089473493 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.260782533 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110334386 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.337333227 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122127324 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.256120255 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.206035186 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.087081636 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.368998673 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.206803644 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.199962063 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.092764234 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.210758737 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087708355 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120667544 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.198966203 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089699853 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118970007 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.175340664 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124825912 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123094893 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.228396279 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089861994 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.266228142 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086366016 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.20685162 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.093650744 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118196421 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.339629306 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110103618 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128597153 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.181357699 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116682641 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.090794235 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.863126466 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.090363756 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12372799 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117068292 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.253107275 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.204784587 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101518788 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.1214874 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124090762 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.179169369 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.247361071 seconds)
  done (took 46.974343518 seconds)
done (took 62.251213698 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.318352352 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.278528678 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.332486495 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.229572089 seconds)
  done (took 2.055392529 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.224378206 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.158482175 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.189092596 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108658532 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.197355032 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.108593293 seconds)
  done (took 1.803343576 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.526398429 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.41016507 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.370305368 seconds)
  done (took 2.124871043 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.278319252 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.270228245 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.363776092 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.489219376 seconds)
  done (took 2.354960577 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.252965015 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13145028 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126870304 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.180817179 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.219836402 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.21837984 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.150368901 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.165232952 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.113934587 seconds)
  done (took 2.429194931 seconds)
done (took 11.587758318 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.411866532 seconds)
    (2/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.217284462 seconds)
    (3/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.122323275 seconds)
    (4/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097972622 seconds)
    (5/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.119518111 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.169794404 seconds)
    (7/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.366870316 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.24149254 seconds)
    (9/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.125926061 seconds)
    (10/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.365268893 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.101673666 seconds)
    (12/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.235756509 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.151360028 seconds)
    (14/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.331280086 seconds)
    (15/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.245018794 seconds)
    (16/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.101286888 seconds)
    (17/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.303448783 seconds)
    (18/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.202024655 seconds)
    (19/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.217638593 seconds)
    (20/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.263391534 seconds)
    (21/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.263540596 seconds)
    (22/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.202253087 seconds)
    (23/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.366198956 seconds)
    (24/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.16888971 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.106119144 seconds)
    (26/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.234567997 seconds)
    (27/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.127168626 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.148873012 seconds)
    (29/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.23430502 seconds)
    (30/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.292427537 seconds)
    (31/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.088071366 seconds)
    (32/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.102729337 seconds)
    (33/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.124138239 seconds)
    (34/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.097603576 seconds)
    (35/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.1627769 seconds)
    (36/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.120114163 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.114492809 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.154239795 seconds)
    (39/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.214420146 seconds)
    (40/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.213830121 seconds)
    (41/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.097076867 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.119228271 seconds)
    (43/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.184016392 seconds)
    (44/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.200331714 seconds)
    (45/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.102129336 seconds)
    (46/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.230415133 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.096701273 seconds)
    (48/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.256032091 seconds)
    (49/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.105693251 seconds)
    (50/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.102337779 seconds)
    (51/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.164124008 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.117418237 seconds)
    (53/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.200554948 seconds)
    (54/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.195618477 seconds)
    (55/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.23476941 seconds)
    (56/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.23888763 seconds)
    (57/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.173112825 seconds)
    (58/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.1189498 seconds)
    (59/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.080277045 seconds)
    (60/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.10177488 seconds)
    (61/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.096409022 seconds)
    (62/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.222443193 seconds)
    (63/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.197393964 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.150291876 seconds)
    (65/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.079640684 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.149225023 seconds)
    (67/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.081362559 seconds)
    (68/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.199243337 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.133699079 seconds)
    (70/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.152317724 seconds)
    (71/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.099321487 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.118267307 seconds)
    (73/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.086032792 seconds)
    (74/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.254535561 seconds)
    (75/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.15143392 seconds)
    (76/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.235620875 seconds)
    (77/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.199528027 seconds)
    (78/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.082272803 seconds)
    (79/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.214764912 seconds)
    (80/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.101621939 seconds)
    (81/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.096426775 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.117948928 seconds)
    (83/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.088507477 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.134569958 seconds)
    (85/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.079243754 seconds)
    (86/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.172906245 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.096998515 seconds)
    (88/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.135503417 seconds)
    (89/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.17980106 seconds)
    (90/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.1599068 seconds)
    (91/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.113428344 seconds)
    (92/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.16885789 seconds)
    (93/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.088631545 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.110504583 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097749401 seconds)
    (96/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.110500101 seconds)
    (97/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.081219682 seconds)
    (98/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.118038749 seconds)
    (99/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.081724476 seconds)
    (100/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.200257283 seconds)
    (101/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.097513629 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.118318097 seconds)
    (103/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.117270537 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.104632031 seconds)
    (105/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.216381701 seconds)
    (106/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.118668648 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.097413219 seconds)
    (108/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.200504033 seconds)
    (109/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.110448312 seconds)
    (110/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.081070887 seconds)
    (111/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.216729854 seconds)
    (112/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.201479632 seconds)
    (113/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.09767722 seconds)
    (114/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.102845144 seconds)
    (115/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.079645838 seconds)
    (116/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.080854032 seconds)
    (117/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.103328354 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.098528815 seconds)
    (119/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.101973058 seconds)
    (120/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.080861347 seconds)
    (121/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.197804357 seconds)
    (122/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.088607348 seconds)
    (123/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.103030642 seconds)
    (124/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.130674021 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.095590986 seconds)
    (126/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.102513956 seconds)
    (127/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.07907157 seconds)
    (128/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.080520438 seconds)
    (129/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.101134064 seconds)
    (130/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.081717672 seconds)
    (131/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.080649982 seconds)
    (132/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.101494647 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.135601611 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.113225493 seconds)
    (135/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.198548618 seconds)
    (136/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.080147171 seconds)
    (137/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.123040843 seconds)
    (138/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.111445484 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.09679608 seconds)
    (140/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.120579235 seconds)
    (141/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.080722086 seconds)
    (142/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.081467373 seconds)
    (143/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.11920808 seconds)
    (144/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119075377 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.097794396 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.118820726 seconds)
    (147/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.080657436 seconds)
    (148/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.119076943 seconds)
    (149/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.0881732 seconds)
    (150/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.081203878 seconds)
    (151/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.107197265 seconds)
    (152/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.097521321 seconds)
    (153/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.101342673 seconds)
    (154/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.081675771 seconds)
    (155/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.183304531 seconds)
    (156/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.081538332 seconds)
    (157/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.105439664 seconds)
    (158/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.080322386 seconds)
    (159/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.092635815 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.111163834 seconds)
    (161/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.119086348 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096738538 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.136214157 seconds)
    (164/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.158730713 seconds)
    (165/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.116556265 seconds)
    (166/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.081855868 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.118324981 seconds)
    (168/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.082084897 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.346412994 seconds)
    (170/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.079840346 seconds)
    (171/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.101347259 seconds)
    (172/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.087242947 seconds)
    (173/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.111421127 seconds)
    (174/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.114335094 seconds)
    (175/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.100727122 seconds)
    (176/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.097670129 seconds)
    (177/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.102670485 seconds)
    (178/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.097192941 seconds)
    (179/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.10290181 seconds)
    (180/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.086900105 seconds)
    (181/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.080978619 seconds)
    (182/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.103189934 seconds)
    (183/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.0989859 seconds)
    (184/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.119485932 seconds)
    (185/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.081160209 seconds)
    (186/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.102220788 seconds)
    (187/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.081427393 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.119827457 seconds)
    (189/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.092812458 seconds)
    (190/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.102454818 seconds)
    (191/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.087874422 seconds)
    (192/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.101564611 seconds)
  done (took 27.754390321 seconds)
done (took 28.585771689 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.228314893 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.105288861 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.121177541 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122300282 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.179664546 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102819856 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.132651726 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.125674159 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.106461976 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.118591296 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.090388096 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.128738331 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.121407837 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.179769734 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.104150739 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.115414756 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.092019401 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.128883584 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.13132236 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.111736525 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.178900788 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115060948 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.105618231 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.113571282 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.182382905 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092419976 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.121624869 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122174927 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.10711173 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.119111653 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.100720554 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.11336384 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.132699948 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.109013348 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11203864 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09739758 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112205213 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.088217164 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.121268677 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.099331809 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.128291064 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.119615568 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.101555026 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.116095253 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.099421571 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.119194966 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090683776 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.127023299 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.111212102 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100789938 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114742517 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.110668101 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.117657241 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.089667283 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111586434 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.115033973 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.105217827 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112686417 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.10828987 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111586855 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.093049931 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112132719 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.100234549 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11307781 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.118202652 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.092241387 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.119332782 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.101077633 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.118717026 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093069415 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.111813809 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.096011232 seconds)
done (took 9.237741941 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.096442012 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.175540501 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.178807791 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.187395101 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.146199813 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.134176417 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.134633419 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.121481256 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.13073371 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.138664531 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.130827569 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.143861732 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.191303875 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.127438712 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.132661906 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.099824109 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.128450639 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.122156006 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.189054587 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.118333373 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.147782358 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.128124678 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.151730767 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.112645826 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120108386 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.144628281 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.10093153 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.120659626 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.121090091 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.116160683 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.141161265 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.120371283 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.099865839 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135261388 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.110137453 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.126942029 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.131646955 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.099226361 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.118048431 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.118735007 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.111750841 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.130754688 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.096757732 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.132223834 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.122013938 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.109831206 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.127100773 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.127759909 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.101101589 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.12267942 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.101294191 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.148837283 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.128162895 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.132611205 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.105620468 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.126511226 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105010116 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.126223733 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.122822766 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.105566308 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.119294062 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.099144939 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.123219828 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.147289176 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.101236211 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.127655612 seconds)
  done (took 9.258501003 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.120328351 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.157789612 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.130833971 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108539825 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.127731601 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.110169981 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.088993881 seconds)
  done (took 1.718728434 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089451881 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184314418 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.182886696 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.182750695 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.1808324 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.214855158 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.112970454 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.114087696 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.148918968 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.102382712 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.181833087 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.236771846 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.09635664 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.131634349 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.186905853 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.09031157 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.20934489 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.090885564 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.125840666 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.184268954 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.128635062 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.120365048 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.128106143 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.091499218 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.176785507 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114014134 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.241524147 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129792834 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.119100702 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.10093992 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.12646669 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.198615768 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.178105577 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.130435248 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093886639 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.180212474 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.177640144 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.124823321 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.192269898 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.117366817 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.177334682 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.102217859 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.127136026 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.126836435 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.101847154 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.164107128 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.131152923 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.104098987 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.123559904 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.186519785 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.12618434 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.18038795 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.099603384 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.124440146 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.103003416 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.126644558 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132631513 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.103320249 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.185283301 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.128408708 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.180211107 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.179992739 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.178822461 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.179476459 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13843271 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.181505928 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.178079417 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.100593648 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.123531869 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.127763876 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.180322129 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.10195368 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.127903632 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.167404315 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129600806 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.180089307 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.18054123 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100635584 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.127703935 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.096011566 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.122819658 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113798438 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.152963723 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124812092 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122399174 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110899433 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.128000026 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.127392753 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.095677451 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.1406231 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.124910887 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.104749337 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.131211056 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.103650663 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131441058 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.184068187 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.127385293 seconds)
  done (took 14.561350718 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.093181964 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115186409 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.098669501 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.117118073 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.095865373 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116106516 seconds)
  done (took 1.524502969 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.122136942 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.127911355 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.136808109 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.104816945 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.184712207 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.185231785 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.189116434 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123729153 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.143871928 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.114037196 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.187424499 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.211773277 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.18691624 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.106891708 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.190384664 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.129733306 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.188014409 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126260148 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.113936873 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123696847 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13376368 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.108059392 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12309124 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.178868434 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.12931555 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.106179719 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127891495 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.137874504 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.11249171 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124385114 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.107620714 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.128671092 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.119857413 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.101162568 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.189450643 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.121072588 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123074204 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.111615503 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129838555 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.128928445 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.191428984 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100878139 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.134798975 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.132110809 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.101621591 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120249143 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.131858771 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103269326 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.187420123 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.132555151 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.133504946 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.105498102 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.130058114 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.132940135 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.114393593 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123627958 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.131121125 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.188383443 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.108116587 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.120541306 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.127967008 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.106799874 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123413826 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.110379722 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.129321783 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.132435087 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.098509694 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.128795575 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124818888 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.10515173 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.133054109 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.106043438 seconds)
  done (took 10.481922869 seconds)
done (took 38.416010812 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.145561759 seconds)
  done (took 2.034957363 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.911200642 seconds)
  done (took 1.80209126 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.841816662 seconds)
  done (took 16.766813699 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.560690667 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.628162141 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.988182147 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.167215349 seconds)
  done (took 3.234269396 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.971510902 seconds)
  done (took 1.882771103 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.351868645 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.279431658 seconds)
  done (took 1.526004577 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.69448592 seconds)
  done (took 1.59764535 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.222940155 seconds)
  done (took 3.119607358 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.375521668 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.195865002 seconds)
  done (took 1.481867147 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.68408454 seconds)
  done (took 1.589077646 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 28.596491605 seconds)
  done (took 29.502585651 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.247575033 seconds)
  done (took 1.16524401 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.312099294 seconds)
  done (took 1.220296547 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.356606246 seconds)
  done (took 4.266795131 seconds)
done (took 72.092494368 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103436038 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.130331106 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108313584 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.128379932 seconds)
  done (took 1.374720516 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.111472031 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.127216442 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107828916 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.125836356 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.1359396 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.103646394 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.127501498 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.112602968 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.125936473 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.129148078 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.104789125 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.126993656 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.130264609 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.103044332 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.125612812 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.106162537 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.13192271 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.127456657 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.104732741 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.128380694 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.104954202 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.127910129 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.130765475 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.107670412 seconds)
  done (took 3.781319751 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102546834 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120934973 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098843615 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.11996374 seconds)
  done (took 1.36059596 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.11222428 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.144096369 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.143266438 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.111068028 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143618289 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.142958475 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.101054254 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.122239613 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.102645472 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.135263972 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.150776691 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.124302619 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.141867449 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.128437823 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.113936745 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.120312705 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.108128535 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.143716672 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.134261374 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.112341128 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.126719861 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.11222461 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.122899394 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140156897 seconds)
  done (took 3.954728582 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.211736869 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.115795314 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.150897534 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.180397761 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.159872625 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.101938363 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.152781285 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132129869 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.112147721 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.136526102 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.129624177 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.190505266 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.106439383 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.127499243 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.104637106 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.132373893 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.140438054 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.132421862 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.173892392 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.109257461 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.12992291 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.13938593 seconds)
  done (took 3.987810866 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.102483734 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119650565 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091657021 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.119138007 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.104535666 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122979897 seconds)
  done (took 1.582173978 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.098575149 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.1131504 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095152398 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.11502631 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094887216 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.112740442 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088789288 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114400117 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090053002 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.112329015 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.091288219 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.111742788 seconds)
  done (took 2.160499838 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.307020621 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.095174606 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.12315705 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.115963418 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.104980408 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.117347084 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.136923195 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.094751367 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.261146696 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090706973 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.138567179 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.199893521 seconds)
  done (took 2.708226786 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224929216 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105628911 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322224343 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.388624104 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167606109 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177542221 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.284244762 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175989619 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.203635136 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147994929 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236070401 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14246093 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164047473 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191840028 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151461842 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.221667308 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189195444 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238359721 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135524733 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24523805 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174911057 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179110046 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192492522 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163353067 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144970887 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169490826 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.106836765 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136708483 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185982567 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181940148 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187041579 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159686795 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150497287 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216985115 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247418078 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193081603 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.309021578 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140512636 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.203795531 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.194249601 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285894314 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149894875 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212743164 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164420049 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139056623 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193522322 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16826466 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.195787541 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.140695461 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125598423 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22490333 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187595337 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.197233447 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146455581 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30605548 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15420654 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.156180699 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188794186 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200932075 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205803356 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178221472 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.129032539 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195568407 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216343804 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190938991 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.132498266 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.206598515 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109323258 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18564787 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.233739056 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194823424 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175387374 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.200955764 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141200518 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175544791 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182497051 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163761291 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189769214 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171511402 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.103747956 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159523093 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146485229 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137058625 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.200524003 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104630698 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244982601 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118985486 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.394206093 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243996676 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168859011 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172910238 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175778907 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178485524 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156066846 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.104541283 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15649451 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.174563943 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168141823 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13956034 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142643348 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149935942 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.137186264 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161464228 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.104281432 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16788335 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.15999902 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17780117 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175011375 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.138386793 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174724896 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158268329 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.14304651 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208496665 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1994006 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115212378 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140181157 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208048814 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168178168 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.144803467 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190056934 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.2070528 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.177635381 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145793709 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178571637 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207442246 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153032022 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20101013 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154625806 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141540239 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.166101771 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168069275 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143792895 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160917806 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13623943 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.166101781 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210045308 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.134939031 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120185148 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209240972 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110841021 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13575153 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149577433 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120563926 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.151576197 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.157277124 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.145998406 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166680132 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167832275 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138452184 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171156198 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151516024 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234186246 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116959341 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.170666859 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157608116 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.12779562 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.196972459 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199986703 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136574501 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212210189 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.181940986 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209328928 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173530564 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136873597 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189676877 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137369131 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.104085273 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177317401 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173239314 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176229026 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197833314 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227955677 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.180254957 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.165627412 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157913515 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182415778 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.188591336 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170653509 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.156131684 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173393904 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184285998 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.10328239 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.132166055 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.137483668 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124313533 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137866088 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139974652 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196024159 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176210326 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220659617 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149054659 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147428494 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197356438 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.136562154 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176606841 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.185985683 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147969667 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.200770435 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195620921 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178446228 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152634296 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179421828 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.12926108 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106726001 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.14425109 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181724142 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141148651 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117941786 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152677682 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196367591 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18883859 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1586462 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241761721 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182350452 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206220487 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.131057258 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.174983416 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183753166 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167850757 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.166996855 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13726574 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.173118408 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191778185 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155740208 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206327747 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173891047 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180966952 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242199198 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.142095995 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138530161 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160953716 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178296192 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149887493 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177210508 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156091975 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118179576 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165203984 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.147361548 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134890387 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198009348 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151960656 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196480882 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.169725259 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188461435 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133750066 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153619732 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170100316 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127674005 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.127180437 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184173908 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204540113 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15713165 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17037358 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188717732 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141098198 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.332858805 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208319521 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223989655 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120749364 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151423589 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174276422 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171822426 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176221223 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192346214 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15412354 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193495413 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168482854 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.153255236 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119875941 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157131415 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160098729 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.166689999 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.144307561 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.165024387 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.125984057 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226315433 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125224355 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170148096 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175057025 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.157189484 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.166430726 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149427561 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217611142 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16908548 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193034777 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.164664988 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.181516539 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21495557 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131397985 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108782187 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.136159932 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192119517 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139628214 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144309553 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.215659263 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208495853 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169125094 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178299794 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14693636 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.133602779 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143840724 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158631006 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235470214 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149865841 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.121215404 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233911852 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.136348852 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137725056 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17554413 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289887255 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152315611 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187926893 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.129017693 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.277336648 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109999967 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140093627 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171958248 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183112312 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.159087788 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.167682909 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17272279 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151704027 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172891354 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147050156 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199936189 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245661847 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181586001 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190590284 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.15295266 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16979567 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175518499 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192282625 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152723567 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.129481392 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172755383 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195146925 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.226363579 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.116833037 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173186174 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172718821 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168696031 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191807767 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140852444 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214641116 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139019271 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175001448 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149112085 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108089232 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168124938 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.216808949 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116130678 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213981797 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140777399 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137915813 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136503178 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163218641 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169405091 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127811567 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.137897067 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19484954 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.134326615 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175374094 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193326 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111748793 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165838479 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155000033 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141350038 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12872427 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153303693 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145613771 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.174125388 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200234737 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.116298761 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215182129 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182360942 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179998368 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172811186 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154152009 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.646888542 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.139492939 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195028412 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156290929 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202677186 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159568653 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179049992 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172090279 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15974308 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177501548 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134569428 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.235628964 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175080356 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.174037447 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139939916 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15429704 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150600077 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.116395249 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162667466 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175147738 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150616678 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.122403651 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.170564318 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153236528 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.156182063 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147022393 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199634624 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157462632 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19987786 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194217203 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148456522 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1774657 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19239988 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135970102 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.176958437 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185137304 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124381048 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163687142 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.14247539 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.145851309 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192050895 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.105265111 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171826759 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170827288 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173099558 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173714104 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146207189 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169767939 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125144095 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170484944 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135497889 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.168455655 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168728745 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115280057 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.136087828 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166759891 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172696399 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.168407734 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109549584 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.176872603 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193352332 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.131424647 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11754715 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.308369176 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171141149 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205410041 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.166047901 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117938257 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152265242 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168281028 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.165239133 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169805823 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.11305799 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140289083 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.142118556 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.188500266 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.143852498 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166953477 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192224768 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172446298 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240716015 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.128200479 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280424946 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146618265 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165212021 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115236996 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.140444042 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149360111 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143117678 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129736063 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.227392592 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191565557 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.16158187 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.129866012 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137803254 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.130711955 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114572016 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175421286 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166730307 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168876901 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155317684 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.101710405 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153952588 seconds)
  done (took 82.867114428 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.146472858 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.139692535 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.150474168 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.198463781 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170059685 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.259128406 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208317272 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.230783207 seconds)
  done (took 2.513431575 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.106533139 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.13973515 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.145782639 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.128339682 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.129358924 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.404602588 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.142076715 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.127163112 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.19176623 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.140304042 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.123224846 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.60537516 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.126161149 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.101342533 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.11854283 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.125231231 seconds)
  done (took 3.856049858 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.205267476 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.516113294 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.589906523 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.248408708 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.235390273 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.184241674 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.698709483 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.175200167 seconds)
  done (took 11.859073594 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.135189445 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.146507916 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.35034375 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.219901793 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.16566133 seconds)
  done (took 2.030692301 seconds)
done (took 124.943145831 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.106243294 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.148994577 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.107952083 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.149288379 seconds)
  done (took 1.512730241 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.155104496 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.11536919 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092691484 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.113429652 seconds)
  done (took 1.487472507 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.527335273 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.08795223 seconds)
  done (took 1.655900999 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.135295534 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.149984685 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.14945248 seconds)
  done (took 1.454842492 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.114595956 seconds)
  done (took 1.124184345 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.111229887 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128163774 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.192879729 seconds)
  done (took 1.446284037 seconds)
done (took 9.694148734 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.107048454 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.428477003 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.419153144 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114821646 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.734054556 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.382905342 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.032629565 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.160505728 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.211313997 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.119741563 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117626556 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.699975918 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.020721554 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.345634169 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.00229819 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.345916239 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.700804423 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095906747 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.128146336 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122467988 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.983702531 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.12035382 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096804454 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119789718 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.675414532 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.440692651 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095447166 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.385140511 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121228644 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103506479 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.406974235 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095472263 seconds)
  done (took 16.93960525 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103132186 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.190031525 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.133129725 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.097151073 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.129882115 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096840877 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.132012801 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.13539402 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203123071 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095352929 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14246601 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094942171 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127622713 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096558099 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.145647035 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120759736 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096447929 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120734148 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.102869176 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123341356 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116829952 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120536099 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09887404 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120085399 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095472229 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.152193887 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121260146 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.110348626 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120242239 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.105128961 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.123356285 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095665061 seconds)
  done (took 4.887312301 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146674715 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.199355708 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134568892 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131996304 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.181921214 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12314875 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.214075611 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.162580636 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202556238 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121673102 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119110245 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120759393 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.139910754 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122215033 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14666272 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095580596 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.122723718 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096161118 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.129557207 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099054023 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.142044036 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119751381 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097926531 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121144991 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09665196 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.153622223 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095925557 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.135597838 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122073576 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104181131 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.123882238 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096715621 seconds)
  done (took 5.242068196 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.10765275 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.136639158 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.122360058 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.147695211 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.102800931 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.134374273 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.134357658 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.103417385 seconds)
  done (took 2.012819245 seconds)
done (took 30.094591365 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.122399183 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.141909362 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.115504536 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.137993632 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.198346441 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.098997415 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.13921989 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.100530923 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.136223121 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.118256551 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.121389959 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.102207036 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.143196997 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.10521922 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.182838466 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.137072298 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.190739536 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.183587007 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.102165778 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.136135537 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.101795873 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.214452317 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.108672116 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.127975968 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.195105306 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.09995607 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.17723087 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.105334638 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.131590289 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.130346541 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.183947663 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.105920455 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.128248937 seconds)
  done (took 5.537835658 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.202414001 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.208721039 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.101196542 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.128343197 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.200811956 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.101554602 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.201646038 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.129135111 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.099962032 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.127369535 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.100382833 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.203863581 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.215588459 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.223445568 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.239579573 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.212069212 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.200326189 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.209726166 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.197898699 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.215361552 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.199072648 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.127185651 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.213158817 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.214328005 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.101062413 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.128808691 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.237406362 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.212503354 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.235004147 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.195146483 seconds)
  done (took 6.409034187 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.108922477 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.143048434 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.122520136 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.197952493 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162459993 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.104660495 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.139371901 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.147120819 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.122298551 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121570144 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.112637076 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.161221748 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.141812408 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.107785186 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.128452095 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.117685791 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.149066225 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.098637437 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129626985 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.143672502 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.11671635 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.142311456 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.112555592 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134282078 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.095682219 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131673706 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.126874165 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.110131649 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.133302288 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.111469383 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.129484652 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.101798257 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.127033612 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106472956 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.129021222 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.133154367 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.12493734 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133867261 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.107448493 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.153938334 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.133142977 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.102839662 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.148661708 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.149824495 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.123975485 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.134798135 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.110050941 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.135476109 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097258195 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.144409165 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.11207108 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.123787891 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.143238027 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.098178644 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.124226059 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107290792 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.125282825 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.099765934 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.136874164 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.101758673 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.150184278 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.104210732 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132358016 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.098578363 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.129922607 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.12353768 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.09620612 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.129989329 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.123770519 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131167753 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.133711862 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.124654578 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.10994358 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.132327105 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130885537 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.106068002 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.123917882 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105693481 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131964281 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.104318719 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.136606806 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.100804052 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.127329259 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.116826485 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.143360329 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.134249611 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.108980691 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.135341063 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.127035074 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.099474829 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137336751 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.099494246 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.127835832 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.112154288 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.12461922 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.100381329 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.135313733 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.107286667 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.122364929 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.144709358 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.104032724 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123526741 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.11600058 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.124823823 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.102178416 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.13544303 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.110402302 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.124369745 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.107458115 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.136634868 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.097376921 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.128674558 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.127850096 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.097372462 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.142608747 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.107745611 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.130078502 seconds)
  done (took 15.49810572 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.301856301 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.307746381 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.205070611 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.367320964 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.15104783 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.203767352 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.304900863 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.321927218 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.104832797 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.170629022 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.18547164 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.273761089 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.10090135 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.159656305 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.307767771 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.375614338 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.158155304 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.172460419 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.169399458 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.123031309 seconds)
  done (took 5.508056953 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.121060862 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.168474815 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.157120947 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.157832257 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.104921828 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.140545904 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.097964752 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.151638748 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.132590121 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.105152442 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.124395833 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.12483628 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.13316204 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.109623062 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.1432893 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.171759145 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.10333854 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.132339515 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.150184861 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.104552002 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.135058627 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.155965574 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.10948584 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.153734912 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.140961172 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.11377454 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.123398747 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.105602111 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.128456908 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.104637306 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.130949595 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.146416466 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.104987474 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.131645556 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.107909293 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.138194578 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.100794908 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.127207061 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.101503391 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.129291583 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.142162098 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.107969616 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.128250264 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.095498162 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.138965874 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.100535282 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.137652681 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.108739705 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.137098685 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.114215345 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.136147147 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.11008274 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130966906 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.146261282 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.101621988 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.141405165 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.112008194 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.138025205 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.133404668 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.09742068 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123649324 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.102939358 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.129482333 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.111466743 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.134300983 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.147447476 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.112790634 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.124820017 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.106119798 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.129150496 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.103668686 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.143207959 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.149011799 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.103954598 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.12847352 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.11596485 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.129073153 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.090450299 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.134925124 seconds)
  done (took 10.964236272 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128425051 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.131052821 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.120105126 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.162768796 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.1394592 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.103915701 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.131596791 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.1186314 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.138196409 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.111596896 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.137170568 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.139677035 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.12413559 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.139695651 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.103078451 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.142313268 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.108828089 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.169435796 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.146005786 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.160002202 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.111118894 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.132533961 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.112938687 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.139000618 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.16246315 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.110865443 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.158810589 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.1361623 seconds)
  done (took 4.77948022 seconds)
done (took 49.722660642 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.201218926 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.322818936 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.122312173 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.119925188 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.120261731 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.124201746 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.121225823 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.120826191 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.751492944 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.117047279 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.120497996 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.118828645 seconds)
done (took 26.406738179 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.38047646 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.594797603 seconds)
    (2/2) benchmarking "String"...
    done (took 1.41299014 seconds)
  done (took 4.050769626 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.112236102 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.112734206 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.359494126 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.12354618 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.115421332 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.128141877 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.113542362 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.117979484 seconds)
  done (took 15.113394145 seconds)
done (took 24.702403005 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.128480659 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.309551472 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.372184762 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.128767251 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.115484805 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.127013509 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.114759229 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.12657749 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.116957066 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.11742621 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.466783297 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.386330426 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.138079439 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.512345849 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.114503376 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.129548951 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.116138276 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.358559792 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.115272534 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.152121088 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.116262153 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.107208034 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.133190151 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.126028229 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.220704718 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.125250171 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.189276633 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.115782388 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.314256843 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.12352375 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.152689357 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.121524221 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.175989246 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.131647804 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.118965211 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.117711079 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.299434657 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.221227389 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.110526196 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.121071958 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.297284731 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.12827367 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.116042781 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.121386241 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.115675224 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.125792999 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.113923608 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.215156359 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.137786263 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.116755027 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.16510636 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.50187384 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.132475822 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.140884309 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.125484188 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.340429676 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.126483574 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.156842465 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.136136097 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.128134876 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.117471218 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.118302894 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.145066465 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.128423756 seconds)
  done (took 138.286092663 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.117961169 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.118012883 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.126631788 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.123234123 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.118695321 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.122275348 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.118042281 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.118481173 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.119241545 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.119367182 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.119945304 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.1195137 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.133039095 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.066483017 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.123524031 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.139719795 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.122591514 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.118999797 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.122086336 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.119209388 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.140260406 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.118945127 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.132163921 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.118271567 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.139507755 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.191696962 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.15759568 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.133977842 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.123512889 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.119315194 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.142293754 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.18217207 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.634762618 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.988540642 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.136780931 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.137078027 seconds)
  done (took 77.03326511 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.120042444 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.118702284 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.120631997 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.147059573 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.119073318 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.60012739 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.604795787 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.818523939 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.44215252 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.205820863 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.285265207 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.106332238 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.194415622 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.119252998 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.106069688 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.105041404 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.120999573 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.147379969 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.106641735 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.105989658 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.584749721 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.119820322 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.328036633 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.264777765 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.115958911 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.128819581 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.499719205 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.102512569 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.130413988 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.419934826 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.145327496 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.103320145 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.392516222 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.580524394 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.21152305 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.105035958 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.129998364 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.103146069 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.373989792 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.103790653 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.103426527 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.105189001 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.107933747 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.700924187 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.105489252 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.585524632 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.110607302 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.971012769 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.106279608 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.106346928 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.04165464 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.598469424 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.117770859 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.105652592 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.10859428 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.104422323 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.106434994 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.132224903 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.041582939 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.192353704 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.120583533 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.109043801 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.134930079 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.106544653 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.311186605 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.110846054 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.458334878 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.18465396 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.219750406 seconds)
    (70/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.107663647 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.59096971 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.11141603 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.201040462 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.224158869 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.110712744 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.107504994 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.1078862 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.107793248 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.214498701 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.108365805 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.469621134 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.269481834 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.122659937 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.205866911 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.199890531 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.107774903 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.405009691 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.109306335 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.10826997 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.763405574 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.202481613 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.109617163 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.109247679 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.109343637 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.470133438 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.593511818 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.257553195 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.11423192 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.351958145 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.110553924 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.481391097 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.584871048 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.109233748 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.696077433 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.114876047 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.218376184 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.272546855 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.125038476 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.111496608 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.208049571 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.103212913 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.162387525 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.103565828 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.497765482 seconds)
  done (took 353.971713074 seconds)
done (took 570.335958807 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.822085403 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.788944859 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.911688124 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.807321163 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.777664997 seconds)
  done (took 10.136577226 seconds)
done (took 11.168594271 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.26112213 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.259831538 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.142688551 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.262056971 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.121974954 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.274207618 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.236911024 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.105087438 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.178884821 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.153810329 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.179531157 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.131201834 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.114404208 seconds)
  done (took 16.4463717 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.349563576 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.090728216 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.16768323 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.318901093 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.130072528 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.350732714 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.378847416 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.092281111 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.215440529 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.103432303 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.102610371 seconds)
  done (took 16.320038528 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.358605918 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.092683299 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.17418635 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.316153387 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.133116795 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.342746761 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.3735936 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.092335231 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.238291147 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.104031068 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.103383469 seconds)
  done (took 16.348560641 seconds)
done (took 50.13924088 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.125731752 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.248829318 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.117207298 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.105271909 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.100027043 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.100687214 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.10599415 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.0999923 seconds)
  done (took 10.022209418 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.09849409 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.100309948 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.099751633 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.099019582 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.099354451 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.098729755 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.100221795 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.09857729 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.09954631 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.098991311 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.099588393 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.100550952 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.100370764 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.098702999 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.100413464 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.099194933 seconds)
  done (took 18.614200696 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.10191114 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.099281007 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.10137073 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.100329544 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.100333834 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.10003477 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.100738987 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.101421047 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.099687258 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.100353282 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.100624485 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.101513734 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.099356286 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.100727497 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.100718071 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.10094345 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.100850999 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.10057593 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.105712077 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.101562232 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.101631114 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.101375418 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.101337948 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.101472359 seconds)
  done (took 27.446142371 seconds)
done (took 57.10104941 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.091525549 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.091805275 seconds)
  done (took 5.205594388 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.161414855 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.160733301 seconds)
  done (took 3.346783217 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.103305743 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.101402622 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.102728566 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.101579968 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.102862111 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.102501592 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.10297945 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.103469315 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.102299065 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.100710448 seconds)
  done (took 12.048032433 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.103206698 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.102229972 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.102035925 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.102197282 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.103016173 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.102436636 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.102701267 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.102934442 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.103056897 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.102552306 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.102394105 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.102751692 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.102721149 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.103811677 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.101106282 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.102830797 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.102429095 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.102851831 seconds)
  done (took 20.871785836 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.116222096 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.12488182 seconds)
  done (took 3.265378789 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.244568065 seconds)
    (2/7) benchmarking "second"...
    done (took 1.144593362 seconds)
    (3/7) benchmarking "month"...
    done (took 1.21964516 seconds)
    (4/7) benchmarking "year"...
    done (took 1.209038972 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.145931702 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.125257552 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.16168897 seconds)
  done (took 9.27485791 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.105399864 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.292729097 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.399044079 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.670336168 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.105269872 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.130884356 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.918706202 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.129704227 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.12646956 seconds)
  done (took 12.903660534 seconds)
done (took 67.939594183 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.093946427 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.134082751 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.116108449 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.117142798 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.399103177 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.12292446 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.09428118 seconds)
done (took 15.10400425 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.092413589 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.093233052 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.091090161 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.067459921 seconds)
  done (took 9.369329722 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.006963563 seconds)
    (2/2) benchmarking "read"...
    done (took 1.391040204 seconds)
  done (took 4.417424568 seconds)
done (took 14.812759853 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.100543215 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.101527415 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.094558907 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.094001299 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.094718037 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.095838123 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.094625285 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.093930489 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.096275772 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.095818747 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.095391427 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.091989938 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.091211203 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.090852531 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.091002262 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.091305876 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.091701632 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.089875308 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.090833789 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.092538922 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.090314517 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.090493603 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.090358118 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.089641513 seconds)
  done (took 27.261215687 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.088922593 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.090401096 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.089973899 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.090835838 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.090598835 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.090731292 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.090162166 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.089902676 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.089468337 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.091269387 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.091099967 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.089099381 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.090602208 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.09115863 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.090862812 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.091190779 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.090983878 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.090695449 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.090397971 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.090870077 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.090761331 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.091057021 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.092202246 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.090792094 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.091319355 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.090252482 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.090619728 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.092076958 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.090410645 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.092320351 seconds)
  done (took 33.733761793 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.096040583 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.095722852 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.092062861 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.090290053 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.091462921 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.092357785 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.092134593 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.092878482 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.092508577 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.092658895 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.091922893 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.091873852 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.092199913 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.091358048 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.092779975 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.093094582 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.091473061 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.092817073 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.093162147 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.093277142 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.092230973 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.093648328 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.093212461 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.092208964 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.093078866 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.093257575 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.091954261 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.092706238 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.09359224 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.09407538 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.094010651 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.092991267 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.092305572 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.092416771 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.092244656 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.094019153 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.097170827 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.097552667 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.093865495 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.094131085 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.093140008 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.093462796 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.094436385 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.094168285 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.092562065 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.093834778 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.093264833 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.092698886 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.094074138 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.094580349 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.093578729 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.093251917 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.094757513 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.096240562 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.094190723 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.094657904 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.093733329 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.093050466 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.095725728 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.096122022 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.09482135 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.09437185 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.094235212 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.095737837 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.094924035 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.095103932 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.095514575 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.095465578 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.095699992 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.096060786 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.095651594 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.095277106 seconds)
  done (took 79.764624021 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.094745177 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.095416973 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.095376904 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.095808274 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.095876704 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.094587155 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.095454399 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.095209909 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.09625447 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.096544674 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.095633626 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.096250053 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.094363899 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.097406444 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.096507443 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.096542017 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.097192334 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.095586334 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.09737495 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.097725125 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.097105457 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.096386696 seconds)
  done (took 25.130949693 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.096884059 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.097744542 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.095969541 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.097653288 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.098478481 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.09805983 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.096326452 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.098650349 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.096820931 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.09778763 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.098139902 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.097180832 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.099483428 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.097340372 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.095733025 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.098176099 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.098529634 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.098788635 seconds)
  done (took 20.776820443 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.099205569 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.098340668 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.098653994 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.097818343 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.09708909 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.098517033 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.097223337 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.09779321 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.098666593 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.099372957 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.099369612 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.098807404 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.098040755 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.098546548 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.098911941 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.098159483 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.098850097 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.099649875 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.099130706 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.098861366 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.099226239 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.099647193 seconds)
  done (took 25.189176438 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.098154165 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.098816926 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.099069324 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.098339146 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.099051005 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.100471718 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.099090493 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.099290507 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.100748168 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.099844001 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.09907019 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.101225189 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.100631586 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.099865155 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.100488912 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.099295588 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.099962222 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.098583193 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.099696196 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.100517104 seconds)
  done (took 23.013022371 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.102046858 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.102654372 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.100539422 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.101314566 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.101500052 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.101888694 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.101971196 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.101783546 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.102717796 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.102176544 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.103103245 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.101951571 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.10247054 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.101237738 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.101885327 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.103400185 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.102326441 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.102509825 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.104646545 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.102616199 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.103791717 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.10287151 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.102835888 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.103580584 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.102630986 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.103035424 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.101682737 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.10284238 seconds)
  done (took 31.889831442 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.101799073 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.102760561 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.102474817 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.10228926 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.103978879 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.102663117 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.103231641 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.102556111 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.103631773 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.102328532 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.103640861 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.104334634 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.10372647 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.102708028 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.102706028 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.103619882 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.104135073 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.103241933 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.103203331 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.104245042 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.104089037 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.103497579 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.103432076 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.104355879 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.104027851 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.102812529 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.104443278 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.104724202 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.104402985 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.103351117 seconds)
  done (took 34.126198121 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.162494832 seconds)
    (2/2) benchmarking "in"...
    done (took 1.150771915 seconds)
  done (took 3.337699925 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.105054807 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.105078699 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.104586103 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.105264626 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.104468451 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.104143831 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.104118953 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.10443465 seconds)
  done (took 9.860706221 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.100663399 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.10603701 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.104821103 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.105537951 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.104446842 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.102028367 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.110530528 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.110858259 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.102025018 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.102340879 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.105612968 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.104876812 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.105075301 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.103911959 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.102574927 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.105694591 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.108215817 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.106942486 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.107158915 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.106380071 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.105957581 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.104693473 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.108577498 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.110339828 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.101728956 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.111092691 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.11236619 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.10948362 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.102309217 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.107750367 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.105730462 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.107973745 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.106262029 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.107379222 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.10699719 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.106421224 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.113401432 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.125689418 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.111645842 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.111872677 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.108021913 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.10671085 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.104069542 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.108441062 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.106419689 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.110097843 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.109209075 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.108061025 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.103514839 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.106391426 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.111682195 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.10244108 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.10860105 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.107695521 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.108084259 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.114448561 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.130348755 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.107086308 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.108722737 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.114002612 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.120614418 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.11714033 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.109107332 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.111087338 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.114061064 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.119629502 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.115140461 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.114987991 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.110839098 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.109935785 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.113711973 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.122212627 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.120680591 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.112556826 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.109703373 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.11118723 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.106755148 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.1107793 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.116298529 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.115757712 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.112364365 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.110514728 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.114771199 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.119085774 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.106635795 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.111917054 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.110489412 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.110966264 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.107292683 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.117237935 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.13263093 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.11063497 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.106142241 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.106359009 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.108930411 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.113522418 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.106637222 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.107564933 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.111430855 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.11179853 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.108338241 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.109160529 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.112128258 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.112611464 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.110906866 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.115271124 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.115728872 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.107486684 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.116150954 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.116353667 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.112254105 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.108226182 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.111708162 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.111777492 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.109660522 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.113053752 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.112577686 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.109363515 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.114527406 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.11276224 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.115344273 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.12467515 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.116277822 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.113425827 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.111815711 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.119293967 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.113036858 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.112087384 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.115051593 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.113087476 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.113044477 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.111026996 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.11565138 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.109616739 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.114976817 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.109435238 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.114279142 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.113019764 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.11329621 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.111240213 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.112578913 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.112000493 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.111711577 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.115607397 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.116146651 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.112256775 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.119833598 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.114424438 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.112729511 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.112673728 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.115915326 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.114531535 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.111027702 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.115572396 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.110298831 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.114327596 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.110346864 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.116312683 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.116926884 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.11546412 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.114831629 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.110292916 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.112405957 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.117562845 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.1146019 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.113178509 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.116129085 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.115932978 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.115110582 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.110590198 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.117310115 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.110453794 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.113216771 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.119113768 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.11514148 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.114758822 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.115069644 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.118494031 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.115372976 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.116505594 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.113076252 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.116505864 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.116185502 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.118648887 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.120192398 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.116177515 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.115621338 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.111302244 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.111503664 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.117335445 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.113870948 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.120945921 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.124180307 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.125812307 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.113092438 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.117770122 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.111783257 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.118522467 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.116646554 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.1209897 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.117346806 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.117508582 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.112059855 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.117877305 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.115183473 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.11749913 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.112848885 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.119458571 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.117424127 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.116489721 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.117868306 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.113880966 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.115326877 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.118617416 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.116713777 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.118201098 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.113199502 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.119071602 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.112453384 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.115718912 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.119412607 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.118244798 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.120791614 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.123538807 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.116862644 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.120887198 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.118792926 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.114806347 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.119520451 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.118613782 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.118104275 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.124981901 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.120975783 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.11771219 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.124920616 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.137751342 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.116387865 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.120170475 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.122695844 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.119248339 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.116615013 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.125883783 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.120849346 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.121003801 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.120121882 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.116628526 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.123231607 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.123914847 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.125342692 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.116262505 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.121767701 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.118092189 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.120507155 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.118759181 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.120298101 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.119267679 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.121780419 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.125507051 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.121942462 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.118635525 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.122975578 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.121039798 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.121471601 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.11817824 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.124355582 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.12256926 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.120140502 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.120259169 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.118768623 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.123760783 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.11664963 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.121812529 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.117083691 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.130942922 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.133650135 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.125006671 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.123958124 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.122728422 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.124017466 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.122821437 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.119779077 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.118974554 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.120144362 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.117236185 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.118925113 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.123334936 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.118685874 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.123276435 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.120695883 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.123028601 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.124163874 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.122075895 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.118135983 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.123316862 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.122761952 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.123433423 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.117704244 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.123671721 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.120814268 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.122604873 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.120517533 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.119123452 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.128492064 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.125288074 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.120340657 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.121159125 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.120607114 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.119862583 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.121440983 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.125522082 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.121622005 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.127331837 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.121232887 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.125173401 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.122168765 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.128723899 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.127774627 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.122279503 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.128611396 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.125109244 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.118649757 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.120244062 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.125930004 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.129377729 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.130564687 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.120623163 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.126469857 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.125075169 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.125204686 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.125742138 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.124758865 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.125330406 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.123498613 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.131726741 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.14412167 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.122878332 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.125182369 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.127716898 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.125212199 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.125066446 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.120005757 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.127575558 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.129488238 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.124372949 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.123561922 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.123174136 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.127410998 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.126915241 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.126550082 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.126605596 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.125743987 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.131433852 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.128699716 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.127841732 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.127101521 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.131279337 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.129994706 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.130992082 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.133898369 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.123578005 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.127156023 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.126191326 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.123622341 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.12246001 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.124690742 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.127772329 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.123437591 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.130077938 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.126636144 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.125184889 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.126190007 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.129376661 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.122949045 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.131952538 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.141214743 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.124006373 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.130718947 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.126626628 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.125147796 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.129816569 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.128226485 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.123115422 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.126226187 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.12981342 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.132430467 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.123961309 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.129431365 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.124310309 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.129608858 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.128660846 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.128485008 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.127973702 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.128922537 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.125114832 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.130704811 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.128993604 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.13157448 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.127552849 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.127678515 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.125851203 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.134367117 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.134494935 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.126609034 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.130990883 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.130676724 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.125454474 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.127413486 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.131191142 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.126540638 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.131298978 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.126204911 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.129809655 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.128783233 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.130053173 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.128560562 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.130391162 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.125866961 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.126522749 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.132444824 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.131715117 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.131103866 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.127672704 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.132023273 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.126977236 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.12775043 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.133511062 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.127889936 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.13187254 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.128141545 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.131051309 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.128450857 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.133381396 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.131580875 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.131134565 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.125878856 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.128039037 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.136383459 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.134293683 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.133419844 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.132070709 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.133928752 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.127897883 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.131557432 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.131890171 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.129513382 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.129191866 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.132601668 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.128995761 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.128997205 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.129213346 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.132538536 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.135557591 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.132097446 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.128200939 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.140424809 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.153286576 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.134336583 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.128877263 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.131404461 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.128947038 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.133254174 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.13265974 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.128325952 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.138447726 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.135944967 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.134222605 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.132248537 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.130929896 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.130534243 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.136221283 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.132824053 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.130958689 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.134401171 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.130718844 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.135998039 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.132607854 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.13452072 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.12920065 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.130087571 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.132642871 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.133214115 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.134615967 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.133775961 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.13341367 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.132809037 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.135705489 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.134942907 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.135140867 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.135404357 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.129195738 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.134422612 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.1305602 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.133965265 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.132603979 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.132085342 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.137105301 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.135310167 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.132771647 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.137056812 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.139673633 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.135642084 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.12943943 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.134420601 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.137278863 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.137920717 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.134780389 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.132363757 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.133135544 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.137126604 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.136464141 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.135826776 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.133034292 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.146270112 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.161910477 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.132658352 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.134851867 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.135797114 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.13900894 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.135963361 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.138693682 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.13549276 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.13536119 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.140451153 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.136609801 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.140694142 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.156268451 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.135118209 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.138259644 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.134904648 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.136932202 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.137840236 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.140066873 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.135646055 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.135587973 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.145121635 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.141996212 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.140340218 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.155212072 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.140630923 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.135983214 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.138692921 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.132649048 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.138381845 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.136680295 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.139492235 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.138872873 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.137114892 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.138015535 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.133846112 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.138495364 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.138030882 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.142251195 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.139421886 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.13332052 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.13525326 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.138882831 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.138135897 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.13950925 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.138208238 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.138256076 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.139654205 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.135748164 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.14829233 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.150396964 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.139828952 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.139587832 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.139509569 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.13949463 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.14095836 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.142163258 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.144907682 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.140503095 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.140127338 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.138847516 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.142735898 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.142291832 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.136033328 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.136387244 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.135690868 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.142521035 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.148402701 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.151268616 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.143465287 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.139103664 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.141418525 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.14064987 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.136886966 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.140600706 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.140295578 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.137656291 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.139271344 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.142361202 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.14278909 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.142763165 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.138983765 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.146351658 seconds)
  done (took 670.728386592 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.140796327 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.141681582 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.140269707 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.141562879 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.141528669 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.140703007 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.141375732 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.141218421 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.14195545 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.14265911 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.141412028 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.14168599 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.141437207 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.142760829 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.141523151 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.14202681 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.142856352 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.141665202 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.141201079 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.143508188 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.141948345 seconds)
  done (took 25.034424585 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.143339675 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.141107786 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.142692917 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.142351284 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.144144065 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.142961707 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.143048421 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.142554161 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.143792051 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.142697211 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.143597957 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.142452778 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.143078386 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.143205545 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.142532339 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.14358329 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.144078486 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.144129164 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.143413485 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.143718006 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.143541692 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.144036624 seconds)
  done (took 26.209846483 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.143396724 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.142636938 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.138745559 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.144341913 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.145027264 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.14345022 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.143846221 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.145248733 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.143881349 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.140061138 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.139208043 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.141961064 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.144465953 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.148910057 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.143026992 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.145929585 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.145635204 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.145007057 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.144028918 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.143315998 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.147463704 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.149502088 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.145333319 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.139811218 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.146486217 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.144523505 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.145120751 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.145009602 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.141983679 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.147481816 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.146063515 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.142357796 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.145861087 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.143417905 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.143347492 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.148645981 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.146036464 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.145845975 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.147015685 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.150777614 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.159895123 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.145434985 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.149638347 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.150674676 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.146026857 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.144566159 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.149363541 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.146633407 seconds)
  done (took 56.038941626 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.14579605 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.146977514 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.144817181 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.146471166 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.147972798 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.147489418 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.147446769 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.147594238 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.147507081 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.147215482 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.148274891 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.149580801 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.148072759 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.148680136 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.147835288 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.148239858 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.148881514 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.149459506 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.148290564 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.148486706 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.148473748 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.148931841 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.149631944 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.149525699 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.148314468 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.148125768 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.149253864 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.149036043 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.148502163 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.150400509 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.149496356 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.148570041 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.149072358 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.149875645 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.149598416 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.148871851 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.148489198 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.150502018 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.149787508 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.149331321 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.150682391 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.148798536 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.150400851 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.149791547 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.149008832 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.150882448 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.149879026 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.150310707 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.150902862 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.149849942 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.15009703 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.150740365 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.150398353 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.149197692 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.151414779 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.149955983 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.150737922 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.150789927 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.151597411 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.150292408 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.149281168 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.150137123 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.149996581 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.151301047 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.149933364 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.151348995 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.151376086 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.150585055 seconds)
  done (took 79.213385235 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.150366964 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.150256027 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.150441249 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.151514493 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.151807564 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.151038291 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.151129948 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.152157339 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.151439557 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.152882472 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.151700668 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.151306623 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.150473118 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.151788735 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.150761771 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.150843716 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.151940778 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.151484898 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.151586599 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.152397542 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.15098228 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.151232783 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.151244026 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.151830076 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.151413101 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.152165208 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.151964277 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.15140834 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.152584793 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.151089487 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.152036498 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.153218949 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.152223171 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.152650264 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.152514016 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.152598589 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.15254105 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.151830922 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.152772914 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.152490763 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.152155192 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.152811184 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.153693909 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.152835223 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.152683103 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.152350539 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.152156769 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.153729704 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.154887541 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.153894752 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.153603912 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.153978993 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.153683272 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.154077899 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.153024795 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.154321928 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.154019903 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.154587241 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.154387097 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.152740198 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.15436037 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.155407128 seconds)
  done (took 72.516368937 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.154614066 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.15392742 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.154430796 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.15298429 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.154592242 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.156613441 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.154339575 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.154241891 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.154833181 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.154567911 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.155295795 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.155524258 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.155958734 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.155842936 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.155479647 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.156100925 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.154947206 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.155173871 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.155006234 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.156383949 seconds)
  done (took 24.170629777 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.155145159 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.154438243 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.156117615 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.155889418 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.155584795 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.155843845 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.155433497 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.155447169 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.156667904 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.155910267 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.154983835 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.156855973 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.156486983 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.156508847 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.154858235 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.155789672 seconds)
  done (took 19.562296591 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.157726811 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.155024157 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.15631062 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.154992569 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.157439128 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.156767211 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.157452633 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.156147875 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.157884741 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.156716707 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.156291657 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.157088443 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.157375987 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.156804414 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.157859856 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.157112423 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.157779962 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.156508326 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.155838484 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.158626812 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.156603722 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.157738041 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.157751497 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.157623697 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.158018844 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.157150813 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.1578042 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.157538446 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.157231405 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.156212781 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.1579995 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.15873797 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.157469919 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.157025565 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.157497139 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.158729194 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.157649531 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.158034297 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.159182787 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.157585671 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.158347567 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.158944855 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.159414021 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.15875376 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.158190974 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.158540973 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.158201616 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.158757763 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.159076168 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.159250295 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.159679388 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.158682035 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.158873078 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.158447761 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.159796696 seconds)
  done (took 64.747090616 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.159539247 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.160275034 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.158276437 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.160536536 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.159975068 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.160316159 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.160064452 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.161542109 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.159984833 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.158828614 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.15952644 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.160305053 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.159989316 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.159448513 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.160773433 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.160458321 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.159238856 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.16071262 seconds)
  done (took 21.953338638 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.160492558 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.160831812 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.160879321 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.161456367 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.161210633 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.161658281 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.160930988 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.161024961 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.161285328 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.161597691 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.161443573 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.161020325 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.161940073 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.160939996 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.162574474 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.161539485 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.161478065 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.161649857 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.162048342 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.160526466 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.162565474 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.161806404 seconds)
  done (took 26.626244035 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.156381819 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.156166406 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.156962371 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.172569808 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.16828155 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.156898282 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.157230018 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.157253441 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.175754609 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.198698475 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.192754133 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.169851149 seconds)
  done (took 15.094165566 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.163753645 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.16255067 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.163186991 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.161963316 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.162116399 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.163115943 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.162971137 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.16330878 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.163455371 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.163338934 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.163124527 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.16327958 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.163549061 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.163402501 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.164367068 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.164197805 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.163139889 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.163736226 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.16459232 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.165649456 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.164132618 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.163974095 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.166136139 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.164884678 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.165658921 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.165647886 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.165580101 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.165496231 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.165663625 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.164714989 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.165025446 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.165129757 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.164896067 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.165902471 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.165704136 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.165442304 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.165782769 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.165408382 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.166192265 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.165731698 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.164951334 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.165960231 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.165725824 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.16576251 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.165688199 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.165909691 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.165821378 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.166630177 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.165891917 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.166196855 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.166216475 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.166886517 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.165575962 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.167149949 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.166006795 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.167189587 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.166265708 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.166886381 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.166533588 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.166284203 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.167535808 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.166790133 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.166511702 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.167129022 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.166232196 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.167471263 seconds)
  done (took 77.981845721 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.166924136 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.167631474 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.167963963 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.167192283 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.166606406 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.167271376 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.166580635 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.167415393 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.167427602 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.167931208 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.168873935 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.167984843 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.167790772 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.16830628 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.16720352 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.168235152 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.168561473 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.168041047 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.167802006 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.168836538 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.168742707 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.168262366 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.16894392 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.169663343 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.168684786 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.167614005 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.17014927 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.169972145 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.167889933 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.169594194 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.16867744 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.169475705 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.169982248 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.168496397 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.168764611 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.169588066 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.168772465 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.170038751 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.169995349 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.169921372 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.169524373 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.170648784 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.169958527 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.169512279 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.170270853 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.169484191 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.169914202 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.17043822 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.169905581 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.170152514 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.170229471 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.171576583 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.171969346 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.170195955 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.170138263 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.171095411 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.170848842 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.171347082 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.170531157 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.170651814 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.170313451 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.170545958 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.171824736 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.170250714 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.170655138 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.172159148 seconds)
  done (took 78.256560004 seconds)
done (took 1573.240247795 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.331723347 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.286158526 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.166130561 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.181457244 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.16550662 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.160461252 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.178509975 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.165470038 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.165888012 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.16626431 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.16666609 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.35462158 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.160926499 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.166314466 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.167318635 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.262978907 seconds)
  done (took 24.331372912 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.19200322 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.203437684 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.303844279 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.215755368 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.221939567 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.374997432 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.254223367 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.201576816 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.356228058 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.218685773 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.198668141 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.220998315 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.201210137 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.202603434 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.215803415 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.374667255 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.430961949 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.201890646 seconds)
  done (took 26.675254742 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.602954898 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.210545189 seconds)
  done (took 4.926124387 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.21805606 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.201175689 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.202493831 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.20045558 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.192732733 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.193054804 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.198594878 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.194114673 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.192995591 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.318238995 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.205902749 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.213999284 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.216147052 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.201692735 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.203755793 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.240987454 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.360016863 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.206947735 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.205895859 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.206424737 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.20164838 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.302619545 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.239253734 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.205079331 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.315694331 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.194461798 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.221341737 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.207818073 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.350258853 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.20731501 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.201797442 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.200971574 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.202619456 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.194861769 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.629003973 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.21323433 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.210349162 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.225494552 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.204974327 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.34800803 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.203258017 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.208810655 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.196474775 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.62458429 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.33682893 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.311315851 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.214500138 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.221315362 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.205226869 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.26349089 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.205213692 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.205639081 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.259746424 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.985505352 seconds)
  done (took 78.008666863 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.256781917 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.197483226 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.37445069 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.217933987 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.196946812 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.199866649 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.212757438 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.458816168 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.229315053 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.204273248 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.47250892 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.746732666 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.225395436 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.25463218 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.059064552 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.270564689 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.197996709 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.197174478 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.202575417 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.198663915 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.728682721 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.199059578 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.199449909 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.357498159 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.23426596 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.686998763 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.202307481 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.227913799 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.20214941 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.197951572 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.701564447 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.225575647 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.260955325 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.201180213 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.460815706 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.549671697 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.516357594 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.201281891 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.221246119 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.202238457 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.213396793 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.678699663 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.539128375 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.203647719 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.218448663 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.690035557 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.201825684 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.205257871 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.209337596 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.44534596 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.198938011 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.202541791 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.199623334 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.21879238 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.201017712 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.283341287 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.309766857 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.684426062 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.201903995 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.201246347 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.214430714 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.201454494 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.209550005 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.201930611 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.216038854 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.537031829 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.351990483 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.206323904 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.534778435 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.697760393 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.218536409 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.757764086 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.218126246 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.203735105 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.260469471 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.201345032 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.200690899 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.692704993 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.212522838 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.20150597 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.518704123 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.203010004 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.479272953 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.217621224 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.228228729 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.743959181 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.202491478 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.212701733 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.202189124 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.201992781 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.202550948 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.20370157 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.467052862 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.276143118 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.203836247 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.202359878 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.206722134 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.209097299 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.203153651 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.208527196 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.759502805 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.228604204 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.202752162 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.205680017 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.210188943 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.202598639 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.203588537 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.206179824 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.467728678 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.203399062 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.20819187 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.20308085 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.203357472 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.204750087 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.349908386 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.212466392 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.487029746 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.204113428 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.204679347 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.20697497 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.203767807 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.244541789 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.204550334 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.21078653 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.065367829 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.466963453 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.218958327 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.204164878 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.203082853 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.222354187 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.204418931 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.206324659 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.248590027 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.204538117 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.974829719 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.223384719 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.212588902 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.204582477 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.205542221 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.204716601 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.211959897 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.20597727 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.493247631 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.467328617 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.35625781 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.209325771 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.205541367 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.957134171 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.229729476 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.383157028 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.223160308 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.20613052 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.458668961 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.408255518 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.207878984 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.206107884 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.207363213 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.464768887 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.204961925 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.505985698 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.733798808 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.220298902 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.209517561 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.978741176 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.901750638 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.20708476 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.211493494 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.477873974 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.221192839 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.207211879 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.207479582 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.208520168 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.222847962 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.227208211 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.206124302 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.206637812 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.208329296 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.217608229 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.39642312 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.223321924 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.217747897 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.684872924 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.229001807 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.207986923 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.233903498 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.211343103 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.209815556 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.280498532 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.21250067 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.208538674 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.209260508 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.218075946 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.709327131 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.208757561 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.209015865 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.397402707 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.882638975 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.22772921 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.210440045 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.208542819 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.117091816 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.712692471 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.257400575 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.493278445 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.216412644 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.247418667 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.209261379 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.237762128 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.712957835 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.208973512 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.209080702 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.848513587 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.225142807 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.857494624 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.210481849 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.211243738 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.781476653 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.223956013 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.210775112 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.209431334 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.221331803 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.506010272 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.2123506 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.230368179 seconds)
  done (took 468.484411272 seconds)
done (took 603.509695109 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.211132573 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.214686337 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.207253132 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.214330602 seconds)
  done (took 9.976028127 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.224038465 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.216085528 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.221947768 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.216149632 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.221565356 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.215808483 seconds)
  done (took 8.443052824 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.212658306 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.218563389 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.217246928 seconds)
  done (took 7.77655879 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.408622664 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.231366736 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.552061946 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.239611318 seconds)
  done (took 8.560093114 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.221472698 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.222040151 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.221720832 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.22395131 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.225449635 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.225914917 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.224300496 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.223196831 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.225618075 seconds)
  done (took 12.141289244 seconds)
done (took 48.024230453 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.204629458 seconds)
    (2/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.246525505 seconds)
    (3/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.240031121 seconds)
    (4/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.242707774 seconds)
    (5/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.242273869 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.270179478 seconds)
    (7/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.202267624 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.305817667 seconds)
    (9/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.246978484 seconds)
    (10/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.41452392 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.245877058 seconds)
    (12/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.426379442 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.321837669 seconds)
    (14/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.359791248 seconds)
    (15/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.37897445 seconds)
    (16/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.242356768 seconds)
    (17/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.95612789 seconds)
    (18/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.465133913 seconds)
    (19/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.206947102 seconds)
    (20/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.272548995 seconds)
    (21/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.8656109 seconds)
    (22/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.920340813 seconds)
    (23/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.208820532 seconds)
    (24/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.080487432 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.270427007 seconds)
    (26/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.9030431 seconds)
    (27/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.253780157 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.322872524 seconds)
    (29/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.232847213 seconds)
    (30/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.251449604 seconds)
    (31/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.273814938 seconds)
    (32/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.113630182 seconds)
    (33/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.263800626 seconds)
    (34/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.314927209 seconds)
    (35/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.348922986 seconds)
    (36/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.251691706 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.288447547 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.420609985 seconds)
    (39/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.863009732 seconds)
    (40/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.983018379 seconds)
    (41/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.265511274 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.249148866 seconds)
    (43/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.318230192 seconds)
    (44/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.388065192 seconds)
    (45/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.954364836 seconds)
    (46/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.361282521 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.323611775 seconds)
    (48/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.250938165 seconds)
    (49/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.254346321 seconds)
    (50/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.96429991 seconds)
    (51/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.312282939 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.340111409 seconds)
    (53/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.879220232 seconds)
    (54/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.208441833 seconds)
    (55/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.208355624 seconds)
    (56/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.391647864 seconds)
    (57/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.252497714 seconds)
    (58/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.246624505 seconds)
    (59/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.995169468 seconds)
    (60/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.136354279 seconds)
    (61/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.398914618 seconds)
    (62/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.412073629 seconds)
    (63/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.35290485 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.350906925 seconds)
    (65/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.354312504 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.358186537 seconds)
    (67/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.207803611 seconds)
    (68/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.051775788 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.297349933 seconds)
    (70/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.215895434 seconds)
    (71/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.2817181 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.351028227 seconds)
    (73/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.271164595 seconds)
    (74/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.224848925 seconds)
    (75/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.216289618 seconds)
    (76/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.262092854 seconds)
    (77/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.969290886 seconds)
    (78/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.924027191 seconds)
    (79/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.210664924 seconds)
    (80/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.210767191 seconds)
    (81/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.330464374 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.344849364 seconds)
    (83/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.213870292 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.291417258 seconds)
    (85/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.300122353 seconds)
    (86/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.229506859 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.319469277 seconds)
    (88/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.292536936 seconds)
    (89/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.362515378 seconds)
    (90/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.366235222 seconds)
    (91/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.117127206 seconds)
    (92/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.326678693 seconds)
    (93/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.390348952 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.325330033 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.250816822 seconds)
    (96/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.320183728 seconds)
    (97/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.22242055 seconds)
    (98/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.25335967 seconds)
    (99/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.226507013 seconds)
    (100/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.376280703 seconds)
    (101/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.246061519 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.418568906 seconds)
    (103/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.276488111 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.259085452 seconds)
    (105/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.99697244 seconds)
    (106/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.311642009 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.315157433 seconds)
    (108/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.96637286 seconds)
    (109/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.327143929 seconds)
    (110/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.223863223 seconds)
    (111/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.212587653 seconds)
    (112/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.211342599 seconds)
    (113/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.323417314 seconds)
    (114/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.215008197 seconds)
    (115/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.301656312 seconds)
    (116/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.355736233 seconds)
    (117/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.216397417 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.256527365 seconds)
    (119/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.00149172 seconds)
    (120/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.231581877 seconds)
    (121/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.318326904 seconds)
    (122/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.323356824 seconds)
    (123/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.998232166 seconds)
    (124/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.284624764 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.355816633 seconds)
    (126/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.211290701 seconds)
    (127/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.305358926 seconds)
    (128/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.912168495 seconds)
    (129/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.278417048 seconds)
    (130/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.228541854 seconds)
    (131/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.220431897 seconds)
    (132/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.362720507 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.367182293 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.295855958 seconds)
    (135/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.214424967 seconds)
    (136/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.366382714 seconds)
    (137/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.262402288 seconds)
    (138/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.293356795 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.303883753 seconds)
    (140/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.262284889 seconds)
    (141/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.929738994 seconds)
    (142/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.212825636 seconds)
    (143/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.264033509 seconds)
    (144/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.255470249 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.253888448 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.42464089 seconds)
    (147/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.349871356 seconds)
    (148/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.27368743 seconds)
    (149/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.226647517 seconds)
    (150/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.217407943 seconds)
    (151/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.290379712 seconds)
    (152/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.21381253 seconds)
    (153/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.228401055 seconds)
    (154/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.213236461 seconds)
    (155/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.353254373 seconds)
    (156/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.213866099 seconds)
    (157/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.234761476 seconds)
    (158/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.281255052 seconds)
    (159/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.238772146 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.329600184 seconds)
    (161/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.221988898 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.282764258 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.328386763 seconds)
    (164/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.358430046 seconds)
    (165/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.21567011 seconds)
    (166/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.381484941 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.322264055 seconds)
    (168/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.912031166 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.361643083 seconds)
    (170/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.357066897 seconds)
    (171/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.26295528 seconds)
    (172/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.388813652 seconds)
    (173/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.27482181 seconds)
    (174/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.458545948 seconds)
    (175/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.308174305 seconds)
    (176/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.239240004 seconds)
    (177/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.2477913 seconds)
    (178/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.256593572 seconds)
    (179/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.397712383 seconds)
    (180/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.392077114 seconds)
    (181/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.387488683 seconds)
    (182/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.224639829 seconds)
    (183/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.278486944 seconds)
    (184/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.238188421 seconds)
    (185/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.356493894 seconds)
    (186/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.875861729 seconds)
    (187/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.216843577 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.32907392 seconds)
    (189/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.240982748 seconds)
    (190/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.329409675 seconds)
    (191/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.475085452 seconds)
    (192/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.034827102 seconds)
  done (took 314.94392884 seconds)
done (took 316.074142841 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.247749783 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.413588742 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.232398635 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.231871749 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.233656257 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.226264488 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.249088468 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.23311236 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.241653723 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.244211091 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.224209084 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.238375188 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.245933147 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.240501502 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.267563355 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.233726882 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.233415654 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.238737303 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.246227303 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.246277526 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.23408372 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.236082272 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.252558513 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.233868077 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.240746549 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.241429258 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.239131599 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.233627341 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.237087437 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.245566832 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.236370666 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.239682827 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.246408492 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.241953534 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.236122855 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.241915855 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.236396885 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.415736329 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.250208265 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.241644956 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.239267345 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.247501573 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.239989792 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.240438864 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.24314946 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.255743207 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.244124747 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.250727756 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.237030878 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.216283576 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.252059176 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.243862304 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.240871799 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.215688622 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.228817516 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.250903109 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.243029569 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.251626332 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.240208941 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.239317667 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.269498168 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.251038811 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.24378382 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.244111221 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.239201396 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.248090058 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.241820973 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.2503007 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.240017323 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.237535701 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.239609821 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.241790863 seconds)
done (took 98.862043813 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.358504515 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.238790393 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.375463229 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.241035619 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.396965075 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.379384722 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.240455132 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.241983051 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.239808416 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.052501438 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.241001765 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.241295155 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.230942804 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.241703345 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.363391342 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.24145348 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.24303938 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.954108781 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.242648177 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.382612919 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.236948204 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.24107628 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.242155495 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.060332679 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.230703035 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.232124123 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.378279622 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.243366702 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.960606868 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.235429765 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.237780037 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.960930872 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.383292505 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.261857991 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.25308276 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.25257604 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.399752255 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.25928861 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.360471613 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.36259556 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.37576067 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.280560911 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.236671863 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.238291993 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.244522535 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.243900923 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.242084912 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.272083021 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.23964641 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.241505467 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.958717307 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.252898096 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.251859429 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.244055435 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.242765281 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.262592045 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.243386431 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.243097043 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.383689384 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.244725634 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.364039498 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.061770847 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.057426853 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.243824585 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.238610731 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.246499981 seconds)
  done (took 102.241872224 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.303833091 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.321246981 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.350546449 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.240750579 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.291823474 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.354324401 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.241739848 seconds)
  done (took 10.252433438 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.246622782 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.244815444 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.288628092 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.28851257 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.24581799 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.397376091 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.247007963 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.252974885 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.244705154 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.294747625 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.246308208 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.24706856 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.257089377 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.242307746 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.289439683 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.25442504 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.357239165 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.242301608 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.244046229 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.394265335 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.247572658 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.255049839 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.294368195 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.252864941 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.24827234 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.249591639 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.014386781 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.247141916 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.246523954 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.247084746 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.247120651 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.297963991 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.246536007 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.24170855 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.246675627 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.360050013 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.247007418 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.247061775 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.24792654 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.236080003 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.245969885 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.247170705 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.247596375 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.248215582 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.247858598 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.266951845 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.248409781 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.247084303 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.247771262 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.249173271 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.295420217 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.249622795 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.24774539 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.24774806 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.298872801 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.258826085 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.249037426 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.248011598 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.249411522 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.250785907 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.396650589 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.291606209 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.248689051 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.293075645 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.248615301 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.249706057 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.248871425 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.248241536 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.33639522 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.24769075 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.292844251 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.249198883 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.4255752 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.269864986 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.251269087 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.247749125 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.247053535 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.248959103 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.244052607 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.253150997 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.250610625 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.248694883 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.252166719 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.250441545 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.250633965 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.403044747 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.355029948 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.250670085 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.260731217 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.253559608 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.251111927 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.300229249 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.252315553 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.25154131 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.298931003 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.361921093 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.299871859 seconds)
  done (took 129.023539469 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.258955843 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.260993278 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.250319056 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.273833759 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.248513252 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.247147895 seconds)
  done (took 8.693906358 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.248356017 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.253053258 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.251277876 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.252566005 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.251695857 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.25167972 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.252898377 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.247064702 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.253716053 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.252998447 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.253366964 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.254190693 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.254349957 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.251988624 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.252523396 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.251521601 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.253196304 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.252736025 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.254137599 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.252537573 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.249697853 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.251846401 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.25301174 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.24990046 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.257254052 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.252886193 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.269774621 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.253294461 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.253241074 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.257436004 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.271062682 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.254697322 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.249663935 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.252831087 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.256598372 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.249700547 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.255935026 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.256861253 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.25402766 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.254790277 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.25640812 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.255096709 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.254794762 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.257009457 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.251218389 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.254546245 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.259806987 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.271002761 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.253441605 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.256607586 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.256593894 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.254386539 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.255501184 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.257529985 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.252690361 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.270973127 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.259194101 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.256654206 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.254889793 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.251911654 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.25800429 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.256586282 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.252270603 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.258310143 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.256776598 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.258231642 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.253339159 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.259948161 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.256989845 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.257183358 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.259543048 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.257680945 seconds)
  done (took 92.534224845 seconds)
done (took 343.890678176 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.062808194 seconds)
  done (took 4.221806947 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.510985977 seconds)
  done (took 3.672692733 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.605455524 seconds)
  done (took 22.010054047 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.265092747 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.350930434 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.247427762 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.24785681 seconds)
  done (took 10.27093498 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.54277762 seconds)
  done (took 3.703116768 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.251475302 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.251096239 seconds)
  done (took 5.665559222 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.40497545 seconds)
  done (took 3.565272254 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.404637113 seconds)
  done (took 3.566920219 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.269956851 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.269644506 seconds)
  done (took 5.707584661 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.239896641 seconds)
  done (took 3.401092088 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 29.779806379 seconds)
  done (took 30.941085836 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.262706008 seconds)
  done (took 3.428569946 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.28239971 seconds)
  done (took 3.443986871 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.707136938 seconds)
  done (took 5.868437067 seconds)
done (took 110.626951496 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.248705055 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.250597465 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.247958383 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.247721178 seconds)
  done (took 10.155974289 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.311213564 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.311306783 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.312603479 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.31111425 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.311542995 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.311829128 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.285337417 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.287019989 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.313011814 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.312676331 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.31176636 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.312607284 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.313213528 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.28684322 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.312013306 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.312466987 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.313238623 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.313348882 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.286753864 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.312468213 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.261568347 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.313918785 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.312242824 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.261952473 seconds)
  done (took 32.454325631 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.773382601 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.326156368 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.409155696 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.308538189 seconds)
  done (took 6.981028743 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.338966075 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.338598326 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.353776509 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.390131284 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.404664892 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.35271576 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.288881526 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.282379821 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.269566334 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.338947468 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.389467357 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.330537977 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.417119409 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.26171589 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.467745342 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.262201705 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.262242409 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.340449671 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.392352954 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.403421249 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.262117904 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.341292232 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.340724893 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.331975827 seconds)
  done (took 33.326685235 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.271240011 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.278764683 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.265202305 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.279638895 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.264771462 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.264410961 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.265014884 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.270384269 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.263076488 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.264465126 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.264133189 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.277759522 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.269491972 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.265562583 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.274387407 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.265985518 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.267329464 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.271493946 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.274178825 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.264379109 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.269275999 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.271488363 seconds)
  done (took 29.089195645 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.255176197 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.253451178 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.604507825 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.508934805 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.25430318 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.25797131 seconds)
  done (took 13.300801972 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.327774491 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.472253855 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.25990552 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.591902576 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.676259395 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.259992382 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.260399139 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.500127949 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.797165194 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.765638773 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.321511948 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.327800773 seconds)
  done (took 18.726929908 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.254511757 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.273575493 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.258892766 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.272645988 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.310783256 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.263421099 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.265543192 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.254277765 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.315509691 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.318361375 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.2670784 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.312374828 seconds)
  done (took 20.535542341 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.353882935 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.260172757 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.263708537 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32096116 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276409412 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.112435465 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.313589995 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.970398757 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.284163026 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.534115395 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260273964 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.351116423 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.513215814 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25974141 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.265412713 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.177522201 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.494367586 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.737084154 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267389807 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261969575 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29704789 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.262544773 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.264404584 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.485473927 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.111368235 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.261985684 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.523514134 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.260940853 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528564174 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.278488806 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27174382 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.261696894 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.537005661 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898669196 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.37860759 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462447595 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282400086 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.263595704 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.254716505 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.264208368 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.286513547 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.264843603 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.271911362 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262619369 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.261413471 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.26145243 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964622086 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.287946179 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.2620774 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.262471446 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.507371526 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360952691 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.268325799 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.262780572 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274768724 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264604211 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.268203033 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384582757 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856431948 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265524415 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275725367 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.267874308 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.264732102 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281849136 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861898316 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.27573423 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.269180505 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.26894533 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26433541 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.264594129 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.30052137 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264102485 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.288905651 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265649905 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951085185 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.271430067 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266438463 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.804912587 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27398235 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.26915157 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.494256375 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263877417 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264180973 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.264476348 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.265352447 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930264614 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.278375998 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.267117173 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.307113059 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.97751825 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.486850801 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289565108 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294160493 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.486139455 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.252134548 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26484257 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.265135763 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283770384 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287115158 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.963741527 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285675945 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.272021362 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.522639176 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.476938758 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272271636 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.186299608 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.735595353 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289902592 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.287107287 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.272749586 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.473512419 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.832543707 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.286680696 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268558774 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287791459 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.267981868 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969328662 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280666516 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.277806413 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.270278973 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.52127829 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.015295269 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274251842 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.336218821 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273664983 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.268766151 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273682556 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274222445 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.268349726 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.461067753 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.297420767 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.281970244 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.268780364 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268317964 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.272835894 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272504342 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.284027662 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.489158522 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275072224 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.54922329 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268415941 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267513691 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269307559 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.491958181 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.269645186 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.293702689 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.531360997 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279457433 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.284505358 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.282589568 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.283293041 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.372237613 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289570946 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.278421952 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.526921533 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.273827908 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.275127399 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.276006232 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.276159174 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276770272 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.277078744 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274605964 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.828414303 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276314425 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.273660697 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.15834074 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.285670774 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.336769384 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.277615541 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.473076226 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.284690508 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276606514 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.27790025 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.274721099 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.499084411 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.281305733 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.271781741 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.355675602 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.732728953 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.844578373 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.291274903 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.271854291 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.271255404 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.271280098 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270798635 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27181421 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.270947464 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.473128072 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.29029042 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.268683039 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.831315963 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278557579 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.272203338 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.283371832 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.283308729 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.279336653 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271777145 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.279564566 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283158057 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.291539077 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.286754451 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416610721 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.287899273 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.273299377 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.790699571 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.279596857 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.273377915 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.273517021 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307251332 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.273812955 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076227683 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.534187134 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273463016 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.518334257 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.276148172 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.291693564 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.272951841 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274126561 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274768576 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.305481178 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296427539 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.283606015 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.274430421 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279838313 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842417593 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.987666119 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790941803 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.280369461 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.292506909 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.280953731 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.978509576 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294680929 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.276125766 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.499844981 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.978961268 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29362645 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.742602938 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.294503479 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.007293022 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.524061022 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.511504274 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.285854616 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.280321022 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.523076913 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.490392741 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.309795204 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.277610989 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280239917 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.26214888 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.817659071 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307770181 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363166192 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981690798 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297621996 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.279603767 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.334566297 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.276906511 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.669366947 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.294003508 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277357443 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.27750456 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.281346655 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090950005 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.281681054 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.276922074 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865455097 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.289427176 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.745420618 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295542822 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.482381677 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.29219216 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.281601437 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.277711457 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.281354891 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.533787524 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.523717557 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284490827 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.290724843 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793998341 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.150807841 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.284837311 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279730475 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983531598 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284427129 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568833118 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.28947766 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.283986569 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285774637 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.280317076 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279831459 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.279173895 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.28275836 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279645504 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766178205 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.284191808 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28716912 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.28593441 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284057857 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.53372235 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.29526314 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.841900682 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.511420569 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.281011763 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318241283 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.28437765 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28409287 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.267948737 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.280565786 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.278857628 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328283636 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.502913809 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.282567905 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.267810823 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.350444579 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.507217808 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.280458536 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.291412047 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513878121 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.285572454 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.300655859 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994241379 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317220809 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.281000131 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284025863 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.279381922 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.319372187 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349926711 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.488278769 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.294305887 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.290848727 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.675419357 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30133089 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.283388402 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.295525047 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.377962056 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296022132 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.287303242 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.060414145 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.845601297 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989809047 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.851798127 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.534074218 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.284643242 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288448764 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282382627 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443016384 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.283895041 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.556252035 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283595457 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.277755269 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319991645 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287329601 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291548399 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.495672128 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.559074696 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.284367201 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283029162 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288753828 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.283644822 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.293859386 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.492629471 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.768996624 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842240973 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290872157 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.292910503 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.993295649 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.577322615 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285436179 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.28486157 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284858087 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.284225208 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.303141224 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.291844963 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286443106 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428420055 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.529681734 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935304606 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.311661501 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.314833051 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.802817778 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285489958 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.559084569 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.294703355 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.492819885 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.856231062 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.975164481 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.555566845 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.354912159 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.492553504 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.290922108 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449339849 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.294057385 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.290531312 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.286799231 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286549982 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.287618943 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.295467083 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.855922294 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.554757576 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.292478115 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.295098052 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320526025 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.295198088 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.509180577 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960278467 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.513784946 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.296849396 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.290443237 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.288013766 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.855455519 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.540803257 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289489348 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.293681069 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519428323 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.294768492 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.311934037 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.976363582 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.288392522 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830983528 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.263021166 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310084606 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30074052 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.969905737 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862083333 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.294171888 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775640786 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295781644 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292223795 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.567622142 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.294998645 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.298339352 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.569730823 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.29357086 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.301765519 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.50096321 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.859169645 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.031982393 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.315748299 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306043167 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.307578336 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289441955 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300219262 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290347441 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.291515195 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.69602418 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.308629259 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289688825 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.302157623 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.296188881 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308530035 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.293789515 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2902201 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.297429805 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.294497199 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.276700552 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.304249858 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41637634 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.838943799 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317133066 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.966761282 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.61717719 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.543887885 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.290044838 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.301665746 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.295289707 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292663162 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291608229 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291509279 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.289115142 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840674805 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.312979767 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.304328799 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.296439352 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.292347 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.500614148 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.299337974 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.501327853 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296071276 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.329364973 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.279858066 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292753778 seconds)
  done (took 927.729966539 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.327560307 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.301479947 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.310556924 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.360636333 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.302032702 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.395434053 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.365369736 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.301646126 seconds)
  done (took 19.861658015 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.294349824 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.300649285 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.292118534 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.300203795 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.293977543 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.74511367 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.308473443 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.296811212 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.308010235 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.29288851 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.300264327 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.927349067 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.312396267 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.291053719 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.289513893 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.301965282 seconds)
  done (took 31.052808677 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.160468656 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.385791304 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.059642377 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.302474598 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.295080052 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.299243487 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.484746201 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.30701661 seconds)
  done (took 25.493098703 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.29912662 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.299236831 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.300563197 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.300194833 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.300352289 seconds)
  done (took 7.697137463 seconds)
done (took 1177.567543701 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.299362529 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.300178267 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.300963774 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.299512515 seconds)
  done (took 6.397380712 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.281319569 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.281657096 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.281806993 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.293952838 seconds)
  done (took 9.336543716 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.936878713 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.872484606 seconds)
  done (took 5.00812174 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.761682121 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.761106875 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.761812949 seconds)
  done (took 6.485075627 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.579166521 seconds)
  done (took 2.778794033 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.17249949 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.266927887 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.938975417 seconds)
  done (took 7.579390742 seconds)
done (took 38.783462769 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.291245999 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.535329332 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.447594663 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.291110597 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.451542217 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.445315593 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.030743482 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.302119917 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.295741154 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.293503171 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.2919034 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.451381502 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.012366405 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.537921649 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.011718718 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.537955385 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.452111745 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.302778818 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.305159161 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.292838575 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.047437836 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.301494323 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.292343283 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.307506577 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.457141192 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.438034859 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.302529806 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.538465962 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.293856705 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.29551852 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.441718882 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.291131486 seconds)
  done (took 79.789896176 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.291547753 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.291464011 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.300211995 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.292183445 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.292444301 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.303497635 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.292454238 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.292266993 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.291918175 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.305702424 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.311135695 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.292828579 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.295408991 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.299493518 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.29280344 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.304630802 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.293592234 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.294168271 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.292141715 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.310021652 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.293541408 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.296127152 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.29333231 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.301473663 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.298288789 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.293248864 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.309244276 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.294314367 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.294111032 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.29426115 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.299558064 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.316471708 seconds)
  done (took 74.727118823 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.293895035 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.297889237 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.295821069 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.307910473 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.294077594 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.315210475 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.301125025 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.297877887 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.303067583 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.300310674 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.296758064 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.294731247 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.311421276 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.307079254 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.297160281 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.294865719 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.308962313 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.300366962 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.294714122 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.309399668 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.298489709 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.295257392 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.29454571 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.295167798 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.308752547 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.297266845 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.294223442 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.310487924 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.311454967 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.295716458 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.30194247 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.300135466 seconds)
  done (took 74.830236139 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.57617619 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.308017456 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.310231028 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.302351138 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.310148803 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.307337354 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.302921147 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.586200587 seconds)
  done (took 14.208826187 seconds)
done (took 244.757899394 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.31394942 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.787088025 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.347141365 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.301394572 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.325659295 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.327244246 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.521802492 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.343419258 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.521690514 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.326088023 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.322064708 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.301756941 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.075742704 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.457399119 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.10298879 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.216092467 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.151986105 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.310741033 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.853419138 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.580194748 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.329316757 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.302958285 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.105754014 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.181214565 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.295295465 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.401012435 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.398734175 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.52192748 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.457859673 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.382773976 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.800382735 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.307387865 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.313130315 seconds)
  done (took 61.491211314 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.304146126 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.408305751 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.308867694 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.309766495 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.409591582 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.308070969 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.303649428 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.309868555 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.308167975 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.309239299 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.3091785 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.311594755 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.310781004 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.338251394 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.413971311 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.302660104 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.304984102 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.405660719 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.306491035 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.302809222 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.334350399 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.309780798 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.312803534 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.339568801 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.310968072 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.311706946 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.409573003 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.3118705 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.312395749 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.405365853 seconds)
  done (took 41.152057371 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.310728877 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.883959912 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.012208771 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.31753752 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.30681416 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.312449568 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.576039389 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.316323717 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.311592466 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.312294732 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.78304376 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.313082427 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.34248529 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.034840626 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.310129106 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.313858665 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.312550584 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.309052023 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.892665029 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.317695045 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.593398012 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.317472696 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.577678013 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.323320296 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.329353977 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.309102912 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.313596269 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.111801419 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.332907061 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.773311818 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.036262608 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.575577505 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.042389171 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.039030552 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.041637399 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.316980588 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.312631553 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.778907214 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.315181532 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.309366674 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.575619872 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.314983207 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.017014578 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.988887801 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.326954867 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.314517165 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.127116508 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.795233071 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.539537704 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.320386999 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.041800327 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.312822331 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.313855981 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.311874096 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.537818967 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.31591225 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.309976993 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.12041751 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.332819971 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.579968665 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.316472336 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.310417034 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.894504794 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.311827158 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.888109467 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.316175002 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.321310823 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.331157075 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.02295755 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.313597747 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.0113956 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.327736338 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.316485234 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.775767836 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.89249897 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.193856472 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.317208338 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.895848911 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.073843824 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.599932721 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.321292424 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.08822571 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.597033133 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.315923099 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.318437407 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.318091466 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.317469864 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.393511462 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.577386293 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.952730668 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.011521956 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.146560306 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.60264073 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.325128337 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.31485453 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.121715216 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.334834812 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.321126299 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.02008241 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.005366489 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.330108881 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.321793982 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.009016229 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.33604787 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.584460683 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.323087078 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.033403395 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.31939352 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.424880548 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.317636873 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.321144207 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.334226177 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.583350805 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.321931582 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.318291054 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.985544773 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.806074439 seconds)
  done (took 184.555952215 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.320490409 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.309942808 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.316759846 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.308002308 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.308549285 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.315742715 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.308334155 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.308229983 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.313138152 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.310047314 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.309312086 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.317372053 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.315624545 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.308598401 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.310070293 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.311230498 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.309731111 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.315939447 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.310348352 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.30954212 seconds)
  done (took 43.452517814 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.320033578 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.843013493 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.813329749 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.325578645 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.319092624 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.316025063 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.366539942 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.319937496 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.318806248 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.594792742 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.476041213 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.324020218 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.319081645 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.319376684 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.807175421 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.313196355 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.59555596 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.845168613 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.323693653 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.841367365 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.312789229 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.320636652 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.31548448 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.841531175 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.605352102 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.583657677 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.372663696 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.841819278 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.323475298 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.320634171 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.841132204 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.324331285 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.316625031 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.840674757 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.340040527 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.335215479 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.322008945 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.370375913 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.370923193 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.599373133 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.852204414 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.590303463 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.336602307 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.48766021 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.322807508 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.310983372 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.849870839 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.340108315 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.311501059 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.323588866 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.327964515 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.81738217 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.337357054 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.817573833 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.341631989 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.323107296 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.845297527 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.823790901 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.830770932 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.48284528 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.321545308 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.584066983 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.328117852 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.854747469 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.335830942 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.319747652 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.31829488 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.477276494 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.859377684 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.583938258 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.602148686 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.597081874 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.320522028 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.370967297 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.330490579 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.594718751 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.373218287 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.70694569 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.595653664 seconds)
  done (took 119.567617561 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.569765409 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.417194299 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.697325928 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.897610954 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.313054693 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.444828706 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.415844887 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.553332511 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.319248796 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.386592001 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.937221021 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.427382214 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.035440133 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.392257001 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.409989305 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.444941031 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.684681168 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.267636576 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.002467175 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.905816993 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.317586358 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.40867678 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.836265517 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.516246201 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.307330547 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.86053805 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.241302258 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.947318865 seconds)
  done (took 51.171516534 seconds)
done (took 502.595132025 seconds)
SAVING RESULT...
DONE!
