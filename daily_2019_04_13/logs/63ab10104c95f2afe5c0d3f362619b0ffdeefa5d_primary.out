cset: moving following pidspec: 4398
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.30745405 seconds)
loading group "string"... done (took 0.587462821 seconds)
loading group "linalg"... done (took 7.199545382 seconds)
loading group "parallel"... done (took 0.166130037 seconds)
loading group "find"... done (took 1.126658323 seconds)
loading group "tuple"... done (took 1.993482369 seconds)
loading group "dates"... done (took 1.271777818 seconds)
loading group "micro"... done (took 0.236921164 seconds)
loading group "io"... done (took 0.971373957 seconds)
loading group "scalar"... done (took 38.697951966 seconds)
loading group "sparse"... done (took 12.440762998 seconds)
loading group "broadcast"... done (took 0.978916822 seconds)
loading group "union"... done (took 13.283359752 seconds)
loading group "simd"... done (took 4.491309624 seconds)
loading group "random"... done (took 9.184940304 seconds)
loading group "problem"... done (took 1.967335149 seconds)
loading group "array"... done (took 21.553462553 seconds)
loading group "misc"... done (took 1.961025305 seconds)
loading group "sort"... done (took 3.266993727 seconds)
loading group "collection"... done (took 18.845143886 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.539869917 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144448953 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119281686 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.140293907 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.186395523 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.132914567 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.146345687 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086926338 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.056204087 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.17081224 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143064239 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.489156528 seconds)
done (took 5.117253156 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.236141294 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088039418 seconds)
    (2/2) benchmarking "String"...
    done (took 0.09753284 seconds)
  done (took 0.886594648 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067703493 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128528489 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081946194 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069107415 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068332935 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082488259 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068282884 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066576594 seconds)
  done (took 1.274329748 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075439046 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069868689 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085849081 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068883605 seconds)
  done (took 1.010220967 seconds)
done (took 4.193971598 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.909894903 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.244329117 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190871626 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.462643026 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.148795083 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.192139611 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.686512803 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.313440958 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.213352423 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102944399 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107449628 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.387780864 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110408496 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.687537298 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077340873 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106867034 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.181712908 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.420531323 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083551117 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084759196 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.106735006 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142793164 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.100900348 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078356903 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.172101049 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070710598 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.150219933 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.099499881 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069408003 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.248530713 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.19239707 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.680688128 seconds)
  done (took 10.571474879 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101283457 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.118522155 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070433414 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142526847 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102133868 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086875396 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072409064 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085819136 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.095634618 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.164585643 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.117797168 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.109445688 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.084771596 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072544138 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.104076727 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.215494315 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109599054 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086277679 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089308332 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078960486 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.127205912 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084950075 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.097684085 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.081235566 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.156986705 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.198409708 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11526478 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.114579156 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072658094 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.083914949 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.134594546 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14607523 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068547934 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084634223 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.143035233 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.11428984 seconds)
  done (took 4.65542927 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.070790472 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.162203521 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093009772 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.154106657 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086464128 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110506299 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.084166562 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100358293 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.247489132 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.080756343 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.465041172 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129743221 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10212018 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069676271 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084944472 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.128426955 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068632851 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.522640497 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.1460439 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103219103 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104210964 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075543112 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.088403539 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.359439129 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068969991 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067561793 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085793188 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061012073 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146430052 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069405853 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.241495792 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088612596 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.090417405 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119238634 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.178485341 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095864547 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122659027 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082965426 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068052178 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.170493918 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065762378 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091173849 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067315795 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.106342226 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104773504 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120787024 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084692898 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069389757 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.182977252 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067522141 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100662858 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.887447413 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165471107 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077784056 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067167196 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.292944631 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102262263 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068678352 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06561492 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.265320772 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.154259495 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068500752 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.08587311 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068399953 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068406273 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.382936499 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068535868 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.746408304 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072436707 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077487983 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087683663 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069105264 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09156424 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073349097 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102398025 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068022776 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.069134764 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.086148801 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067706108 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086737285 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087552877 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.203219012 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.084472585 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068498073 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065813974 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103552404 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110901541 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.073116041 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066871476 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119075972 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065786174 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084520269 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068680817 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.120359054 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068328482 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.081958526 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08726758 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086610975 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129249845 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068679158 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.125496533 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.087198858 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100143614 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.088550228 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115233019 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080569041 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084774255 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.154120814 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066633687 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.066036264 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085897892 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066766422 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.086469124 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069922648 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098583151 seconds)
  done (took 21.060506022 seconds)
done (took 38.067577055 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.294715959 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093788078 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.093340309 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078836077 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.096163953 seconds)
  done (took 1.442154193 seconds)
done (took 2.202221843 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121050427 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118288695 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064996549 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113496303 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064825385 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.119399288 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116321154 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084569526 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121456191 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066975355 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114894523 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067141019 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065982767 seconds)
  done (took 2.026084777 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084448089 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085788608 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088303911 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083229464 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080645804 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085321258 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082836638 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108344731 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082910807 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091414458 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067635551 seconds)
  done (took 1.698296008 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083688587 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084872988 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087212451 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081891546 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081558607 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084840607 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081938454 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105351158 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081589855 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091791875 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066239563 seconds)
  done (took 1.689214012 seconds)
done (took 6.16384604 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079918318 seconds)
  done (took 0.829596665 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.702903729 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.532345586 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083676359 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.133879109 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.221662568 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.153690985 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.44574171 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.112210755 seconds)
  done (took 10.319776356 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091109612 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.087976302 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083379443 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.089654937 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073452564 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.089757962 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071060501 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07339357 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084593593 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072800237 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.088443743 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073206471 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.087101602 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071869805 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07142913 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.088056017 seconds)
  done (took 2.11722449 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095135522 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093713907 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.09251752 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078843551 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093116182 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076581797 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.095858675 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077533087 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.089445609 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075960401 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.094415825 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077920372 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.090845683 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.069705997 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.093992435 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080138863 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.090190424 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078263418 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.0953959 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078231304 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09491652 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.069072891 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.091257368 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078095134 seconds)
  done (took 2.916651652 seconds)
done (took 16.939981184 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.132191229 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077771062 seconds)
  done (took 0.968968153 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083404463 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098755308 seconds)
  done (took 0.951059444 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083775952 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082145656 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092047415 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.096650542 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084115054 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069292615 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.105650579 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070458534 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.084601783 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069754296 seconds)
  done (took 1.606599355 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069792424 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095025372 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072967206 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.100112194 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077754357 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083788953 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.077093023 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087631407 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082324583 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082267137 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074765292 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.102214477 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07500355 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.103519257 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.077342196 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.087546206 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.090217941 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070783669 seconds)
  done (took 2.279630671 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066777227 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068873161 seconds)
  done (took 0.905566144 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069815465 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065130482 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083562778 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067857573 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.08179931 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06563412 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.082105134 seconds)
  done (took 1.285217156 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.402430563 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110348599 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.260467784 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072576246 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104943991 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.262592383 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.085282321 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072659621 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089915008 seconds)
  done (took 2.269136126 seconds)
done (took 11.03244978 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080846318 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088238122 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111494971 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.421583954 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.1064257 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067184668 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.143882816 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.20752506 seconds)
done (took 1.997928977 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125650653 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.61987308 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404801056 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.213103324 seconds)
  done (took 2.012152812 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.380984139 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094301693 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076681562 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069697115 seconds)
  done (took 1.397923869 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067096595 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070698947 seconds)
  done (took 0.91677149 seconds)
done (took 5.226610724 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068422819 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067341231 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.104140615 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065626127 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084972748 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065283138 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.065081744 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.082574758 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06733755 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067301183 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.08460849 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.071189534 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083673275 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067062776 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067192659 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08472332 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066555455 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066521693 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084400734 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067011611 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066742718 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084905783 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067156551 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066560514 seconds)
  done (took 2.577383253 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086290469 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084523149 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072979024 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089823144 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072924924 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.089758121 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074881948 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069670295 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.090924871 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.072068908 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088993849 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.074214436 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.087483888 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.074245993 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087168568 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073539355 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.09045758 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069948358 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074507843 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.089191247 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075236291 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086598533 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073449866 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090956527 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073114998 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088771816 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071702796 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.086235401 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075183925 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.089215799 seconds)
  done (took 3.205308792 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071871258 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06513775 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082722585 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07293638 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066507119 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.084687636 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06716493 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083808929 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067375162 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066632841 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.084628212 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066527867 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067207048 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084584524 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06862947 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086506444 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.084269563 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067881693 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.083506948 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067632805 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070108343 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.083478685 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067694902 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.083111402 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.067363897 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.067074439 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.083465369 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066599409 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067787383 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.083398876 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070611017 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070386016 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.083660287 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073701892 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.086630877 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066429744 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070722709 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.082657972 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067721136 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067449719 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.082567445 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066722185 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066798641 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.090453289 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.067811466 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.085293168 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067090384 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068478576 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.083678473 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070171229 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08299038 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067329083 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069349291 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.084491895 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070994636 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.067015706 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.083702986 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066961562 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.083873439 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066841768 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066746268 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.082419489 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069807912 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067846834 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.098757768 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07431326 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082678535 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069166054 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067940918 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085636124 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068373279 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.080973605 seconds)
  done (took 6.15992125 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.118525285 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091942398 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084625132 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06885235 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081711175 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066973668 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07078312 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083556964 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069238143 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088901995 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067660987 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068922625 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084575184 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079641521 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08304359 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069244596 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089509918 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065372987 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068100827 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086858091 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068099661 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.086519874 seconds)
  done (took 2.530357163 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.186874443 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089830339 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.111327073 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093083581 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08638784 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076220163 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087979866 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073542189 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072449514 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089012033 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070936006 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089433189 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072025315 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087601967 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072158024 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088296953 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074182042 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088623729 seconds)
  done (took 2.398166341 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078996403 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068189738 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107958813 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068499382 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.086617411 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070912003 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090802203 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078362693 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.088448521 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069671835 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093821083 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072394616 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.088612309 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070013889 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073140603 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.086448897 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071995843 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085666213 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078606037 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091410273 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075598036 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095271858 seconds)
  done (took 2.581260836 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082201847 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06970328 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101740658 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087389274 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066161319 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067836219 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.091995193 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069889649 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.091766602 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071521927 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069438629 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08455663 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.074415469 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086385731 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.075761395 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086087693 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071433399 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069735862 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087823868 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066514396 seconds)
  done (took 2.362595984 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088446758 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086157035 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071198144 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096020189 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071736803 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087215294 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079822818 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086647821 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070809467 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.112146503 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071626705 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087093639 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0803977 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092484743 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071443767 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095714783 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079445331 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094875885 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07105231 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086955018 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111632107 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.181702758 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094757867 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071677359 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087226318 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07061736 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070761803 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091724332 seconds)
  done (took 3.256736191 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06819124 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067717942 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083026223 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066369419 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065692081 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082953619 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067271788 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066471396 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086080719 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067147281 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067921052 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.085652404 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0696006 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.08453257 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069199596 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068494062 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08506596 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067056517 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066609 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083228786 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069643723 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067978771 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.085183557 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067041435 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082424502 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069202451 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067898809 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083701665 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069572549 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067323754 seconds)
  done (took 2.991787998 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077878994 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092319336 seconds)
  done (took 0.967874242 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065407412 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082909877 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082793174 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072189362 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089561623 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069011333 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.094284453 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073449022 seconds)
  done (took 1.424048126 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083781176 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079631966 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087539941 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079974051 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095559411 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084784049 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.15869262 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.089220913 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.077086479 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084945605 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084692171 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069266391 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.093752567 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071467075 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093019165 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076541072 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.069174288 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.092516948 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.073002596 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.085966892 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072076538 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095176709 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072450681 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066860835 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.088684731 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.07950514 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.098692512 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.071284526 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089726289 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077497167 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091291951 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.064302487 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070121123 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.08715559 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068117041 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.097704817 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084722327 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089195183 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07927646 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070447981 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096754763 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065842628 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090796222 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077272505 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097179102 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070868753 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.087194927 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065695719 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06758148 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088133185 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065142249 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068740632 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.081035661 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075976867 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088688948 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081519349 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.088160619 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070858572 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072421045 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.090387084 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076382034 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088621414 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071950433 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069552812 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096311069 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075219865 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095617438 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065361624 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064045382 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.08536131 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080007023 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109027025 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076161569 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.087770689 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071835775 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.085020729 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072915917 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071370731 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092610891 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076136602 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086792073 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075266718 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092418702 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06856708 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071730881 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093203206 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067198414 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087836994 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066873288 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102657265 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06925983 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.084070469 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067374844 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080835116 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089756619 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.070970781 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.084446107 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077668241 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064207012 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.087818277 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072052246 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08709623 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.081156403 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092367976 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.076270356 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.096394622 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.078178223 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069441585 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.091443742 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06732939 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088573086 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.069267179 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076674673 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.081659047 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073426173 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087897427 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071149145 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.095054707 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.068425581 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070014212 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094871763 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075555055 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.08599866 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.066980247 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072594159 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.087005499 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073243057 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094378903 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069091794 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064613569 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082213249 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073598055 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.086763539 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074077273 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091998614 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073391789 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064537964 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.085683849 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074609824 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.096101196 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070633742 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.087348391 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07577607 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070626946 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085804495 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075740709 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087807255 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06955034 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075067893 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086893574 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065590552 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090285863 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072880125 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068198657 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.09027505 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074137389 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089111814 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071125919 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085829276 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076656774 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070115767 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085309858 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0699999 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085752595 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080108157 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071415216 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.082890599 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067197523 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.094557157 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067971397 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068933765 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.087295779 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072484342 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.088411354 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.069124539 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068946593 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089572726 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080764564 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091390389 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071552995 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092542906 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081668808 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.087020326 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072597654 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070426189 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088854226 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.07168337 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.095366681 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07605347 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092842892 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072968008 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066818383 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093094688 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078211044 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086330524 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068481819 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068247402 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090808845 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074486401 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.090806316 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.071320391 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085269957 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071157167 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073568991 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.09033958 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070523443 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086232273 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075806686 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.086644425 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.076459691 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071858403 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.097994596 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073701193 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.0832227 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074092003 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085042858 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075705467 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064950303 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08524358 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069726097 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.088475763 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.069386393 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072913079 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.081718186 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076817029 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094741403 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070466736 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069118552 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.087008568 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076694247 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088480065 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073342357 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07156312 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.09330565 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080990206 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086715092 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073735366 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.097618639 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070300465 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063878313 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092387316 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.068819958 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.086218545 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.069945641 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068289311 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090319518 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078257989 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093941728 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064441372 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08919122 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069139111 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.069479868 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.083241151 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074623622 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090285337 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.071042437 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075883671 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088471465 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.072026184 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090993067 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070184565 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069742108 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088437034 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073840394 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.088033082 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073000231 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086500575 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073575999 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069662433 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.085140281 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072145401 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.087450991 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069927969 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07513839 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086357444 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07071973 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089315451 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.07114639 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070966646 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087130919 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069592482 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089660703 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070796873 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069689236 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089496603 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065782733 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093602117 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069415917 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077561167 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.088039676 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067365381 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.092369484 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072722984 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.091759453 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071297921 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070888405 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08784247 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070675245 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089777708 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076750063 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066675139 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.097267642 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077572898 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088491884 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073064606 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.087100713 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071325669 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068508722 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088486458 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071621287 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.087531733 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070124031 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074401803 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088822031 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070167146 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088959448 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071566763 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.07014656 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.089133198 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065619793 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069078378 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087296138 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070168744 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097114971 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071579934 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087082787 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069377456 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071580876 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.087247847 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067270607 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094431893 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079305693 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088272105 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077444858 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.086705605 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071388881 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080167989 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.082478898 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068499164 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.084673827 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067810489 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076940273 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.089147553 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079305685 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.087972507 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068960247 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.067734878 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.089120033 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069046285 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.081730079 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.068165726 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073558794 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086834711 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069515509 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.08777691 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073220814 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071453244 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097878498 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070383859 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088705945 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071118213 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066855945 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086974668 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069222623 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.09070861 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071408321 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067706384 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.085295127 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070480927 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087959098 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071452562 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070119437 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088736072 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077509279 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087509514 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072442976 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072795714 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.085803587 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073178544 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.087749162 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070345309 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068832555 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091791513 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074196952 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088807282 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07900507 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.087018854 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070445418 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070640967 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.085626989 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069741939 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.086999048 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069830785 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068916295 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.088979646 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078742361 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.085804551 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.0733791 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06969053 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08787362 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077587021 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.088559528 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073233351 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094627731 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070397939 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.07055716 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09472721 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073762039 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09003233 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07193095 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.088810904 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076160437 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068760351 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093917034 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069966623 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.087252119 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071651662 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067279091 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086382764 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069287785 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085667146 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075726954 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06949313 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085172127 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067838583 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083787804 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069844435 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072011196 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093637359 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071192827 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089171888 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063933701 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065681431 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087689512 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066309241 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08824265 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07320899 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074320259 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.091354529 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070475303 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086790651 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079450281 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094051389 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074071268 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067764034 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.09187537 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.071386698 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.090080564 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071309154 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069903838 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090140754 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074646503 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.089203324 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069755794 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075683249 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.09034899 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071598503 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.08811646 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071482168 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068639912 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.083251669 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070947128 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.0889471 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073608325 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.088730106 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070200585 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078730196 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08501708 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069641864 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090040574 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070079902 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072404196 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.083124594 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070390986 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087611834 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070772099 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063641932 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.086061212 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066911805 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089066858 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06934796 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065632445 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098965867 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.079934091 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091429456 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070268261 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086849623 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.066156492 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066261138 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.087140743 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071907796 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088938584 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080454218 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068934327 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086990623 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065778355 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087558668 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07419823 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072997251 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.086100268 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065651009 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068144861 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092026779 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075068288 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086543236 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070354002 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09115091 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072274142 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067579125 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090286034 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067864573 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.090946746 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083298107 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.08817145 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071482043 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076811435 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096391274 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070696765 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.083729784 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071256507 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073229449 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.088640279 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071261649 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.089779659 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08590742 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091345088 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069494695 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06879708 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.0908092 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06910545 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.096061072 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071844537 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.088311854 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075661976 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071170672 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096725604 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07293959 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096777087 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073274269 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091144259 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.07012283 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0696967 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.085823055 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069219982 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.08852195 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.072233341 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073801674 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.096348995 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067824357 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098106219 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079550111 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.090362884 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06808182 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068635918 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088455662 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.066719741 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.08954678 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068701947 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068764957 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.086559612 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.070942335 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088547908 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076718336 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070523148 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.089374786 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070446345 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082336275 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072400003 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07187729 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089459873 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067164246 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087853722 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.071766556 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073949292 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091846193 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068184144 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088637909 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071598924 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070584055 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.08375885 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077133567 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087268464 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.07249045 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069588726 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088853614 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.072414137 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09182786 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.076096956 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08934437 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.073237208 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078680454 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09048558 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.068324845 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.084788311 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075727393 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068217789 seconds)
  done (took 48.056273213 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107809241 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084501454 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064752444 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083208936 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078230379 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085689435 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065629712 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066247545 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085623666 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068991631 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083882585 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065535646 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092520881 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089794506 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096416777 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070644212 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084111857 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067153065 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083882695 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06718515 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09276452 seconds)
  done (took 2.529391283 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076726009 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.092104222 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075315858 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098565551 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071125517 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093018051 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076616717 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092630449 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098276416 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071459881 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.098473345 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074566949 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089349992 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071455732 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089160809 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074650217 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.098797378 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072113092 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.09150655 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077878983 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09297082 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077266342 seconds)
  done (took 2.696857049 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069336978 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067909706 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088235201 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063912746 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067723401 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.083237417 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073486316 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.085013872 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073762372 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.077018025 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.086655316 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068676718 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.08836334 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06585791 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06932807 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085267784 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.134906419 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073735055 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.069075521 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.090081576 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065400904 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.08992464 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065318353 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066010123 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.087035515 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073937137 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089412928 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068248876 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069487041 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.086716174 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070433434 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.085420414 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.07127371 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070055576 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086455384 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069001486 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069208209 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.088528763 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066367253 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.084976193 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070960666 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.066375867 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.089042604 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071865945 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06703964 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.086409353 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071420094 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.087773206 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065373524 seconds)
  done (took 4.62992483 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085825181 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.132242814 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.09044206 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093376304 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.106204365 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.096117678 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073725611 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.114907958 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066954045 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087783756 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085776401 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.107097 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089550906 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074515609 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.095272641 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070691684 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088686018 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06905272 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073727356 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088824704 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072847116 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.0943935 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101405742 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.083042535 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090519643 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06883281 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086053813 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074563579 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.101245991 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.074782904 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.093030395 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075114115 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.103393265 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.093378463 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068963342 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071811589 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.104392859 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088045712 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072073313 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066579683 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.090764084 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.074146883 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.094873688 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.104826453 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070958504 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074589706 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088793463 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066633175 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.10182495 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071610645 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.096229709 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.102995082 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074397679 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.088072993 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074741144 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.103174325 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.07031787 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.086533515 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072777349 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.10076539 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.068011084 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091413871 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.084532455 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.090586781 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.077506744 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102844815 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074121431 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092554705 seconds)
  done (took 6.84387358 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077233795 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093624115 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084493173 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10405374 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09451485 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077062732 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095280265 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.077147446 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094373604 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082046543 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095032862 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118151252 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071844965 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.0981734 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.095522041 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.077208925 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.095900129 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077325451 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095153957 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077603085 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.09496916 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083964834 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095749174 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.103010302 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106304483 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.090733961 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076219127 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.096086969 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102921473 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077257329 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107505724 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076293882 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.096317706 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102867729 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.088319203 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095609531 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06937058 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095452446 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076572993 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.095757527 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071408411 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103806711 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094884431 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072587936 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095259058 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07701778 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10427587 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.106689401 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079775573 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099930863 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.077249998 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104238738 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094578987 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077220934 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104079483 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128764692 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084263104 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104727512 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095357066 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08466454 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103981891 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.110855975 seconds)
  done (took 6.545933722 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088102889 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096332741 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098489267 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065694347 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067483813 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093291331 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068423982 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085845103 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079002753 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097628478 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081355248 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092686311 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077034742 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100885318 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092518332 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077651156 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092804527 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074604509 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097331209 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073942347 seconds)
  done (took 2.557888835 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077886197 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104391488 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069256351 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073552355 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.092505239 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075552892 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.091678429 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073417242 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089509923 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073958759 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098777006 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.081129978 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090111098 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076110711 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099292093 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076194661 seconds)
  done (took 2.204180964 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08059802 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097726796 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082958651 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089092219 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068523 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08529722 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070541873 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065901664 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.086684083 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.084799913 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.090554832 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072784072 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.089249441 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06878734 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066761781 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092975121 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.067063433 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.087254759 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.071001735 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103657373 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.081812774 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.088071555 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070750057 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.071809507 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.089961538 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.075469892 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.089694945 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067538107 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087699528 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070936778 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089323396 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.078028995 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.085762404 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068804497 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068406991 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086963128 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069949755 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089260507 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073333131 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069436818 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08773894 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069877669 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.088487637 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.07153296 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084883963 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070665222 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.066479768 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.095434908 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068216582 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089541911 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070163885 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090444818 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071853137 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.079366194 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.093813491 seconds)
  done (took 5.257939425 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082450013 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071261121 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083036171 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066405018 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091066471 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.072327975 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073029244 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091721677 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071516311 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087224953 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072758102 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091621448 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072100867 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0727296 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091942209 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073919437 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085164409 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071993497 seconds)
  done (took 2.288755578 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073982112 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068574929 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095662685 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070071674 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089000472 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072655131 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065579356 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.088399998 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069161791 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088745293 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070667591 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.0718918 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087554356 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072943937 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088853422 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070585556 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071889365 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087787559 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071145959 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084505735 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072683344 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068756729 seconds)
  done (took 2.568326479 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073514694 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.094897997 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.163042131 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.109666695 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.085435227 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.10226998 seconds)
  done (took 1.497599249 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092154466 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099476684 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06967133 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108568903 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07842816 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091347091 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07205462 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091329043 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08061418 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103902615 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072207877 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099936309 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09871118 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080679296 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096999036 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077637906 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091956009 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071330738 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089888738 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108949413 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07242152 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100092389 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072965272 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091081279 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072375807 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098835581 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080496823 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105289981 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090012956 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08079678 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096327796 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071978467 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100693949 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104431722 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073661982 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099123343 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072609731 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108796989 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07737779 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100262531 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072303451 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09851635 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100043969 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078231419 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099268171 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072140745 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09689896 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072069766 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091403148 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114705257 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077978071 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099940778 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096497875 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081068378 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099177241 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11710218 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085246069 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099523672 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096830203 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086175202 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099477664 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07779722 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100607295 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105311859 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07820536 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100198739 seconds)
  done (took 6.811064213 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086189386 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106659436 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07077128 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104212039 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099834821 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071993958 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090828321 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072213448 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09121394 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072343837 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131733511 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0726345 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10074008 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098925573 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072894187 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091097575 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072336717 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098699494 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071979838 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115748399 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09167213 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081225234 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099513787 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099773254 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086041969 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096815021 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07208098 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090871214 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072254096 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091763918 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076917679 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092045215 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099529553 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071800659 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09920701 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072593461 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09178207 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076847843 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091815846 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078300994 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099723158 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108540461 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072321465 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091190557 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085479392 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092156081 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072111822 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091664237 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072262659 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091145045 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084761498 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105719688 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104903638 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099320385 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072962113 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091737852 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072539278 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091766392 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072404658 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096823524 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079783781 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091559088 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115807019 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072610005 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091113799 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080805703 seconds)
  done (took 6.699478653 seconds)
done (took 132.419704012 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.211672849 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.18594655 seconds)
  done (took 1.264707618 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070730942 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096780795 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09969398 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129645178 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087717961 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101493409 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119984596 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080081826 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067705277 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087785001 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068510195 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089197898 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13475657 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068447771 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088124696 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070837145 seconds)
  done (took 2.336020863 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103273752 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.196355478 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11051438 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066893829 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101072461 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080832157 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088652609 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080589375 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097644728 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069299428 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079504905 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.098496912 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066525323 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097760363 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078031124 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.101438546 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068752432 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101985896 seconds)
  done (took 2.567872493 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104439204 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142698111 seconds)
  done (took 1.123776359 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.20593056 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.123265837 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201809147 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.425261815 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.212678635 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.281529671 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.177434517 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.176594196 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.161164727 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.169024043 seconds)
  done (took 3.006287449 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100242567 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.17148304 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.315751507 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138135843 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.087328718 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.11670525 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.140295837 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.090477303 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.102002041 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101449282 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082467533 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.100744682 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100136856 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.098715748 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07599359 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.10016598 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.122619164 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.078975104 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.080261523 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099723552 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.122192624 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070581803 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078176131 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.096689673 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078605905 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.099081551 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06785834 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.08715426 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076840848 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096314754 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080136748 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115387138 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098971223 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.134850956 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.085310608 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.134080777 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.101603784 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076248694 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.098964212 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076750767 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.101053154 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080374523 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.106547632 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080017195 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.088799921 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081728944 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.089668425 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070046425 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.102630495 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.080756049 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.100666851 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.08201034 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.133045363 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.100975187 seconds)
  done (took 6.351790337 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.75146514 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.111138546 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095861906 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.813974446 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09080152 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107525135 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.71911334 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.120820991 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.213107201 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.769466831 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089844769 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.101226415 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.186184005 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.238016089 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.884484887 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.286446733 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.644307184 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105629257 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109600865 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.13404686 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140292584 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.179072221 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.15577314 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.442637447 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.076503345 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093972475 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138944645 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076219909 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163329174 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.086361529 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095605026 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.157679741 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.229751342 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.157003307 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100211397 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073270754 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095477928 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.150180504 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.223604248 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195488968 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.162379535 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070483704 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093303959 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.143038869 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135518301 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070562903 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.140966449 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175503315 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.152408647 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076553561 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.098236452 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.146104895 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.143619558 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.145764207 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.104969608 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.273743336 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.287759129 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094207578 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101616195 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108033675 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242984276 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087855184 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.200899048 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14331739 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.171813444 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.094822889 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.737148575 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.150254791 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.095998529 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07800495 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121528385 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097282426 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.144719841 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.147804606 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.372664032 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.146019745 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.076553496 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093449292 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.212279145 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.106539408 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07388771 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.145368216 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.095943333 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.103795794 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.165759998 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.147351592 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.149847113 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.210771914 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.144934405 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.163917003 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077254695 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126045112 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.07759413 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.2151584 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.176735876 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.143489884 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210847848 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.141934865 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.145543554 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.151443018 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100065287 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.153475494 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122744517 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.08440533 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142271663 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.195895117 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.127111161 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086219219 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097863423 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.14392135 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.129126622 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088527488 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.16503969 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.153103275 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.461253873 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.15010473 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.091512677 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.09095878 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142445914 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.144344624 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100324736 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.240935692 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103576696 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169786215 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102338867 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.092452636 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12331891 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.144386654 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081185513 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125734837 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.161990911 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080071796 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.218342618 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.194940996 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.08090256 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.217725603 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.164555017 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.079124663 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.151599848 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124936793 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.149928296 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100961462 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142130261 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.078425212 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.773966818 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.146336113 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125104858 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075636862 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181731236 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09433336 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086170077 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.108714738 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071471448 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.787562039 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087352797 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.103627252 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.084348607 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097130368 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123160752 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140405232 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075824629 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163001372 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.184943228 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100515969 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121539637 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.086142181 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.142941126 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.10071275 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.086207179 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.108111 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10784007 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.126767746 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07663726 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106720652 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.149651247 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.145267617 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.196191021 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.546157273 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072150891 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10694365 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.203472551 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074622118 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.264281503 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142148154 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.200362594 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.146096089 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.084631971 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.292912538 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.147805091 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.182285238 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089330279 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.176931423 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072296297 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.140952681 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.145184815 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094909188 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078938292 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.142805323 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.168760917 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.14620771 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.913804019 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092334601 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.205609306 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069184915 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.150610414 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100174413 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098589657 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.243499657 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.095669164 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.150334012 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.146021976 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075999973 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.108309382 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.674122948 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.107081677 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.142276393 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09862531 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.176030578 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.144577024 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.161510389 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.141970183 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078787066 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.14158988 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.188279167 seconds)
  done (took 41.100092301 seconds)
done (took 58.62722506 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.261506173 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.180186297 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.243035734 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.14526999 seconds)
  done (took 1.802024574 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.145106097 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105507693 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119640811 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.088199763 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.108039322 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.089626991 seconds)
  done (took 1.553483683 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.412793041 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.273786142 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.238915681 seconds)
  done (took 1.827578226 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.266049627 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.221224278 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.45746711 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.302591553 seconds)
  done (took 2.276128819 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.177469785 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114683369 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068444632 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107474112 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.161106195 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.259475289 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.133231105 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.19372307 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083261493 seconds)
  done (took 2.248153018 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.203969583 seconds)
done (took 10.816331448 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.189179875 seconds)
    (2/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.253112721 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.149698176 seconds)
    (4/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.171080372 seconds)
    (5/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.14139071 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.183967319 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.117407799 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.118179359 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.125502308 seconds)
    (10/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.284575615 seconds)
    (11/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.125805053 seconds)
    (12/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.178200703 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.087039248 seconds)
    (14/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.265035981 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.135191308 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.083088425 seconds)
    (17/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135029826 seconds)
    (18/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.188177459 seconds)
    (19/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.112534992 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.077233264 seconds)
    (21/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.259139131 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.222303045 seconds)
    (23/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.296508561 seconds)
    (24/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.06272411 seconds)
    (25/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074753728 seconds)
    (26/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.094437692 seconds)
    (27/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.078455023 seconds)
    (28/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.09590904 seconds)
    (29/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.115373715 seconds)
    (30/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.242287994 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.163323213 seconds)
    (32/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.116282874 seconds)
    (33/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.111037605 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.096227151 seconds)
    (35/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.097713563 seconds)
    (36/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071468937 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.193493618 seconds)
    (38/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075582357 seconds)
    (39/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.122897713 seconds)
    (40/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.074596013 seconds)
    (41/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.265142522 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.11163225 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.129878388 seconds)
    (44/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.267994329 seconds)
    (45/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.10261515 seconds)
    (46/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.235227476 seconds)
    (47/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.123469895 seconds)
    (48/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067125758 seconds)
    (49/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.0820009 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.121994688 seconds)
    (51/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.114646396 seconds)
    (52/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075700751 seconds)
    (53/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.158892304 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.103731969 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.118945254 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067812002 seconds)
    (57/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.098102583 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068359104 seconds)
    (59/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.182100957 seconds)
    (60/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056424622 seconds)
    (61/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.074035203 seconds)
    (62/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.137438996 seconds)
    (63/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.081723037 seconds)
    (64/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.264418583 seconds)
    (65/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.172856803 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074527654 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.09836085 seconds)
    (68/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076699728 seconds)
    (69/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053196317 seconds)
    (70/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.106006019 seconds)
    (71/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.075127758 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.088848258 seconds)
    (73/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06970838 seconds)
    (74/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.095567205 seconds)
    (75/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.075483763 seconds)
    (76/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.118572762 seconds)
    (77/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.099832326 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.130624761 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13677213 seconds)
    (80/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.167106128 seconds)
    (81/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054155196 seconds)
    (82/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.099513213 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.13308496 seconds)
    (84/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.096514169 seconds)
    (85/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.272693561 seconds)
    (86/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064072966 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06728249 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.089654791 seconds)
    (89/309) benchmarking ("sort", Float32, false)...
    done (took 0.129905517 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.173958129 seconds)
    (91/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.053585791 seconds)
    (92/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.259214072 seconds)
    (93/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.203644081 seconds)
    (94/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.257978866 seconds)
    (95/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073080392 seconds)
    (96/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.100591327 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067982417 seconds)
    (98/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.102030365 seconds)
    (99/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.262465016 seconds)
    (100/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.074413479 seconds)
    (101/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.094915262 seconds)
    (102/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.263484973 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.091534396 seconds)
    (104/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.226416838 seconds)
    (105/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.079809047 seconds)
    (106/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.070811662 seconds)
    (107/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.081751535 seconds)
    (108/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.251657148 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.091763804 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07862568 seconds)
    (111/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.263239968 seconds)
    (112/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.072380447 seconds)
    (113/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.244138389 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.173972187 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.15190009 seconds)
    (116/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.07815271 seconds)
    (117/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.056679551 seconds)
    (118/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.055855921 seconds)
    (119/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.106773064 seconds)
    (120/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.1025619 seconds)
    (121/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.243379983 seconds)
    (122/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05621232 seconds)
    (123/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.095582677 seconds)
    (124/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.065758366 seconds)
    (125/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070728732 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 0.158735911 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.123514366 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07719086 seconds)
    (129/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.249463234 seconds)
    (130/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054544647 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074835412 seconds)
    (132/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.089451247 seconds)
    (133/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.172829193 seconds)
    (134/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.094164399 seconds)
    (135/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.146225497 seconds)
    (136/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.219936555 seconds)
    (137/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.097482594 seconds)
    (138/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.251531095 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07406829 seconds)
    (140/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074044674 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.097279728 seconds)
    (142/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.241699426 seconds)
    (143/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.15157696 seconds)
    (144/309) benchmarking ("sort", BigInt, false)...
    done (took 0.214559924 seconds)
    (145/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.104572625 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06981174 seconds)
    (147/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.077477479 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.118675375 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.098203537 seconds)
    (150/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.069245427 seconds)
    (151/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082155293 seconds)
    (152/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.099454365 seconds)
    (153/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076008932 seconds)
    (154/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.099235058 seconds)
    (155/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.058140601 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.114025736 seconds)
    (157/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.077776698 seconds)
    (158/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094542358 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.128741786 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.078150592 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.093753207 seconds)
    (162/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.087388968 seconds)
    (163/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.057461213 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.125222059 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076355043 seconds)
    (166/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.099026671 seconds)
    (167/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.05535122 seconds)
    (168/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.079025891 seconds)
    (169/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.077655633 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.097359474 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.192255144 seconds)
    (172/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.133533087 seconds)
    (173/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.141113356 seconds)
    (174/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.20004958 seconds)
    (175/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053908561 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.168370073 seconds)
    (177/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.100720288 seconds)
    (178/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069882287 seconds)
    (179/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.09870303 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.13590093 seconds)
    (181/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.055562145 seconds)
    (182/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.334388393 seconds)
    (183/309) benchmarking ("sort", Int8, false)...
    done (took 0.168741128 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.198231045 seconds)
    (185/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076699909 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.113833609 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.095858526 seconds)
    (188/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.056421596 seconds)
    (189/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.077249425 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.06981886 seconds)
    (191/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.055418948 seconds)
    (192/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.12298275 seconds)
    (193/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.068960644 seconds)
    (194/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.077197497 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074530292 seconds)
    (196/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.181264104 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.137753554 seconds)
    (198/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071884294 seconds)
    (199/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081874681 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.101099166 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06939115 seconds)
    (202/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.077669448 seconds)
    (203/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.21738624 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.076774823 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090602433 seconds)
    (206/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.068341168 seconds)
    (207/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.090989344 seconds)
    (208/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053691486 seconds)
    (209/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067182599 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.091097129 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067170011 seconds)
    (212/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071449404 seconds)
    (213/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.090571205 seconds)
    (214/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068961764 seconds)
    (215/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.092859063 seconds)
    (216/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.067185308 seconds)
    (217/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054461446 seconds)
    (218/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.098574377 seconds)
    (219/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.056604799 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075988807 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.099814511 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069897212 seconds)
    (223/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.056811329 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.116420579 seconds)
    (225/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.06446648 seconds)
    (226/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.078346118 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.098432765 seconds)
    (228/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.080598636 seconds)
    (229/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.081722316 seconds)
    (230/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071839473 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067070066 seconds)
    (232/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.086505582 seconds)
    (233/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054909364 seconds)
    (234/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070640997 seconds)
    (235/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054487035 seconds)
    (236/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.078442024 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.143548119 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.119838071 seconds)
    (239/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.056764238 seconds)
    (240/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.239332336 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068485499 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.120948839 seconds)
    (243/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071396955 seconds)
    (244/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.195577548 seconds)
    (245/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.053767931 seconds)
    (246/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.098394826 seconds)
    (247/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.055590121 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.105529514 seconds)
    (249/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.09352834 seconds)
    (250/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.053361196 seconds)
    (251/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.116120421 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089272234 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.116535365 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068276379 seconds)
    (255/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.071361556 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.159824511 seconds)
    (257/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.054964093 seconds)
    (258/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06867952 seconds)
    (259/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.077450552 seconds)
    (260/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.064125022 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074375825 seconds)
    (262/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.076628078 seconds)
    (263/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.053564484 seconds)
    (264/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079086848 seconds)
    (265/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.087623266 seconds)
    (266/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.069619312 seconds)
    (267/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.053722138 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.1003608 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.125400867 seconds)
    (270/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.090783331 seconds)
    (271/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.055092637 seconds)
    (272/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.056980993 seconds)
    (273/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.105358672 seconds)
    (274/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.056504529 seconds)
    (275/309) benchmarking ("sort", Float64, false)...
    done (took 0.15252439 seconds)
    (276/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077425966 seconds)
    (277/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06865156 seconds)
    (278/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.09577816 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.116470942 seconds)
    (280/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.085052307 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095088642 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.099329283 seconds)
    (283/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076426876 seconds)
    (284/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.070113485 seconds)
    (285/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.094871842 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068942961 seconds)
    (287/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.054518885 seconds)
    (288/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.203317513 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.090058873 seconds)
    (290/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054049716 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090277854 seconds)
    (292/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.07768662 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075912221 seconds)
    (294/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.110873155 seconds)
    (295/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.056050329 seconds)
    (296/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.068899368 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.092810905 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075379711 seconds)
    (299/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.055985911 seconds)
    (300/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.079326143 seconds)
    (301/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.055077434 seconds)
    (302/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.054791943 seconds)
    (303/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076032446 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.098002458 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090509516 seconds)
    (306/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.098270017 seconds)
    (307/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076937731 seconds)
    (308/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.056874608 seconds)
    (309/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.092195957 seconds)
  done (took 35.602841845 seconds)
done (took 36.516369027 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083179114 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117008745 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077452423 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.118216809 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085509286 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.105852928 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077576657 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082843749 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.10825795 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.086251713 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.106998458 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058681947 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102081465 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.080323178 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.102395431 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096279735 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.105263217 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076492076 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07756861 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.092104741 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.078254033 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.092884495 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.072485339 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058717355 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.105361361 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077175925 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076374974 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.101661585 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069576673 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.092739594 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073269639 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077620916 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.092336985 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.083798079 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.099599144 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077574483 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079415113 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.103082121 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.072643131 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.092171076 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077584439 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069824343 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.099428875 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077609828 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075551877 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.097816422 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.078037079 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.106858796 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095924939 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093406165 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075835882 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.101590825 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078860786 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074750323 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.095522472 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075557315 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.095685888 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093863657 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.099666639 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069849933 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075377109 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.099809201 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072987231 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.098393226 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076206776 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077905998 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.10182634 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073585652 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.100131689 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073561317 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067521012 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.099349562 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071439774 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067718598 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.101236096 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079358537 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.090013467 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074365295 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076315469 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.097994738 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.069564326 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094228022 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.071479999 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076089079 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092589107 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05864798 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073102414 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.098329011 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.069598088 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.078188584 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.099176185 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076091966 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071624391 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.104279666 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069711043 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.098280139 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069981794 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069386542 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.094427476 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074103009 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068642159 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094421362 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078467785 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.091741815 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075100683 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081440044 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.091566542 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07510483 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.090151559 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067523306 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084018341 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100830478 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067833686 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093486072 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069265943 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076395714 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.0919852 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069709505 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069456994 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.092664931 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075322901 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.069068617 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095888927 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077025313 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.106583611 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069660003 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073688397 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095874201 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069823919 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.075181813 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.09316304 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070358256 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071647961 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.091459255 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072310638 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.09264253 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.0774615 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072659906 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.101107503 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071443113 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.100936939 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.074560693 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075628714 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.098261658 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06922012 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.063045146 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095080005 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071846356 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071834763 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.093253219 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071750868 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069816262 seconds)
done (took 13.704539896 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068093572 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.172330282 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.131303851 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099746283 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.113760419 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070092249 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.104020261 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.107460289 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.094859056 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.131653873 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091670866 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.110743284 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115618645 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.09088512 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067893036 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072523247 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.093322659 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.091938581 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.127534811 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.111961751 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.1189624 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.091388476 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.124186062 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09352392 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.114889524 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105995446 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.092831445 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072522248 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.095045163 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.094880484 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110966142 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071920541 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068917843 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125010287 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.120763673 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087211999 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.091572834 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086837854 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.091545687 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06846227 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.117228347 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.102061321 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10778784 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.10709531 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.076860649 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071365439 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.093063459 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08797415 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.117399211 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082705649 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112945553 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.137226384 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071327893 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.108659032 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067219179 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.113288858 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.108422754 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070441068 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068393067 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.093725338 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067935061 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071548798 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.114582019 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.117775846 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071750209 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.108369145 seconds)
  done (took 7.422167462 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086472049 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.11886736 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08522909 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.10906713 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067889723 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068611276 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.092666726 seconds)
  done (took 1.600650632 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069520834 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091377162 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.115808639 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090858296 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.111111328 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089157712 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102742671 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069014348 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109870243 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06939685 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089946423 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129129246 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070162878 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.099104819 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092602969 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.092991894 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09234927 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.093405653 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072703266 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11554152 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072190517 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.1125957 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070856793 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068989301 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106483133 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069278552 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14056062 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074058647 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093746465 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072643804 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067995875 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.142751722 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106991846 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079853258 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069819878 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106593877 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084374421 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090407052 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.0853888 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097459291 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083470018 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070051104 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.095189249 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067265376 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073545532 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102616653 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070394492 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.093873444 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072061596 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089533464 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092821658 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083189461 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.092615692 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073685958 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070457444 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098481802 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07968276 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.094006699 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090997137 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070931175 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.110236815 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08520578 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.107532146 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085046178 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094880659 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083141486 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.106503836 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072418656 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071603555 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.096022551 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085863022 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.091504718 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071135863 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079684845 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094437561 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092307873 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.115465135 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072149732 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.103410212 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069140003 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069953662 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092901755 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091782516 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095934627 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069808474 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072883936 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096103887 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067519753 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06787088 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.096567846 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067987201 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.092539764 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073115171 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070493774 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094373091 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085408441 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06972193 seconds)
  done (took 9.482003195 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070215216 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069715459 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094612264 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.0705053 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070091391 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092202102 seconds)
  done (took 1.453603335 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099814694 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094122755 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083539987 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.098517895 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107716307 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.107103749 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084906028 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109409702 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.089306031 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.106134955 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087599017 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.111604501 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092578479 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.101537903 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086951805 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.10130182 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087468033 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.105044841 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.084050698 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101556924 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.092067279 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.101728284 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078071482 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.111306908 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075333881 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.077919337 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10588342 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.08504225 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.107146962 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.087838807 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.10202396 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075597873 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.099897088 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.08817955 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.110852095 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076583026 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101143698 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.0766486 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.105371189 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075583894 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.11172324 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077744932 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.08282442 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.100462182 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.111004633 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076062185 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076580547 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.105672158 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086849706 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.100449943 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077052104 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.101849253 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.076060679 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.099954241 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076061001 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110710595 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076203111 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.111735009 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.078254584 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076558379 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.098044216 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075754891 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.111073119 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075146911 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.11062297 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075942482 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.099906065 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078100313 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101955269 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.078446079 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076605766 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.098527109 seconds)
  done (took 7.65226985 seconds)
done (took 28.579622428 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.649419265 seconds)
  done (took 1.629215024 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.7904804 seconds)
  done (took 1.774609179 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.375544708 seconds)
  done (took 15.360590453 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.627253112 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.766695617 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.826135231 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135370307 seconds)
  done (took 3.335924946 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.885200675 seconds)
  done (took 1.893134631 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.237006697 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225979607 seconds)
  done (took 1.452748975 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.733843073 seconds)
  done (took 1.728986195 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.320118649 seconds)
  done (took 2.306744461 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.323668724 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182868254 seconds)
  done (took 1.504261243 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.533054233 seconds)
  done (took 1.529997538 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.933990095 seconds)
  done (took 7.938134549 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.232985049 seconds)
  done (took 1.241132453 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.270326474 seconds)
  done (took 1.269247821 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.109306223 seconds)
  done (took 4.11098145 seconds)
done (took 48.067039896 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079131667 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083984146 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106315738 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080282819 seconds)
  done (took 1.345910937 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079557705 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076687913 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10268749 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075354485 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.10484131 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.0778175 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.103660206 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.082216085 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077459638 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.102874611 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.078109321 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.101172304 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.080046752 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.103491073 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074409356 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.08084291 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.1051622 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078777052 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.104563054 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077950099 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073525978 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.100495097 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078946066 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.097425112 seconds)
  done (took 3.127482608 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079245199 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075471221 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099791256 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074338567 seconds)
  done (took 1.333825396 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079202718 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.118277898 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091757072 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079935336 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.118101757 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.112853888 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072451526 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073058729 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09777276 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080167299 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.094532256 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099569476 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113792836 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078970872 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.10432804 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068388698 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071524136 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.111898319 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079344407 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103056129 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07311351 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082190865 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.0945909 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092708484 seconds)
  done (took 3.202632095 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079081086 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105032706 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.10443985 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091246825 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.11774914 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067587794 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.10172829 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093676067 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.150541133 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06761517 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.095930648 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068233873 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.09937332 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067063906 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07900355 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.134482933 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113770196 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.094568665 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098941944 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.091688238 seconds)
  done (took 2.935437094 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076005399 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072274575 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090736566 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070432042 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078604372 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097895181 seconds)
  done (took 1.495194935 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069503452 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069961323 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092282783 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068668274 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073550064 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092761875 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068763628 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06941768 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092638097 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069501557 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068650012 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090884667 seconds)
  done (took 1.935671002 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.435569182 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.07034947 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.094763047 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069069738 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073103918 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092862735 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082993676 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070427383 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.117170565 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069382673 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.093000483 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070599294 seconds)
  done (took 2.353161058 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264129566 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079791205 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.324997348 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168595915 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141197179 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15660561 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106278489 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141978441 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200025503 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139174401 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201025576 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225547027 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135791349 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16920865 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116727735 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.133456633 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187732044 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222023555 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107704082 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225628237 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208301554 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158372849 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183566181 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130237522 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135721274 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151835378 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074257542 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107145261 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233356314 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162026397 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202916033 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140217745 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098982937 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231992867 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22526446 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196901505 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16330753 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087082345 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.157456096 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.16641655 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256078601 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116448165 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196556524 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134569681 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107958424 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17360122 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147900991 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.147341741 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.138941726 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116171904 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176452031 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243205416 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.167315387 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113292093 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138417431 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143131753 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145683927 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105145236 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269473952 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195486075 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161115197 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097534913 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099417304 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212412978 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16038357 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142143134 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.154593095 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122576202 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168824359 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211088585 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14987472 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174772421 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.181770053 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091034544 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150023164 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196436675 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161414086 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231833711 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159063541 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.079091009 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159560566 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13693904 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111545828 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14764057 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104960625 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215716732 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130502881 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.14495232 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142465763 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140521119 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115381704 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226622977 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209477861 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137306067 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.070442805 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136362142 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154969472 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181999602 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120102193 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139336446 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153059255 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081628747 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19538738 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07872944 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154792217 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.105949416 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154822188 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166784622 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077875536 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156155243 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129578537 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.1305739 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165202929 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223754482 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092166047 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109140881 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228677738 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157761591 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133965768 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177831428 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.217924256 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103241353 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131757609 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206314187 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246035666 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092116533 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223770049 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135602953 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086744639 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.115138221 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156540136 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140841293 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.151532002 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110899887 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.154528356 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202658903 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.102926355 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123072788 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168859374 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08432816 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108570225 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142563796 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131302838 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.0985443 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.128813983 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135816713 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172105311 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181919214 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110567185 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180595501 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101571048 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228349789 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117559575 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.133045353 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107261033 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097796529 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.167235445 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219422996 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082628094 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228632704 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.156499778 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132580075 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150589295 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085475057 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198060204 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082278867 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073671403 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204191804 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141117251 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139675378 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.187073255 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133997515 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.160470738 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.153673757 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16522456 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18908058 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165043941 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13480135 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.090652694 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141914389 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155041569 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100759613 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123232948 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.086560505 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133133623 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125454281 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086146306 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200171279 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157726175 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100574211 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14224536 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125859065 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208519218 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080548085 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160965074 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.149517522 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123768766 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.212516139 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189092235 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166091054 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12913181 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203643938 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074506824 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076557593 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.119151398 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15760825 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112244477 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086276588 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170615731 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181732449 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160018142 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168125141 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140959303 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151845731 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214309793 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074077472 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.144984282 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180652428 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154957391 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.156023523 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115314327 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102755628 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202789043 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111458267 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271634992 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145640352 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154699793 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184943056 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.133614886 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083312708 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134550514 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195255602 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138979367 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189301132 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132340376 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118211651 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113947174 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.108647473 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133001103 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156357241 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149531913 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190324306 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.144593453 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161952793 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079565284 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145922327 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17973139 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151777214 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067437109 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149261814 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223123735 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122784356 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147296446 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186960551 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106844063 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.127597288 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234872233 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200876222 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086715361 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138227628 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151077126 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184555209 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149111021 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16999257 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139215239 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165671146 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139004485 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087737332 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114924889 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125762995 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109912329 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.122542971 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.139184883 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.145972071 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.123901253 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161055733 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140729303 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139740759 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14832168 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.125253492 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.094213192 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125599863 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234315643 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151718337 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234638236 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.104546533 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.206798999 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227392752 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077952399 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107504044 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082869713 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169898323 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112964931 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163403609 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124568351 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133130617 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15666832 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174995389 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123737253 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070869291 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139281576 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164573345 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139160802 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126351855 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134080421 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220306434 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.107176552 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107637069 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15542576 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107211763 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131404643 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234750717 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063486961 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124562968 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079469285 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109670983 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159851178 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214007751 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085240008 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.153955121 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146204214 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14940675 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160070885 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129355136 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125325048 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140559353 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182651487 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157269389 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.119439794 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141669925 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159608404 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21648766 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135518556 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097550003 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231583923 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212197482 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196926936 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117359791 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145397743 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14473088 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13842353 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171084344 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111808763 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225464971 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085380545 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193669765 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132823074 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096007064 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184609687 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099955707 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117421299 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196390272 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173110565 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085923831 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106693988 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147525848 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152125373 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135513067 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.077643183 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193363988 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075636329 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167315843 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227665054 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084008329 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134604521 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12411558 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109700903 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111295806 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131446366 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115512773 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.124232268 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226360809 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.118833635 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208958856 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171998924 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142865279 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195282637 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103490408 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.66424486 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.106456494 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186379614 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149867985 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258788835 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101200966 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147379887 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138369284 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152047317 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201091809 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134632903 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179119692 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188830575 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.151411674 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083258665 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131994405 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139320034 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.118965949 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135853264 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143785799 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145589878 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.103937287 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.150503842 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182816143 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.084855741 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124797344 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216743828 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146797685 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175459976 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171747446 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113709881 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148594715 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169888241 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108302394 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.152065956 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215551092 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13636169 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100803133 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.110135921 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135413273 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23316028 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076175889 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221658562 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153740367 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138556158 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144204762 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.149962516 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162715815 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136560607 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155638372 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124373163 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.142267866 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145078786 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112756648 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.080296944 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135075491 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141600119 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.127732591 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130978737 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.121501099 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209216242 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074166127 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124815986 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130984398 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177867588 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23947105 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.116234503 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085554861 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14896901 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142944072 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.144831947 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154907968 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.109972343 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085420164 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.109862223 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.116607449 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.135993084 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145488782 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131193492 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140328979 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228057371 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.088028157 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.254476996 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123176235 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108501324 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.097144497 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.082565485 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125553151 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12601121 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136924297 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10055557 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23267818 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.123939706 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.092924541 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121684038 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.100636027 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086711354 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159101252 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137909824 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151756948 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129386749 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064833742 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138557461 seconds)
  done (took 72.071816687 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.133941648 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.104312753 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.118193256 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.173260803 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.14631043 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237914463 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.180951659 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.22284529 seconds)
  done (took 2.416323226 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07070366 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.117276465 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103241017 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.116591397 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091219834 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070416051 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.29422768 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.111044675 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068882087 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.114880199 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.119231271 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093023191 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.468373617 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066938556 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.09478429 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.085762328 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068455202 seconds)
  done (took 3.240521865 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.425978954 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.626148329 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.449722173 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076567916 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.916631195 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.108288595 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.384048232 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.1625568 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.09166059 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.428742436 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.729411204 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.149237234 seconds)
  done (took 17.643259186 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076438774 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071294124 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110837711 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084833042 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.099754404 seconds)
  done (took 1.54154375 seconds)
done (took 115.640513051 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081907829 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.349023816 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055640859 seconds)
  done (took 1.535110015 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084407498 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08642176 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.111399069 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085300705 seconds)
  done (took 1.469491177 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.076638952 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07811492 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.112043703 seconds)
  done (took 1.366747058 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.279329197 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.167256085 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090588725 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084706966 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079919814 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.106088872 seconds)
  done (took 1.375623101 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074397381 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077000339 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.101236371 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078464531 seconds)
  done (took 1.431353133 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078356516 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053930163 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056859924 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.084101239 seconds)
  done (took 1.378430089 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091903507 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.108372218 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082632026 seconds)
  done (took 1.385709587 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109025763 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.114408833 seconds)
  done (took 1.328201625 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083784781 seconds)
  done (took 1.184742878 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093118563 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.142558265 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.160430193 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.138898784 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.16623441 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.139212152 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088415392 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.117328726 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.106829295 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090490456 seconds)
  done (took 2.348566566 seconds)
done (took 16.514876634 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079714305 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.394618853 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.3645188 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119115599 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672423597 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359321974 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.030881605 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120591799 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123148014 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096027516 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085309858 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.678157949 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.029212315 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.351112993 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.016209267 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.420495119 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677320943 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069681844 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094912553 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070635729 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.989163637 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096057685 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069597445 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069826929 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677181489 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372563274 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095856233 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.420559673 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069580007 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098220502 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356336085 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096516626 seconds)
  done (took 16.362885549 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071913326 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.144876589 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076837392 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085078407 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.09846916 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071662345 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099260471 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.07164704 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154474213 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068960421 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112333244 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069374791 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098618033 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070613174 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088805418 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096232963 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070291381 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069619175 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095617555 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069912122 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114335666 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069384923 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069961245 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09610091 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069450868 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108635723 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070043659 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069617548 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096610204 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071428882 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098892847 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069918193 seconds)
  done (took 3.89755777 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11741508 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.154133346 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075928415 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13068904 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114479734 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099673948 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.171805946 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094960022 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.157295296 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069942658 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113095604 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069431639 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129409068 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070261921 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116194357 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070497523 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071028036 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097327572 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070225917 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096757716 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088858556 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095445184 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070895627 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070833482 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096588471 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083095129 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095947586 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07036541 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070685416 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098304185 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073584748 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095826967 seconds)
  done (took 4.215022214 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074324376 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07694727 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111003297 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085724647 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097546316 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074427964 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075382458 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.097916844 seconds)
  done (took 1.803820648 seconds)
done (took 27.385790971 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080407081 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072054608 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.101242253 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083430353 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10157351 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080753869 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069376161 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.103479998 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.0794998 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074542068 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.104959778 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06941743 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.099799923 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069609043 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076516168 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.095840099 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081656353 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100559443 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081156077 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081474958 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.099010461 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079758067 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10266557 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.0811575 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.107266797 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081429025 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.084816296 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.102477694 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071403383 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098626906 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078026283 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.112321502 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070736693 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081118232 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.096488241 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070234378 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069523634 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095633025 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081561239 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.101985446 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072975319 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.102401394 seconds)
  done (took 4.755144937 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089989844 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.0910592 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113199566 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.072479602 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.099134284 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064931695 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.117969151 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.072918883 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.09596031 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090464444 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057900683 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.088215005 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.072427549 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.063378762 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.095870994 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058673979 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061249648 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.084716453 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061720214 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.061056916 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087073151 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056687512 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.062523341 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06559026 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.085472622 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063882967 seconds)
  done (took 3.150897686 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076359606 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086866662 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.117076967 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130660675 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.135286345 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080596826 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.107156601 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090137604 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.116059319 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068996397 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073220222 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.126662347 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090974532 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103413404 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069232829 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.115984057 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084246496 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071855528 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102680579 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092898534 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.113627702 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.079868726 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.122841598 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084588291 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069031858 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099123057 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073244503 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109980439 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074019628 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078482131 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.100484463 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073115475 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.097961766 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081145345 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073961168 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.099034889 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092386612 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105901148 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080956489 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069830753 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101267347 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070859227 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.117072718 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.113820645 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09620921 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075839981 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076522363 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105793829 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069131317 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114513124 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079139383 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068827482 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.099503533 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068258629 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095734628 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082069264 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071219936 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.097944463 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07922455 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099607991 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.081946937 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073417298 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111900518 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069164139 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.104091397 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068701408 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069722359 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095132201 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093673487 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070611153 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.138539158 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070154749 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.098477908 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07861691 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103898759 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075274594 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069352947 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112209085 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079278589 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.099919144 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078425413 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072672774 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.100232786 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.091053602 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.098890609 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071722079 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070913877 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102199545 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072602223 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.097690473 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082862634 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069930655 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.099132462 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086871048 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.096191958 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071547584 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075330061 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.101096364 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068972285 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108067536 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075463812 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070221159 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.105705253 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069219722 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.099662384 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079222883 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073705996 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.095889919 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073981866 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102183435 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070208104 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070565864 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099277298 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071306746 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07906197 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.10289896 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073443067 seconds)
  done (took 11.523264815 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.193654039 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.186942748 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073040953 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.180612832 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078129717 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.117565615 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.181243162 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097755058 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097617704 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070025012 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070498714 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.131492986 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.125867228 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.107403947 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.107612612 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070158587 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.115410427 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.106234616 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.184596549 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.178431146 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.116671879 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078435684 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07165815 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.098791516 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071958623 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.107150309 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085956715 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.104995078 seconds)
  done (took 4.345728634 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083453039 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.139524567 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076289782 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094650265 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120794148 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070285906 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.103056793 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071779086 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109652003 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082101406 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.097892609 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075343012 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076135719 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.107369299 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070734221 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107330464 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079598585 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071501748 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.100626743 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07542515 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.109754151 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082698208 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.101503351 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070045294 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076135547 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.096560162 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066838487 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.115066274 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069843327 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.121482386 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068587408 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075915736 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.116476948 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070470818 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.097032615 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073091942 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073147646 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.101459577 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071505162 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069062032 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.09585685 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.05962359 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06920074 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.110617862 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076726742 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.088767593 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076202675 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.102831391 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075934038 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067342105 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100319305 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.0725515 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072980535 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.111158929 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074142766 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.102691974 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074501653 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.068179641 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105722384 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073247737 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066687841 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095896819 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074515279 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.096757688 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.077740003 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073862282 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.096256949 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073243845 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075600593 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103140472 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072337035 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.099350119 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067380665 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071560389 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.102400408 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074656161 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074042043 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.096007842 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069178871 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.098011612 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.057553278 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069320996 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055696354 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100618275 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068161838 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.095412455 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072671147 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075135797 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.110476708 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071223097 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.102727752 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071084544 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068280541 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.100346173 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06534241 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.099841894 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.088460993 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.113518902 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069792343 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068826836 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.114156079 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074674464 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.096832892 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.058526708 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076606107 seconds)
  done (took 10.057958135 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.098937552 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094284857 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.099264506 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085911646 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.127166039 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095208233 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105725655 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076341325 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070860855 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.11472107 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.070841628 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.106132184 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070094552 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079225926 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.128146453 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078058258 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099296391 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079478203 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073800819 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.139036358 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085295338 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.111737876 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.083635711 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.098076596 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075236041 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082157994 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.125799023 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.082160237 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109456291 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.087474334 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.082189002 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.125270206 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.088927733 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101580654 seconds)
  done (took 4.37677701 seconds)
done (took 39.319045902 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.208376866 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.401309415 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.183493033 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.060075518 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.222058332 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.195412016 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.200297222 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.198855567 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.311685894 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.189430445 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.453297762 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.811336201 seconds)
done (took 58.572026132 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.250393235 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.329671149 seconds)
    (2/2) benchmarking "String"...
    done (took 1.461920766 seconds)
  done (took 3.925778205 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.544767825 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.146126071 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.472351046 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.188752727 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.186534525 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.634691656 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.77308216 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.998328647 seconds)
  done (took 27.536139149 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.188797114 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.53750124 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.456915559 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.453396 seconds)
  done (took 17.767718075 seconds)
done (took 59.160540511 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.217053527 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.2244378 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.219555303 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.171698106 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.293170988 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.216872881 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.454491248 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.18847012 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.186933458 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.179319025 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.207272278 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.202122326 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.195170434 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.513821796 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.188299795 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.186711933 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.259650971 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.654351926 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.567146919 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.194452904 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.212352436 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.261167717 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.200632269 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.189941215 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.194881968 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.185122602 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.187450872 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.198248355 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.3485039 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.192126441 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.273799049 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.666950677 seconds)
  done (took 189.767308616 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.18849737 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.187250993 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.283330251 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.223604581 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.641005815 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.389933113 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.328590344 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.707500831 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.201846301 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.196954893 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.536706129 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.187897153 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.555641218 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.234461515 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.207872058 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.271378145 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.465372518 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.53573496 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.220262519 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.464960125 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.194672243 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.403137022 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.319052219 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.453992016 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.225438065 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.203258621 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.194164984 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.209881338 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.385067829 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.4032187 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.199162998 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.234669937 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.742590501 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.052910932 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.200013964 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.200253216 seconds)
  done (took 149.783762156 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.466400721 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.19090877 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.190429608 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.1932814 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.220727407 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.194111678 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.709689944 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.714240635 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.691884419 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.29405418 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.250808511 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.419260531 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.19143423 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.282349126 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.204199502 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.193070831 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.194882414 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.209833115 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.215046408 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.190207442 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.192245114 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.710236332 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.204416806 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.225034348 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.195239676 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.194833218 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.225027996 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.586867814 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.187809436 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.222869296 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.502394196 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.232900656 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.187959001 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.479961214 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.068729871 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.296318929 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.190229647 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.222253114 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.192468993 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.462420198 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.187733162 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.193132974 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.191815671 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.19656137 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.760839445 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.194766377 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.70949591 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.195943923 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.066559536 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.192360648 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.196654927 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.536932783 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.571623734 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.193153681 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.19193921 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.194257268 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.19034581 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.190083596 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.221213008 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.516349207 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.287405407 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.196492426 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.19614404 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.224091855 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.198975739 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.249622726 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.190894763 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.718798661 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.252078268 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.306664958 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.717002103 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.19507056 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.288543143 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.311290528 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.196816323 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.194638848 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.194075866 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.197138277 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.296305549 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.194445865 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.579628617 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198864496 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.199698155 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.256857721 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.287294811 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.195364774 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.485052214 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.199106877 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.196122349 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.883151134 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.19546148 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.288643515 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.195876702 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.196484459 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196002854 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.194901347 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.576114544 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.716184798 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.356620076 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.199642524 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.539814749 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.198554791 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.58773038 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.69795971 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.756476871 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.196340023 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305063372 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200322707 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.195263806 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.195684032 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.222008563 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.197454373 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.258159291 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.197725434 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.593227687 seconds)
  done (took 343.107719072 seconds)
done (took 685.258761542 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.887595604 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.874488287 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.979381497 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.87737939 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.854894234 seconds)
  done (took 10.614175702 seconds)
done (took 11.755228331 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.376740184 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.381252875 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.256490976 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.378453952 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.227348365 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.392561594 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.358600504 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.220070275 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.300744703 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.275171303 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.301026462 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.2444114 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.225063984 seconds)
  done (took 18.079542599 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.491507779 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.490023887 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.263607692 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.49364891 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.235017404 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.501102923 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.381810323 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.391876418 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.379502148 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.212357665 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.216441723 seconds)
  done (took 16.203377252 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.52302052 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.491013364 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.26540525 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.496918901 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240321384 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.50527695 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.385353393 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.395464467 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.380438825 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.21144221 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215614078 seconds)
  done (took 16.251719816 seconds)
done (took 51.678270544 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.209845445 seconds)
  done (took 2.349063799 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.24165243 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.402103382 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.224248053 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.211322701 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.212634523 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.213523436 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.217558314 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.210142059 seconds)
  done (took 11.074406492 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.20614359 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.207721317 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.211934986 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.210877007 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.210455173 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.209988342 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.203964641 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.213147974 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.206033464 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.21015059 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.206786451 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.210201568 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.209385653 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.209987057 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.204672329 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.208697568 seconds)
  done (took 20.483865091 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.212524466 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.209418968 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.210880897 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.210516163 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.206518793 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.205960307 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.210701427 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.208083681 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.211450824 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.21065518 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.208544901 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.211797181 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.21224957 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.211453966 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.211013611 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.212820081 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.211618061 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.211602132 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.215477991 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.211657932 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.21110192 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.211603053 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.211282915 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.211992779 seconds)
  done (took 30.210353385 seconds)
done (took 65.262854062 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.200451702 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.826372967 seconds)
  done (took 9.174141324 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.214370273 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.212845434 seconds)
  done (took 3.577605446 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.214504652 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.214358129 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.211847579 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.215938745 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.213714143 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.215028327 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.215202746 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.216192856 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.216957624 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.216339493 seconds)
  done (took 13.296550795 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.210851175 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.215036335 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.212103593 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.21598362 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.216035647 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.212607229 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.216555409 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.215992146 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.21424811 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.212735057 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.215274966 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.212904194 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.212784153 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.213444611 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.21130177 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.214194943 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.211901984 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.212265642 seconds)
  done (took 22.995308264 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.216279378 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.214027299 seconds)
  done (took 3.576553789 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.213887666 seconds)
    (2/7) benchmarking "second"...
    done (took 1.209371658 seconds)
    (3/7) benchmarking "month"...
    done (took 1.21315355 seconds)
    (4/7) benchmarking "year"...
    done (took 1.214044946 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.212182667 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.211913682 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.2115513 seconds)
  done (took 9.634025338 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.217610583 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.392131551 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.466750488 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.788896892 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.214174417 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.220274034 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.066770449 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.220629492 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.222420391 seconds)
  done (took 13.957083793 seconds)
done (took 77.358996253 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.205256539 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.204459228 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.043770474 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.211161494 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.222837704 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.50722591 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.253333742 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.330464529 seconds)
done (took 37.126793555 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.20565237 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.908682124 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.944530741 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.211886781 seconds)
  done (took 11.214145536 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.199250408 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.105933222 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.207584255 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.205137906 seconds)
  done (took 17.868123988 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.807350462 seconds)
    (2/2) benchmarking "read"...
    done (took 1.539475631 seconds)
  done (took 4.497304733 seconds)
done (took 40.937291818 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213411464 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.217530475 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.216040414 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.212215829 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.218709196 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.212830162 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.211996641 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.210301228 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.217942542 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.21692153 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.217852883 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.217418283 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217351077 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215296919 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215602672 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215308127 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.214553933 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213899905 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.215875816 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.215675342 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21541421 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216827561 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.21549536 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.216214535 seconds)
  done (took 30.319762328 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.21790331 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.213943925 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.217234216 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.218008343 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.213914652 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.2120263 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.215042937 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.212584569 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.220034632 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.217673665 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215114284 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.216476317 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.217942262 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.214618197 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216979057 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.21297058 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.220144475 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213366296 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215231951 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.209941018 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.217821608 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215702457 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.213531569 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.21862826 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.214534172 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.219048934 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.216834627 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.215477893 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217757705 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.218097212 seconds)
  done (took 37.632035216 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.224162725 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.225955438 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.220781949 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.216670847 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.214006907 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.219052278 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.213618493 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.212956475 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.218080962 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.216855263 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.214875665 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.214983376 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.217678839 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.213384553 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.213760725 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.215006271 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.216788137 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.214798003 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.213613631 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.214926926 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.216759188 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.218221971 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.216883686 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.215194806 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.217227805 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.214363202 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.216284745 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.220259891 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.215103759 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.216753257 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.216498845 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.21855277 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.216656218 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.215175487 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.214746078 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.214759171 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.218690652 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.223081023 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.216763137 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.216416975 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.216267615 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.213907278 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.21795993 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.215872191 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.215531779 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.214498239 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.21687897 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.219321961 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.21921358 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.219527209 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.216475804 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.219816719 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.217265829 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.220889387 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.217910723 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.225056094 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.222010387 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.220970046 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.219704843 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.224222695 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.217842411 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.216616842 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.220480567 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.217589021 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.222193281 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.219451103 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.22122842 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.224979832 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.217307281 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.220419661 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.221301048 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.218079462 seconds)
  done (took 88.836067822 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.219955062 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.220968319 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.219824591 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.224021183 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215681403 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.216289065 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.221842668 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220888653 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219669058 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.220444908 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226712273 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.215566282 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217846719 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.219473246 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218368012 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.216721405 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.222099732 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.222266973 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.225439204 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.221179073 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.216011284 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.218421759 seconds)
  done (took 27.994314923 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220432075 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.217017094 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.222060845 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.224271483 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.216211214 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223730619 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.218887296 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.223015488 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22277017 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221530278 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214930207 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219987208 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.215243756 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217490828 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223280624 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.215506491 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226129357 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.216905442 seconds)
  done (took 23.116474344 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.220151322 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.225194958 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.220653829 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.217800178 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.223812939 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.224370208 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217503998 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.220751132 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.222485326 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.221724305 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.222259087 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219755396 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.220319844 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216317911 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222199437 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.216303114 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.220856921 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222664823 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221605654 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216076531 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.22487371 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221555852 seconds)
  done (took 28.01348015 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.21972044 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.219825067 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.219216444 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.219736902 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.217106422 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.222874655 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.227002205 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.216969985 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.220333291 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.223631002 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217780503 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.222151359 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.21923915 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.221308277 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.223353526 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219523892 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.219602503 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.220993227 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222755563 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.219109189 seconds)
  done (took 25.565177038 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.222537713 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.222572211 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.223871487 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.225554129 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221747753 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.223812198 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.222664878 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.220871551 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.221538014 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.222916096 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.223444215 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.222974026 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220853773 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.221985405 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.222020856 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.222894927 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.222742436 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.221708523 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.222494171 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.22921371 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.221574062 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.223514967 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223884841 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.2244422 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.223692062 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.226488736 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.225097095 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.223560081 seconds)
  done (took 35.405084751 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222537942 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.223164879 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.219641358 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.220919303 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.219102989 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.221873916 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.221705398 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.222553882 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.224749749 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.221520953 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.223708597 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.223576507 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.222795398 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.225411839 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.225519702 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.222093772 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222564021 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.220148431 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221071274 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219715669 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.227711602 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223863599 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.22275612 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.220204031 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219853792 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.22308407 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221881831 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.220570781 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222194048 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.221048458 seconds)
  done (took 37.82476497 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.245356936 seconds)
    (2/2) benchmarking "in"...
    done (took 1.241930964 seconds)
  done (took 3.643865679 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.222123446 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223091082 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.228064828 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.225479535 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.227455052 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.225865749 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.222867498 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225426012 seconds)
  done (took 10.958765352 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.2250962 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.226297878 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.224806115 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.226243402 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.226150503 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.223741295 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.233048622 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.244379924 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.23028673 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.225703745 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.232867981 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.2331437 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.229676496 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.224940507 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.223820092 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.228276224 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.225535129 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.226060335 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.225597523 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.226676446 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.22783666 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.229785175 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.231928123 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.225923988 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.232163817 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.243021908 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.23807581 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.233330581 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.23135026 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.232435614 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.228991066 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.223105988 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.227495927 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.232393373 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.227923031 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.227368702 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.240769916 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.248870338 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.238110711 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.22900177 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230345042 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.228886065 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.228918594 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.228188634 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.228191307 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.232139259 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.225432196 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.224999726 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.224522505 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.22798189 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.232488803 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.230484459 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.232912318 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.237957203 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.236785116 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241653871 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.247552816 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.229840622 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.237759841 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.239695325 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.249018645 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.237278369 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.230582743 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.22787617 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.237046321 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.253400416 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.238020009 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.245221895 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.224045084 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.226608303 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.235701498 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.246958948 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.244440399 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.226180627 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.231080072 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.227775697 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.227385363 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230443836 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239767411 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.250877315 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.22703659 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.227531065 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.236458556 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.253959168 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.227495177 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.231083759 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.231591142 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.233708708 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.228523345 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.2416645 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.247676428 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.231075589 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.230737076 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.23176635 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.235651936 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.231514625 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.232384783 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.232706865 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.232692526 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.22996789 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.230847384 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.237643775 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.241847177 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.229569617 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.230783161 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.239042296 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.234164136 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.231373877 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.242107624 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.233044138 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.230018421 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.230607003 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.24184895 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.227991727 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.234014766 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.239630648 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.233773068 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.234379795 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.23390611 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.233619119 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.241368285 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.259327173 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.238182591 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.231863508 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.236089607 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.246687393 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.235709877 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.237347818 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.235422845 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.231297451 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.229486815 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.234419663 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.233590653 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.234738938 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.233215091 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234900067 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.230745492 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.23531094 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.233603232 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.23586854 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.236134256 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.231331173 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.235553682 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.242709144 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.234653097 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.233816241 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.243172413 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.23749964 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.236018481 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.234776386 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.231392822 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.234417246 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.235504021 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.233521633 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.236666725 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.233700874 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.23533079 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.235099644 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.235845718 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.23351327 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.238198361 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.235885793 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.237814039 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.233873752 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.241387348 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.234970094 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.23248627 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.23431029 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.235721032 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.235338897 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.236134525 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.232918255 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.23845425 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.243220316 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.234030213 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.23483816 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.239729714 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237594191 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.236529197 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234727278 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.238281257 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.245463886 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.236705236 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.243235514 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.238520857 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.236676797 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.236947531 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.237144258 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.233747924 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.233677791 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.237070959 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.242150246 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.249571333 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.246758856 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.236456932 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.238625744 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.238701002 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.238944023 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.241278048 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.239708034 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.236560949 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.236337265 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.235695917 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.237116233 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.240988474 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.235508958 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.236790563 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.236862377 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.238655023 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.234609671 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.236771904 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.235931375 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.238620463 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.235068576 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241374351 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.237866396 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.235503303 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.234965714 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.234736208 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.236065115 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.237925299 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.236339196 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.248174363 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.235636569 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.238813996 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240972926 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.242358542 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.236149035 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.238598854 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.241210109 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.243900678 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.24634033 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.255919039 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.237590464 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.24568617 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.252369016 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.237424163 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.241960393 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.239434432 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.237524294 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.240342008 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.246702021 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.237598421 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.239610986 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.238160617 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.23897376 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.239361639 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.247729473 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.241924933 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.238858513 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.242770146 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.243418048 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.23894766 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.241902951 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.240331917 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.239961353 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.242432861 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241485923 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.240059763 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.241443626 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.23993856 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.239541867 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.240652122 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.241357087 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.244518734 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.244424861 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.242777341 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.242439562 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.241869466 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.244399021 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.241090289 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.239541785 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.240845136 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.255965111 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.251475458 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.247148212 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.244258529 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.241486173 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248368597 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.245878537 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.243549267 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241322936 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240876813 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.240361983 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.238646329 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.237426939 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.242988679 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.241883823 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.242542156 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.243510639 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.247907595 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.242564971 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.240513767 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.23963577 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.241009304 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.241085579 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.241612875 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.243117394 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.245913897 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.243758889 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.243245828 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.240580802 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252116585 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.259481802 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.243453572 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.240146089 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.243597958 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.243398973 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.243526407 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.241318095 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.245651132 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.248280814 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.24389195 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.25223059 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.242284595 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.252942366 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.244593525 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.244334996 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.249590974 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.239746706 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.240403375 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.242909052 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.244114104 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251383218 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.261040199 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.241418514 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.246690138 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243143205 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.243042538 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.243259063 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.244372244 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.243664597 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.243658581 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.254566912 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.259236656 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.25024332 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249489766 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.242017299 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.244031865 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.249056022 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.245930025 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252295099 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.246092467 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.24409916 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.243344707 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.244020871 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.246421152 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.247936155 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.24754164 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.241862411 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.244783906 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.253007031 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.2590273 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.24709224 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.247811529 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.258420813 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.246506796 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.255967952 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.261907544 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.245185416 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.243699435 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.247077237 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.248052752 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.249627112 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.248946858 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.244019044 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.247997095 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.248779634 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.245935977 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.247070368 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.244892339 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.241845495 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.244778849 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.258752882 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271260199 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.245945129 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249959223 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.243268233 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.247877734 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.249169872 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.247532377 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.244494389 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.249047471 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255505361 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253617017 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.246515994 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.24534296 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.246601039 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.24603863 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.24826838 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.250261626 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.245378241 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.247256262 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.248320798 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.24643481 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252385708 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.248798021 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.247417864 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.248361785 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.246638041 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.257278322 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.250988701 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.248499421 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246547726 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.245899649 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.246972986 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.247743706 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.244267822 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.246420404 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248439094 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.250260048 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.253308178 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.253463769 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.252394856 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.248597003 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.248025959 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.249668351 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.250798133 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.248310948 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.2483593 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.251295619 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.250181649 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.248960016 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.251293709 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.246972654 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.249689646 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.249116305 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24882738 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.251510618 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.252408529 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.250567703 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.247191668 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.249938391 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.247859017 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.246549507 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.247666133 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.260027061 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254425899 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.260754879 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.25701751 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.251475612 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.250766553 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25263462 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.255368939 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.249688447 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.248502945 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.246595616 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.253155329 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.252277697 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.255893542 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.249624962 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.258155883 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.251205583 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.254072788 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259263873 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.269140668 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250573541 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.250671028 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.256764041 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.252385733 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.248822958 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.249948737 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.249530719 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.259959874 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.271844251 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254327443 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.253174581 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.245596553 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.251973352 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.25548073 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.250287122 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.252437327 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.250069914 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.252079053 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.251271185 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255401843 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.252139845 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.254240528 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.247327212 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.251463142 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.256802666 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.248575981 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.255808441 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.253408946 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.253027127 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.253565325 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251542467 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.252780175 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.249269168 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.250679506 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25119636 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.25202209 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.252055199 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.252678073 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.252413657 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.253649788 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.249304499 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256979954 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.264533331 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.260966842 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.249824398 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.250947508 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.253216833 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.25503883 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.252062724 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.250829021 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.252442625 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.258575944 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.251658766 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253381777 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.255721011 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.254407687 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272845795 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.271359358 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.25577111 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.252840047 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263664028 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.250130512 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.250830095 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.254068737 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.257794733 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.257322431 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.259549839 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.253025085 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.261647114 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.267970553 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.254251715 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.258524419 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.256266074 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.260729425 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.258778871 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25405164 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.254489642 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.259080642 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.27077076 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254283894 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.26362482 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.285094669 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.267894796 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.254383918 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.254774567 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252350375 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.253458662 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.259633303 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.255585081 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.255450972 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.254345074 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.254291002 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.25566379 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260263407 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.256138728 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.256472986 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.255406263 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.255232493 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.258576716 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.252528069 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.256148532 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.256427615 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.254198162 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.254522307 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.258528048 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.256038849 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270468533 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.271475484 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.255353397 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.256785291 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.25229698 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.261162755 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.259464672 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.265251279 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.263480921 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.255405719 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.256205886 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.258492184 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.255734645 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.256387844 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.257147132 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.257738047 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256493451 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.254691959 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.27367058 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.269053657 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.263510531 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.261746606 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.256945487 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.256892584 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.259039048 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.257094607 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.259530354 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.259900934 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.255630833 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.262611682 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.25707019 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.25841778 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.258915792 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.265028112 seconds)
  done (took 742.957195543 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.25893943 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.254535345 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.252962632 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.255217904 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256631213 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25606141 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.255240396 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.255410019 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.255377605 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.255070855 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.25608712 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256835163 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.257574528 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.254302029 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257211422 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.25603609 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255812825 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.256529304 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.255460719 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25758434 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.257792208 seconds)
  done (took 27.566505984 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.259870844 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.256706456 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.256060161 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.259681665 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.257692468 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.258632034 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.256727043 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260328354 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.260149155 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256029913 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.259905564 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.259214644 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.258029379 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.25586564 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259032862 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.260547195 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.261801191 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.257458719 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.261092824 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.256963071 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.262233008 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.2563232 seconds)
  done (took 28.883022403 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.260234195 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.258441909 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.259834189 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.259311181 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.260713138 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.260349345 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.26060794 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.261642987 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.260946242 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.261277692 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.259472427 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.261059206 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.264585658 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.26746066 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.263618209 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.260578005 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.404040801 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.260047345 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.261446379 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.26033394 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.257255431 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.268838483 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.258842102 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.258375159 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.257127613 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.259538892 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.262026973 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.261784375 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.26064456 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.260404012 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.263738216 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.260096142 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.260072702 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.264926095 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.263122703 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.262461083 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.26520953 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.263655342 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.261246326 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.262153309 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.271314188 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.283820815 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.264801691 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.270198917 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.263435393 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.26254269 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.264511375 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.268603964 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.263084142 seconds)
  done (took 63.207213293 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.262124225 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.265136049 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.260241431 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.261915681 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.261287887 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.26450015 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.262392774 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.26357514 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.258498375 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.260058776 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.265861536 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.264687307 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.261730205 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.264458962 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.26170203 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.259625181 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.262288529 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.263175796 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.260466621 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.262984334 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.265326842 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.266383886 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.264285281 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.261269879 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.2635886 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.262386156 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.26356695 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.263623479 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.260955079 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.260158136 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.263415755 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.264413122 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.264496594 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.262926646 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.261181373 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.268589705 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.264415441 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.262548324 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.263113618 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.265127314 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.265922895 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.268513201 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.264549851 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.264783348 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.26730653 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.262258984 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.264748112 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.262312064 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.264178102 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.266489552 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.264283081 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.262197341 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.266567467 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.264483115 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.265626744 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.266096373 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.262442538 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.26436336 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.265000644 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.26317508 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.261942652 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.269103382 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.264958109 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.26382148 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.267246364 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.264381354 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.264830288 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.269123985 seconds)
  done (took 87.137660874 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.264078077 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.2637462 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265486984 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.26747551 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.266056566 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.265342724 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.266024085 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.266143244 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.265900839 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.265463762 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.265146149 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.265987688 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.267051348 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.26646468 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.266194059 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.266157767 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.269933109 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.267614708 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.265516297 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.26910966 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.269666458 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.265854722 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.266862373 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.269065034 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.266450658 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.265590884 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.265534117 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.26725867 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266102795 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.266669344 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.265555684 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.267778382 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.267040289 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.267251142 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.270282025 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.267564786 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.271377233 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.267858071 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.267366364 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.26736294 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.269231997 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.265938164 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.267615209 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.270688942 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.266502997 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.270301613 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.268763969 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.271020154 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.268749134 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.26849918 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.266359079 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.267764262 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.26831398 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.2678592 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.267963645 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.26954854 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.267884374 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.266189422 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267494397 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.269815278 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.267836579 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.268944682 seconds)
  done (took 79.774045115 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.270116286 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.270898393 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.267050824 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.269269484 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.268209519 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.267521124 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.273556586 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.267415206 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.270937211 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.269707245 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268259018 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.270952641 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26610171 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269232308 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.266926082 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267146505 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.270405488 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.267450546 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267806629 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.27161117 seconds)
  done (took 26.581758764 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.265502435 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.269163472 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.265154303 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.269110591 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.269097025 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.266510558 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.270875771 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273175485 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271329879 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273394928 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.275207658 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.274165704 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272633193 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.27259101 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.271316274 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.2717817 seconds)
  done (took 21.529169234 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.270150482 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.272199895 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.270313947 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.27062751 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.272220616 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.271561878 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.274800826 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.270535625 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.271547359 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.274264062 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.275064304 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.272588285 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.275376871 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.270451383 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.265622264 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.273582653 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.269278508 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.271347619 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.26987861 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.272920169 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.267625108 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.266855852 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.269382754 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.26659654 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.270237779 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.270873431 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.270581421 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.268603881 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.270148152 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.268325608 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.270371385 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.26672025 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.273201736 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.268953849 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.269587056 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.269976642 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.272319665 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.270670863 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.26778346 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.267746793 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.272550026 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.270166366 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.271600071 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.267966304 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.270321187 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.275375791 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.26903886 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.270221273 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.272726928 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.269309345 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.270390148 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.274440291 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.272401926 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.275101451 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.2717808 seconds)
  done (took 71.098861027 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.272339207 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.271414015 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.271140031 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.274475073 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.275071585 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.266120312 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.274201765 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.271121199 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.273178025 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.275235941 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.272937262 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.272743454 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.27058521 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.2761157 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.272514309 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.276297583 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.274521626 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.274086785 seconds)
  done (took 24.121768888 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.274773685 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.274661428 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.278416693 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.273153021 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.273961858 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.276710829 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272793264 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.275480363 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276720905 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.270899544 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268621192 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.276207242 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274541788 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.2771397 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.272167057 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274020413 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.276216669 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.27827572 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.276200897 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.274821696 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.278012064 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.276747497 seconds)
  done (took 29.255032212 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.275827607 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.272898852 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.293310713 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.322243285 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.309606596 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.276380502 seconds)
  done (took 8.956165075 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275985598 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277215142 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273975266 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279734149 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27719419 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275960829 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272916194 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274483497 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2777891 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275198794 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273222097 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278731293 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277259187 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272546908 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278373238 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277944432 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274883433 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273186645 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277186424 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276149389 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277007281 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278115901 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275561447 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27387027 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276941344 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276252064 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278332645 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272952796 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275542648 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272254777 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277732513 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273062429 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277795488 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275586291 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274559257 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274688385 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273509217 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278631581 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275546917 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275707965 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.276056896 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276979163 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275887659 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273666324 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27895926 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272973935 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277457366 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27699236 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272203321 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275138922 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27942148 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274355307 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279526129 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279494117 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279327567 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277390352 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276716098 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275767922 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27828695 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272061226 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274351123 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277162279 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269675351 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274152139 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27979686 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278232586 seconds)
  done (took 85.427058019 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272774015 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271821456 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271395873 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273779752 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27557726 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277121119 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270794405 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268826332 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270538552 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26916706 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275834705 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266447088 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269152574 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271917546 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278682358 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27670036 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276375299 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276477136 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276565576 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280922865 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277206679 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279938562 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277530897 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276302548 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276992644 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279502682 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277683262 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277357805 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275873779 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281170323 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275338301 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27718764 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279205328 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.277150355 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276535411 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277392315 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27674187 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279730559 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276398112 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28036933 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276692211 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280883013 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275899899 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277681191 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277082028 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280635973 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276896081 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276643498 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277044102 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275541946 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277942428 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276834572 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277531166 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278617866 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278537221 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278527229 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278236363 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278413698 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277922698 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278550787 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277128217 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280858892 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282425786 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274107353 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277308894 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27658068 seconds)
  done (took 85.460219662 seconds)
done (took 1732.417558507 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.370251826 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.396619661 seconds)
  done (took 13.9782646 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.44214158 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.391266551 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.277182329 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.303885533 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.275567442 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.300596597 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.279868024 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.277265641 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.278391892 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.279082712 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.278468373 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.462650062 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.274009891 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.275684186 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.279532363 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.370318431 seconds)
  done (took 42.261342964 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.307057798 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.283322556 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.387127612 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.296812578 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.305411406 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.451081558 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.332787307 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.28139893 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.439430502 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.318162541 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.724316399 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.303358828 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.284824486 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.305199985 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.295829595 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.454096046 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.506467366 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.72192816 seconds)
  done (took 29.21035317 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.694631979 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.295040857 seconds)
  done (took 9.204348063 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.29983743 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.282403937 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.309483064 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.311730435 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.302907825 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.296548064 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.31241343 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.304152917 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.295392973 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.290239614 seconds)
  done (took 64.222637098 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.302471174 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.284511499 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.28293452 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.282549431 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.274883524 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.274496946 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.280567088 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.285105995 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.622633248 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.394666429 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.296997599 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.289746664 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.283796301 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.283984797 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.280469799 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.319005569 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.40882117 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.279789975 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.281198432 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.288914674 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.280886676 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.404966167 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.318724842 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.279515126 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.397295039 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.608082012 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.282245762 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.288715436 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.399631496 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.279199948 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.281311321 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.281478212 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.284192903 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.840913399 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.807862988 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.288827481 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.302651013 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.292966024 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.281599155 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.4563564 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.282253392 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.289283356 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.281386889 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.784745049 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.434799783 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.388508187 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.444685481 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.282592443 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.284541185 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.343823775 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.283919596 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.284109806 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.311109179 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.008340134 seconds)
  done (took 107.874643022 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.300923175 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.772864563 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.445468961 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.29294904 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.043288984 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.827452374 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.272879258 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.536047301 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.293246967 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.274330254 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.593988106 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.746492588 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.278571523 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.29738799 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.955169746 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.366488128 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.284401895 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.998188573 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.276970481 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.278738595 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.685681134 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.292733124 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.289678038 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.319323873 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.313996368 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.71504714 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.620765827 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.701906899 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.279656663 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.275272093 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.714345009 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.28334983 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.294476139 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.276597344 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.544206372 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.603020115 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.583334944 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.277639778 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.28393639 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.27998404 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.300217116 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.708866409 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.590217417 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.277407123 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.276885564 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.711871905 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.273934175 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.286141692 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.278161445 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.475028406 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.274576282 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.280219268 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.606548753 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.276913767 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.617070352 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.314124192 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.33847391 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.740098859 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.275688154 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.335988978 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.279588833 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.274581367 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.283165424 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.278799242 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.27696573 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.594057436 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.681693084 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.283500463 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.598189062 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.703167591 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.274463467 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.768399546 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.123926746 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.28355064 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.33585727 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.277266092 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.79592581 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.735964319 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.332731941 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.276812353 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.583040594 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.275831146 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.590153121 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.291074157 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.276349285 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.689912236 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.29924715 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.314679672 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.276190182 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.288217373 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.902390506 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.279963843 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.543711848 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.293093298 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.278254328 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.276935242 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.313853176 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.278320212 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.28919796 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.27898776 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.764568255 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.280270343 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.563000382 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.297781913 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.278922486 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.290943972 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.278513995 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.279830244 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.492047188 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.680089376 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.280284771 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.279903347 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.275785821 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.296825938 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.573544894 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.279326614 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.554423071 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.277509123 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.276143273 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.289113139 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.876361259 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.292572155 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.290716476 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.28338215 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.11880971 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.487181618 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.29505395 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.289933234 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.280524968 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.294649453 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.506727248 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.280205217 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.314058678 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.282074132 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.950132058 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.296275668 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.301630264 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.941798639 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.277029831 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.122625718 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.302584974 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.279092211 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.574445211 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.539230003 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.580975483 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.280905468 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.277625586 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.927205011 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.33293896 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.411429156 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.298719222 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.2914404 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.478601032 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.589859302 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.281365817 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.857977514 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.280849773 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.486832759 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.27884042 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.588068506 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.7348182 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.280208793 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.279521453 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.949515771 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.942446702 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.903265874 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.283094866 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.597007 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.272571018 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.740970244 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.280185715 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.293031399 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.710943035 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.282485282 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.287397733 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.282153086 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.281745493 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.341286114 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.456211528 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.456828736 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.287938019 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.709759906 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.301287122 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.286522926 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.281120142 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.284394805 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.63412122 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.349405473 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.281056097 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.318703828 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.284114429 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.287133992 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.723856918 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.153495681 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.281594523 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.436760544 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.878611715 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.282745655 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.282978514 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.89873617 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.582777654 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.760143202 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.305793358 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.562711027 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.281399151 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.322292274 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.982849663 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.299914541 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.721609227 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.282658362 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.281884083 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.855767107 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.280556654 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.372330896 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.281473882 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.285296347 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.777103953 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.283200281 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.28628147 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.523970183 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.282695269 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.537923929 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.284154761 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.332535497 seconds)
  done (took 1097.288336283 seconds)
done (took 1365.251198164 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.284863155 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.286539137 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.274856528 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.28552012 seconds)
  done (took 26.355578993 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.295792584 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.291739763 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.292608365 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.291400563 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.295374832 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.29251277 seconds)
  done (took 8.983901847 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.308579148 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.284838802 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.28344377 seconds)
  done (took 19.100508026 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.489885951 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.471441045 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.625387358 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.379500444 seconds)
  done (took 10.189433295 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.295680186 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.292973739 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.295085937 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.295634992 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.296294939 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.296910778 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.296469503 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.295917346 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.297716609 seconds)
  done (took 12.88700475 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.903831133 seconds)
done (took 83.641760079 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.381990257 seconds)
    (2/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.647521353 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.518906801 seconds)
    (4/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.621554145 seconds)
    (5/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.490528863 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.684855057 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.46301063 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.358050278 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.570972843 seconds)
    (10/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.883790209 seconds)
    (11/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.373263154 seconds)
    (12/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.271481754 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.536185617 seconds)
    (14/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.816369714 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.893008405 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.326261627 seconds)
    (17/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.302396283 seconds)
    (18/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.971159939 seconds)
    (19/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.633764473 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.310748538 seconds)
    (21/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.731203429 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.285962272 seconds)
    (23/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.689678968 seconds)
    (24/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.655826075 seconds)
    (25/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.31416683 seconds)
    (26/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.350487245 seconds)
    (27/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.287455805 seconds)
    (28/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.728700326 seconds)
    (29/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.271555201 seconds)
    (30/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.476854834 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.285269567 seconds)
    (32/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.977640345 seconds)
    (33/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.388430871 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.689894057 seconds)
    (35/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.347033997 seconds)
    (36/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.353091546 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.351563214 seconds)
    (38/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.385477713 seconds)
    (39/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.845173162 seconds)
    (40/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.071150337 seconds)
    (41/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.276109801 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.58190028 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.408107427 seconds)
    (44/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.279785088 seconds)
    (45/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.387132914 seconds)
    (46/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.881270742 seconds)
    (47/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.854950906 seconds)
    (48/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.389496906 seconds)
    (49/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.372752643 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.870200842 seconds)
    (51/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.30765584 seconds)
    (52/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.391410451 seconds)
    (53/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.866663844 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.115223484 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.130406058 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.905276557 seconds)
    (57/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.316955471 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.871816661 seconds)
    (59/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.279971909 seconds)
    (60/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.300645546 seconds)
    (61/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.98043735 seconds)
    (62/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.538816488 seconds)
    (63/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.42518314 seconds)
    (64/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.275102174 seconds)
    (65/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.310712136 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.402092357 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.553691085 seconds)
    (68/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.319052071 seconds)
    (69/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.568600279 seconds)
    (70/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.297793765 seconds)
    (71/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.396497911 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.634288273 seconds)
    (73/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.363055995 seconds)
    (74/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.318302812 seconds)
    (75/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.414544269 seconds)
    (76/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.644543862 seconds)
    (77/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.392381667 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.177795879 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.293499649 seconds)
    (80/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.056372716 seconds)
    (81/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.109261707 seconds)
    (82/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.295500254 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.388712758 seconds)
    (84/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.290558874 seconds)
    (85/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.526611376 seconds)
    (86/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.028536087 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.169523854 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.443333124 seconds)
    (89/309) benchmarking ("sort", Float32, false)...
    done (took 5.275227827 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.391659195 seconds)
    (91/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.474604851 seconds)
    (92/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.673014986 seconds)
    (93/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.57947567 seconds)
    (94/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.756917888 seconds)
    (95/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.307795713 seconds)
    (96/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.378575847 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.687662358 seconds)
    (98/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.316194932 seconds)
    (99/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.56867643 seconds)
    (100/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.495193034 seconds)
    (101/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.985446417 seconds)
    (102/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.091326917 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.695115382 seconds)
    (104/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.34330993 seconds)
    (105/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.313368434 seconds)
    (106/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.307181367 seconds)
    (107/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.303283415 seconds)
    (108/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.875056051 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.13007481 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.53111006 seconds)
    (111/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.100842582 seconds)
    (112/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.399064317 seconds)
    (113/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.451702909 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.291603533 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.291381078 seconds)
    (116/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.819197741 seconds)
    (117/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.279983892 seconds)
    (118/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.770148037 seconds)
    (119/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.374283771 seconds)
    (120/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.476896891 seconds)
    (121/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.443714876 seconds)
    (122/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.280826544 seconds)
    (123/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.326201072 seconds)
    (124/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.461298379 seconds)
    (125/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.414259881 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 1.797547125 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.343599292 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.317954917 seconds)
    (129/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.326746838 seconds)
    (130/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.981865175 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.561358599 seconds)
    (132/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.734771293 seconds)
    (133/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.281928541 seconds)
    (134/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.295901777 seconds)
    (135/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.336485618 seconds)
    (136/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.575447471 seconds)
    (137/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.584203487 seconds)
    (138/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.588055688 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.002671203 seconds)
    (140/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.118613388 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.557364222 seconds)
    (142/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.007667997 seconds)
    (143/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.803218152 seconds)
    (144/309) benchmarking ("sort", BigInt, false)...
    done (took 6.296572672 seconds)
    (145/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.39609878 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.848289133 seconds)
    (147/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.626039774 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.382744816 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.4238035 seconds)
    (150/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.580763644 seconds)
    (151/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.994324032 seconds)
    (152/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.31911296 seconds)
    (153/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.321088287 seconds)
    (154/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.401690777 seconds)
    (155/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.282683697 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.28174406 seconds)
    (157/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.58138019 seconds)
    (158/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.396789703 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.294147277 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.323755628 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.02029605 seconds)
    (162/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.574586902 seconds)
    (163/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.280498715 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.371153899 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.320108725 seconds)
    (166/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.381544053 seconds)
    (167/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.33268816 seconds)
    (168/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.342651493 seconds)
    (169/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.478843665 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.187025787 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.299490199 seconds)
    (172/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.51604023 seconds)
    (173/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.894378671 seconds)
    (174/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.295829926 seconds)
    (175/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.5226714 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.320232736 seconds)
    (177/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.296022271 seconds)
    (178/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.400092512 seconds)
    (179/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.477968024 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.283648183 seconds)
    (181/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.918193526 seconds)
    (182/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.306546691 seconds)
    (183/309) benchmarking ("sort", Int8, false)...
    done (took 4.346487777 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.296060154 seconds)
    (185/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.321714241 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.137854674 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.628441906 seconds)
    (188/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.295184326 seconds)
    (189/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.701410429 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.296197183 seconds)
    (191/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.284924365 seconds)
    (192/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.322095522 seconds)
    (193/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.350951712 seconds)
    (194/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.861019823 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.324928393 seconds)
    (196/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.803057148 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.292970658 seconds)
    (198/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.363520026 seconds)
    (199/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.566416409 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.339804717 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.30843402 seconds)
    (202/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.656970752 seconds)
    (203/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.523699303 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.73108741 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.31423526 seconds)
    (206/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.839814894 seconds)
    (207/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.295944355 seconds)
    (208/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.08711943 seconds)
    (209/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.983000069 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.640868604 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.366919412 seconds)
    (212/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.421148389 seconds)
    (213/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.003104006 seconds)
    (214/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.329735629 seconds)
    (215/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.300604883 seconds)
    (216/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.295662665 seconds)
    (217/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.932403389 seconds)
    (218/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.405963146 seconds)
    (219/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.898850737 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.516166239 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.835938137 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.153900967 seconds)
    (223/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.78315506 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.604040605 seconds)
    (225/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.643901056 seconds)
    (226/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.324859031 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.322347 seconds)
    (228/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.34599075 seconds)
    (229/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.067216719 seconds)
    (230/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.357469825 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.340906565 seconds)
    (232/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.511602231 seconds)
    (233/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.076772368 seconds)
    (234/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.296345985 seconds)
    (235/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.602665679 seconds)
    (236/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.838537469 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.300932836 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.35601439 seconds)
    (239/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.587392385 seconds)
    (240/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.430846206 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.101453298 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.139088222 seconds)
    (243/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.363839443 seconds)
    (244/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.299581921 seconds)
    (245/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.604439478 seconds)
    (246/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.324850825 seconds)
    (247/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.570834539 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.375756062 seconds)
    (249/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.468491377 seconds)
    (250/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.651350902 seconds)
    (251/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.329208097 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.638164012 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.50380107 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.497168567 seconds)
    (255/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.310876156 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.299031453 seconds)
    (257/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.139389278 seconds)
    (258/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.300613303 seconds)
    (259/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.004844689 seconds)
    (260/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.642631784 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.324209531 seconds)
    (262/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.51687991 seconds)
    (263/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.576323643 seconds)
    (264/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.304732881 seconds)
    (265/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.524054263 seconds)
    (266/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.298569258 seconds)
    (267/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.111354581 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.689690577 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.325875476 seconds)
    (270/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.005285944 seconds)
    (271/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.498541356 seconds)
    (272/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.288945105 seconds)
    (273/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.991020621 seconds)
    (274/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.838107251 seconds)
    (275/309) benchmarking ("sort", Float64, false)...
    done (took 5.554630677 seconds)
    (276/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.309659799 seconds)
    (277/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.53951202 seconds)
    (278/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.314548384 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.364592162 seconds)
    (280/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.847590629 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.722041334 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.387162132 seconds)
    (283/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.330195182 seconds)
    (284/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.301847777 seconds)
    (285/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.393222857 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.385434421 seconds)
    (287/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.832620434 seconds)
    (288/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.301611088 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.415170777 seconds)
    (290/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.616207109 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.085088723 seconds)
    (292/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.286414936 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.481901354 seconds)
    (294/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.545339106 seconds)
    (295/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.653214319 seconds)
    (296/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.383274263 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.791000268 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.345128177 seconds)
    (299/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.364480446 seconds)
    (300/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.586887153 seconds)
    (301/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.812591265 seconds)
    (302/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.506529665 seconds)
    (303/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.332043195 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.32779148 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.640194121 seconds)
    (306/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.344286669 seconds)
    (307/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.431794264 seconds)
    (308/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.321065591 seconds)
    (309/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.314591835 seconds)
  done (took 902.840986799 seconds)
done (took 904.067092487 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.33708764 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.329896665 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.312895429 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.337337045 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.424729462 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.346522049 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.324564117 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.314703635 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.361606482 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.362382998 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.313323967 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.346922254 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.314853822 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.314086709 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.313841683 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.327518745 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.271168331 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.315762777 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.331824865 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.324214179 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.331565814 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.313149941 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.363398906 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.348754653 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.317491317 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.316055091 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.31905402 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.333391949 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.427342156 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.317796789 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.317914599 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.328529717 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.245544929 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.31073064 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.309499508 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.336376193 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.326912182 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.324207997 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.318872884 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.346152682 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.611407181 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.312940838 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.318654905 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.316773053 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.317035939 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.320550997 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.318002367 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.320023087 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.330128998 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.330920195 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.60569676 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.328562945 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.317691546 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.315794519 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.326201025 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.317483988 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.319790922 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.3333798 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.33512622 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.331024949 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.236420276 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.320738299 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.318594089 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.333709868 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.324820207 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.646978805 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.309832543 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.320673773 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.617760884 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.320714915 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.647553445 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.323182165 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.320332546 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.332196941 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.349583757 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.251372314 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.310536178 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.318500225 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.326336624 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.315206403 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.328696175 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.332175704 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.321488249 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.319865178 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.330250514 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.353143157 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.328399562 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.318606287 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.327994933 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.337810553 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.327017569 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.329810016 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.321729993 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.312096703 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.326870622 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.321217635 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.322843445 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.322007526 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.32338796 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.329534142 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.616715323 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.333050267 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.315200095 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.316493315 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.320243555 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.333788232 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.620537251 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.317591795 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.341598918 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.367233744 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.321803016 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.243570844 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.322242964 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.337276523 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.329852263 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.323538461 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.314170405 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.244131367 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.616391484 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.332919012 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.320195109 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.319187874 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.335116142 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.322587771 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.315222068 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.257480038 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.320563047 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.335058816 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.440455372 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.329789678 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.353741922 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.318271544 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.324622383 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.354400579 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.336045987 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.352819321 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.324083475 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.336380629 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.335985808 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.317538398 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.331314691 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.329652533 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.322207173 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.326006036 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.315632254 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.351903922 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.332652006 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.334673272 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.342331357 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.441496885 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.319140883 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.246702882 seconds)
done (took 221.147049903 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.379226656 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.313856413 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.419933508 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.319781304 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.415939886 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.414513123 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.316599779 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.31735876 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.316963901 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.698320966 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.316783744 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.316810197 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.318888917 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.319070793 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.398323008 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.320058007 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.316747711 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.659469517 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.320282686 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.387519411 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.313686073 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.316345212 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.320302937 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.698192438 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.321098337 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.31062903 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.388719599 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.320512291 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.663607581 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.313260693 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.319554093 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.663867089 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.408219046 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.338737956 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.330568925 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.326156599 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.417357654 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.336314748 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.400913564 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.400420154 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.423028473 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.359834083 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.313402918 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.322054251 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.325561609 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.322004324 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.317947399 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.346033494 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.318397117 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.322032644 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.661743224 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.331171167 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.321673242 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.320330243 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.321460405 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.349804548 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.319693809 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.32101003 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.408804163 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.322346524 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.382322015 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.700117214 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.700270668 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.321074733 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.319929115 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.321569385 seconds)
  done (took 147.539094739 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.389322076 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.394993621 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.430214417 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.323379423 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.372108226 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.432986343 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.321066205 seconds)
  done (took 10.915689665 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.327117837 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.324077848 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.37007249 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.372710846 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.323461897 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.47132064 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.323249756 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.333022424 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.320305831 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.374951772 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.326652061 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.323419138 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.328822298 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.32365812 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.371918023 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.334434778 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.436697024 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.322660353 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.324472015 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.477879621 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.320629328 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.331489714 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.37547104 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.333497672 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.325538105 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.330157894 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.887523354 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.324164536 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.322950892 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.326203509 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.323763571 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.362512335 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.325466068 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.320166459 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.322817914 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.439665701 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.325381391 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.322962965 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.326258869 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.322175551 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.324959912 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.325487445 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.324546672 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.326456727 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.325612399 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.348681556 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.326434175 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.327047096 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.325709843 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.326082071 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.376700374 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.327893758 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.324161078 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.326522403 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.38133178 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.332653298 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.325953517 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.324296659 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.32674992 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.32283148 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.479402272 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.374370791 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.326922938 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.37441102 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.326615371 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.328588074 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.327555042 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.327614912 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.380102252 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.328327144 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.374373068 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.325583372 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.481008954 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.349887454 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.328978917 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.329066405 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.32858913 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.32881693 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.321085421 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.33326516 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.323489991 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.329442079 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.334175678 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.325582406 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.326830871 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.428518571 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.436628851 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.324934006 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.33882429 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.334706442 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.325934789 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.379959449 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.327670411 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.32519508 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.376223095 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.441197373 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.379239162 seconds)
  done (took 152.418141503 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.330841274 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.337314442 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.328816465 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.342336826 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.328415226 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.326643634 seconds)
  done (took 9.251047138 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.328944872 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.32928444 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.329184621 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.328779287 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.329149468 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.330039069 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.32737566 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.32979631 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.333173987 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.328372301 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.330069348 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.331494241 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.330024089 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.329162813 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.328197638 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.328520119 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.329693755 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.326449062 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.330072864 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.328925274 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.434680367 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.327995966 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.329712434 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.330139588 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.331975526 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.330566172 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.336462976 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.330400316 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.33140334 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.337377986 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.333688666 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.331685809 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.332077242 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.336195015 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.332745203 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.332015485 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.334552214 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.332912497 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.329488955 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.334078478 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.331603323 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.331203767 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.331193415 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.331230622 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.333019377 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.334982693 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.336277738 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.337730691 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.331074868 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.333397209 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.332672698 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.336667377 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.341028235 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.333832808 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.334896936 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.334481036 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.335650115 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.331842437 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.331875778 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.331422787 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.331079621 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.330526335 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.333480057 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.335911374 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.329295613 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.334274676 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.330193216 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.335462302 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.331143732 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.332199936 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.332270622 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.329918144 seconds)
  done (took 98.258384915 seconds)
done (took 419.631813457 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.611391818 seconds)
  done (took 7.870928861 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.594029597 seconds)
  done (took 7.855963234 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.214180259 seconds)
  done (took 20.483812601 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.386794033 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.345400091 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.332437307 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.331083908 seconds)
  done (took 26.658077277 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.66223711 seconds)
  done (took 7.92683573 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.32472196 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.324621804 seconds)
  done (took 13.911523258 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.350904897 seconds)
  done (took 7.613460819 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.949469893 seconds)
  done (took 8.222575548 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.33598802 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.353619501 seconds)
  done (took 14.22500427 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.312995481 seconds)
  done (took 7.576089068 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.091151205 seconds)
  done (took 8.356271844 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.335216409 seconds)
  done (took 7.599998158 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.388056188 seconds)
  done (took 7.651784754 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.748688483 seconds)
  done (took 9.012550795 seconds)
done (took 156.226193272 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.327508696 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.327917179 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.328298116 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.326920031 seconds)
  done (took 26.575282541 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.368169746 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.368371721 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.366289465 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.379046816 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.370100691 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.367681175 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.361453881 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.360435521 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.3799 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.36966314 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.367961974 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.368090461 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.367422657 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.359379803 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.36946711 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.368971642 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.379340068 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.368206976 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.360596134 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.371079688 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.33664254 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.378506744 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.371672753 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.334636103 seconds)
  done (took 34.058354842 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.530904704 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.406139096 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.48890322 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.387520099 seconds)
  done (took 7.076381145 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.390281862 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.387588788 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.402094134 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.435443374 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.464970378 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.395230656 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.359382138 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.35553568 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.343186704 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.387172891 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.462283089 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.405142291 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.472367135 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.338363206 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.520747398 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.334145605 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.333729241 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.388336955 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.43622787 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.452693807 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.340266303 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.389324241 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.390847636 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.404964272 seconds)
  done (took 34.853503742 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.332148587 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.343952773 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.343197908 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.33334953 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.337093604 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.334794179 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.342103113 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.335706294 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.355601242 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.33674326 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.335921791 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.334643408 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.333279592 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.335801628 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.33602788 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.347742015 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.35081311 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.33478892 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.339127981 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.341997568 seconds)
  done (took 28.048854383 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.330562875 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.181003331 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.679751908 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.583046854 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.328959207 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.329652159 seconds)
  done (took 27.698109009 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.398269344 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.522598287 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.338284907 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.672679885 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.751355112 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.338323798 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.332857716 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.550555566 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.841921113 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.840784076 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.38658196 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.398918361 seconds)
  done (took 19.642616585 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.335384673 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.328507633 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.329250905 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.345119057 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.387160907 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.340472202 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.343716763 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.329078796 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.38781272 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.391820357 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.338090193 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.39015101 seconds)
  done (took 37.515801091 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41962223 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378178081 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.268064108 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.05920952 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.710316591 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.542263031 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.330542154 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.774429042 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.338653672 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604654047 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.201477642 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431600235 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.587408504 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336541086 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.333794014 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.304943479 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.556080203 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807192006 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336867744 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.119136695 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356598469 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.332424679 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.208764208 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.361069848 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.5442805 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.462294028 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.594234643 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.331884214 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.60078226 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.344799635 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344392176 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.334029115 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.606607113 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986525132 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425889222 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345463637 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.019968001 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.044394278 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.332084778 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.128404778 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.958130737 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.332143077 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3438976 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332404205 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.26841779 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.339930336 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.762155128 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.338120251 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.043702469 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.337005319 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.346295398 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43106183 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.340521057 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.151666385 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345622941 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.333006479 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.333339949 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33920422 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904413652 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.611573148 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349988648 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.270017387 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.70182265 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.139434223 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924440302 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.436829184 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.338404516 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.341753078 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272566458 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.212683839 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.347708288 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483544448 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.35465356 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.988380106 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994230298 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.241390608 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.277159283 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870722682 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352378766 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.272183188 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.563606374 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334309528 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272165644 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.291902981 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.273542624 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026744287 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344945681 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.736811508 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.346272176 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.758716175 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.349047146 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353797562 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360521031 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.560413406 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.22272118 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339532136 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.997770889 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478869412 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359452908 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.758915083 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270223323 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.339296133 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594764787 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.546560523 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.341746059 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.306120266 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.533179999 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.787532732 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.352779631 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.341200031 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.347359467 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.885032495 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.350972736 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.629851818 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354920501 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.33855211 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064940581 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342480231 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.439090703 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.264911565 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.584278148 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.103610454 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342492211 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420047099 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.342161886 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.338535119 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.211389203 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.85424807 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.339379049 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.341307307 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338870314 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.350621032 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.339482706 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285185828 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.333833713 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.283090578 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.342016701 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.562465825 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.347214151 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615050898 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.273749004 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485352909 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.393573485 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.561917121 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.475739929 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.338727955 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.597157771 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347923658 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.346548672 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.350225497 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35717361 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439493897 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360311485 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.338791169 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.595095901 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.34345577 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.343366456 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.217121383 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.343938366 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348126223 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.346652338 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.167401822 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883097533 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321666419 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.340762633 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.229339646 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.353711233 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403757258 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.346693522 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.35106041 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.053352189 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.135807072 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.346905536 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.339539032 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561592426 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.350500717 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.199044856 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419581038 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.531493831 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.890199206 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356587197 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.276099043 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.051172048 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.035059836 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340751201 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.27814664 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.34192772 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349175265 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.352731904 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.839929802 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.889219488 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344192735 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.118178274 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.347876273 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.350623089 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.347059629 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342417566 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.042323302 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.619082331 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347022435 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.352115752 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486335668 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.354880536 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.275371617 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.344210107 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.346178355 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.343760656 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.342343492 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376319521 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.13332394 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.814392885 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.601205563 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.017756497 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.35535065 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.303753051 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.373722747 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.340042377 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.010172867 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356619736 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.360203831 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363364658 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.354048118 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.181151296 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.014465307 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909870443 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0309407 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843384007 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.269193154 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.347085394 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.344698476 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.773024439 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278210543 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.899424543 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.523342852 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.776310685 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.290394072 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.540476666 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.489630751 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.06979233 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.354834185 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.571048025 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.262764518 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.01688662 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.369038091 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.555902096 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377179745 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.347078982 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.273180614 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.630366079 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570415515 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.98023609 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424309972 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.771929795 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.019770224 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.359373174 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.341824362 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.683566173 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510408364 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.061172494 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.517847009 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.35127839 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.254969657 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.824943431 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.346669713 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.568390256 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94850772 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.359858169 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.540929161 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283312342 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.358449375 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.356290411 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.344896949 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.554060786 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.345744638 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.599160286 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.354309106 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.280730583 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.355773214 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84760725 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.202745577 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.351814784 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348500755 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071071239 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361232431 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.616105887 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.346960967 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.032451658 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352288367 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.279841324 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279114365 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.039565809 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.351299457 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32146265 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825619115 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.69752378 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.340888201 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368090428 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190553321 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.601858617 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.359809144 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.898666285 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.577240799 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.12293796 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370692705 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.447489629 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.067757476 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.3470346 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.346535653 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.583773606 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.175142286 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.571372593 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.29910819 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.253509198 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.346191987 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.560281038 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.346829965 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.278430156 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59563403 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.057734663 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.358570015 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032598886 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375955444 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.266035447 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.27601973 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.71305022 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.354502631 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428872866 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.359270943 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.358156807 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.36013676 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513025587 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270823293 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.363774621 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.364206035 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442916833 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.653050359 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.038159774 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.353972592 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.906028002 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0762431 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.906406157 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364502657 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.350234581 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356779168 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283859052 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496524679 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.574670547 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624807524 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479724118 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.825042784 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372117149 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.072983802 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376554802 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561007345 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62409857 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.246778098 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364370801 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.364672346 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.350353935 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.361583788 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.561430076 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830935687 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898124529 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464528549 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.353370453 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.778358722 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627565018 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.351384352 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.351951155 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.943877901 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.370753251 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.682864097 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.358502236 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307974983 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498627554 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.362804795 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008057446 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.362680663 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.506056597 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.123506528 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.247498188 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.606681253 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.784928352 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.361256416 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90769677 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.021753332 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616389553 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419015363 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.362948474 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.463604853 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499174782 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.347577321 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.354230306 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.353220524 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.197598473 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.061425781 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.364821876 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911207113 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618655877 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.350847724 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.364389386 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376004116 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.363165432 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.575763768 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051135341 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.578837457 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.360744308 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.358016557 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.166820135 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914783872 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.367560131 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.287305964 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.356299707 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585804984 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.590836454 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374558318 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.809071142 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.063336475 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900484596 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.324839591 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376005763 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365692015 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.02277773 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909979647 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.052515524 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835789856 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.923477589 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.368364043 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.628080616 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.36016709 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.367617882 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631967389 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.358288478 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.354649599 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382294224 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.912658584 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.091700146 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.372826886 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.167696689 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.291478364 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.695165392 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.978538891 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.291678896 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354460681 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.531047489 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.357886351 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486740705 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365892613 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.364222991 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36039252 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.089500341 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.628248398 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.359572959 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.345932751 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.136287265 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.359202857 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375662165 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584665686 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359304322 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.024186057 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.706355564 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.609649323 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.365279785 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.340738199 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.361519959 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358702577 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.343210794 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.552791378 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.855919977 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904347352 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.359285612 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.368620022 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.360172867 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.571596278 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568231286 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.329223598 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381125863 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357547965 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391977073 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.260622895 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.858383875 seconds)
  done (took 1590.896857696 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.398634595 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.378242688 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.367940014 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.391537059 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.37416843 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.435574959 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.414188598 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.412811959 seconds)
  done (took 52.462668163 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.357614713 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.608200472 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.385734059 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.370962298 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.363800882 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.372323976 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.777754452 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.356709924 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.364591845 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.367354065 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.361936324 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.357857487 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.969813378 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.367919411 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.364649227 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.343954898 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.363211439 seconds)
  done (took 65.753031463 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.357151197 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.746248558 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.45074276 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.359816778 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.187696223 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.356134783 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.838138952 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.35548396 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.360820103 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.527907652 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.009342582 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.392391589 seconds)
  done (took 84.236543982 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.364876698 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.365391171 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.365652752 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.36647229 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.36548375 seconds)
  done (took 8.123340892 seconds)
done (took 2018.20752521 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.613159799 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.023615103 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.995520335 seconds)
  done (took 5.315522448 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.506665806 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.555533718 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.672146388 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.682126601 seconds)
  done (took 7.713308276 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.636473311 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.752490251 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.545533669 seconds)
  done (took 6.228331037 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.700658937 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.360184252 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.480771066 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.355500168 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.36102073 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.359625335 seconds)
  done (took 20.372466706 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.36553208 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.365434179 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.363383679 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.368188684 seconds)
  done (took 6.757469842 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.345536289 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.101032099 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.347990621 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.364950009 seconds)
  done (took 18.452137258 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.112318833 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.131228553 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.108063773 seconds)
  done (took 7.64744562 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.371818128 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.202310299 seconds)
  done (took 9.869266442 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.661465039 seconds)
  done (took 2.957607824 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.495568339 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.631619415 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.334612041 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.291855636 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.360399335 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.989820047 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.909724973 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.511652474 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.280326097 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.409911411 seconds)
  done (took 27.510591079 seconds)
done (took 126.274221887 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.998132477 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.608639576 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.564349391 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.009151871 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.587614305 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.562811336 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.567384954 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.976970196 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.474304843 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.463846859 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.97151788 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.641829481 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.727931255 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.607658584 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.731471651 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.736323359 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.58706407 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.044281828 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.649583322 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.886495059 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.564802525 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.605424979 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.801613521 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.623691529 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.590446142 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.512230472 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.188957192 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.729588398 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.829028423 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.208151119 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.51274039 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.068334853 seconds)
  done (took 190.930244521 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.374193997 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.359370666 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.36156672 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.372501007 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.360374993 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.361617743 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.362914134 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.360270316 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.360423056 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.364228212 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.368089659 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.360957684 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.361820852 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.360588941 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.360443794 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.359928563 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.360991312 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.360319065 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.370967753 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.363007604 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.360009148 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.389613385 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.37473238 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.36185952 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.361091896 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.379070761 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.359447477 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.362504251 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.38131085 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.360594269 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.362483035 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.363571715 seconds)
  done (took 204.982474399 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.364819336 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.360555883 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.363708561 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.361754645 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.361667515 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.363821047 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.362546881 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.370142882 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.362138476 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.388269488 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.362397242 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.3753735 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.363193125 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.363289269 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.36314132 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.371615729 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.363822365 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.364856632 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.372378798 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.365140863 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.366213069 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.363019507 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.363133493 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.381344855 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.362951316 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.364047095 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.36291719 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.38789622 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.370383575 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.364785779 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.364003983 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.363551344 seconds)
  done (took 205.040482343 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.560707099 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.371571528 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.374915033 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.309389351 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.373393977 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.370632025 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.369320403 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.562907607 seconds)
  done (took 14.596452157 seconds)
done (took 616.849016742 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.600126701 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.326248803 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.567601043 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.393906739 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.139347165 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.391057713 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.395001895 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.556306359 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.270166943 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.555249886 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.600262732 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.391521224 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.714162679 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.390274783 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.641009887 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.48842804 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.213842901 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.321011401 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.696921001 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.909301079 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.639066225 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.790220766 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.55256795 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.279931207 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.751167927 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.790073408 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.043909574 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.232512689 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.39436547 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.699141378 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.966630519 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.352860977 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.448165657 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.432271653 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.485791579 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.465741412 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.243563654 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.42587598 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.569531922 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.55343802 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.913935131 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.09457201 seconds)
  done (took 91.988175028 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.362788111 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.365180172 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.363233495 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.366966654 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.363958491 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.366095916 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.363514422 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.365056168 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.363262729 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.363653635 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.364153832 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.365450121 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.364860277 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.364648663 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.366319125 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.363942346 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.365308628 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.366017493 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.364319396 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.365808568 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.366320911 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.364232382 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.367356628 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.36593983 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.366228568 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.364818961 seconds)
  done (took 36.795388639 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.376458357 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.613065844 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.775302111 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.382472348 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.375555732 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.382206496 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.453196749 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.379957104 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.380164689 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.38096236 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.528711 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.383554829 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.417864798 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.781916984 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.376873609 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.381049924 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.37861438 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.377419357 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.624469689 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.385719716 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.452030309 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.381850904 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.452248136 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.388638203 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.380128426 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.378825062 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.383782642 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.874098852 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.384122064 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.528607877 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.105287332 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.449624683 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.825073216 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.788173787 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.104490386 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.384215857 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.384179963 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.535821534 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.380513638 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.378363928 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.453388091 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.380102785 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.786484136 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.995228283 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.392450584 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.380058227 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.893566908 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.536715645 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.612244205 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.382853929 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.809295428 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.382265486 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.380974804 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.378709228 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.611711784 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.3862011 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.378710789 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.892463051 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.397778781 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.455473751 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.380728852 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.382179094 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.627913863 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.377874863 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.619483002 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.381687344 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.389310932 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.381392101 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.788106452 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.381572215 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.017389295 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.391983267 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.381418422 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.526879874 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.616610609 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.920486932 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.385527482 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.631062923 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.834660792 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.453343253 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.38338142 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.860867863 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.457953834 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.384212927 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.38538468 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.385894537 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.381334772 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.42826173 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.44929887 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.947806702 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.007355356 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.9043656 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.456579966 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.392785065 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.381726564 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.892877223 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.384076745 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.382450606 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.783396938 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.015001803 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.395063213 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.390377604 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.998843896 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.396084422 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.454865776 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.387589858 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.792824195 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.381135607 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.427362288 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.382759341 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.390829477 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.383967577 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.456030639 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.384444723 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.38116318 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.989721931 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.548138011 seconds)
  done (took 180.348868457 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.376423674 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.375842502 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.374015078 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.373733609 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.375660391 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.390303954 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.375149325 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.375776374 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.381650381 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.378367471 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.376603057 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.375598105 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.377466996 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.374059176 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.405757988 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.385223246 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.992053863 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.379936411 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.377248564 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.376619421 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.164606715 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.37929236 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.376668938 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.374930241 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.376942716 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.376445321 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.402531302 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.379517444 seconds)
  done (took 153.342406643 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.386435364 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.911590421 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.382996721 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.507481648 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.402582868 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.383673191 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.505303317 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.438737044 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.388016571 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.384043927 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.380517459 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.669606798 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.386206087 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.865673482 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.558955304 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.509586521 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.864770528 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.385641273 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.382142417 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.385577306 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.510310923 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.392042156 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.669360705 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.914688765 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.386884339 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.916661442 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.373505674 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.38807712 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.38604167 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.917122176 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.384555868 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.671666321 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.456684435 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.440203722 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.918800738 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.866129766 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.868080433 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.520600663 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.386486098 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.385853529 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.384308335 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.375931796 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.918366418 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.387090428 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.388205602 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.914249478 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.397358168 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.38720996 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.39776309 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.385486891 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.442628434 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.443681196 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.678393813 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.924024442 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.45479105 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.40657975 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.512814686 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.738975872 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.386197416 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.868906623 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.373042717 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.924524233 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.391618424 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.378514917 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.387835867 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.395063226 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.527583175 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.511846228 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.870632569 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.388208942 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.87237898 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.526761663 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.385605635 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.387744705 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.389173594 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.92221699 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.870556257 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.526294614 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.511838891 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.57034372 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.375989826 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.387353055 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.374691953 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.458465224 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.386614558 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.940935506 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.875313429 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.387838943 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.389610978 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.387141966 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.39218005 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.555338763 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.93937677 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.46114962 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.864552088 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.696831686 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.687398544 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.393130277 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.445008794 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.391089647 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.688274813 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.393111706 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.44653056 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.796218341 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.685871119 seconds)
  done (took 163.857524885 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.621702797 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.510417589 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.476610296 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.497675303 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.921128933 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.949993394 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.569197688 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.51100201 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.496132833 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.627216286 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.525516458 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.486760982 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.566131676 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.457029033 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.064180915 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.454526158 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.479481538 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.509682322 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.497522447 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.394349715 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.994267047 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.665809862 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.551530266 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.518112633 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.480187641 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.150636214 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.916838931 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.887518735 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.550117046 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.619164724 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.915017155 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.46420766 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.323672933 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.045948416 seconds)
  done (took 66.018216525 seconds)
done (took 693.65297925 seconds)
SAVING RESULT...
DONE!
