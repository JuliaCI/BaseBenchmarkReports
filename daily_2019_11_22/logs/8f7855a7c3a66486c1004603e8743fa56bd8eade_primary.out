cset: moving following pidspec: 22174
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.413630755 seconds)
loading group "string"... done (took 0.581006813 seconds)
loading group "linalg"... done (took 7.3023426 seconds)
loading group "parallel"... done (took 0.161625993 seconds)
loading group "find"... done (took 1.169452645 seconds)
loading group "tuple"... done (took 1.79479241 seconds)
loading group "dates"... done (took 1.254407436 seconds)
loading group "micro"... done (took 0.223852724 seconds)
loading group "io"... done (took 1.023147358 seconds)
loading group "scalar"... done (took 39.178411481 seconds)
loading group "sparse"... done (took 12.449605222 seconds)
loading group "broadcast"... done (took 1.011321147 seconds)
loading group "union"... done (took 13.198642331 seconds)
loading group "simd"... done (took 4.562605378 seconds)
loading group "random"... done (took 9.268108194 seconds)
loading group "problem"... done (took 1.913568564 seconds)
loading group "array"... done (took 21.096417601 seconds)
loading group "misc"... done (took 1.717250825 seconds)
loading group "sort"... done (took 3.364258602 seconds)
loading group "collection"... done (took 17.624665719 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.513711979 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125658503 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119586775 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120094267 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147729126 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113010095 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124445418 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084459046 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.787853231 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.150578591 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118283643 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.432727984 seconds)
done (took 5.143758787 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176343989 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083056015 seconds)
    (2/2) benchmarking "String"...
    done (took 0.08150864 seconds)
  done (took 1.287821245 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065214434 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123075435 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066778812 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066909725 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067506657 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065994273 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065971202 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067308108 seconds)
  done (took 1.647150607 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073382503 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068532755 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069338873 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068157989 seconds)
  done (took 1.403278643 seconds)
done (took 5.712444637 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.796251234 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.203675214 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188185205 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.412438507 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131869054 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.159393269 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.63498996 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.311500718 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.191497871 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080282778 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104878801 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.328502235 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.109449376 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.634203339 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073876996 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090671288 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13668141 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.408004001 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066993629 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08177315 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.08831182 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128021027 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08813315 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073940073 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.144985763 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067713584 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136746154 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080315723 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066482809 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.213019486 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17197085 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.655773526 seconds)
  done (took 10.223696283 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097032468 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098364902 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068984221 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12284941 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097462978 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069843608 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071452546 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067191087 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087594746 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129111278 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089270472 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102317588 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065297267 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068942196 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084743897 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203788803 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081742285 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081770068 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071121813 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075342786 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108108417 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078094618 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077705668 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077340437 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129430207 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180342429 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098292634 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097337129 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066647083 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080933555 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114954621 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125393433 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065452361 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066126699 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125355503 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094251214 seconds)
  done (took 4.582683654 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.004357413 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.144472245 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09058287 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13422346 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064793414 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108846326 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065192281 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08092368 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.210039209 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.467430304 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084967995 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.585915252 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111123519 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104418814 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06696753 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068136017 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066765239 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.367033014 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.094680673 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105825516 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080939299 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069556733 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068386591 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.091521689 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067657516 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062836049 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067437071 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.108925768 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.30659055 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124651511 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067458966 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.952643415 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.127763044 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067086813 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101397212 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162505844 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088499719 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.275516938 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068740171 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06463377 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153599445 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070252521 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065286181 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066538577 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084439205 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103637436 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113195483 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065726416 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067415351 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161970999 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064230692 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079603579 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.641394865 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154457682 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077281649 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064297744 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.25611659 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.087790358 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069116259 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063771895 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.182718094 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134687138 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067608665 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066286291 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068027826 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069343669 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.360896198 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065860679 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.883805726 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070220266 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077150851 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072026609 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069702771 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073253513 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072608749 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.088267854 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066403892 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075325597 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065569715 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065928067 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066570512 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083195916 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.376739932 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067073766 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064187412 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068609556 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064924837 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089720572 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097274751 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066553212 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06557351 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099632111 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068233737 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065856977 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107249221 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06609312 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083162944 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069242653 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112882672 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.166776661 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.098675726 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068039171 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096817662 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07027578 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099204041 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084597095 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067481652 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.420115385 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065923311 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06487019 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068458275 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066184137 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067303262 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066487767 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078697851 seconds)
  done (took 20.988131125 seconds)
done (took 37.921314441 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.238931094 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077837038 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074325626 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074082572 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074343683 seconds)
  done (took 1.757390732 seconds)
done (took 2.954115704 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122618535 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100020228 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065088289 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097519388 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065162665 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102610481 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101464009 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081663511 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100672611 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064344073 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097944406 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06407748 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063877387 seconds)
  done (took 2.348263846 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083743279 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083929122 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069766911 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084322611 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063535371 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083238169 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081393382 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089806083 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081128313 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07320024 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064300913 seconds)
  done (took 2.048882934 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083060613 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085027435 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069615758 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085755965 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064354301 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082341895 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081190473 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085765755 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082202928 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074199489 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064099778 seconds)
  done (took 2.042859959 seconds)
done (took 7.626437228 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077325681 seconds)
  done (took 1.250473881 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.601054089 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.193990207 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081686029 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11264878 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.188807487 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.11926793 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.277397441 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087015003 seconds)
  done (took 9.024536258 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.090466187 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069844606 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.083665489 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072058906 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068492913 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.0689604 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071712406 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071707334 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070684611 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068448614 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07111053 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069022345 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069025127 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071494151 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067884674 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070580129 seconds)
  done (took 2.407506383 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09275424 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09134899 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073751018 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075134162 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071805494 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071671571 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073734342 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073575724 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070151863 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071811093 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073994514 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07354045 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071552203 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064382799 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073988684 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075264107 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070469633 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073556655 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073844137 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074764704 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07462573 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063842964 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070987298 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074323529 seconds)
  done (took 3.063283555 seconds)
done (took 16.931129993 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114217347 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071517998 seconds)
  done (took 1.370422686 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082252069 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083237911 seconds)
  done (took 1.357965763 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084086442 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065408952 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090965507 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078279473 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065905496 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065280782 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089258101 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066194451 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06544774 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065728136 seconds)
  done (took 1.928809374 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068741474 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078013052 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070579761 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081279202 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073332095 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063887775 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072705185 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068169703 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078038478 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062585579 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07090688 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082337412 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071040944 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084552052 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072299767 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068616557 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070566832 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067329316 seconds)
  done (took 2.500322164 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06484501 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066696096 seconds)
  done (took 1.330796237 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06667375 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063483265 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06651536 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066339449 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063076177 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061947912 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062766227 seconds)
  done (took 1.64608833 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.383425757 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112437866 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.314443052 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072803368 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083416709 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256942545 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065366483 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070745823 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070448862 seconds)
  done (took 2.671422011 seconds)
done (took 14.006177625 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079935096 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086785197 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097067857 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.375918089 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091499775 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065723957 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113508811 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.195137016 seconds)
done (took 2.314215516 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211007943 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.631007261 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.403713122 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.205370716 seconds)
  done (took 2.442619931 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342044302 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088238982 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06036687 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06930176 seconds)
  done (took 1.77181149 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065829173 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069467613 seconds)
  done (took 1.344621832 seconds)
done (took 6.978527765 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066863824 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066610826 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.06368045 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066195858 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063542715 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064612069 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066325119 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066067183 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086115796 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065636459 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.069006599 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065521598 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066219456 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063303295 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063790222 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066404469 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063269272 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064037369 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063448299 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063451645 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065836486 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063896041 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063586532 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063599755 seconds)
  done (took 2.824459953 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08565283 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066007619 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072245605 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071126904 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069801756 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071488187 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071636925 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066050594 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071440706 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068330707 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069529374 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070225818 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068073695 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069837879 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068450275 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070054401 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07146325 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06603255 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068105053 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070220261 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071182059 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066385755 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069311007 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071454745 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069313768 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070978176 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068492092 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06629753 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071193488 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069478408 seconds)
  done (took 3.315730558 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069857189 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063306246 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064494851 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070659657 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063421022 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064761055 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063223116 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063526792 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064046792 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063340804 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064711192 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063155736 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063417431 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064553568 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064401369 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067273273 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079190949 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063455259 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063551443 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063960386 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066935118 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063726655 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063539738 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063228977 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063700483 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063268505 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063853409 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063764892 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064274657 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063037041 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066156858 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066886322 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063474127 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070236282 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066751507 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062784058 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067020165 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062799239 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063870179 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062455059 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062565458 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063203141 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062907975 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070136417 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063498693 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064978879 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06320858 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064495805 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063333371 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065529855 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06262781 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062900964 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.06502077 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063980017 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066929822 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06236715 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064449381 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06216493 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.179052113 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062505861 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.0624975 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062663057 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065153214 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063339548 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077569042 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069635503 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062341502 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064234539 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063644055 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065174593 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064348584 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076229049 seconds)
  done (took 6.011982132 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091435212 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087885434 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064601092 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065139508 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061676907 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063912042 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069727994 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063653117 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065085204 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08180014 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06381612 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064456144 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065135626 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067239927 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064341635 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065176199 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071652478 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06118945 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063739277 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067378692 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063637733 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06939986 seconds)
  done (took 2.730237783 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156443382 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070262914 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106441398 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075351571 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069909172 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075332169 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070182424 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070077506 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069711607 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067082314 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067124053 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069567202 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06943058 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067343896 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067080539 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067601961 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069355741 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067289849 seconds)
  done (took 2.597687572 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076793351 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066314898 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086472241 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065225243 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065851896 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067997135 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069919737 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073694169 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067681203 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065836416 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073946232 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068023875 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068166449 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065787 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06818024 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065447188 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068103703 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065904233 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073561857 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070174755 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069921083 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073956671 seconds)
  done (took 2.759993746 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079453319 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068673752 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082393326 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067781465 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06192319 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063724066 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069698212 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065629713 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069455133 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067226171 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065303247 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064022979 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068092786 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065259191 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068076436 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065212017 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067328477 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065171925 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067234517 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061166385 seconds)
  done (took 2.58011379 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086243676 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06715116 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067115072 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075665461 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067327364 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067299104 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074954414 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066721806 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066859895 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087934998 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067210647 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066479935 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075115641 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072065568 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067314405 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074448076 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0749024 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075335603 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067638823 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066741835 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087764498 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066855068 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074802524 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066781314 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066848279 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066776581 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066816039 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071314604 seconds)
  done (took 3.230592901 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066138117 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065102559 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063527757 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062837532 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063043575 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063795828 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063204733 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063088081 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065768848 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063509163 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065358581 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065253506 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065219372 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066074588 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06599577 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065754078 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065951927 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06369123 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063420726 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062915823 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06544645 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065383186 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065606614 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062876495 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063825666 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065643839 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063182169 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06319978 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065953452 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063116653 seconds)
  done (took 3.166528775 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076798717 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073770231 seconds)
  done (took 1.382512916 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063230177 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080254451 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063676533 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069867831 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069223332 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066177347 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073058762 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069683599 seconds)
  done (took 1.784603689 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082460466 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077180899 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06795592 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.08002687 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076646023 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082709648 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134037654 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066716537 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072254399 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063701735 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080296242 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064666624 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071934977 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066553279 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072202662 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072300852 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064000251 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071616898 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067720404 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064057462 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067010198 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074870525 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068218322 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061105494 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066906089 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088299297 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077110991 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065479747 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069267656 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07381401 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072540721 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059919359 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065762071 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066576994 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063899554 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075830387 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081059209 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068974363 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07451444 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067379927 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076246041 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060791602 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070726689 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072478083 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076120321 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066198955 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.0668118 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060777156 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063743399 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068302297 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060829651 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068878931 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060433634 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072467307 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070000269 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076546418 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064681318 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067276135 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068799153 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.06914485 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072970987 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06771833 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068676494 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06505011 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075279234 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070325972 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074237522 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060810172 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059574368 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063953289 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075207492 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089350279 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07213084 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.0664081 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066830856 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063562255 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068946793 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067049315 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071759632 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072781523 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065880931 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071241266 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073400774 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065832577 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068360401 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073785044 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064160408 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068484936 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063490832 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082174976 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06423758 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064354002 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064456747 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076527468 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069645011 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066472758 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063842939 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073134016 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059830827 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066532551 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066440795 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06666697 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076559163 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069730533 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069876424 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073213518 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072334864 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065273952 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067498448 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06170111 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065406944 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064038349 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071543235 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059088239 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067722168 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065602521 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06571166 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.072989487 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063294163 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065183501 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.196695371 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071888624 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065262343 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062952106 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069204733 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066795872 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070044738 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075049047 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06480212 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061659374 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060824797 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070667639 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066348496 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070940457 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071770506 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069624898 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061264292 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064231141 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071540395 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075441461 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067000077 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067588392 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072612255 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067807298 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066104593 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073106081 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069458881 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065496139 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07231278 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067387598 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061822806 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068695283 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07001281 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065817113 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.0701675 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070072654 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068923919 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068018334 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06465637 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073967643 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067287921 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065599583 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066682694 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065571098 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076435461 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068452691 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061717295 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063483126 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076115834 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064797478 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065525976 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065087201 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068491086 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066642936 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064657339 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065858795 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068012966 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076178014 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070780238 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066789373 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071115707 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077952435 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066224978 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069131783 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065610683 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067397801 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066839816 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074967371 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071033162 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070237008 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068669441 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062627185 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071513416 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07354159 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065006452 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063175924 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064817355 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070081923 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072035583 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070298887 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066785575 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065083161 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066723523 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068887685 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068841511 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065623569 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065120913 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072812363 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064462681 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072988818 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067008471 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076888028 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069279843 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061686529 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069310206 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064224639 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072405676 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061771393 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064364219 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065702288 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067393827 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065064811 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068958924 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060474637 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073190629 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073880551 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066686555 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065667803 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067184748 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072853879 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067082289 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068857648 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069146909 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071726458 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07567802 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064296408 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06850508 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075324512 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065262528 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059326871 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069896579 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063352116 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063533501 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063654217 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062844233 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.196104287 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076248807 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074213272 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.0612651 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069292143 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065457294 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066227298 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062276412 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07110329 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069771332 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067174475 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073942981 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06764101 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067322762 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070523023 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066677596 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067968934 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06833723 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069451428 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068008769 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069337885 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067001558 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070129197 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065809705 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064176297 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068262422 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065893007 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067008127 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072194113 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065471217 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066783979 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069911403 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067247435 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068199338 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067252764 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065963582 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069673595 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067196804 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066791299 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069263012 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061826328 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073356159 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066561182 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074387484 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066806282 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063680707 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074444275 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069506664 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072125228 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06691979 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066903266 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067954888 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066395167 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069096318 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073570714 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063762123 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076937438 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073829055 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06714506 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069112742 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066865513 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067597584 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065605383 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068203921 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067507997 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066014005 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06652348 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071818102 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069213503 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067578962 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067897788 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066952167 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067060659 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06774227 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061683449 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065729811 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066003362 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066059071 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076364625 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06670716 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066311496 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065417867 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067306499 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065408952 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062936359 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074586599 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075752597 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066837562 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073496714 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065282256 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068130453 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077002494 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060644603 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064426523 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064113229 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063995455 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073204091 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066795392 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075795499 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06612919 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065234692 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063164614 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066590406 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064591133 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060353685 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063596205 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069625641 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065067977 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06483123 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066855571 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069042899 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066856775 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074946285 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064928998 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065779856 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065321099 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062152319 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064233883 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063969403 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067977485 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065591866 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06281206 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062118655 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064483348 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065195522 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06618061 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06752494 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066548096 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.202558756 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067362086 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070120318 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07018011 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062007853 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070414261 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067024717 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066676974 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065670786 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07060637 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069859035 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068306086 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075828862 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066395663 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067179023 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066771768 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06450272 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.0664205 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067102377 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066915382 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065477225 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067413714 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074563256 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065292216 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070461249 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067305337 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06726115 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07258851 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067842303 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069746834 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073177113 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067718278 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068382857 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074956977 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071552139 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070462572 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067869582 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068508432 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07346652 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066133938 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.07310479 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067465566 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06775094 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067813814 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064985696 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065685467 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067616518 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066020845 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072221363 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067421087 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065818666 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065391194 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063723684 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067352784 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070535153 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074218116 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069225121 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070117757 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06112561 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063764215 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067399612 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063755104 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06806052 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068653255 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072270544 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068539006 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066432099 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065070377 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07537765 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071932265 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070288708 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064110472 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069993576 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067261628 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068185031 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067734393 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065975823 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06747477 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069498769 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067479348 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065055634 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073321965 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069341175 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067072105 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067372612 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067215274 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066254876 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060843948 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066878484 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068478889 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070810091 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068513958 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066046985 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076815198 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064196916 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066401954 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069308594 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065643148 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070773953 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061216759 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06801999 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067206225 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06775409 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06126641 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06570104 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063731513 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068175026 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06532061 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061447718 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076532958 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074853366 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069038545 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064930542 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064627944 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06085789 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060211897 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065087137 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065630635 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066274364 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075041771 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063809971 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.063890696 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06005102 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065022555 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067720634 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067725747 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062272641 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.05989708 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064132499 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.200564686 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072463366 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065088502 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067162814 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070143071 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068747026 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06440076 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069713227 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063529606 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069799007 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07953418 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067672795 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067218576 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073459122 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074699923 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067663654 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061484431 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06732249 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069836007 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066986566 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067582161 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067362817 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082370154 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069256207 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066476072 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065788511 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069482631 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066716615 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075512121 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068052112 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067025425 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071805334 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068995821 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076401745 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069017037 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07376719 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070234997 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069818698 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065707844 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066960814 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064404293 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065814586 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06721582 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067263244 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071732664 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075177698 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065732212 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076771753 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075841612 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068461205 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063681712 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066161997 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065592652 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061610184 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067423109 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064387835 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065014281 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065746379 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066241483 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06820085 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071858379 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068343957 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06719715 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066311122 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059920737 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069326464 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068611786 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067636995 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063598588 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066773059 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066844364 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070393876 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069181032 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06354889 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067535323 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067773378 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06668659 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061141672 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072717527 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06485693 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067823095 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06500141 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066157655 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.0670963 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069499696 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07067631 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066992926 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068130503 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069767704 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068147104 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063271482 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063248072 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071164484 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064565956 seconds)
  done (took 42.44735567 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100295986 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062761443 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061104289 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061118878 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073165563 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062822627 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061807586 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062666932 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062767953 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064876225 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06135797 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061298601 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.0706488 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077406138 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073394672 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06588854 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061635335 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062485466 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061297522 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062045884 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070634682 seconds)
  done (took 2.7235436 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074025424 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078363665 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075687736 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082432331 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070894097 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069927931 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075443589 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070657946 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078037513 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072401427 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078012354 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070373037 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072029562 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072267101 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072249736 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070028726 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078376063 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070895689 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070114345 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075192028 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070437247 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075118242 seconds)
  done (took 2.926614234 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067495567 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065456026 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068185192 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060972465 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065361223 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06113628 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069047656 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.072781959 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069255784 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064350425 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064704347 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064641964 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06745379 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060652674 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065951263 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063580691 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108250638 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068600252 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065409176 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065750985 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060915069 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06778186 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060677851 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061150226 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063870681 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068498829 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066013282 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063259425 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065200468 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064291394 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065227457 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063303858 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067123522 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065738402 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064368067 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064461645 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064744007 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065134819 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06048429 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063264458 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065688043 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061442089 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065381036 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066568895 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063515091 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063149445 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067060866 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065436029 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060578466 seconds)
  done (took 4.532558904 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079132019 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109878551 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067397938 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089009278 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082489527 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072767317 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068953573 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089619234 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062868077 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063795689 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081349484 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079250147 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065369589 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069977966 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072652826 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064949345 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066533794 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064074299 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069018881 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064511139 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069109836 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071726619 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079349443 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078047435 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068689464 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064133325 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064657919 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070063466 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077490484 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069838396 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069742163 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070545334 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080115399 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071141372 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064393112 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067521337 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081477157 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065030302 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06794469 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062823848 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067172789 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069033176 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071783536 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081174248 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065584728 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069920779 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064801106 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062147638 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077843619 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067432654 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072681042 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079344164 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06921075 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065125763 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069609154 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080131492 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06512009 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063874775 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067625326 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077344101 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063008116 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068720917 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078220692 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066944854 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072310806 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078916602 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070687063 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069734727 seconds)
  done (took 6.32220291 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075941897 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095940274 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083884312 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082509306 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074938412 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074954257 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075155432 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074843219 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074649503 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079990765 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075487038 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116514492 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070531648 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077305941 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075099045 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075061838 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07552277 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07507002 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075031012 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074662255 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075295884 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08231062 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075022922 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082597325 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079200656 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070379375 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07498937 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074859363 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083136141 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075075227 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078794175 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074646027 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074432809 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082077484 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078799485 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074449962 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064336209 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074381113 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074696211 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075160103 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070672433 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083162626 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074559738 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070026206 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074784433 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074489987 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082689224 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078816981 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078121866 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079484746 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074927159 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082268398 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075070786 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074847358 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082231423 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085585739 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082365944 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08244543 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074755205 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082141626 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082661017 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085612544 seconds)
  done (took 6.165158422 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083028062 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07469648 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082280886 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061276749 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063629242 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071596956 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06379802 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064163897 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074128961 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074077739 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076356818 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071449371 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074362997 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076754601 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07143609 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074787416 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071485274 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072155002 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074079507 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071335917 seconds)
  done (took 2.772413612 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074634316 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083325917 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066255144 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071706175 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068631495 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070766822 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068281986 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068777433 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066792185 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068402589 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075574506 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076087693 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066525043 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070953647 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07525606 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071268709 seconds)
  done (took 2.462495324 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084541904 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07314041 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079396736 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066187297 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066208156 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062331328 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065446924 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060683273 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061956175 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077638655 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06541498 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075617821 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06594975 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064417165 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062320053 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070254873 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061679823 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063016967 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06506938 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077762184 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069454251 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064060166 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068693698 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065248203 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06794375 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070029784 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064446589 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065505371 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062705577 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065583613 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068653052 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068999113 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06233752 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063196487 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064263372 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062959054 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065071396 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065580574 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07085911 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065170794 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063358708 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067511942 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.0654482 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066365287 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062001512 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065707847 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061788783 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067634501 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063099151 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068288974 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066187507 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067983692 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066088379 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072536387 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068771949 seconds)
  done (took 5.002559292 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07959646 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070035134 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06244752 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06521124 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068986523 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067187745 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06982779 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066930272 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067434787 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063799557 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066877873 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068460409 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067319412 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069607364 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067655264 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069711985 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061240743 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066857411 seconds)
  done (took 2.550538491 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071984854 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065780948 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072542324 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066053826 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065205108 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06808592 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06130921 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064538745 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064218503 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065532837 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065586301 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067836514 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064582026 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067815168 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06568362 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0656057 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067805671 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064316603 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06537745 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061618576 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067819822 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063547043 seconds)
  done (took 2.777735544 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09336186 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082547749 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140412949 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078082866 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084117891 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070885066 seconds)
  done (took 1.874742953 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091256436 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101115554 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06658636 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068711651 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075890673 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069382869 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069670674 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06982149 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078236141 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07547364 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06966942 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078680318 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078059692 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077300122 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075296957 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075496532 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069831506 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069630005 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065947771 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084156328 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06980743 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078499882 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069599165 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070164675 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069916462 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077692731 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078624864 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075825118 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069711676 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078593333 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075775769 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07002992 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078316732 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07579922 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068937528 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078189367 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070177867 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083593393 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075435322 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077812751 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068664324 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075681683 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07824735 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074191643 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078217165 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069524224 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074475736 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069701205 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069929199 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085382224 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075611473 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077137692 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078234663 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078056877 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078076483 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086088499 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075473693 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077328115 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075467446 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07573003 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07715465 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076052518 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077636603 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076007851 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075566464 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078050086 seconds)
  done (took 6.316164629 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1049168 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067509488 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070104926 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077040853 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077767839 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069909706 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070425512 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069922148 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070117049 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06678328 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108538287 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070360393 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077876442 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077908117 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069824405 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07026909 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069803116 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077736908 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066740637 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085798636 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070063733 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077507454 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078053291 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07765372 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076098942 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076371863 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069809614 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069545982 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069604214 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069879871 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074940764 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070055317 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077592868 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066581491 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077690785 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070249564 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069866418 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074913884 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069692584 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07558115 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077828016 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083439871 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069829363 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070279085 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075640465 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069649125 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069727514 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066512667 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069998715 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066421425 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075882384 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076023514 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075598855 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077277083 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069827237 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070440804 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069832087 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06986985 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069613668 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0751979 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077247504 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069883512 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085475904 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069553063 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069621238 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077332106 seconds)
  done (took 6.22578514 seconds)
done (took 128.689197792 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.187111195 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164280771 seconds)
  done (took 1.676146816 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068777967 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098902457 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076736486 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128703322 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066700505 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100491238 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099415947 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077838759 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065970882 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.0656164 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065818223 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068446978 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130936052 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066491881 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065813715 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068285166 seconds)
  done (took 2.654579079 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098938135 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.161507357 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102049698 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064854075 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099466425 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073314679 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064617758 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075489381 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070740619 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065232503 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072702077 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070370514 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065113691 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070569587 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07094644 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072942806 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06472785 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072014924 seconds)
  done (took 2.774866131 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.09926859 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091278192 seconds)
  done (took 1.530593502 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157049428 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.109788758 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.145595635 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.352368126 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166956617 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.237605143 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127366002 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126610848 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116711713 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123438636 seconds)
  done (took 2.999809596 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099960851 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154464269 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.26748033 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117568282 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072154293 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094677369 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11751998 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077948702 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080447925 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079781008 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080128875 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075991672 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099758958 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073327245 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073309312 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075990392 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103510831 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072583519 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074419587 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076261573 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099971086 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065876361 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073111214 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072258814 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07722781 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077291032 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065542657 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065394985 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076121498 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074643625 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076623668 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093228427 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077212093 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106907056 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070319874 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107861962 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076801264 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07381123 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074424044 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073745364 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078612231 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078308481 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072392466 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075867515 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065623956 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076520549 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065334755 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065269534 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077486409 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066544118 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077742978 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076384077 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105923755 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066338317 seconds)
  done (took 5.959255772 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10373154 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107013114 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071817304 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113177024 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102384021 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071842361 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103340599 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096037693 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104473188 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069606785 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068094683 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070024466 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082342638 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082935255 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115987229 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107155693 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073181519 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071188682 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106076507 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105188093 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068078117 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096560274 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091060463 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103429718 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067389348 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06975282 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067696372 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070194847 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076976572 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078987708 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070160153 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080353131 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084816572 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077677354 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067051709 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067928916 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067847829 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079939452 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07940917 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078795509 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077955078 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067908964 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067456628 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069656558 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07004311 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067730852 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078816479 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080591733 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078743834 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06961111 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069982029 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067636688 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069331402 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080309978 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078119126 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081597635 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080100776 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068629309 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068256406 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072006941 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08067072 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079394656 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07995725 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068871777 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078299257 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06816594 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079971695 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084149952 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068413168 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069655367 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068172012 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069401662 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069266347 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077436194 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077859984 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069185723 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069345978 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068897048 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080021255 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078198268 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0681872 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076412704 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066743545 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068043336 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068971835 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069715227 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077403403 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079854002 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069782992 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068270848 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068856967 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068319401 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067749018 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076686761 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08063993 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078930977 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077666053 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068277457 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077893959 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077226327 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069100486 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077671442 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067146617 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068615392 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06794062 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076461126 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.20325816 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081302695 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070193004 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069048003 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07960497 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081833337 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068922923 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079306051 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081154292 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080489389 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068914398 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081571761 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069513492 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080195945 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069960097 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080711127 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069266839 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080826943 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069265486 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068397769 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069250948 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079906912 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073681117 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069581214 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070862014 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070248583 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080024398 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082705126 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071313006 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078751564 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078482935 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071124125 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079644418 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069637865 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079991269 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069237645 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069349758 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066982812 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081973907 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068678691 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069258299 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069838777 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08076704 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068929482 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080713277 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078076567 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068288498 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082298532 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080216842 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07874447 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08021189 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070389411 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068748806 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068372951 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070126486 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078533177 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081591015 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071367508 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068274105 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078980441 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079822795 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066991853 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079349275 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077988724 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079166548 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068701705 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069604074 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080127095 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08069281 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078208753 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078697647 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078597807 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06875044 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077830026 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078374706 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06827015 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084921579 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068024399 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082829265 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079539961 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077066072 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078889961 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080910465 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080241199 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080238403 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082941338 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067903033 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067831137 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079762971 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067865572 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068832119 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078184876 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069190808 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069189897 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083282659 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068519338 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079630204 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067948182 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078972193 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065834933 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069232379 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082440684 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066706535 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068384542 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077800391 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06811939 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075859476 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078761614 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.206714474 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069235351 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07113892 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081906787 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080344341 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069089033 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068749173 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070588121 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079306284 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078420515 seconds)
  done (took 18.660712892 seconds)
done (took 37.604368521 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.213748748 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153017742 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182784064 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119159627 seconds)
  done (took 2.114482061 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.118747895 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101764192 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092606178 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064633927 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098629474 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065057628 seconds)
  done (took 1.920867743 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313031916 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212008079 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.189917503 seconds)
  done (took 2.09491972 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203186721 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191077998 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.420311279 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.265153863 seconds)
  done (took 2.569690646 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144292639 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089068439 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066794727 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083565774 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135011664 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160474383 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100869214 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125835101 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078169211 seconds)
  done (took 2.413932132 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149534474 seconds)
done (took 12.641998275 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.198841562 seconds)
    (2/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.10314945 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.128026326 seconds)
    (4/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074059175 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.102874329 seconds)
    (6/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069594145 seconds)
    (7/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.225383765 seconds)
    (8/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.23081605 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082747421 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.094389045 seconds)
    (11/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.151374358 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07835473 seconds)
    (13/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076816496 seconds)
    (14/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.225617052 seconds)
    (15/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070005993 seconds)
    (16/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.199201055 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074079335 seconds)
    (18/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189343209 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.103732385 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064592703 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.107951884 seconds)
    (22/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.22360084 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.090068106 seconds)
    (24/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.110424852 seconds)
    (25/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.161073911 seconds)
    (26/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.051248086 seconds)
    (27/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.079086786 seconds)
    (28/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067554322 seconds)
    (29/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090667616 seconds)
    (30/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.19722489 seconds)
    (31/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.193235422 seconds)
    (32/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.153383809 seconds)
    (33/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.158159865 seconds)
    (34/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074970923 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091772515 seconds)
    (36/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.141962961 seconds)
    (37/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078448498 seconds)
    (38/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.164846942 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064996196 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071545635 seconds)
    (41/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073331596 seconds)
    (42/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.214338982 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.104469488 seconds)
    (44/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.157315417 seconds)
    (45/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.212865345 seconds)
    (46/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.151319275 seconds)
    (47/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.111091348 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091391125 seconds)
    (49/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050618172 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.130564534 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.08930904 seconds)
    (52/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050456303 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.111691296 seconds)
    (54/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.050550451 seconds)
    (55/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072847592 seconds)
    (56/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.186592972 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072656063 seconds)
    (58/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.100050458 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072153918 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.089533809 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.183417963 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066046887 seconds)
    (63/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.161383205 seconds)
    (64/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052065843 seconds)
    (65/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.181700666 seconds)
    (66/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.226360455 seconds)
    (67/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072549722 seconds)
    (68/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063683793 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066547237 seconds)
    (70/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.15210186 seconds)
    (71/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100644324 seconds)
    (72/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081807146 seconds)
    (73/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.159460662 seconds)
    (74/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.109055091 seconds)
    (75/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052088528 seconds)
    (76/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051425857 seconds)
    (77/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.100670535 seconds)
    (78/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067665491 seconds)
    (79/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.08858485 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.176351965 seconds)
    (81/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.155134968 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091918721 seconds)
    (83/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070641059 seconds)
    (84/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.266449901 seconds)
    (85/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.232332208 seconds)
    (86/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.197784823 seconds)
    (87/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.05098164 seconds)
    (88/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.103017717 seconds)
    (89/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076224425 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 0.066899239 seconds)
    (91/309) benchmarking ("sort", Float64, false)...
    done (took 0.132899077 seconds)
    (92/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067219322 seconds)
    (93/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.052096813 seconds)
    (94/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050902823 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.113732025 seconds)
    (96/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.156179226 seconds)
    (97/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076128186 seconds)
    (98/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072589404 seconds)
    (99/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.109119151 seconds)
    (100/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.172513177 seconds)
    (101/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064273765 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066881024 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.176790375 seconds)
    (104/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069239558 seconds)
    (105/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052334204 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093608517 seconds)
    (107/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.050726188 seconds)
    (108/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.13043942 seconds)
    (109/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051312991 seconds)
    (110/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074406362 seconds)
    (111/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071082152 seconds)
    (112/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.177042593 seconds)
    (113/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.081017699 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128589623 seconds)
    (115/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074078594 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065443125 seconds)
    (117/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.180952977 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.087287082 seconds)
    (119/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.197638744 seconds)
    (120/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076677222 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140913254 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089821338 seconds)
    (123/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.07092055 seconds)
    (124/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060932451 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087925017 seconds)
    (126/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051680308 seconds)
    (127/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052572796 seconds)
    (128/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072459438 seconds)
    (129/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.184076295 seconds)
    (130/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068523196 seconds)
    (131/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075370589 seconds)
    (132/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.142538252 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065488523 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111668134 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089522805 seconds)
    (136/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065091982 seconds)
    (137/309) benchmarking ("sort", Bool, false)...
    done (took 0.137324033 seconds)
    (138/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073888566 seconds)
    (139/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.174782903 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065534871 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.098304969 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072263851 seconds)
    (143/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065718837 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070896526 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124250402 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071292163 seconds)
    (147/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.050653938 seconds)
    (148/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.204526137 seconds)
    (149/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076560186 seconds)
    (150/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066840702 seconds)
    (151/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071447718 seconds)
    (152/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050934403 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071572876 seconds)
    (154/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075126835 seconds)
    (155/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082120226 seconds)
    (156/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.139689934 seconds)
    (157/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076577745 seconds)
    (158/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066546783 seconds)
    (159/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051180381 seconds)
    (160/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069427814 seconds)
    (161/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071962763 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064618038 seconds)
    (163/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.333651099 seconds)
    (164/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072550442 seconds)
    (165/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076087835 seconds)
    (166/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074360254 seconds)
    (167/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051774829 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095117805 seconds)
    (169/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060258621 seconds)
    (170/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050386718 seconds)
    (171/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052356651 seconds)
    (172/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076357267 seconds)
    (173/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073457442 seconds)
    (174/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089251867 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092087647 seconds)
    (176/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071860286 seconds)
    (177/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074868495 seconds)
    (178/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050786031 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.124156507 seconds)
    (180/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178571883 seconds)
    (181/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050398391 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064187539 seconds)
    (183/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.099361599 seconds)
    (184/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051163112 seconds)
    (185/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070561849 seconds)
    (186/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072298031 seconds)
    (187/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077804088 seconds)
    (188/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051458147 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089560454 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092625891 seconds)
    (191/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.06615444 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050239827 seconds)
    (193/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073997734 seconds)
    (194/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077922662 seconds)
    (195/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.179216743 seconds)
    (196/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08649081 seconds)
    (197/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071254506 seconds)
    (198/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070642069 seconds)
    (199/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.216349776 seconds)
    (200/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.118959586 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075285977 seconds)
    (202/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065536672 seconds)
    (203/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051518667 seconds)
    (204/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051951407 seconds)
    (205/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.05108713 seconds)
    (206/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050795877 seconds)
    (207/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051437428 seconds)
    (208/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067727868 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064186233 seconds)
    (210/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071818315 seconds)
    (211/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.092085855 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08833546 seconds)
    (213/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053044953 seconds)
    (214/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050688663 seconds)
    (215/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051835071 seconds)
    (216/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068282618 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.108674594 seconds)
    (218/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053111324 seconds)
    (219/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075314046 seconds)
    (220/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052323716 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074531167 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073990021 seconds)
    (223/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061755334 seconds)
    (224/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081072966 seconds)
    (225/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073947923 seconds)
    (226/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073085276 seconds)
    (227/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051159528 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09370415 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.141341395 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089467087 seconds)
    (231/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051343777 seconds)
    (232/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.155919331 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071028522 seconds)
    (234/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066267928 seconds)
    (235/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052027095 seconds)
    (236/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.051779821 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064649766 seconds)
    (238/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068752211 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137980058 seconds)
    (240/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067595103 seconds)
    (241/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050453722 seconds)
    (242/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065785494 seconds)
    (243/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120261064 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06488856 seconds)
    (245/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052124707 seconds)
    (246/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071701359 seconds)
    (247/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.193841289 seconds)
    (248/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074280368 seconds)
    (249/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05140475 seconds)
    (250/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072629522 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065180727 seconds)
    (252/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065387675 seconds)
    (253/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.108894752 seconds)
    (254/309) benchmarking ("sort", Float32, false)...
    done (took 0.133146565 seconds)
    (255/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.05108311 seconds)
    (256/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074196561 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064495868 seconds)
    (258/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079969012 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065025761 seconds)
    (260/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065487604 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183809121 seconds)
    (262/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050325512 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.121909057 seconds)
    (264/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060582828 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.076735174 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072151996 seconds)
    (267/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.101197407 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073302799 seconds)
    (269/309) benchmarking ("sort", Int8, false)...
    done (took 0.142377612 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.08859205 seconds)
    (271/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073535199 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.06517088 seconds)
    (273/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051345841 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.132393907 seconds)
    (275/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071782105 seconds)
    (276/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080067841 seconds)
    (277/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050569983 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091147001 seconds)
    (279/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062126412 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064697856 seconds)
    (281/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065652817 seconds)
    (282/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.050773859 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.139634671 seconds)
    (284/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067903047 seconds)
    (285/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.052614242 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126452131 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073096373 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063916801 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063815095 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064766879 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072313453 seconds)
    (292/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.060973401 seconds)
    (293/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050596261 seconds)
    (294/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.05009899 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070763952 seconds)
    (296/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050557031 seconds)
    (297/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050504538 seconds)
    (298/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051194555 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.108463671 seconds)
    (300/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065511058 seconds)
    (301/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065316756 seconds)
    (302/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086455374 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065273434 seconds)
    (304/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061727695 seconds)
    (305/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050625909 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071034229 seconds)
    (307/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067486582 seconds)
    (308/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065310433 seconds)
    (309/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138009224 seconds)
  done (took 30.856365974 seconds)
done (took 32.245318918 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088354866 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094375729 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075022673 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094709133 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082021994 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076716165 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073056928 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079080454 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080417828 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082728569 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078834155 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054189327 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074542497 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074913592 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07543976 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09237094 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079106575 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073293173 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073616727 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064828546 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074240624 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065863393 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067582945 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054210692 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079334038 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072319516 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072720038 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074753562 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065765514 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066101115 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069534671 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073843103 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065825231 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079552348 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072878667 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073497312 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074925024 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077142996 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067516604 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065612261 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075213093 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065685229 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073282901 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074318543 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072938587 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072053573 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073733198 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078753125 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092506965 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067741113 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075507255 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076539553 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076420275 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07320838 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069843727 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07315854 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071279927 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092196044 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073353116 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068393903 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074787699 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074604816 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071597074 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072776709 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07349008 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075450366 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075540598 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071477614 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075102015 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071774112 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065372736 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073104065 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069684407 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06521082 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075845178 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077100454 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064593147 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071640347 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073208112 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071074539 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065015116 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067429566 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066844156 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072139729 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067165449 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053664819 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069487138 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072380337 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064350516 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073376611 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072007578 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073080225 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067151161 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075940528 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06464756 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071368859 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065569146 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065641667 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06738845 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069542044 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065227475 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067313192 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074429784 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06759908 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071685317 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07932398 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064794167 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071604885 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064323717 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064544929 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079555975 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074701224 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.0650762 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067298673 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064663224 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072991636 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064642046 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065278147 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065069352 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065490987 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071282156 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064940503 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067421367 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072418627 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078751265 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064147138 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067970955 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065950221 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063714797 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070026061 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064023165 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064077743 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065592002 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060618191 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066507723 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063827132 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072267386 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.202350256 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074309601 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06770992 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074340459 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071139994 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072638277 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071473376 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064371047 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059946032 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06812646 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067949286 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06853513 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065583194 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067574237 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066649323 seconds)
done (took 12.471617043 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069328307 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144407739 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100153338 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096689019 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086389355 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066627052 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076267119 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101476388 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067711433 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102183093 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088359885 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085567127 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112369524 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064675199 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065949452 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070126236 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067086079 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081800377 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101604925 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086728067 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117336536 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06574076 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095213313 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090365192 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087881366 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102238669 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070146651 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070261142 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06966251 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091213012 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086708101 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070151034 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066971683 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097701538 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093254481 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083520888 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066577482 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082729306 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066577548 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065899557 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067769163 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098539914 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080082452 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080307866 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.07027109 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069347285 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06710058 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083929234 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089345856 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078807051 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086311329 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103054397 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068699216 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065966238 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064649455 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084947966 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064883847 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068516519 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065536075 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068422858 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065986623 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069122309 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081590291 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082134666 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070839607 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.082032355 seconds)
  done (took 6.797344925 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087602229 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094274617 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086894284 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.0864064 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067392929 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067756094 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067759397 seconds)
  done (took 2.035325646 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070287468 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092394128 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.09315012 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093161685 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.089131046 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091300122 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07868262 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069213422 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.08304001 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069762237 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090592384 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.106040415 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067964603 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074612461 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091172889 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066700992 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091204868 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067056298 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070224788 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090833256 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068374584 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082381832 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069820169 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067323875 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081471483 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066493808 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11481584 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071198836 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06802256 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069872591 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0644458 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10819703 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080730196 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075154062 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066533752 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081396546 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083702072 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067277139 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08558621 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073770592 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082332005 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06889253 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.069191473 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066381967 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072586874 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077273191 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067743908 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067046337 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068885318 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086461706 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066641353 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080265104 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069975827 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068867131 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067850895 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070275008 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076491094 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067674564 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087188795 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070296899 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087342547 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085949895 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083378566 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086454992 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071179624 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083264249 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08319383 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070699359 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070516648 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070918139 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084580634 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066465187 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070194174 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079892259 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070576684 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093110068 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093089228 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07039372 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.077975483 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066782618 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06637395 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066303236 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089670669 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06846092 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066205445 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070639819 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069679085 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064798468 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065338125 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069927371 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064395195 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067433334 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069333397 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069533507 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069334092 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083810001 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068984404 seconds)
  done (took 8.867632654 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07124174 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070873271 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072258045 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070500044 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069781634 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.0692311 seconds)
  done (took 1.926234023 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097931706 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.072422857 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083059966 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072458426 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105878442 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087443641 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087578104 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078388767 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084448611 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079324015 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087890273 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088648429 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.094956822 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07261243 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086932444 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071532172 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087594945 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076211771 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078990032 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072693028 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087677242 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073020244 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073324127 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081786929 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076467119 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07279991 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067899487 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080273405 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078890203 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079902202 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072732871 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.077575518 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073541218 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081744271 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.090929992 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073690011 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074701012 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.080491288 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075006455 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.078634146 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.090408333 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073865774 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07424524 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077262903 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078184511 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070404769 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077822897 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075184043 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086819978 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077175776 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076977406 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071876389 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075776201 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076827785 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070656376 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078174489 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.078525809 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.088124684 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073425851 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07262736 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069549581 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075904883 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077401264 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07545437 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078519437 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077198162 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070949124 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072611706 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074293879 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071921204 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077437663 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069370506 seconds)
  done (took 7.130431981 seconds)
done (took 28.223648755 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.53950149 seconds)
  done (took 2.005053541 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.628054517 seconds)
  done (took 2.117659904 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.179984381 seconds)
  done (took 8.668837868 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.412767576 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.500542889 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.724486042 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132918186 seconds)
  done (took 3.299812816 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.702350492 seconds)
  done (took 2.202865587 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.219923345 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.203016406 seconds)
  done (took 1.929978097 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.383395975 seconds)
  done (took 1.875895377 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.151959811 seconds)
  done (took 2.645515455 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.267200629 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.178211546 seconds)
  done (took 1.94161806 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.484510366 seconds)
  done (took 1.979786706 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.879445354 seconds)
  done (took 6.374906659 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.218075035 seconds)
  done (took 1.75712673 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.246082817 seconds)
  done (took 1.741195938 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.716327157 seconds)
  done (took 3.212408238 seconds)
done (took 43.249438044 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083610221 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081144356 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080470277 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07904331 seconds)
  done (took 1.805417291 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.08064155 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075466926 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078800373 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073255239 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077832001 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075495425 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.077768136 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079380388 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.075519081 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07581331 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075240376 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074055799 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075641819 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074605377 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071211576 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075685404 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076595356 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072581846 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075710079 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073231152 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070872247 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075272467 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075555684 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07186046 seconds)
  done (took 3.307111575 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081045304 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075422962 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076628167 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072924224 seconds)
  done (took 1.812000279 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081535659 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.097442893 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090731149 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080041403 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093863179 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087404001 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069537176 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069126074 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070737201 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077797952 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06830765 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096987125 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088535384 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07801752 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079893429 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066041689 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068209634 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088084115 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078666865 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078732346 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070264996 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080438907 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070400002 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090174179 seconds)
  done (took 3.421720154 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081460093 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.109478709 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080961933 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092482666 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093700892 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066775831 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.076001439 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090895158 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127087033 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065257842 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070331973 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068324874 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.075195551 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067340097 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078869524 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107364888 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111244668 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068386975 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096948283 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065323447 seconds)
  done (took 3.205701387 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076061566 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072160946 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.068050439 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.07181304 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.080201908 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076159445 seconds)
  done (took 1.957959244 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071472438 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069522546 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067773681 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06689095 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072295059 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067295291 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065879574 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067397707 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067372838 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067038875 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066655355 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065886963 seconds)
  done (took 2.322734112 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.208824414 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069804722 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070303989 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066108931 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070363752 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066241189 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080953613 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067955987 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091673424 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066297622 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066563713 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068512229 seconds)
  done (took 2.502633329 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218240612 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07924921 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247851375 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14521164 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114398408 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116553625 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104632577 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11543648 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144577228 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101943105 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170053557 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169439007 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108287889 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138955291 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089712901 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100864854 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156683388 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163982538 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106002985 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168781945 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147245976 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126658617 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149569427 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101870572 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112047889 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123542642 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071666194 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080220927 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172504732 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134434799 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146242135 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112407543 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093853418 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178743434 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174371477 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143867404 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137520365 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084562161 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10552049 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135399934 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206162654 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091370671 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162375402 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108908199 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079969068 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131414019 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11682115 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.117439981 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.102578501 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087679598 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141819254 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179509946 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.134353097 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085448873 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111245915 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111240591 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.112498337 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101399371 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172577535 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153045288 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121972948 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.06897768 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096620077 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14671838 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12853667 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.104474555 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.11973326 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088239306 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129380793 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148504162 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115163794 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137724555 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.125776716 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085384964 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114194477 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134958764 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121671807 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151916131 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118931015 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.070214391 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118408915 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096800941 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078314167 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143076093 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07280991 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167117053 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095558475 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104661838 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111470681 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105535538 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105403062 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153033857 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139031988 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099177284 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064061617 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.355501531 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.126766606 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150649681 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090674893 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113531589 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121546782 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080358795 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141363317 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078034143 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125990454 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079407403 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130928517 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133006506 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078921437 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125529216 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106420074 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.103406123 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135508897 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164569053 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090468118 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08372157 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173784004 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124945593 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10519721 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146883303 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159939669 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.10330932 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102542385 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152489178 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182426888 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090965861 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166607993 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108666079 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084653893 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088022484 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12541966 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112899836 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.1250309 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082278792 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119896988 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170663465 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075264379 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096751356 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135322506 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079902564 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081135994 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107295268 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106386032 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095791374 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100362087 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103706692 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140335062 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128192825 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106618196 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125111229 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098952772 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319573507 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090205057 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.103037174 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10542981 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07095575 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138684121 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159898876 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079465479 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165050368 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.125029589 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106773426 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120922507 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084162005 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141349121 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079917144 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070922304 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145550214 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111774064 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111174339 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153227363 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10678367 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127364616 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120278214 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135091422 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132516057 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.132003181 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106106064 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.090035292 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113412813 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127914664 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07348377 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091849076 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080623951 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105694869 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097418698 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083728653 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143764063 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125140176 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102373883 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113357298 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097113655 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149721785 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076817862 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129239446 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120328034 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096381392 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.15513483 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154799324 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132496514 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099978215 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137484615 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070148097 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074217619 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089260564 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123861737 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082886229 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084829796 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.270072457 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150806301 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131712118 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141175447 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115681699 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12147681 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15768903 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070458044 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.11879789 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149904553 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122738981 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105243289 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091846695 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100237329 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145083463 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10939654 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185131948 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119240065 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125622962 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15508294 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101777084 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080670564 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104215857 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138701666 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105880016 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146904717 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101015138 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089165888 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111194619 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07521624 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100370616 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128276203 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121006589 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1364559 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.11635644 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134060338 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077542273 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117120815 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122600995 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124100417 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064423203 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121441984 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164439897 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09539957 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119030093 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154302262 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079268617 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.126591322 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179048512 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147491623 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.231068994 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111980404 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121767841 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13089622 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122383682 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141862685 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109889536 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138824272 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110684881 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086967273 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089172529 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098609706 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105073242 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095569986 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107765514 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115624292 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095616754 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133501516 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105183356 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111108495 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119925542 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099864096 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091648686 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097361405 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179600242 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119791732 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173752631 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.101635923 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146651637 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165356968 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075557947 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079848396 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078510374 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141157406 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085138844 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131625011 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.099881697 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107607799 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125639616 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144594952 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096667022 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068699139 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109339371 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13598253 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114686583 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099126958 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105446544 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166724412 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102087045 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07980608 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115120406 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106408452 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103004604 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173767884 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061366822 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101102426 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076580294 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081014972 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130870726 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.300337392 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080740194 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103225091 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120934156 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113458505 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130190916 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102669934 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101356569 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117449715 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151056655 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132270831 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.107825294 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112442581 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130721792 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158787251 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106472268 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097794987 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17564714 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155170895 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162337422 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089347645 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116069577 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115937774 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11000704 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140560197 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08470134 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165181832 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082959877 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13797389 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105570331 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090335791 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131205346 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.100838429 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088616835 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149842228 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119117811 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083204026 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078096434 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119598498 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121134858 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107562131 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075840253 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140874923 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073620816 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133487901 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161553641 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081061011 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107807787 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096756424 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080354095 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1069711 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10238575 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087119586 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.241556313 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177449316 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088894531 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152441453 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135721914 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113951901 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13899595 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103047473 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641981155 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077943672 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154532707 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117537667 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175197454 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101535576 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119531377 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111415171 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124755265 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146315434 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105300047 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.18309694 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133087004 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117745693 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079966696 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10340682 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105854277 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089675297 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108466229 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115352985 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117572706 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093993478 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117490917 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126470523 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082635127 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096962555 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158438911 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118300811 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14537667 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141412868 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086300887 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119306167 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139828026 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08059031 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.123068873 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154648696 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106863327 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099307852 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081301325 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101317963 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16009489 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073098848 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161964754 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2682956 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11281948 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115584972 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114733877 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133206448 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108755041 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123054471 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094072517 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111011855 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114563638 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082271515 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077080192 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106351731 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112412852 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098879753 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098578758 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098359308 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154414948 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072430422 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100909091 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105658458 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146516862 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176337058 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089302915 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083179216 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120357724 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1140375 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114887977 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122506121 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079765218 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082679153 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082100251 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.078144341 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110313162 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113814703 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105702357 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112403151 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164830634 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083749634 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.231619634 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096519718 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106145859 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069850107 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078825244 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096916221 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099784838 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108595356 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102288934 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16184909 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096296844 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090662196 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093545992 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074732383 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084259487 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13088409 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111093013 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119288795 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098917251 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06245745 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109109961 seconds)
  done (took 59.142643682 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.113431936 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08308168 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096471144 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145281669 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123607314 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203777603 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154307233 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189421917 seconds)
  done (took 2.776130425 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071445593 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.098771718 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10765462 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.087677796 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067362888 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070144816 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.234977954 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083324539 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067073675 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090701287 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081223663 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070208542 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.438272799 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068942729 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071940119 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065127198 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067568335 seconds)
  done (took 3.482185353 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.399278203 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.611608335 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.384260619 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073444697 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.469924505 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089508031 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.143261151 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.128997695 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073230819 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538095779 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702819315 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.128141781 seconds)
  done (took 18.391415476 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07904508 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072353815 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.087530053 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.088257751 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.075372642 seconds)
  done (took 2.050208077 seconds)
done (took 107.730368506 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084650032 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.3912511 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055985253 seconds)
  done (took 2.122402625 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087491275 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090177489 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089189533 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088536629 seconds)
  done (took 2.013589574 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077498929 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.079203237 seconds)
  done (took 1.807296698 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.242696684 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.170875571 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088956795 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086377357 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082424217 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081606856 seconds)
  done (took 1.902713555 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075780904 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078366436 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076848642 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078367499 seconds)
  done (took 1.956407751 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080216904 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05476476 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057695177 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.06095252 seconds)
  done (took 1.903038259 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.09015199 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083192513 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080502595 seconds)
  done (took 1.904274106 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10676086 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.089957451 seconds)
  done (took 1.846829338 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085994907 seconds)
  done (took 1.737670202 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.102235389 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.118224613 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.138610278 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.116344976 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.145891068 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.112784867 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085878346 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086606995 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077655948 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087627599 seconds)
  done (took 2.72110348 seconds)
done (took 22.147544267 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082684986 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.463538782 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361307051 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090663693 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669036443 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359868044 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.996221872 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095776825 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117333377 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069619792 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085970858 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.64977681 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.017883829 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.421251959 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.008852463 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.415547099 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651318615 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068912035 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068680697 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06804201 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.981002497 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070292794 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07074836 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072301421 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651587224 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.408452985 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069783225 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.419142185 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068696659 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070056691 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355704487 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06853906 seconds)
  done (took 16.701992539 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074386342 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127197125 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076701149 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087442082 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07378473 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073000134 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074816029 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072456501 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12799388 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071589538 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089874733 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.0711087 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075300515 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072012048 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092344706 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071137835 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071970792 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071637184 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071434933 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071494405 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088828265 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068756822 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068487473 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068909917 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068822836 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080500681 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068421184 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068345089 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068719077 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070306116 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071262405 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06903776 seconds)
  done (took 4.141250584 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123301132 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128817872 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075091135 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106661575 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115009888 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070966723 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147698028 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094108973 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131379254 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068474915 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085633358 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068071991 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102694321 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069757655 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088445753 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068897712 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069566473 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068885128 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069100121 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068889667 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088103562 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068688593 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06939654 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069004542 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069730987 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083200291 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069050328 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069255776 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069412705 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070797678 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072105844 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069215989 seconds)
  done (took 4.355447928 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076784195 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078872666 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087720729 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087438507 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072919636 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075238412 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075596963 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072209486 seconds)
  done (took 2.293044971 seconds)
done (took 29.14691261 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083567628 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071646851 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.076144481 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085498069 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073956435 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082076821 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069048837 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077269173 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073925672 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073487387 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076470585 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068578926 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07152966 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068048725 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074597686 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067925499 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080143893 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072252974 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079824624 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082842269 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073074059 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075497089 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076922881 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080743082 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081830453 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084062683 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080144776 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073976711 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069820478 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071435128 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077593165 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086953036 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071891524 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083496025 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071549389 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071509715 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075492933 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068741574 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080251207 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078319053 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070455253 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077616627 seconds)
  done (took 4.831922867 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091707397 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09756007 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089210089 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065173272 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.069640406 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066371728 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089210419 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.061822687 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059315039 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088880835 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057688663 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060684071 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06310471 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053863718 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.06349636 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056368478 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062544347 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056063219 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060428809 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060159324 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089714294 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054863274 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078535805 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063709958 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055848501 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061626468 seconds)
  done (took 3.455152567 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07806782 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.091019846 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092520754 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132216433 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106562937 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079726277 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081149993 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096216374 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.089093951 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067578473 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072029039 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093780243 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09228063 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074743511 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068429696 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.089582233 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.088319042 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072405645 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077651826 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101177314 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091737595 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.090092681 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.104420099 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087705361 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070078437 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072409929 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072876113 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082996206 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073840894 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078799128 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072552588 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071589053 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.0699886 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080383738 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072630577 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070441583 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.094505031 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07842683 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080481922 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070803565 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.0753596 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072785768 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.097725815 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.138586582 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070670815 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078409467 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.079211048 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081244337 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.071001622 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092115102 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093570593 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069461869 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072386163 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069182788 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.071371843 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085359535 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072512929 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073182829 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081065848 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074121994 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094981255 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072594984 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084064733 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06821657 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076378232 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067572942 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068751809 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066636432 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096686542 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.06993484 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112846322 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071805615 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072085992 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080177174 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078923408 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077255473 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068991673 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083653128 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079110486 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07367505 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076886209 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071307033 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070926229 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.091460382 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070181145 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069284399 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068575374 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073570441 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070495244 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069403786 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081478973 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068212849 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07107899 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085565265 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068785382 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070051904 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074491598 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072692636 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067805681 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079014975 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072954585 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068587053 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077791344 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067930139 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071059873 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081124926 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074129829 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066919942 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072664863 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074614021 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068452778 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069557397 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070662966 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069653713 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077093318 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074449601 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072927983 seconds)
  done (took 10.896995039 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.170867862 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.160280707 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07169391 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14945525 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077130956 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080104768 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151933513 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095562725 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06849679 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069167705 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069027277 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112018732 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108247588 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.12401044 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082935828 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071413958 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.088788039 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.121307757 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.159450097 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.153575235 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.088926927 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080535355 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073093695 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072089112 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072188356 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078464544 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08589102 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077675707 seconds)
  done (took 4.522972962 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084751129 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.105259604 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076978785 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091198058 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.0923307 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068369099 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070730341 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070330907 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08166642 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079350533 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068225991 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074366839 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074898882 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071415962 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068741543 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07549973 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075891707 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069987808 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072098194 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074253956 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078580184 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093238064 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072298656 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067488487 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07373433 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068030742 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064510024 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085229652 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068361076 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095798887 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066024611 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07705631 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08292497 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069518671 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067973337 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068043626 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067702535 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067801884 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070030683 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066759481 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066828627 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057426092 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067160921 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079443878 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074434967 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056231264 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07265504 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072921996 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073007635 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065202763 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07096439 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070370135 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071238924 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075780641 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07335491 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072801294 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.06888402 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074332761 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076600884 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067347792 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064778829 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066598467 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072384063 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065759389 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076573583 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072374588 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066299409 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067309382 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069936813 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074277012 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068181427 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070938594 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065234358 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069577734 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07264144 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07003393 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068965996 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066477913 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067534943 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068607409 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055136538 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067755799 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053270372 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070674815 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066035214 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066334038 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068095276 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072386755 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.07999388 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069288997 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073965635 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069261603 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067137056 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071177296 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060381845 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071080524 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083769048 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083097428 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068288866 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06577738 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082814981 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072569404 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067154897 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055746811 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075673765 seconds)
  done (took 9.242258013 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095131802 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073693078 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.090791344 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.096090337 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087822204 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075905937 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078799468 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070148393 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084606475 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075067816 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078174822 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068998257 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07906327 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07838228 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071174938 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078796192 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073130409 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086000065 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083408196 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068803781 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07692973 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081197627 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090963701 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083387391 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081742081 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083291155 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090861668 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.073379242 seconds)
  done (took 3.973445395 seconds)
done (took 38.583798139 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.743250524 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.916316681 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.747756287 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.125003327 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.045557327 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.781458001 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.863446677 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.741895003 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.792194581 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.775691247 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.982354293 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.878047133 seconds)
done (took 65.073431804 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.77669795 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.888497889 seconds)
    (2/2) benchmarking "String"...
    done (took 2.052413489 seconds)
  done (took 5.619903825 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.016283543 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.316139541 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.99471246 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.743858472 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.748399662 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.089086631 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.54932224 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.2752272 seconds)
  done (took 30.39697207 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.866706429 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.981330387 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.423077142 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.452911948 seconds)
  done (took 15.451215132 seconds)
done (took 63.020254913 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.762671105 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.748184099 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.761345888 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.727059024 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.801015413 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.751751829 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.166090479 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.770270867 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.741462555 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.735488085 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.744778222 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.188371606 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.75333785 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.159971018 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.742258233 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.751227103 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.78690656 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.347562851 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.901794564 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.756432553 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.743733275 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.781219072 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.745089003 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.751147422 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.76933359 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.742536039 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.179404267 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.754500451 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.364875502 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.751097927 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.779313579 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.226274644 seconds)
  done (took 203.36491567 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.744859521 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.855014686 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.894590913 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.782496496 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.258363301 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.930435091 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.86451379 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.294352272 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.749401756 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.777095219 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.067123966 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.746320451 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.080291542 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.691893898 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.775547974 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.833057901 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.034279955 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.078638007 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.776458215 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.918976035 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.749055713 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.899209103 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.85202357 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.027147815 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.781365251 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.78434225 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.905108428 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.749494898 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.941388632 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.019304872 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.779565801 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.789967086 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.967304164 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.620550117 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.772880007 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.75592164 seconds)
  done (took 170.23170825 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.120365254 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.747785004 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.746856396 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.747883706 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.759404749 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.748932497 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.867468293 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.868708553 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.348726085 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.505507478 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.749117717 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.799046424 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.574628685 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.747730638 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.815442806 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.758197767 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.748195388 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.76224551 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.772839924 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.746621982 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.748602844 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.869708569 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.760914463 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.74768211 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.755111782 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.748819987 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.754401843 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.121062316 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.893229931 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.748559112 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.753171748 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.009051596 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.747005945 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.748426469 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.634943338 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.376463128 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.83665771 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.749389945 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.755120912 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.749391195 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.968665204 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.746820711 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.749301801 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.749518762 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.751925837 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.918883575 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.746246364 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.86998275 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.746528333 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.255301023 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.746532915 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.748594719 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.472328623 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.436114588 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.748264681 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.749784522 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.752329159 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.7493538 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.749573427 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.755950887 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.444052643 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.823160927 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.749746051 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.753052984 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.756868173 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.75043202 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.871769729 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.751678751 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.112690108 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.808893101 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.983401068 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.870916024 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.753228149 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.820170492 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.841974807 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.74822665 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.751270972 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.750942967 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.75210397 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.832541606 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.749450584 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.886861492 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.75645458 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.752437205 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.752101571 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.802611586 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.819300734 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.748656281 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.661543615 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.75218415 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.752147681 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.055420378 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.815812433 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.748054194 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.752759201 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.75233207 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.876270227 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.871745926 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.517506957 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.749916155 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.488466 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.750949124 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.891498041 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.74871959 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.943233073 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.753042595 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.834248827 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.756279767 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.754118721 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.752669906 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.785188205 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.753736067 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.81099422 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.754749232 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.128966333 seconds)
  done (took 399.839456017 seconds)
done (took 777.292416785 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.428754957 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.378637846 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.493572676 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.405732161 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.375807768 seconds)
  done (took 13.769378663 seconds)
done (took 15.458490965 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.839823987 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.844699465 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.774765074 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.846219326 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.770832009 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.84329697 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.821862487 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.778996267 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.81013589 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.779340784 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.813481011 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.778639085 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.765907405 seconds)
  done (took 25.155572434 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.987673803 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.99367495 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.824594278 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.003456785 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.799765227 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.996489283 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.918738047 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.906526438 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.910896479 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.771357678 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.769478723 seconds)
  done (took 22.571751929 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.991592506 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.997589557 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.830818939 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.991817859 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.803581455 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.991723974 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.923418877 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.908378791 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.907627783 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.771465188 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.768667782 seconds)
  done (took 22.576327435 seconds)
done (took 71.991047646 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.762388412 seconds)
  done (took 3.451090912 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.795524693 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.945802156 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.768730874 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.767921937 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.762450503 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.763185082 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.766663413 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.764186622 seconds)
  done (took 16.025346174 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.759604868 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.760104239 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.764046963 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.763402802 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.760972044 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.759917676 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.762510562 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.764074399 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.762498381 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.760677079 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.762685565 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.758005097 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.75981403 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.764029289 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.75921968 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.766026152 seconds)
  done (took 29.877937899 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.761191704 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.760151475 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.759061656 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.761805505 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.759170849 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.760856477 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.761660716 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.759787343 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.760107314 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.760082866 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.759823599 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.757389025 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.757512111 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.756630196 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.759779008 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.76084856 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.757339014 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.758187735 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.763421331 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.759982303 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.758073253 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.758787198 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.759391104 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.760045475 seconds)
  done (took 43.923904828 seconds)
done (took 94.967894771 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.654929485 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.162837764 seconds)
  done (took 8.503471003 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.76193506 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.7620012 seconds)
  done (took 5.245506345 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.758798776 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.758631924 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.758519945 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.758548873 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.762474446 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.756846208 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.756522724 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.75515454 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.755486207 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.760107762 seconds)
  done (took 19.266568254 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.75687221 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.757250135 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.752363541 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.756792149 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.758635438 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.75221336 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.755126145 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.756474388 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.756778472 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.752346507 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.757485751 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.75130782 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.75654009 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.75232334 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.755176979 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.75106716 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.762697982 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.751568057 seconds)
  done (took 33.276391123 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.754957456 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.755077846 seconds)
  done (took 5.195242916 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.752534571 seconds)
    (2/7) benchmarking "second"...
    done (took 1.75104093 seconds)
    (3/7) benchmarking "month"...
    done (took 1.752879492 seconds)
    (4/7) benchmarking "year"...
    done (took 1.75141504 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.752244532 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.752079798 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.751569662 seconds)
  done (took 13.950246877 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.755789501 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.913649629 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.981860058 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.404777451 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.757521823 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.758838853 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.700345959 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.760039531 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.760926751 seconds)
  done (took 19.479223568 seconds)
done (took 106.604161478 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.570710376 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.751138932 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.108530874 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.853734217 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.766862055 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.09015657 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.769353865 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.058394836 seconds)
done (took 42.656385022 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.774272287 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.314815454 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.336164126 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.178041822 seconds)
  done (took 12.515355142 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.734613127 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.281610787 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.784643799 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.336596924 seconds)
  done (took 19.844008058 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.119414867 seconds)
    (2/2) benchmarking "read"...
    done (took 2.094808939 seconds)
  done (took 5.906074801 seconds)
done (took 46.72579835 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.756580273 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.755795198 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.753457144 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.756562199 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.753878832 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.7542979 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.757260446 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.758092088 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.758562024 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.75694853 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.756658108 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.757268653 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.757649445 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.753997566 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.755233559 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.756747544 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.753627623 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.752941872 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.754720285 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.754486342 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.756759422 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.754265 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.754723564 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.755303503 seconds)
  done (took 43.824541778 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.757251403 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.755898569 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.757397293 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.755906371 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.754890087 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.757487982 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.756988771 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.754996883 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.757566515 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.756546863 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.754798105 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.753940785 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.757568178 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.753565417 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.755165398 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.75371545 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.756202419 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.754090224 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.754793117 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.751744993 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.755585434 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.752117618 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.751774461 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.755979728 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.753000285 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.752917269 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.755020495 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.75358673 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.755013731 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.753015965 seconds)
  done (took 54.335941539 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.759247752 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.762900021 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.754770802 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.755051905 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.75458771 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.754685732 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.754175062 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.755492545 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.755595399 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.755613849 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.755314329 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.753924905 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.757262854 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.758659956 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.756010605 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.755822031 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.754787978 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.754736759 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.754401304 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.755069833 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.755352809 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.757482433 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.754509884 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.756037019 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.755437156 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.754511626 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.755918501 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.75549807 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.753516359 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.754008155 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.754953979 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.754280438 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.755048604 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.754803385 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.754236214 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.755436509 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.75933293 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.763019346 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.75520132 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.755170544 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.75393279 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.755257421 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.755442621 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.755335102 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.754938194 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.753904204 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.755746429 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.756157519 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.755229581 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.755495572 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.755985577 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.755561692 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.755600866 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.755356576 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.754348792 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.756204509 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.756307896 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.754982063 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.756346059 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.755419608 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.756851082 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.755107329 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.755531695 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.755933409 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.75654117 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.75637352 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.756235072 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.754672334 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.756224337 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.755053528 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.756841503 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.754995339 seconds)
  done (took 128.098098861 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.753222491 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.751136337 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.752282567 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.751101431 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.750954071 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.754617735 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.751900321 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753624207 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.75093891 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.753182459 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.756681026 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.751843451 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.752143294 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.754150868 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.753996723 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.751198968 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.754879749 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.75068952 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.752980712 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.754374245 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.753852288 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.75150452 seconds)
  done (took 40.248053755 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.752818668 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.753104291 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.750700834 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.753335382 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.752609471 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.75310497 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.752726472 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.753182133 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753237317 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.74930272 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.751538273 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.752338721 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.749444037 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.751335607 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.750137451 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.750367617 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.753290729 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.749157471 seconds)
  done (took 33.217484624 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.749893349 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.749275669 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.752180236 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.750238051 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.749647393 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.751081429 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.748885687 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.75173649 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.752326425 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.740260023 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.744914988 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.744927764 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.745657535 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.744029107 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.748556577 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.74310489 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.745523578 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.741234335 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.747784308 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.740332456 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.743048234 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.744058274 seconds)
  done (took 40.110840426 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.743114548 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.744439989 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.741833083 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.74313289 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.742890662 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.746393191 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.743233905 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.739283036 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.747751759 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.743483114 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.743457804 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.746621706 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.743593777 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.743544981 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.743496548 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.739122923 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.743617009 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.74167821 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.748024968 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.74081998 seconds)
  done (took 36.541740178 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.744483032 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.74377338 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.746690276 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.745714561 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.748018781 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.747380398 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.744950684 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.745211796 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.744725149 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.748147993 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.747377102 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.744960029 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.744137269 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.744607998 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.746960912 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.745538316 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.747500829 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.749196944 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.748497529 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.749298526 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.748673277 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.750057976 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.751526208 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.747338102 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.745972675 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.747545266 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.744169862 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.745471847 seconds)
  done (took 50.583388398 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.741783039 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.743590943 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.74234463 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.74176831 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.74245254 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.739879093 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.743570685 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.742944145 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.744512981 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.740324447 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.746358618 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.742590569 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.744926266 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.746512402 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.742649877 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.743604905 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.744938626 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.740395312 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.739210475 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.740605627 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.743132176 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.746159383 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.742172252 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.742190731 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.737658517 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.744507403 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.740075156 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.741242546 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.741201409 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.739959421 seconds)
  done (took 53.946844228 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.759904212 seconds)
    (2/2) benchmarking "in"...
    done (took 1.759919783 seconds)
  done (took 5.191277085 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.742970764 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.741854976 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.741316985 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.740092341 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.74134044 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.743977828 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.74277199 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.738535953 seconds)
  done (took 15.602536259 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.739496259 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.744842236 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.744334811 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.743162509 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.741770492 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.745759321 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.748152912 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.742989987 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.743204974 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.742263009 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.752212964 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.74971197 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.745165581 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.746368411 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.743630253 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.744347988 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.740741224 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.740847714 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.743438405 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.744430316 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.74235203 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.743446801 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.746950689 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.739713924 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.744215028 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.753780028 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.744349152 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.743041231 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.741466688 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.748564723 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.744924072 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.741327149 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.743055523 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.74378026 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.743865751 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.742143054 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.753065998 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.742465553 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.747907797 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.742549739 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.744873644 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.73888901 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.745653002 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.742577695 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.742459114 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.74393584 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.744031655 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.740774247 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.740774809 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.743345869 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.745635546 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.740986572 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.740852758 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.748310067 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.74111885 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.748765964 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.742426629 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.744187621 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.748640904 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.751062905 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.753157678 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.748815967 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.74086383 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.743579899 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.751921702 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.765288593 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.750295318 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.738541343 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.739330574 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.742068067 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.748398597 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.756239754 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.750444935 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.74183644 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.743988297 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.744990969 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.743152345 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.743139268 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.751111173 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.743723335 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.741489099 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.743932988 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.754609392 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.76031731 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.739583187 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.743127073 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.743605643 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.743048925 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.745254769 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.751422922 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.743827143 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.743998368 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.740309628 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.743817232 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.742883421 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.74346471 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.743640328 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.741234157 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.74098756 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.744704309 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.740675531 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.743560137 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.751476844 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.741997932 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.743413557 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.75055481 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.741198584 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.740994805 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.748613518 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.742866364 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.744377155 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.741944291 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.748394716 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.740470266 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.742487647 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.74854008 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.744836241 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.747041396 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.742370371 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.74388735 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.751402409 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.764270646 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.747388486 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.743876491 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.748424638 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.753218323 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.744943945 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.747049842 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.746540395 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.742491668 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.740978404 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.744915653 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.746121739 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.747480884 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.745222096 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.745697682 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.74237427 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.743074832 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.743734676 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.745437974 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.747121417 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.744627123 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.747649529 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.74771411 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.747480491 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.749901024 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.748317402 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.746544993 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.74600783 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.745247585 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.741517154 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.747482258 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.746030106 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.744606796 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.7490607 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.746045165 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.747429405 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.745838545 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.748151957 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.7480305 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.747584157 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.744693888 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.749809152 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.75047568 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.748798962 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.747756402 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.747225831 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.746075545 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.752209813 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.747290264 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.746403351 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.74463687 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.746111965 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.755845743 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.746987217 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.744488904 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.750096229 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.746241676 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.746937612 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.751434649 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.751849084 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.754774993 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.751090737 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.753389395 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.749869033 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.746812477 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.752202454 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.74642329 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.748567532 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.746682796 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.750936845 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.756089689 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.761299684 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.755632323 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.753706613 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.750898661 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.753627281 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.754768015 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.757284023 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.750489118 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.751741992 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.748559389 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.75431164 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.748565368 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.750267387 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.750643258 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.749776341 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.748543988 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.750688708 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.750644627 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.750929903 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.75302791 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.751127104 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.746587717 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.750795205 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.747455717 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.747749883 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.746473188 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.749437859 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.748609465 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.749604933 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.749646053 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.757961822 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.746715516 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.75201965 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.751247636 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.751194713 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.74815376 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.748911751 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.751879157 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.751874906 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.758236693 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.749724319 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.750385131 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.756234607 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.750481826 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.751474992 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.751013526 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.749619019 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.746720634 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.7529758 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.757113725 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.758005545 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.750837578 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.751272323 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.754674602 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.753270536 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.760363915 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.749353501 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.752685742 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.750958233 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.754860693 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.752040548 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.75136679 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.752713619 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.751223875 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.754277773 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.748751134 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.751499821 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.751839522 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.750040782 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.755059753 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.752235653 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.755100208 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.758553912 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.756404746 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.750802867 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.756565701 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.751373814 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.756445147 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.752896709 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.752677914 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.750653167 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.767519837 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.756164955 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.759416426 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.754545734 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.752072534 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.757528087 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.749098704 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.760455442 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.75655285 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.76123958 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.757241603 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.755808492 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.751748671 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.754999114 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.755559818 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.754332166 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.758563693 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.759982021 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.759366997 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.755087351 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.757281851 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.755324668 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.758251838 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.753220914 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.756350643 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.756511531 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.760370551 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.752667918 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.756837203 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.761029095 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.756327356 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.758943819 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.757567069 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.7552202 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.753419545 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.755403579 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.757781939 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.75981012 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.763547073 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.756828068 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.762687439 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.755500844 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.763599354 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.756819484 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.760502799 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.765490249 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.755416631 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.754791818 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.755042787 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.756567749 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.762396744 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.754371556 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.755821651 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.759086941 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.756093679 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.7555574 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.756905908 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.75588563 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.758998398 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.761958455 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.764706705 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.756153704 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.757898578 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.758134361 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.75483518 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.758318073 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.756786795 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.755713982 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.759393102 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.755897057 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.756042246 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.757216344 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.756787712 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.761559454 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.757732335 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.761250926 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.75446498 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.761043329 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.762879083 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.755293248 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.759946479 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.758932161 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.763527535 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.761255853 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.764012472 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.756793678 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.758159233 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.755456557 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.758430714 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.763460174 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.757069931 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.760399722 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.757949804 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.762031519 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.76794911 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.760835034 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.761743884 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.762994095 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.757993708 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.763591026 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.772537197 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.777602267 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.758159599 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.766341591 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.758273724 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.762156153 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.764691407 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.760099857 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.762918193 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.763118019 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.76705785 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.772065442 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.762276175 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.761476328 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.763774756 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.762117908 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.761269771 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.764373221 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.762432392 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.762429263 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.760608256 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.76304311 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.765918215 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.764048801 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.760875035 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.761513222 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.760042686 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.767286035 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.761794474 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.764611372 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.759553905 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.76144815 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.761012958 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.763933214 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.764077823 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.764462964 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.762336021 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.762717455 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.76911142 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.766643674 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.768887929 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.758758628 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.763312673 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.763184734 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.764028859 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.762480851 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.765531663 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.765640339 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.765705102 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.765124049 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.766604663 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.762008777 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.762897412 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.761568241 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.765235757 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.764574709 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.766533715 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.765693051 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.759647075 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.767240228 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.762354424 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.759857307 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.762287217 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.772209292 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.764006993 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.771741349 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.771159842 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.765576579 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.766313379 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.763505401 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.769460312 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.762203866 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.764888423 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.763424808 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.771799577 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.767621658 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.767634361 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.766962616 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.771801564 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.769203825 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.766931975 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.773442201 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.763843944 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.767391882 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.766085116 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.771086594 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.766031449 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.76384415 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.766175096 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.767108396 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.771583009 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.771459116 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.768651811 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.768964631 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.76480575 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.771540942 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.77536409 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.765942787 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.764544366 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.761182593 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.765771432 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.767706816 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.770485804 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.763210067 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.762582551 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.76297631 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.765966546 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.768526713 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.76568723 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.765606557 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.764935353 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.767116248 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.7649715 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.770409884 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.762647196 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.762021627 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.767964512 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.765330524 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.766171699 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.76844432 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.763254056 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.764702343 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.765549652 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.763509796 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.768168923 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.771054123 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.771023739 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.762477367 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.766082077 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.766213373 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.768121117 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.766249213 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.767033547 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.765779124 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.76577394 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.767169738 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.769056439 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.764271786 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.766200529 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.780557389 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.765751694 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.766241482 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.767542256 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.769514345 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.766372786 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.763178392 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.7687239 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.766465893 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.770515955 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.776245686 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.77076088 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.773870187 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.765912587 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.769473278 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.773594574 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.769551676 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.772982913 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.771785331 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.767115454 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.7681883 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.77218018 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.780080733 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.768704455 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.773199026 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.796175481 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.76827525 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.770603073 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.768477239 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.766442802 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.770787963 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.77311683 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.769606366 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.770436988 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.772598386 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.771478183 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.767734642 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.775272204 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.772632601 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.767159392 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.772888163 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.767622587 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.770435018 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.766661059 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.768414751 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.771363422 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.770328987 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.772830062 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.769700903 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.768874866 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.779536212 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.777527084 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.76713729 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.769152198 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.768905006 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.776228693 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.76950634 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.780471594 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.778866167 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.769764019 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.772210696 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.774267426 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.770971154 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.767993492 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.773522909 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.772727095 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.770476055 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.773838622 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.78461899 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.774895323 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.778585513 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.768083793 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.76913608 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.772339243 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.772343099 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.772119889 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.771090053 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.770272871 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.770693676 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.775367216 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.772936325 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.772747187 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.770966102 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.775153492 seconds)
  done (took 1048.879520433 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.769109152 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.768836831 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.767653277 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.768031489 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.766229675 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.768712931 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.766911479 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.766855969 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.768410552 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.771120989 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.766745995 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.771817036 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.765200501 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.773391406 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.772617239 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.768561255 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.770255514 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.768372016 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.769140729 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.769060911 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.769077765 seconds)
  done (took 38.842585899 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.771133832 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.768738723 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.768709383 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.770481861 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.773979424 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.769378413 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.767945048 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773077696 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.770434663 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769367455 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.773726098 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770308396 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.771481184 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.769176107 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.773765408 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.772153706 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.770315699 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.771403294 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.773285616 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.769684671 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.774047601 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.769793639 seconds)
  done (took 40.661468999 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.771763515 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.775908308 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.772724574 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.770613992 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.773859976 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.774174419 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.776520652 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.775219669 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.775035546 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.773566837 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.774320617 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.774102557 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.777378802 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.778242512 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.776180986 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.775085168 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.915856716 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.773337391 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.775870241 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.77464979 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.771952505 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.777943686 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.769092823 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.771426286 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.772271641 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.77688972 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.773001405 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.77685178 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.774183213 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.773409232 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.77932318 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.773098849 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.773328213 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.775850566 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.777227478 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.775902198 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.778959746 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.774758734 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.773585951 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.773645911 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.779336112 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.793326242 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.774952624 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.781492282 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.774591961 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.777451493 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.778007998 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.78233822 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.771054896 seconds)
  done (took 88.840847812 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.775959122 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.773649092 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.77479826 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.774491938 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.776795477 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.775307618 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.777105855 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.777112872 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.774071745 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.773680435 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.773759761 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.773537052 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.775743199 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.775746947 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.77692833 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.775660506 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.772924351 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.771303774 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.773792883 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.773728356 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.771316793 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.774793003 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.776868206 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.772137928 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.77477289 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.77221579 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.773346983 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.775759047 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.773664506 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.773321542 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.772999959 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.777554069 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.777271756 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.773015606 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.774434809 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.775797428 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.777395467 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.77291362 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.775329566 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.7746763 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.776888156 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.77675118 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.780525267 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.77896242 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.773614257 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.774664465 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.7752509 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.775335282 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.775277563 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.777964346 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.778524636 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.773138717 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.776398121 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.775261708 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.777420576 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.776330555 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.773535574 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.774775375 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.776101894 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.776088429 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.77308063 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.777660574 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.773989928 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.778293031 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.776949263 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.778133618 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.773759799 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.777001552 seconds)
  done (took 122.42149273 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.777390979 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.779482911 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.779243228 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.779315788 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.781105248 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.780137627 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.778497414 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.779080658 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.778634557 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.779830953 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.778817336 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.779942424 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.776909051 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.777674856 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.777339584 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.779153385 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.780674526 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.781098982 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.781441269 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.780360872 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.782040998 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.77970054 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.78031725 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.779443895 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.781253973 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.779426768 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.778159741 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.781103632 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.779975292 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.779333565 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.780897395 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.781102449 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.780331767 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.781653018 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.781489571 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.779585227 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.782033569 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781743138 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.782337519 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.780741434 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.782633846 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.781835554 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.781825723 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.78033566 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.781110822 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.782140297 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.780952456 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.78310128 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.782979485 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.782669713 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.782572983 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.782260318 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.782216854 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.783254398 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.782025434 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.782754353 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.782658001 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.783266295 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.781565187 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.782446851 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.782949909 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.782730508 seconds)
  done (took 112.116916279 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.780312283 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.782027516 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.78088917 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.777869496 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.7806107 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.778013118 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.782111638 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.781858242 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.781193004 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.782145302 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.780275162 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.778722487 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.781186849 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.782262062 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.780723007 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781904694 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.779195001 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.77858564 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.78014038 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.779284714 seconds)
  done (took 37.31688492 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.779708498 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.78457823 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.780631558 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.77917579 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.783953732 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.782516047 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.782135542 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.78269491 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782226881 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.782499495 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.781024646 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.782212974 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.780725324 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.78007978 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.784137409 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.78011035 seconds)
  done (took 30.217624319 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.779775104 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.78563903 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.784297339 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.784220178 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.781333808 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.782502307 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.783380977 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.781843928 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.781231632 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.783754306 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.785039319 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.783431805 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.783867985 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.781647528 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.783239354 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.783452045 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.78146105 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.779325453 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.785842369 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.783536072 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.784635662 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.781193743 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.785101827 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.784264186 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.780298031 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.780119595 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.783556199 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.784109192 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.781672212 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.785153506 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.781372942 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.780503358 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.780920766 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.782993359 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.784627027 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.780049317 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.784840892 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.784958189 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.784796556 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.783223266 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.787188227 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.782173975 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.785971351 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.785569888 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.783520723 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.784946684 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.782613524 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.782095926 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.780810198 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.783605631 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.785997071 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.786854061 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.787864963 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.784987428 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.788232548 seconds)
  done (took 99.800050626 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.784336178 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.786577476 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.782979019 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.786859191 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.7873311 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.784717018 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.788191376 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.783762921 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.785669752 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.787650909 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.784837349 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.786212231 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.783167568 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.786904642 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.785229205 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.787217009 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.784790973 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.784169165 seconds)
  done (took 33.854261515 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.785964856 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.786111231 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.789733819 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.78558878 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.781735132 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.788146812 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.784580827 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.787288205 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.785394832 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.784733352 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786253331 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.789054773 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.786154409 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.789244488 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.785673833 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.785895214 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.788079092 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.787621029 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.785679617 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.787402373 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.789776911 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.789218835 seconds)
  done (took 41.023588792 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.786395995 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.789542668 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.803723111 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.804501358 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.80928251 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.818107049 seconds)
  done (took 12.526439835 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.785129855 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787917158 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.786201863 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788161638 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787556689 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.784757134 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78661457 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786630351 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788844521 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787886339 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785826859 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788800671 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788973475 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784934981 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789921708 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789387064 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787440518 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787207505 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788462028 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791304729 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787176586 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788563344 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787132451 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787657423 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790293613 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.786839031 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789612322 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7885692 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787623519 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79007086 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790264422 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78828149 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790869953 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789834816 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789605681 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79088423 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788076885 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791160857 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791846515 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789568907 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.792736884 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791845025 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789715238 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78742365 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792291699 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787944647 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788279121 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788084012 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788676678 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790253312 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789923245 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788178361 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790704671 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790468251 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789832388 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791417222 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787219049 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788550702 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790317641 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78903098 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788871746 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790314006 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789184053 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78951516 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791987789 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789423846 seconds)
  done (took 119.786986629 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788146127 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.790414547 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788210124 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787330561 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788571799 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789099949 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791968614 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790289694 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790525303 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789049862 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792335546 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790407017 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790343083 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790137485 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79102571 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790928307 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790286952 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790782042 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79018613 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79413602 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79092588 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793130917 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791096028 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791587679 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791812774 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794310194 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792747998 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790801917 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790647759 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790878154 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791495664 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790184736 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789165011 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.792153369 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791328796 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791440025 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790857738 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790536337 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789818512 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795353908 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791682655 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794395376 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790641279 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791708054 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79224487 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788944665 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792432417 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792009538 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791506261 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789778142 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790832329 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790143674 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791369091 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790959299 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787532136 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790738096 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791486244 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791336792 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791439603 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794606419 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790830382 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791205505 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794367239 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791888444 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792701548 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792069952 seconds)
  done (took 119.934635395 seconds)
done (took 2449.610409591 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.858118364 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.031243934 seconds)
  done (took 15.609209299 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.964118124 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.913526009 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.798679134 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.850111381 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.796448357 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.812664084 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.811422849 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.792849864 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.799520576 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.797896775 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.796588055 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.984104239 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.850487692 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.795064421 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.79428525 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.89165365 seconds)
  done (took 51.182061711 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.800205296 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.801425334 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.810578016 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.804513673 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.800112323 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.819995322 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.836378835 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.806423674 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.856815731 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.815537497 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.926778082 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.808332972 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.80027678 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.854090534 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.812631084 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.816570568 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.897194466 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.874562898 seconds)
  done (took 34.670323099 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.875430591 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.805893934 seconds)
  done (took 10.415390591 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.826142342 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.802678044 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.822914315 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.820033888 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.80691218 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.81429247 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.82611019 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.814157746 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.820128184 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.807899182 seconds)
  done (took 69.890547841 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.805018657 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.800420955 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.804109702 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.798993925 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.791714313 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.796108393 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.799903348 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.795593192 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.488733095 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.837959138 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.812306589 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.808199866 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.801873766 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.801425808 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.798131895 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.825481554 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.925842041 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.797209036 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.797305829 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.806149421 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.799955801 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.873746869 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.815936436 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.805946519 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.831734778 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.492648954 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.813348368 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.806222605 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.964967395 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.796617847 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.800856527 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.805576006 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.804198183 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.190820354 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.094949486 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.804835741 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.811287905 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.808865056 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.800736825 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.917693585 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.802728766 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.80659302 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.714696114 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.075971632 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.918073617 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.84836586 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.192663001 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.808510666 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.803180051 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.83348237 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.808380525 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.802746344 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.821541646 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.316237084 seconds)
  done (took 129.019080459 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.799007214 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.062181733 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.954057612 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.801277468 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.088641768 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.007569407 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.801264392 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.846126276 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.798285541 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.030843401 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.964474617 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.910908375 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.80400596 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.795641124 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.798534839 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.795696382 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.959089715 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.879260383 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.800581296 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.794025757 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.829668757 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.048733413 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.92918915 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.807501291 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.819787855 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.01486776 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.928361534 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.909153992 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.079078047 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.795554837 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.864872951 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.799451183 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.796361672 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.797033841 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.956637902 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.901777104 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.8915225 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.803099089 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.797203205 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.79674081 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.470646388 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.999530142 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.902419557 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.950406149 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.050191015 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.010121931 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.589435037 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.798780881 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.534419979 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.961676539 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.037381872 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.034254465 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.92745489 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.804568479 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.313188802 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.800321308 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.797447305 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.032264576 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.03449795 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.904866138 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.807357627 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.799625611 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.79723837 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.0510509 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.800524109 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.896253785 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.805050231 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.796188558 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.897771971 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.907244531 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.033753591 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.019855967 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.838766105 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.12237333 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.277378684 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.052385425 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.87042461 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.038685771 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.800216152 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.799360974 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.884355572 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.652366391 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.961026913 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.052775626 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.05809329 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.840155114 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.531295199 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.800011993 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.031033667 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.026404996 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.104835261 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.049588951 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.957309707 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.993756258 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.800061607 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.80142898 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.049285918 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.941931068 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.807206217 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.162345405 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.036415158 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.373673398 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.831829181 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.113537849 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.93653197 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.809669876 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.444714638 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.803424352 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.029210946 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.847892505 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.80722158 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.801010194 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.023081587 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.877947456 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.802648083 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.424865239 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.866189439 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.807631317 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.0412627 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.801572643 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.066420977 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.806078523 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.038954472 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.191230247 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.836756916 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.032405185 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.045175878 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.80341633 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.068966354 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.050557851 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.919614446 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.028110668 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.437507936 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.799539165 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.094541265 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.802740166 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.800620074 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.974537634 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.803233552 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.947615002 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.807643216 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.143946054 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.829870339 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.961107442 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.810325612 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.063376881 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.83991175 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.857418273 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.808113632 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.929775427 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.80801806 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.675798892 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.960917291 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.804341863 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.802661411 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.53903804 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.80419305 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.960943535 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.03784327 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.829620581 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.881257666 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.48072603 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.803287029 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.893648678 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.832532533 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.146937669 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.803130948 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.960965204 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.808009172 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.343200665 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.803686014 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.048467834 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.988903017 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.809904337 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.803898212 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.715023015 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.807106012 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.803529958 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.965862753 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.268963254 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.801587545 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.010241782 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.806024456 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.934655716 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.812765846 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.886788761 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.162398375 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.803422392 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.798953088 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.804485228 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.80378689 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.801636966 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.067749516 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.835718406 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.333621991 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.942790323 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.079127979 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.122515963 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.062886498 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.853931429 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.808731918 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.051343193 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.811948168 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.869841771 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.810734622 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.830246651 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.042035333 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.81287497 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.017858632 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.0912022 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.749675332 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.855027224 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.809176742 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.807579007 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.683200084 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.960277038 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.903877548 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.806603166 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.809030861 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.924784415 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.935829704 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.028890492 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.810237938 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.976473964 seconds)
  done (took 889.075451342 seconds)
done (took 1201.582165 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.80586652 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.806162529 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.798266003 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.807309838 seconds)
  done (took 28.954681576 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.81249627 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.810511386 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.814473516 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.809852952 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.813222332 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.810145512 seconds)
  done (took 12.608260102 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.847258465 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.803173394 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.807481977 seconds)
  done (took 21.197193089 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.880918078 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.222818903 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.920832303 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.253592521 seconds)
  done (took 10.015781496 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.811433347 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.812648954 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.809727795 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.815118337 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.817170973 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.816028953 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.812377491 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.815436603 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.816651038 seconds)
  done (took 18.065884878 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.211478449 seconds)
done (took 96.794519821 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.901922045 seconds)
    (2/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.02335385 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.802582552 seconds)
    (4/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.938789831 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.89847397 seconds)
    (6/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.898620751 seconds)
    (7/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.103402059 seconds)
    (8/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.164951742 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.932711771 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.111145361 seconds)
    (11/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.011017798 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.851347448 seconds)
    (13/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.3961282 seconds)
    (14/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.387812557 seconds)
    (15/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.879646308 seconds)
    (16/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.788679106 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 3.126236207 seconds)
    (18/309) benchmarking ("sort", BigInt, false)...
    done (took 6.802729869 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.453664846 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.494377907 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.896720475 seconds)
    (22/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.362185722 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.103474686 seconds)
    (24/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.076429309 seconds)
    (25/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.369153743 seconds)
    (26/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.293475641 seconds)
    (27/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.915920539 seconds)
    (28/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.444799649 seconds)
    (29/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.954894004 seconds)
    (30/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.899877605 seconds)
    (31/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.989877103 seconds)
    (32/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.841053778 seconds)
    (33/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.80473631 seconds)
    (34/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.832139712 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.999615856 seconds)
    (36/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.80619017 seconds)
    (37/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.809755671 seconds)
    (38/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.94115289 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.507131941 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.916730489 seconds)
    (41/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.887812395 seconds)
    (42/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.361442962 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.803186288 seconds)
    (44/309) benchmarking ("map", identity, Bool, false)...
    done (took 3.286007803 seconds)
    (45/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.053971258 seconds)
    (46/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.145355267 seconds)
    (47/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.07990538 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.710457137 seconds)
    (49/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.110997526 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.791440093 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.237588696 seconds)
    (52/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.042916975 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.888128541 seconds)
    (54/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.939475885 seconds)
    (55/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.842880587 seconds)
    (56/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.910040579 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.919888901 seconds)
    (58/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.935427871 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.070806602 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.18484635 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.807582849 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.806922649 seconds)
    (63/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 3.768625283 seconds)
    (64/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.355631274 seconds)
    (65/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.167044485 seconds)
    (66/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.791416458 seconds)
    (67/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.814482015 seconds)
    (68/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.013244466 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.864535234 seconds)
    (70/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.992191178 seconds)
    (71/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.376527532 seconds)
    (72/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.628870494 seconds)
    (73/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.28005778 seconds)
    (74/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.751891855 seconds)
    (75/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.790315567 seconds)
    (76/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 3.430159704 seconds)
    (77/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.950326868 seconds)
    (78/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.871144789 seconds)
    (79/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.821222648 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.807729768 seconds)
    (81/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.912731236 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.601266281 seconds)
    (83/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.951425144 seconds)
    (84/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.931805444 seconds)
    (85/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.884238497 seconds)
    (86/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.79137433 seconds)
    (87/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.100875049 seconds)
    (88/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.95637543 seconds)
    (89/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.808103506 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 5.526949491 seconds)
    (91/309) benchmarking ("sort", Float64, false)...
    done (took 5.575116439 seconds)
    (92/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.810737857 seconds)
    (93/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.07035699 seconds)
    (94/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.963732757 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.80179615 seconds)
    (96/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.044959349 seconds)
    (97/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.93678684 seconds)
    (98/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.892748215 seconds)
    (99/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.975391284 seconds)
    (100/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.014961208 seconds)
    (101/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.914102904 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.809336829 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.125353642 seconds)
    (104/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.879760895 seconds)
    (105/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.273132936 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.507567033 seconds)
    (107/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.014888754 seconds)
    (108/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.795660777 seconds)
    (109/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.477809273 seconds)
    (110/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.834539239 seconds)
    (111/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.8285056 seconds)
    (112/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.73285976 seconds)
    (113/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.970033988 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.915380844 seconds)
    (115/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.818746864 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.137526644 seconds)
    (117/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.111900178 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.035955795 seconds)
    (119/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.157347683 seconds)
    (120/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.811269527 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.870738414 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.72669181 seconds)
    (123/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.799407811 seconds)
    (124/309) benchmarking ("map", identity, Bool, true)...
    done (took 3.500323456 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.73034725 seconds)
    (126/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.816690891 seconds)
    (127/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.796327229 seconds)
    (128/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.838368873 seconds)
    (129/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.809858928 seconds)
    (130/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.950379883 seconds)
    (131/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.914089218 seconds)
    (132/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.809913531 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.108148192 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.887465469 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.008148343 seconds)
    (136/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.032689882 seconds)
    (137/309) benchmarking ("sort", Bool, false)...
    done (took 2.257520134 seconds)
    (138/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.834751976 seconds)
    (139/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.811879031 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.154365735 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.871916313 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.065062605 seconds)
    (143/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.811448232 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.035062549 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.91318129 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.071912667 seconds)
    (147/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.794440723 seconds)
    (148/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.851992978 seconds)
    (149/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.932602833 seconds)
    (150/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.812796119 seconds)
    (151/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 3.291440356 seconds)
    (152/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.178563265 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.920205549 seconds)
    (154/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.896086251 seconds)
    (155/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.322110344 seconds)
    (156/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.799863441 seconds)
    (157/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.904816019 seconds)
    (158/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.902597686 seconds)
    (159/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.03816856 seconds)
    (160/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.898719467 seconds)
    (161/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.827995219 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.049714035 seconds)
    (163/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.30225772 seconds)
    (164/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.838110246 seconds)
    (165/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.912081739 seconds)
    (166/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.862211976 seconds)
    (167/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.166967031 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.486162582 seconds)
    (169/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.995057129 seconds)
    (170/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.908876623 seconds)
    (171/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.747989245 seconds)
    (172/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.922175277 seconds)
    (173/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.8325053 seconds)
    (174/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.813176187 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.632000346 seconds)
    (176/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.073402913 seconds)
    (177/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.903394074 seconds)
    (178/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.000882641 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.841291847 seconds)
    (180/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.813623537 seconds)
    (181/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.889547916 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.147499441 seconds)
    (183/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.982689048 seconds)
    (184/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.798146328 seconds)
    (185/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.922582792 seconds)
    (186/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.838971458 seconds)
    (187/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.491826517 seconds)
    (188/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.811564093 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.719757171 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.882939077 seconds)
    (191/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.91650234 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.992405913 seconds)
    (193/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.89372162 seconds)
    (194/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.589897213 seconds)
    (195/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.184275172 seconds)
    (196/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.830906032 seconds)
    (197/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.841249369 seconds)
    (198/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.151325238 seconds)
    (199/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.905170633 seconds)
    (200/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.351781508 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.847356843 seconds)
    (202/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.957836318 seconds)
    (203/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.149347127 seconds)
    (204/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.292151679 seconds)
    (205/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.195615574 seconds)
    (206/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.007400132 seconds)
    (207/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.123169747 seconds)
    (208/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.908173122 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.873151208 seconds)
    (210/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.944630137 seconds)
    (211/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.898366948 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.794613367 seconds)
    (213/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.743439576 seconds)
    (214/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.505261117 seconds)
    (215/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.380316359 seconds)
    (216/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.93479947 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.097303503 seconds)
    (218/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.895546105 seconds)
    (219/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 8.22832775 seconds)
    (220/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.167674606 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.656665832 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.033999746 seconds)
    (223/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.099990483 seconds)
    (224/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.327876135 seconds)
    (225/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.851576189 seconds)
    (226/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.841315964 seconds)
    (227/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.72849124 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.209149783 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.816235634 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.79518379 seconds)
    (231/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.195654287 seconds)
    (232/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.117246371 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.834538669 seconds)
    (234/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.375638354 seconds)
    (235/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.31396468 seconds)
    (236/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.799317078 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.86491326 seconds)
    (238/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.893139966 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.709739621 seconds)
    (240/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.901772813 seconds)
    (241/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.913751375 seconds)
    (242/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.815972262 seconds)
    (243/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.87280894 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.20212525 seconds)
    (245/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.173780887 seconds)
    (246/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.905149029 seconds)
    (247/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.799916919 seconds)
    (248/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 3.376572914 seconds)
    (249/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.301425477 seconds)
    (250/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.216428999 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.0603786 seconds)
    (252/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.909019465 seconds)
    (253/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.012494731 seconds)
    (254/309) benchmarking ("sort", Float32, false)...
    done (took 5.592480986 seconds)
    (255/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.963202612 seconds)
    (256/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.826982659 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.903861198 seconds)
    (258/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.740412877 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.06327278 seconds)
    (260/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.416146698 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.919965151 seconds)
    (262/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.426962758 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.891669453 seconds)
    (264/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.327277421 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.08716306 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.844496126 seconds)
    (267/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.950683769 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.189337549 seconds)
    (269/309) benchmarking ("sort", Int8, false)...
    done (took 4.863843817 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.872801943 seconds)
    (271/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.834182479 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.152122079 seconds)
    (273/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.162669342 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.029616411 seconds)
    (275/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.844068384 seconds)
    (276/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.640262803 seconds)
    (277/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.118239726 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.46506208 seconds)
    (279/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.075292275 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.207250547 seconds)
    (281/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.820789016 seconds)
    (282/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.995492289 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.841664715 seconds)
    (284/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.88203652 seconds)
    (285/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.868778477 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.931071661 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.900200495 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.900334755 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.962190419 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.107133659 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.579544665 seconds)
    (292/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.104600602 seconds)
    (293/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.160718834 seconds)
    (294/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.080105113 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.851203046 seconds)
    (296/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.002740203 seconds)
    (297/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.10715607 seconds)
    (298/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.029422478 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.537445184 seconds)
    (300/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.932326524 seconds)
    (301/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.132830605 seconds)
    (302/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.838496123 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.145160559 seconds)
    (304/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.124051957 seconds)
    (305/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.988618145 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.843204058 seconds)
    (307/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.905898575 seconds)
    (308/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.221755551 seconds)
    (309/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.818597929 seconds)
  done (took 999.433268471 seconds)
done (took 1001.250204626 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.85409663 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.846364602 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.830029179 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.850545342 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.942225872 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.859058528 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.838970088 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.830425193 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.877778329 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.879158216 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.82957751 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.855967657 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.830855252 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.830944962 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.828190832 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.843529049 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.13817218 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.854115855 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.84782753 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.838145636 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.848143172 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.828423408 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.878894889 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.857415525 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.832109859 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.833184774 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.832280118 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.848861664 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.941243666 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.835841741 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.832344079 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.841766689 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.137688271 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.853144613 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.824934667 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.85065556 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.843506188 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.838804708 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.834306287 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.864285897 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.269827991 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.836394832 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.833344389 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.830965445 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.832484943 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.836752945 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.83376278 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.838360365 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.845474638 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.844927302 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.26865943 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.851540197 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.8353639 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.833160142 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.842280545 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.831731206 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.83772324 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.848764097 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.851965227 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.848834552 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.127919738 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.860134233 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.833800189 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.849624502 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.840008905 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.30567484 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.833541276 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.838112375 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.27166385 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.841414318 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.304683419 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.844428874 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.833824743 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.84692716 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.864848434 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.137839367 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.850390593 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.832634785 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.840970259 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.832314997 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.844038382 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.846583415 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.839128889 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.834134462 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.847540184 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.861469777 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.843835943 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.835099638 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.841956243 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.854005024 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.842174255 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.846628576 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.838751798 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.82945242 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.843657731 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.840010864 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.837417198 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.838731426 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.838313714 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.844386978 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.272431101 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.855298807 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.831580676 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.8324076 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.832977759 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.848724547 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.272950882 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.840431101 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.857215965 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.881533114 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.838569497 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.131034413 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.862355745 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.852058944 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.844850637 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.839627983 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.829959814 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.130795509 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.29427791 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.854667358 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.836882927 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.834402399 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.851925295 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.838386827 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.834237465 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.142769339 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.859612884 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.849144502 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.956308941 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.846594455 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.868173715 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.835826872 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.837655276 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.866641284 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.851465967 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.868417373 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.84033773 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.852052958 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.85210162 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.832789213 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.847391358 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.847507613 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.838300408 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.844234178 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.829363558 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.865782503 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.84974221 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.851114876 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.857257692 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.957939661 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.833130288 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.132151184 seconds)
done (took 288.327780585 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.903665927 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.831436204 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.933116211 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.835606622 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.917023893 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.927917187 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.832236681 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.832125426 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.832145635 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.207211513 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.832356513 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.831406593 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.825684155 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.832472228 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.918868077 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.835734137 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.832774931 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.199627583 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.836538629 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.908316535 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.836057345 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.832960622 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.836700127 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.212245071 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.828035197 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.83091835 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.907629935 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.835831315 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.176230726 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.832243184 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.827943944 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.177183341 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.929296768 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.863327639 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.845718245 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.83487888 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.922898484 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.853128537 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.917131845 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.917849587 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.940861479 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.868361358 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.829678975 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.837745274 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.84090908 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.838198585 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.836190944 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.864656431 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.837349389 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.833969428 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.202815506 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.847797974 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.835861171 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.835356395 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.834169227 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.86751981 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.836901049 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.839701641 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.928984083 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.839399001 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.902939178 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.217571926 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.212655329 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.839779375 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.835096376 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.834304838 seconds)
  done (took 182.123537385 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.9032629 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.909397508 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.90583857 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.842937174 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.886424766 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.905134189 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.844191832 seconds)
  done (took 14.957521792 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.844176526 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.838647838 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.887055827 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.88776645 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.839053401 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.98905375 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.838653647 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.849687602 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.83664608 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.890714119 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.839022778 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.841607043 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.845078075 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.835864979 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.886252175 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.849667544 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.953657692 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.840249177 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.838655272 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.99174016 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.837125524 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.845838264 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.892948762 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.850419134 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.840653935 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.84399565 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.422915773 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.840415239 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.83727035 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.838936159 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.836460885 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.880830642 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.841905644 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.83645857 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.837821248 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.956634421 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.83999132 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.83942173 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.840686527 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.834168926 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.839476485 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.838562705 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.842339228 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.838341841 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.840395761 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.863920006 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.841594409 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.840943974 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.840762702 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.840421484 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.891122668 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.841832194 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.838469414 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.838484011 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.896642968 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.848261205 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.841429755 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.838250352 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.841875401 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.839692812 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.992401078 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.897411538 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.842251096 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.889637278 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.841462751 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.842796871 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.84089123 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.842804988 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.937093984 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.841924357 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.889897531 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.838939884 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.001287704 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.866155727 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.842068701 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.844014774 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.844608739 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.84337175 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.843851137 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.847892207 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.840561693 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.843738898 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.849065923 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.839956929 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.838578344 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.954238685 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.951367576 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.838195448 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.85517794 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.850018858 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.840313504 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.896020481 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.842976512 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.840542958 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.898519313 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.956558189 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.898121858 seconds)
  done (took 202.991343804 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.847700435 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.850315177 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.843392994 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.859929049 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.844001293 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.84340595 seconds)
  done (took 12.855372308 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.845345591 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.843625353 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.843180769 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.844797971 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.84392005 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.846361617 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.844407607 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.846383724 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.849237904 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.845174308 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.845651989 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.84474389 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.845246084 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.845713096 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.845480207 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.846605649 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.845232795 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.842513136 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.84544663 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.844346366 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.9975392 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.844047943 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.84425865 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.84532428 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.848190107 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.844554425 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.853417064 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.846163536 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.844408329 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.850745565 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.847003673 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.846657174 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.846008639 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.84866085 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.849610933 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.847909988 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.848704942 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.846686971 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.842018125 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.84582159 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.846228956 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.844476794 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.846114812 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.845839092 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.846448662 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.853208258 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.848825576 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.854299287 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.847466935 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.847516022 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.847955289 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.847419981 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.846582547 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.848400778 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.848195435 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.852574064 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.850124739 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.847255387 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.846294432 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.847352786 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.846771886 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.847522113 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.846546426 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.850329908 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.844889777 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.847965831 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.847447848 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.851289335 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.846979985 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.849247449 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.847360827 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.844630862 seconds)
  done (took 135.893773327 seconds)
done (took 550.595522417 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.990679512 seconds)
  done (took 8.760796062 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.896165118 seconds)
  done (took 8.769193896 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.358930767 seconds)
  done (took 10.128864436 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.842556036 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.869717156 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.839728478 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.846139713 seconds)
  done (took 29.1797668 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.93016728 seconds)
  done (took 8.700049608 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.854304596 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.839755281 seconds)
  done (took 15.501326538 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.852304545 seconds)
  done (took 8.625786353 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.984938542 seconds)
  done (took 8.75896171 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.848493583 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.878245708 seconds)
  done (took 15.511666482 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.826611252 seconds)
  done (took 8.599276516 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.565277002 seconds)
  done (took 11.342033796 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.847928683 seconds)
  done (took 8.633044126 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.888093744 seconds)
  done (took 8.659889892 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.985220153 seconds)
  done (took 9.756415142 seconds)
done (took 162.697193384 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.842517139 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.843261425 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.839925475 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.837962524 seconds)
  done (took 29.134303634 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.881539402 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.881085166 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.883673433 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.891139682 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.884959158 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.880703956 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.873567816 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.874033325 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.893134131 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.885876293 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.883892516 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.883821917 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.881560393 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.875850031 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.884910228 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.883512807 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.893044698 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.884292269 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.875535667 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.886790941 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.849919013 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.893484239 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.885352546 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.850862244 seconds)
  done (took 46.913767512 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.046324993 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.921574988 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.00351879 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.903020918 seconds)
  done (took 9.64639602 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.901061614 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.903788636 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.91419788 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.952807121 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.975445393 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.912133324 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.875157637 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.871475321 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.85593866 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.902626598 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.979519294 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.898370462 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.002265798 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.849600285 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.037312259 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.850340246 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.849944622 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.902630983 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.953561879 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.96686764 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.852007076 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.902251776 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.906411692 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.899658439 seconds)
  done (took 47.68885379 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.849309483 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.858411398 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.855784013 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.849445907 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.850023239 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.851197789 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.857174066 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.849706501 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.870788088 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.851049283 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.848548361 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.850668316 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.848919582 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.851093984 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.849764068 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.863662594 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.864270606 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.84985164 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.852397869 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.855670892 seconds)
  done (took 38.851986568 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.844289692 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.698141857 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.196460562 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.099210165 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.844589243 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.84220739 seconds)
  done (took 31.298836514 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.869877563 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.858450725 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.852267637 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.90649322 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.986487685 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.860385756 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.851505101 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.861368442 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.896392695 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.913995851 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.868773626 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.88168021 seconds)
  done (took 24.384188807 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.846659116 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.847137331 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.844732531 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.862593797 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.862651153 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.859213961 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.863642738 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.845764345 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.867426508 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.872511491 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.860417061 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.864012769 seconds)
  done (took 44.07539761 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937206215 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.740277994 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.871024067 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.531826174 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.317506047 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.058777669 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.357902048 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.186132803 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.851447166 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.120253221 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.969739046 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953171508 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.102047763 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847171664 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.87368105 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.352085822 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.150965363 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076959732 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872590574 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.732134155 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89978181 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.346036483 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.737922154 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.909260568 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.058988951 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.977556647 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.108250546 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.806241711 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989003999 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889395924 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859045257 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.849024084 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.122891562 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.228344348 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952851655 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860892142 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.47303648 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.563193653 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.836402589 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.660465524 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.726762695 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.980042385 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858690426 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849620599 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.78447713 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.315875326 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226503721 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.855646414 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.561087511 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.848373937 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.860141415 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938077724 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.854306136 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.664812998 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767492006 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.126027585 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.846885571 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855156004 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.420292236 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.010913465 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.354572434 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.822244569 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.043490318 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.682587702 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.247653696 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.002926728 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.854914483 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.852929325 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.786904484 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.668723946 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903023373 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.996210061 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.869883303 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.501101302 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173021587 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.024613265 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.792472892 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134769469 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.606675953 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 4.249858889 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080210482 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.808380286 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.785922137 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.709046425 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.787534567 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.11960132 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886848739 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.501824506 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892138539 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.184596324 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.862497236 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868574669 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859551526 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.075944338 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.733313839 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852270709 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.736277743 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.998784426 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872214358 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.18757536 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.786854808 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.85392823 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108604506 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.062194768 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.051507097 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.390906607 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013590028 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852788721 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.931571583 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.73449768 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.89922616 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.129876947 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915972192 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.006298767 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91232966 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.813556839 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154176453 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877937793 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.018351359 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.978923614 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.979420038 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.198030981 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.148103516 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918351324 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.854608493 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.854220695 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.696652223 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.408119316 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.121101704 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.855497892 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.321519605 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.900304683 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.85428018 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789497542 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.478052028 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.972896361 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.823557474 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.078718842 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.774334662 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16404697 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.788489481 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.000109092 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.965643262 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.078325756 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.508723255 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.937424406 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.111889342 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29327794 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.090019918 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901514112 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872705142 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971683696 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877439387 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.234425927 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.145750209 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.859446458 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.859187586 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.687803302 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.858624037 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856048484 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.85999356 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.60622064 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135300232 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.880387849 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.858176767 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.746097611 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.8687395 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921869915 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.859613039 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.865179517 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.399623932 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.583381884 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.863982268 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.452954162 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081024221 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866339556 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.679615853 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968605812 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.940809661 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.139845121 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.918929741 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.789602875 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.567311404 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.550050691 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856059842 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.793023114 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.855947237 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86598394 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.869436988 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.238786968 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.141337648 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903282177 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.670471497 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.901083605 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.86836348 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.862483773 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856961556 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.399299256 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.018920258 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.54751228 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.903130593 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995609136 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.872546982 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.792812854 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.859917303 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.862208569 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.859133028 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.816846235 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912312053 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.679294675 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235867844 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.116587031 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.468179762 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87339377 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.818208038 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.919294429 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.875515644 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.767804086 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.771139891 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.997660328 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871927122 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.871120373 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.690563264 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.566529298 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.426816788 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192456543 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.175318927 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314058981 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.321170927 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.163748144 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.194788427 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095344393 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.388673603 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.919501484 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.202719769 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805063715 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945786572 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.515781477 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.218156655 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872715815 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089446014 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.255771134 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.662221167 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.041333282 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.073639986 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896275713 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.756426535 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.821356626 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.066376683 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002897785 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.692738028 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.07017722 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195093076 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.618217548 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.983459982 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.860274522 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.546722276 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947351459 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.573718098 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.223541193 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.373854443 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.857651943 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339347217 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.864448955 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.307747912 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217374789 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.15651193 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.983884319 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798748143 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.87327987 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.873448634 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.86219193 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.856382497 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.72363526 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.114527743 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873278482 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099137549 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.08813129 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160771154 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.770192207 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.868136111 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86313603 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195509516 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.608879602 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035202787 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.26538734 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.384540144 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865924418 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.797601284 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797860504 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.558142217 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.872094211 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.840962406 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084298173 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.053452476 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.776281526 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.509722059 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10578112 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.118566351 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.876575751 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.140140235 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142494443 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.582457407 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889401244 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.964953818 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.596409658 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.980041963 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.136179106 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.100837977 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.614778274 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.090464144 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.896735523 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.684630024 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.861710685 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.080353488 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.133234109 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.832365943 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103789391 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.588313127 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.871110055 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309370096 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922317925 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.838862339 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.022533903 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.060124083 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874414255 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950413929 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875775097 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.87553618 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.876496549 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912611721 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.843537265 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.998365949 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.881077616 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95476194 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.03327575 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.394123985 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.871484596 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.1455883 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23561045 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.201335767 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929774516 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.867394659 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866069839 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799452862 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001467964 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.313138818 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142009336 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.998609077 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.166000727 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894100937 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.607622892 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.212115445 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107434412 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.141364852 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.763132034 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.867798244 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.900944712 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.134505947 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877473196 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.080690534 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095722786 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180203973 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339468034 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.079516776 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.23211403 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142364442 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.236457768 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.86916494 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.460508485 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.873643968 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.667894187 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.908181932 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.842188538 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13920747 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880323972 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253831495 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.891751942 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.065222011 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.385257256 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.745179177 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.15814599 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.859422937 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.933219904 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.150764247 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.270213304 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185584361 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941474852 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880882866 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.572996664 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007794151 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.726322669 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.141358735 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.869314254 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081374822 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.579524427 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.87877661 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154444019 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182285034 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.866152735 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.758650063 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880828098 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.879870105 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.09424769 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138524525 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.125151288 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879479807 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.877533184 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.688043526 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148070373 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932501811 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804065096 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.871640973 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9698317 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.117760477 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.892198772 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.387684914 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.581553137 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.166815078 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.790496896 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891671033 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338875877 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.240301529 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201409218 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.414300976 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.094667432 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.43277006 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.805599063 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172598444 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.87622047 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.336186181 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175832615 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.875325911 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.449031247 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908152552 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.143371775 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193834872 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.999068778 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.681517297 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.842101533 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094518392 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.428195508 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813225853 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.877490795 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.932128296 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.874320418 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.003663472 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884479183 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.800585561 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.777679 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.620728646 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.364839297 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.875592152 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.860214986 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.626070314 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.475282102 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903854836 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016090583 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881640771 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.594990309 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.166494155 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.128644823 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.445386821 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.878670508 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.876959179 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872621339 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.801243068 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.075134966 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.2531976 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175055419 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.288209337 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.909342432 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.878399093 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.09188466 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085078227 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.787422943 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.010706799 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334382263 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910135802 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.644913762 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.552983042 seconds)
  done (took 1683.085101646 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.875771158 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.892662907 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.887577981 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.928987171 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.885519116 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.925390961 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.892657244 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.902500244 seconds)
  done (took 56.992399794 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.8770417 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.072086276 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.885696873 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.876870911 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.884651277 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.8778044 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.046958492 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.893897842 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.887862129 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.888699992 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.880785024 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.878655017 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.198500674 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.901654402 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.879263063 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.867699713 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.886473942 seconds)
  done (took 74.498514315 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.878754094 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.080137421 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.91640022 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.892339264 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.810167569 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.89340601 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.813766664 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.936316566 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.885885219 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.103224489 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.512495469 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.890973696 seconds)
  done (took 90.42041772 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.886515055 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.888310335 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.886623248 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.888630364 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.886968043 seconds)
  done (took 11.248207658 seconds)
done (took 2190.036368593 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.12480616 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.098856632 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.118079872 seconds)
  done (took 6.027949463 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.031033566 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.079788895 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.199970995 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.223567482 seconds)
  done (took 10.35042767 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.178560449 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.281366346 seconds)
  done (took 6.273786046 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.281706151 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.893728034 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.286717932 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.885833739 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.887759476 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.887265432 seconds)
  done (took 22.485159495 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.887280336 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.893490615 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.889955556 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.893716918 seconds)
  done (took 9.378215399 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.872211203 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.563922442 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.872247155 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.886823563 seconds)
  done (took 21.013550948 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.638083977 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.289582423 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.634030093 seconds)
  done (took 9.381451764 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.39167662 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.792740297 seconds)
  done (took 9.003519168 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.154129494 seconds)
  done (took 3.97729326 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.027272374 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.20767884 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.457262992 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.416590205 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.514606784 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.73772691 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.208787087 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.133469765 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.30391428 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.326834143 seconds)
  done (took 25.159574939 seconds)
done (took 138.446875213 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.266507025 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.261069727 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.093272398 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.278655314 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.114166494 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.090001848 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.103426637 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.262254766 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.735571677 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.730840403 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.279288732 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.114931935 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.249292394 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.248831548 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.245588658 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.250469373 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.110146219 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.276538202 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.927914654 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.167377225 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.108557426 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.857255249 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.11014247 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.866387467 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.106045986 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.034287665 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.432925649 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.249559443 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.077750423 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.442771136 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.038816831 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.315125128 seconds)
  done (took 170.269763366 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.618072959 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.885776198 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.884732606 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.886145455 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.337169655 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.882573515 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.88469394 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.883171537 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.057402224 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.060857268 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.883009858 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.353736498 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.894145666 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.882550514 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.890378586 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.883376658 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.209504771 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.692842737 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.900237314 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.903692172 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.906814799 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.299254195 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.910008234 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.321157426 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.230353728 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.909011999 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.865979008 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.908007134 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.891406853 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.846874824 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.894932279 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.887441793 seconds)
  done (took 208.566945805 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.885249978 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.884666805 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.882787488 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.883518698 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.882987073 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.881258944 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.880978154 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.876792343 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.533072602 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.523711027 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.87371332 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.874542966 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.879408255 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.871701755 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.874612286 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.870654651 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.874523559 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.874425057 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.874756139 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.877875095 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.87840127 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.771372382 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.877769403 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.788046526 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.876105395 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.878415632 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.871106089 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.886169438 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.882623554 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.883474055 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.882295509 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.871804637 seconds)
  done (took 221.038451175 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.068900362 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.878442616 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.879647087 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.807730492 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.879428444 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.879003088 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.839723034 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.068535647 seconds)
  done (took 19.120744225 seconds)
done (took 620.831307493 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.303933744 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.150220597 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.049549606 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.903710036 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.132807764 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.931442555 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.898507147 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.958841937 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.623159407 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.963799927 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.544337457 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.914185874 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.6344943 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.919208223 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.031333228 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.953723426 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.436403323 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.526449965 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.079016347 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.949230431 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.067533344 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.837827161 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.97676718 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.640589151 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.656282828 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.871359036 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.067117533 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.438767279 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.908550253 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.064907483 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.586897786 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.267611822 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.908513187 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.899286291 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.95556742 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.935294218 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.234353678 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.90692085 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.017871599 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.64429207 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.95030547 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.505641704 seconds)
  done (took 103.052694978 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.868946684 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.867614413 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.867824791 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.869129798 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.868363636 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.868243659 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.867068615 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.867270344 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.86824225 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.865715052 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.866596671 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.868904652 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.867956439 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.869371061 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.868260748 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.867518442 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.868685207 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.870327707 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.8675499 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.868392666 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.868414893 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.867860984 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.881513979 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.868283229 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.868755273 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.869122625 seconds)
  done (took 50.403376905 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.882157094 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.029638861 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.131303617 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.898616468 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.881693226 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.884868963 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.899495132 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.886420367 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.884506404 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.88485786 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.987760862 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.890334053 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.900449862 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.134434123 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.897441306 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.883281528 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.883635852 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.882338545 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.036696682 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.898123636 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.90118685 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.888004764 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.902084851 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.895821309 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.885290541 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.884004861 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.887029601 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.339274127 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.893238975 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.986507128 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.925590224 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.904881579 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.326422639 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.142645446 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.93521095 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.891437151 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.883651616 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.988956121 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.889289585 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.884097129 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.900947184 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.890260871 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.132256097 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.368856866 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.897540512 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.885034498 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.351614765 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.999282506 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.925559946 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.896223056 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.14277839 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.898884025 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.886907141 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.884509164 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.920378352 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.89375937 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.884338778 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.230514404 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.894442271 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.902012961 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.890269573 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.885618836 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.045119425 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.894107118 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.033853604 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.894297134 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.892188057 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.886909509 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.134358189 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.900563409 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.384022109 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.898659345 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.886271071 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.989826854 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.038978884 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.373694142 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.897731876 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.047917168 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.340140308 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.908711837 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.893810649 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.333707722 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.911242546 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.893603489 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.887494517 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.888796994 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.886760784 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.930675765 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.901493083 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.311702567 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.38077916 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.243462077 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.911718268 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.901065826 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.886541804 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.233111532 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.894785482 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.887716291 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.128120882 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.386431308 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.89899253 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.896188596 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.363609262 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.901428999 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.905224255 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.895597161 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.139403495 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.900421111 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.932044312 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.888801305 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.894081155 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.891916258 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.906165406 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.894424528 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.887942589 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.352321935 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.008015567 seconds)
  done (took 233.964490679 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.882990031 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.891656212 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.882118668 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.882088979 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.881076431 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.886868205 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.881286337 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.882745923 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.887710458 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.881276385 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.881783248 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.881910575 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.884042057 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.882921886 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.363709895 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.895910046 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.499927753 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.888444793 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.89013831 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.891284803 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.573585465 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.900901294 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.889573357 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.894613013 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.891175089 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.893345827 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.893445414 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.923667563 seconds)
  done (took 168.478154626 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.896151197 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.077088149 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.912004168 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.932745372 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.906446693 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.894863529 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.920032396 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.918147965 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.904560696 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.89499397 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.895526765 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.956669316 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.908696256 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.02536436 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.92835599 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.932256633 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.000138595 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.903870938 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.895365649 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.896627247 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.927382659 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.894611435 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.959740288 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.022913037 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.913692091 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.014264595 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.901826791 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.899998923 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.897217718 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.01551679 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.912885648 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.957413273 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.925449683 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.915365366 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.020941205 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.013162994 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.005361635 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.927852586 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.903302386 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.896619397 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.897132082 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.885606814 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.013300269 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.915634348 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.898184859 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.006005841 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.916977632 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.900666629 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.906357619 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.897313679 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.911796514 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.916196958 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.965398577 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.03159947 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.931454045 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.924003757 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.924126888 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.199506026 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.908922311 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.999308657 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.891635945 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.018992425 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.920192706 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.887863373 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.898290956 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.904945549 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.929195042 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.932123594 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.005942299 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.907272236 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.99979555 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.93528641 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.907417041 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.90017305 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.902393798 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.018146779 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.016488329 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.935387246 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.93802096 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.933048165 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.897908348 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.898978873 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.888521594 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.917290234 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.904702737 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.016102565 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.015290519 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.908458302 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.900867505 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.903232427 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.903399964 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.926554668 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.027264828 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.933893367 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.995733426 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.967591064 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.975635496 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.915218518 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.913778498 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.903700096 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.963850918 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.915199364 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.912747862 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.22752274 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.972342426 seconds)
  done (took 205.789369577 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.382693997 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.954990921 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.957478373 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.221397862 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.318600834 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.810577951 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.949090624 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.950518965 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.974209723 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.14296499 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.0203019 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.972786023 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.938189098 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.92447805 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.950754746 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.973893948 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.964259377 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.274705197 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.083456616 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.070158663 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.931660859 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.266522261 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.264410752 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.347716455 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.985402253 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.290284173 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.625150856 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.198381727 seconds)
  done (took 62.579394545 seconds)
done (took 826.072409841 seconds)
SAVING RESULT...
DONE!
