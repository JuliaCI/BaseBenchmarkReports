cset: moving following pidspec: 20017
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.370632162 seconds)
loading group "string"... done (took 0.573020043 seconds)
loading group "linalg"... done (took 7.344716624 seconds)
loading group "parallel"... done (took 0.17034171 seconds)
loading group "find"... done (took 1.158080913 seconds)
loading group "tuple"... done (took 2.046846458 seconds)
loading group "dates"... done (took 1.291668878 seconds)
loading group "micro"... done (took 0.239865362 seconds)
loading group "io"... done (took 0.959409645 seconds)
loading group "scalar"... done (took 39.980949521 seconds)
loading group "sparse"... done (took 12.861021207 seconds)
loading group "broadcast"... done (took 1.006068203 seconds)
loading group "union"... done (took 13.937319625 seconds)
loading group "simd"... done (took 4.691118385 seconds)
loading group "random"... done (took 9.547370631 seconds)
loading group "problem"... done (took 1.988053857 seconds)
loading group "array"... done (took 22.381876318 seconds)
loading group "misc"... done (took 2.017147658 seconds)
loading group "sort"... done (took 3.416644175 seconds)
loading group "collection"... done (took 19.567932385 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.573726155 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.159805861 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.151266073 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.150899498 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.199623971 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143953211 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158052382 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097462815 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.976129096 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.171482068 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151033782 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.522788931 seconds)
done (took 5.190862949 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.217914825 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.096142602 seconds)
    (2/2) benchmarking "String"...
    done (took 0.106121622 seconds)
  done (took 0.882026355 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078991863 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.148185445 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.099248629 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07932263 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096151722 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078209123 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096728057 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.093291396 seconds)
  done (took 1.380551268 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.088419318 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.099065146 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081759862 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.097956464 seconds)
  done (took 1.052333484 seconds)
done (took 4.305793477 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.724248828 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.272073876 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202210753 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.461852531 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196881862 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216325261 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679551907 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.354947518 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252439697 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099407497 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.135051873 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.39100576 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136688234 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.687973769 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092348426 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127116904 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.180615108 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.467032969 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.085293497 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.11161755 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.118260725 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142713444 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.132320732 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093171475 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185630808 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081443447 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192562152 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107510592 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080354415 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.277297035 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201050883 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.687879422 seconds)
  done (took 10.898619472 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110511137 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133511984 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098681651 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139729521 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136745355 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.102215398 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08587085 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098575744 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125107046 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179841914 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.119077505 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.139539572 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096604207 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.08380453 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117004922 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245354867 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121437013 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100330326 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102303074 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089214193 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139798682 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114529549 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109602689 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094907889 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168870883 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.224995893 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113456957 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127932003 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099342023 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114803696 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14510733 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145219548 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09640633 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081400298 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175174675 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126193155 seconds)
  done (took 5.199103865 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.099338226 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189134033 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120909737 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168397855 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080502621 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142654897 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094723371 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112484684 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.254525245 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.182063766 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.491027046 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141043762 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098109757 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098033275 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081746021 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097160489 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.450349185 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.157515093 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134702527 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.095762043 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104676313 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099033537 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.369892874 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080484643 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.094919631 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081056431 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.081615224 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167762386 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081459825 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.155985505 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.205628648 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.1208397 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081866875 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134444848 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.208306145 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.11213075 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136363082 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097122468 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080858509 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.17782214 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103808575 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.07944429 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120139422 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133271141 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133941855 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096503518 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080871372 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.196336748 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097444505 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.096265856 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.93647014 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180832674 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.108568765 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098985813 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.310825889 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099293907 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100319927 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078874767 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.279986208 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.197349434 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.101972237 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098491269 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081959818 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098180333 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082850286 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.38315994 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098626433 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.680295762 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083656633 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.10960773 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084424312 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098265811 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105387903 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088045553 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117554153 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080137945 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100992537 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080041126 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098442557 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081865555 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.096192942 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108365036 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.220690724 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081467259 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.100515648 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.077883658 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.119152716 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128011763 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.08424986 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097268586 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132183703 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084608531 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099539515 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.135625351 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082011086 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111440814 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101573149 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.079710749 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143647675 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098954777 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.139484973 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094487263 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126241384 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101089293 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11624089 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114076441 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100378838 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.172128417 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079092265 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.097482889 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082544041 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.098424299 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082857795 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101214277 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112320035 seconds)
  done (took 22.784284417 seconds)
done (took 40.666805789 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.323482975 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.101625237 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10209556 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104838831 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100594943 seconds)
  done (took 1.493878691 seconds)
done (took 2.229140967 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.163604391 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114055323 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095360714 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.126893637 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0770832 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.131633693 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.129931473 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094611652 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.131110525 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.092938096 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.127728297 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078546917 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094539172 seconds)
  done (took 2.211813588 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097229326 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116066658 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083543616 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113576391 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077678472 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112962264 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093961175 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120178386 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111584551 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08608965 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094930792 seconds)
  done (took 1.841480757 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096163832 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114216473 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083735645 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111765561 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077893368 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112192714 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093984385 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119152765 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11116053 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08696846 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094693602 seconds)
  done (took 1.838705168 seconds)
done (took 6.610025468 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092994073 seconds)
  done (took 0.826533306 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.924255737 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.620988617 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.116230632 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.154091564 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.327579382 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.17541018 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.475516133 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.129267353 seconds)
  done (took 10.872922439 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.116687452 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.101366255 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.116462565 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086632814 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.102298482 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086020232 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.103105331 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.09975357 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086961113 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099868104 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.084889114 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103554749 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100135476 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084783773 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.102902819 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086547451 seconds)
  done (took 2.362188901 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120052095 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118384902 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108367069 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109061308 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086936124 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106759332 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106901385 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.09052866 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103114805 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103746977 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090874333 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107161764 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103649862 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080145595 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106509761 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109188513 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086837869 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.1074749 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107291411 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091396401 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10859334 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095954759 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088819135 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10768711 seconds)
  done (took 3.294395295 seconds)
done (took 18.092916775 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158906983 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109597992 seconds)
  done (took 1.005756312 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097150128 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114283026 seconds)
  done (took 0.944706006 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098678542 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097485478 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.123477902 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110767284 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081686332 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098160383 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120969984 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082042773 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098621121 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.097722649 seconds)
  done (took 1.757404496 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084631875 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111694583 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102248861 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095861653 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105638611 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096046337 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090018251 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101098122 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112163428 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077807832 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10279341 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115016782 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086856389 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116710902 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106445515 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.101425122 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.085398747 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099434192 seconds)
  done (took 2.538226281 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082623359 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.099026901 seconds)
  done (took 0.929813337 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08282866 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095417612 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082238431 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098599981 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096022914 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077148268 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.09524643 seconds)
  done (took 1.373514032 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.445501528 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137983196 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.264176126 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102273734 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105025117 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.300186836 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099112325 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085790583 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.105230254 seconds)
  done (took 2.454298207 seconds)
done (took 11.747425557 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094942406 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.11667277 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114068864 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.456197403 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105012259 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097991014 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147474125 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.246795767 seconds)
done (took 2.13381083 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.145906159 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.568945729 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.431462439 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.235794741 seconds)
  done (took 1.99108182 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.401368245 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.099163301 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083422017 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081829126 seconds)
  done (took 1.424234767 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080708128 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101686275 seconds)
  done (took 0.939951682 seconds)
done (took 5.260381545 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081134 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.10064865 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.112556654 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.098031703 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081180501 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.097997745 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079364964 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.09895096 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080730864 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098071591 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.09739624 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.082161789 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.098547781 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080923602 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09590166 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080038714 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098358485 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.078461871 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095493985 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078902408 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095783113 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081405937 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095842185 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078405281 seconds)
  done (took 2.961902986 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101830944 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099941959 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.10493806 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086680948 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103656862 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087284059 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103774687 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098501207 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088378352 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100878724 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103953912 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085578395 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101056259 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086260808 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10058182 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102954394 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08735707 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09907083 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083732871 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102731687 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103648012 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082669031 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103487577 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087202417 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.102736365 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102537792 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084862882 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099854462 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104208591 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085054466 seconds)
  done (took 3.646735814 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086869941 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095208836 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079512693 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102971926 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079386947 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099219188 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078656291 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096937654 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080052715 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.09703056 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080577092 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097168022 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079137106 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098069004 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080005996 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100543694 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.114349273 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078916369 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096660893 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079808673 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100047844 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078763386 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097925182 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07911508 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09564366 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078413556 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096919083 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078966321 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097996013 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079350592 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099696809 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082186609 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096281562 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.102460164 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.081155584 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.095151393 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.081072443 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.094443211 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078354855 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094580176 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077253567 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096274581 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079297672 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103391815 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079374962 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098929243 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079344225 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098155335 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079966426 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099637069 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078307422 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093764904 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.09595439 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.078524457 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.097528102 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076606526 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095661716 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077841355 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09738413 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079005049 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095989157 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079225182 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09846315 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079861058 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112200616 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086933085 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097871465 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.099522678 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.081279622 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.099442577 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.081646914 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.111296732 seconds)
  done (took 7.241319069 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.131405601 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12437684 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07982362 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097264247 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076560676 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095178601 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.080948842 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09553859 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095748136 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084380369 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095214866 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079359833 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097157925 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093509206 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097151663 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.080301046 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101818749 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092501429 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078489075 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099098715 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078488429 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098937658 seconds)
  done (took 2.814880368 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.206124399 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102848671 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142433921 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10648674 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082260004 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105839726 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101633762 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08426143 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102470052 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084136189 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100713148 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102289331 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082993449 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099979765 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100085742 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083094028 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101246464 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083405685 seconds)
  done (took 2.632263685 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09394078 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09883218 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.100155579 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098311276 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.206858199 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082697573 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103221634 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106003467 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082930116 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097171113 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089540124 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100380977 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.082632704 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097496489 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099719649 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080465331 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099661717 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081134822 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10737839 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104644995 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085608485 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10690519 seconds)
  done (took 2.969788428 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09760153 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102414492 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.11971984 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083348589 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094430842 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079173721 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104865121 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081116927 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.104731673 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099596571 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080217545 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096639612 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.085361704 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097981036 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102295082 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081202654 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099302634 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081395624 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099685369 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077876209 seconds)
  done (took 2.636668445 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104890366 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100660829 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099562753 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091347041 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099707706 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082174381 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107962672 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099426217 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082848656 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123863718 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099881447 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081535862 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108061897 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105483608 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099299694 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090739392 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108332579 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107618719 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081799089 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099134923 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123938864 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082410771 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107248301 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09931792 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081739569 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099214318 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098672285 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087513383 seconds)
  done (took 3.527961875 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083107498 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100037478 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08050423 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097360258 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078544072 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09631766 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078436398 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095664223 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080571185 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095957702 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081355851 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097949956 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080244493 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097961231 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081060497 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097581936 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08032132 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095448064 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078080274 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096163273 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080383217 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097536739 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081791577 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095957676 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078924512 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097683898 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078078311 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095529232 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081077683 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09606634 seconds)
  done (took 3.426331231 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092483148 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108594951 seconds)
  done (took 0.975407677 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080217078 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115143656 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079981016 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103604269 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086040246 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09869318 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106078579 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084854543 seconds)
  done (took 1.528183112 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097659657 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.11090115 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082711493 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110949423 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.108513866 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097109545 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.168568901 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099764751 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.10401418 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.079406434 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.11117256 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080866825 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104534248 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080911683 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10439214 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088010893 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096946791 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103814727 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084300865 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097065378 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082846828 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107703473 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102989395 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.077874861 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.099736006 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090776823 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111082713 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.100306033 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084659064 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.105590084 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086680428 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092883246 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081501251 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099365891 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079851787 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108781153 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115972181 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084598304 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.10781163 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100059563 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092434234 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094035575 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085325402 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104103127 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108453512 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.081684635 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099373941 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077111351 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.09981858 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084653772 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094736828 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080939535 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093731232 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105187753 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.084802739 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109862145 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080370573 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101017263 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08370994 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102279856 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.106203478 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084280657 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101556172 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081306921 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108970734 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086422737 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108419427 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094173447 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.07580849 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.098615067 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091453689 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122551569 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105547549 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.082326374 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099930356 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079494245 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102830638 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100996101 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087364323 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105171586 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.081826372 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105591168 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.105868684 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081450797 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.101598337 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.089746369 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097469054 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.100834504 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.079603801 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11621053 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.079756397 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.09748596 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.078876046 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109621617 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.102032667 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.081180083 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.096885072 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089034558 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093041348 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082570486 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100548805 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099608007 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.09273674 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105499688 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10564681 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090021424 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.107151716 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081320351 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102366962 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078604193 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100936948 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.097956803 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089272083 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092803688 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084040668 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.099574326 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.082309714 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.107930089 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097237899 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081745203 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108200147 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.086720868 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.097264606 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078444767 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102263671 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.081518791 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102969966 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.108074498 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.081261677 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094398002 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.076958717 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102889935 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081160638 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102729499 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105657571 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084776981 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094165159 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080306314 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.10465439 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109013518 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.082242031 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.099970177 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.087435673 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.100078643 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.080545311 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106166825 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102110036 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081077616 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.105140405 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.081820651 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094429781 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08478403 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102365087 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097969502 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085519813 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102925139 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.083956838 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099883598 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080357025 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105147581 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100585452 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08063778 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098822206 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080531326 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110405576 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.101615501 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.076816876 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096899636 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089941966 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097110494 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.080990164 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098474964 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.083755995 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100392706 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096887357 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081351857 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101450908 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093427314 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103816824 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101142749 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087578331 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110973668 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.081229226 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.103026289 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.082133089 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10087482 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100786963 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091304606 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105729408 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087433824 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102416905 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.09703319 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087956175 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.1079669 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081332606 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098183985 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081365081 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103105765 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.104978824 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085958161 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100666729 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080515995 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100401113 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084891873 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102614772 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099438221 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081662716 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104533931 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082100496 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106713121 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100798096 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092579539 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102899181 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077196992 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10318156 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097661976 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088283662 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095331391 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080384466 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098457507 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083240243 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098889858 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085179358 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094004099 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08927618 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107879377 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.099696273 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081484549 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101170453 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088258348 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101432663 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086355017 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103708901 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106290473 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092269414 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099256172 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.084827839 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110956617 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100003786 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076373614 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105927008 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080851068 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098616494 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.08086497 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.097541284 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08580062 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107936281 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.1073923 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076611034 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102393465 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080083715 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098778756 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077560796 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.105006803 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.102789399 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.082556876 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.106962756 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083425287 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100823385 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.102769727 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082471563 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.100995132 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08344392 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103397835 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083724479 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.102814132 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081634755 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.1036916 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.098812065 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080772317 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101940577 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082661785 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100007884 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08788897 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099635666 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082362402 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.10327092 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100992151 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08254947 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100656409 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081278164 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103687136 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083198893 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.099699987 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.102537334 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077285195 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107782501 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082006306 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10762552 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.081623827 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097453891 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.08777719 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.102884023 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105823647 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083980371 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.10087853 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083228752 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100585415 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.10319434 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089516915 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.09836596 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092765745 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109537397 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101534307 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085535683 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.10120234 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084687763 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099389883 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083104046 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101651938 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082470088 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.10014982 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.105407776 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085266359 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.10090476 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084765643 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101722278 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082933172 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102252909 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076681015 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.099880945 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081267614 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101174123 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111812765 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084244255 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.100664373 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081460229 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101323792 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099735828 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.078771107 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.108610107 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09180273 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101175107 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10870514 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081653314 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.101549706 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093766531 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09483035 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080471806 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098951496 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080878373 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10786167 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101665752 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.091760701 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100078204 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082085752 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097794158 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083127277 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099555375 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.094628131 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080524402 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111910304 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.082382874 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099404105 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082939907 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104285946 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083532066 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111603538 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099998465 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083644888 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100765677 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079537046 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.099371622 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.0823014 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.103716368 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101120091 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.079908143 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097900939 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081981261 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101642492 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083901618 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099944542 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.083736314 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110407366 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082853757 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103471622 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104707963 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077418869 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.103504629 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082373663 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.09990922 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081353391 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.103932933 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104216969 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08395476 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109547625 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082177132 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101986674 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08263725 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098278445 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100514014 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.081663376 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101505693 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082273506 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102153889 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090377808 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.098808346 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103332838 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083126275 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101465976 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090739087 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102007143 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085456678 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109169056 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100409938 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085049086 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109025434 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086654717 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104837877 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102887918 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.083994074 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107023603 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082437034 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.10834352 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.084637662 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102259121 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103473202 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080978045 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101512406 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083332084 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100828634 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089066222 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103739699 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08165074 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101580509 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099240908 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.084597666 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104607899 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091878972 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104163855 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086341293 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096605676 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079549951 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103207233 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.098854489 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085552501 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104991468 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088763887 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104183447 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083813905 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100790174 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111298569 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089267889 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105639014 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.08120497 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105438794 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084075907 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104747248 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103357086 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083692007 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10333205 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088219882 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.10406164 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082209164 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110276018 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.104934849 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084413773 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103489508 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084441589 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.103097545 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078398805 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103110015 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085535767 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107200449 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104008341 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083604823 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111976118 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.081133242 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.104715022 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104392545 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083337333 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.105897221 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078596544 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103059831 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085275401 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104238597 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078502089 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.102035479 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081113913 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.103850667 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.100969075 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078912548 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112745748 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093237688 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105040984 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100434978 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081760137 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097119793 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079847499 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101913987 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085440965 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103829335 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.11199145 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082204457 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100081634 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078598449 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101457927 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086331827 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104864576 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080768376 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.09862036 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081554263 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105610145 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.10791331 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081869742 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101046851 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086694947 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.10492001 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081826951 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106973 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080673706 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106862925 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116207746 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084880833 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105526704 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.109258192 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091224784 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103655818 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.07852712 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103775515 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086528485 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.10249936 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.083753642 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104196342 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117929385 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086821782 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.102038083 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082679693 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.10533738 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.101438427 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.091761646 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103808901 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.085048412 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107074908 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085507061 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112102702 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104388409 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091757927 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106406382 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.104896081 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.082736911 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101897635 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082345805 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.101013279 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.085453633 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103672851 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107101797 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092139419 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.102010353 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095279246 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111885664 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104594518 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.081275198 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.10174344 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084025363 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097620363 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.085942877 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101596775 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.082338456 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101751262 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082178009 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103451532 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108734857 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.085035353 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.10376021 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.084323662 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096387922 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085933414 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105066405 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083819328 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100064025 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083806538 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104091502 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.106974502 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08841365 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.100511812 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.086188241 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.105060812 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084530357 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097985132 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.108881279 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083493766 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.104698787 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083262483 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102850635 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.085350245 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106392986 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10784777 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085240168 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.105099769 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.092910388 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105330983 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.08126071 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100295562 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.107821881 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.082116244 seconds)
  done (took 57.399702266 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145849096 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079874687 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098159685 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079524917 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112984619 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099734526 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079385491 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098231455 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.079697512 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102113419 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079122045 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09779941 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107546239 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12326286 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092119921 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103301486 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097761992 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080397059 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097320908 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080929742 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108005785 seconds)
  done (took 2.866783049 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104623808 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120418533 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115370146 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117086271 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090035205 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.1143747 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114102063 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115256754 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098919516 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11129453 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116942992 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114868032 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092096057 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111112913 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110195309 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092209791 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116936834 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10866413 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115294348 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095119254 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111976714 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113924134 seconds)
  done (took 3.226566604 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084106087 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101817036 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085422161 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.09752515 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083349719 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097259356 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087415313 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.10099887 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086946835 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102580621 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.101611539 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.081950709 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104017697 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079345359 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102200832 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.08153446 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.149648004 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.105972629 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083198697 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105426885 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098340009 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.08595335 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098024527 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079457979 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101697136 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.08742758 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103710929 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081626589 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103258235 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082087089 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103599964 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.100169015 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.084861561 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103636657 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082539167 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.10134021 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084575831 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102595555 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.07981782 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101195234 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084947171 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099775833 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084464972 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104437393 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.100348208 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.08207006 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.104234794 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083799565 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097775378 seconds)
  done (took 5.457503903 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.102430414 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159862073 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086985999 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143413221 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119512101 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112775473 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088180421 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142025469 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.1013969 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.08552976 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121826198 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119134843 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102189754 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088814762 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.106634383 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102815699 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085550896 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101950922 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087856554 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103746636 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107708874 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090656632 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118167746 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117786814 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107903987 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082892744 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102458205 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.088660854 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.117601185 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108779544 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108447032 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090123926 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120246507 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108807712 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084121835 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105901983 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122033357 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.085008003 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106658355 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100567925 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086672481 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107712062 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110279186 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102221339 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103891221 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10843251 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084727999 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100470922 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117138081 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086563252 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112704761 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119629939 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087409208 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104288503 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107933394 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.099392786 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104196979 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101140774 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087605203 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117458544 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101118973 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089364369 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118178118 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104864962 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.091442851 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.119319603 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109143285 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107512105 seconds)
  done (took 8.097043522 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093005304 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110387437 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120303644 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120846876 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090703059 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110334294 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109287719 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091084929 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111571088 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115353558 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110282616 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132826176 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086195099 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113834042 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110401073 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090977577 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110637519 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110954574 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091345238 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11069124 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11091481 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119475109 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091292642 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119578967 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141066304 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105038524 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090685629 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110470225 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119949589 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110497026 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122584749 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091113395 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111069204 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119805521 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12230503 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090458206 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103165462 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109918782 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090970082 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111437504 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104737899 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12009026 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091576413 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105369193 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110082804 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091645501 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120656884 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.122029251 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113992209 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115743261 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.091263074 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11916705 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110436068 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09082508 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11983313 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144431713 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119658901 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119206233 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111091903 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119441613 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09968966 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127803721 seconds)
  done (took 7.640936877 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106326782 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11445825 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116763138 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099958952 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082759807 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107646906 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083178088 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102008439 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093783816 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.113315464 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116054492 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108047227 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091444081 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116844785 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108105035 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112135392 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088403558 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10836316 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113865234 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088457419 seconds)
  done (took 2.917086351 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093613937 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.122370453 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084127349 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111636057 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107252041 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091224602 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106829515 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107094015 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086010221 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106959562 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095064428 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115505768 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105587124 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092640472 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116267074 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11100589 seconds)
  done (took 2.500745312 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097621588 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115715205 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119604003 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083925246 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103804059 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.101603005 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.08508318 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100040436 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080989993 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.12014471 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084687219 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108410279 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104511723 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083219808 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100866854 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.0888711 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100521322 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082248403 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104880356 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.118972872 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096088141 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103367354 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105929337 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086746454 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105144925 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.09018752 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106333759 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102298012 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082828608 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10562342 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08573762 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112230914 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101229881 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084155999 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102710722 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082501559 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104215483 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08475334 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108432154 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103423848 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083478922 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103926747 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084637454 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105671155 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.100711102 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.08595332 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100427333 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09123873 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103331517 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085199432 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10582635 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106155549 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086186121 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115735101 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.107923385 seconds)
  done (took 6.253830234 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099181495 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108396058 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079794739 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103671397 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087815716 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106592424 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107671498 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08592415 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105997587 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08263446 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106254299 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.08774868 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106474854 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107829579 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087077458 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108345952 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080576128 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106998736 seconds)
  done (took 2.606759344 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09061067 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103917394 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092620473 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105505298 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084315489 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10805201 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080552579 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10343164 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103486414 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085456071 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105036368 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087296968 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103726096 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086845051 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105335398 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084977505 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107227082 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102719542 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085008315 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100594653 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087087136 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103843362 seconds)
  done (took 2.968505279 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.114440585 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.120558894 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091052961 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.225844078 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.101931566 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.130556782 seconds)
  done (took 1.636523643 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112208886 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12025496 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105921052 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106487214 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114101904 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10760353 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087521138 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106927002 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117370847 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100487742 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107940628 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116589531 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117432202 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096704033 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11401056 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113747407 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106858767 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088290682 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106050676 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126693724 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087937907 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1177841 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107267743 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086111179 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107791189 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116034947 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116817695 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122345949 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08805035 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116164358 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11313327 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087553768 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117310416 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121503988 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108951922 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096507982 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107862823 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127559825 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11412496 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095393795 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108812528 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113724954 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0966143 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113810545 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116579195 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10733615 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092704994 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108674283 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107887259 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132948902 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092455851 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117321301 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113165438 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118080249 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11655189 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133694074 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101451867 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117274628 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113367802 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121496317 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116660332 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093126409 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116836957 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121702746 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114038021 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120011967 seconds)
  done (took 8.099988443 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102851001 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126165354 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106849497 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122115201 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09671877 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107549646 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10789149 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087483577 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107702189 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106681762 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150914167 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088119955 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116933484 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116807354 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107425317 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087560127 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107435266 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116119669 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086769432 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132045341 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107422887 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116517201 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116723486 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096859663 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120866339 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114183557 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107295765 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088674193 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107652876 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106902471 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092555308 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107589807 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117242691 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08643357 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116838842 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107319488 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107197373 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092710936 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107435296 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113873173 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096248373 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126588029 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107433903 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107578745 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121535064 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086789801 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108082855 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08585417 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107984691 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106589801 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121748941 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101043592 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122161347 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117625846 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108112537 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087487199 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107909524 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107223522 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088369942 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115161276 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116373969 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107460476 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135330739 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087979693 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107363625 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117288975 seconds)
  done (took 7.967881816 seconds)
done (took 154.757577017 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.216988647 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.19877957 seconds)
  done (took 1.257540637 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.089806091 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137055558 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096235833 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168724963 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085953333 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.139940777 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138316193 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096871927 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106911189 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08553033 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106612033 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087119136 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171197984 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086233024 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106225196 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107773267 seconds)
  done (took 2.662436618 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.113580599 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255443055 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.122636999 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.104710848 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088958613 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108989999 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084209816 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.111684377 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089849544 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.104777317 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088642535 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107597589 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.08391011 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107356414 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.088662198 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.108346277 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.104366615 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088396464 seconds)
  done (took 2.817685671 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114205789 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146724104 seconds)
  done (took 1.122725622 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.241448525 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.161139847 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.226866569 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.471865903 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.279107518 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.356345084 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.197783287 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.210028601 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.163577732 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.208723821 seconds)
  done (took 3.368954945 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118427866 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.1810132 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316473677 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155654637 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106646825 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126218978 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156512741 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130616789 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.122566703 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100568452 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.101177825 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.117751538 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137975734 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094856191 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115176809 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117404838 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.119416036 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.11388335 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113706277 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095375255 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137056684 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105664212 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.094688001 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.113512797 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.118560751 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.096735791 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104809974 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.08461039 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115450829 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11437916 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.09142487 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.123781985 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.117634709 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.152376822 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122786825 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.152574631 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.117332809 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090632768 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114421192 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090430294 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117219406 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117887191 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.123635816 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096835383 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105491665 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097924758 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.10615667 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.08486194 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114453866 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118184066 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.094541488 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113810541 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.152125007 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119349161 seconds)
  done (took 7.344014591 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.784101421 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155725593 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089908779 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.88493701 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135757057 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103431557 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.77861384 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113153541 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254824788 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.747889414 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132664188 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.098117578 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228688715 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.256497391 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.925808793 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.284903392 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.636281586 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125980543 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153342188 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.156057139 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122437993 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120320825 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.137207717 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.436325251 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116656592 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089871331 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119163995 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121236548 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166454514 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.131984231 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098701819 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.206272516 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.25285126 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205962881 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097224019 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.114561846 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095122458 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.198844349 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273083993 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196528509 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.18711794 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11446365 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.095136074 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128830147 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.138538235 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091802391 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.190407971 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.182341309 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.175961239 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121656401 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124797065 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.103074708 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127458738 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.170685865 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.12879397 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.324396335 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.3230579 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095572167 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128402216 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.132045236 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.246165526 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129932194 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231390162 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147058641 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.197112055 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.117604124 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.787120351 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.176984183 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.117469187 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100337738 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.126256131 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122483855 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.104372941 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173026857 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.413198726 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129989998 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.120405518 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09509335 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.234738797 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.107788822 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118044115 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.168493189 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121891475 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.103642371 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130578665 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127956325 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.175798362 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.2591888 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.105907504 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.126906489 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.120921183 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108566356 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.122406862 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.217736571 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228378016 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.168328538 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.241169743 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100828237 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.189483552 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.1754679 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126591924 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.178981416 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125656387 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107865889 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129052073 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224917154 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.152025166 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106249945 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.122741023 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.124899137 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.154298014 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.133395166 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.102172122 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.198433181 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.464191918 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.174085364 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.115271267 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.134097764 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104195784 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.16638938 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125795796 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26986902 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122124581 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169468962 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101888075 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.116154834 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.126886887 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.170860329 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12829776 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105531676 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129292879 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126447784 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.242913207 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22591563 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127616067 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228852703 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.19169285 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124796089 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179459519 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127820666 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.174951102 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126696111 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108026615 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123878973 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778517353 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.107140676 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.127842647 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.121645565 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.194654968 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093491889 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12835236 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.131103884 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091642821 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802764181 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.134438726 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.105351579 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.130917012 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125265144 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.126933825 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.101862957 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.122801436 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.168798202 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237618593 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126072456 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102487176 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.131519854 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.168268491 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.123406996 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.131794837 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.108115256 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.132009973 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12790877 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09758156 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.131730255 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.176354753 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.192896064 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22558457 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.580046299 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.118080425 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.129636088 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.212725355 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118936735 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292091974 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102938321 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.231872869 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.192391478 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.103236965 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.319495477 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.171517896 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.193853853 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.134193695 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.179646723 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.116090858 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.124877424 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.171407905 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.095321143 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123218293 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.167948524 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131924582 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129071553 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.937669438 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089704443 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.226817613 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.114314262 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.178422665 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123183299 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12615386 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.272859459 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.118780289 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135699801 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.172220616 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.120994198 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.108860043 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.87284839 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.127607818 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.105450681 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123595972 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.230684883 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.172030314 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.127419282 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126170721 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10303416 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.169329868 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.237468535 seconds)
  done (took 45.1862385 seconds)
done (took 64.611931391 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.285371462 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.218320265 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.26777684 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172455953 seconds)
  done (took 1.89893898 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.175072533 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148874864 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122322641 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107703587 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151592775 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084431194 seconds)
  done (took 1.671936239 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.36646002 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275594067 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.247555323 seconds)
  done (took 1.789778457 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.293874351 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246320342 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.470716871 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.321936387 seconds)
  done (took 2.352554663 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.212131092 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.137827416 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.113178184 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103379871 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.198487154 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.245035625 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141567491 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202318865 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.099333912 seconds)
  done (took 2.392766351 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.195718929 seconds)
done (took 11.191567854 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.131105513 seconds)
    (2/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.127281675 seconds)
    (3/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.120090632 seconds)
    (4/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.167680306 seconds)
    (5/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.252959864 seconds)
    (6/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.265457834 seconds)
    (7/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.125116053 seconds)
    (8/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.161552961 seconds)
    (9/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.175008341 seconds)
    (10/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.237224826 seconds)
    (11/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.214927421 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.102094402 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.14312678 seconds)
    (14/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.211847395 seconds)
    (15/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.117375296 seconds)
    (16/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.0919203 seconds)
    (17/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.122465102 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.120177441 seconds)
    (19/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.166489509 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.11538928 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.178198386 seconds)
    (22/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.135095138 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.138146764 seconds)
    (24/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.098476603 seconds)
    (25/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.191884683 seconds)
    (26/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.124273359 seconds)
    (27/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.172585787 seconds)
    (28/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.116416169 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.204577225 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.241578812 seconds)
    (31/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.11322079 seconds)
    (32/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.113169727 seconds)
    (33/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.133793492 seconds)
    (34/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.094222127 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.139250124 seconds)
    (36/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.138675861 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.092781101 seconds)
    (38/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116737791 seconds)
    (39/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.092588414 seconds)
    (40/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.236721296 seconds)
    (41/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.098329024 seconds)
    (42/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.147792462 seconds)
    (43/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.066696265 seconds)
    (44/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.255302797 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.120031884 seconds)
    (46/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.137209404 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.11091708 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.116919856 seconds)
    (49/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.148919683 seconds)
    (50/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.216311854 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134679543 seconds)
    (52/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.121075254 seconds)
    (53/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.217060474 seconds)
    (54/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.190763157 seconds)
    (55/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.240840048 seconds)
    (56/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.22463029 seconds)
    (57/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.102876531 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.119221349 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.086377704 seconds)
    (60/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.191191412 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.136855058 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.141456773 seconds)
    (63/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.093744663 seconds)
    (64/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.158470464 seconds)
    (65/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.110800272 seconds)
    (66/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.15311165 seconds)
    (67/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.180026821 seconds)
    (68/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.174147971 seconds)
    (69/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.092592531 seconds)
    (70/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.095524855 seconds)
    (71/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.121372874 seconds)
    (72/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.122571403 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.115268483 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.154476866 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.086955582 seconds)
    (76/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.118892416 seconds)
    (77/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.225166374 seconds)
    (78/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.179027425 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.115294277 seconds)
    (80/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.099744929 seconds)
    (81/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.115831421 seconds)
    (82/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.224347532 seconds)
    (83/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.200979477 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 0.111117531 seconds)
    (85/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.077888488 seconds)
    (86/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.116458332 seconds)
    (87/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.170321353 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109853122 seconds)
    (89/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.195480592 seconds)
    (90/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.182578293 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.1678174 seconds)
    (92/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.103476282 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.111676041 seconds)
    (94/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.093035114 seconds)
    (95/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.085142559 seconds)
    (96/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.130933181 seconds)
    (97/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.124283383 seconds)
    (98/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.091510958 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086363309 seconds)
    (100/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.091571529 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.224163123 seconds)
    (102/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067247936 seconds)
    (103/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.07703883 seconds)
    (104/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.092113135 seconds)
    (105/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067370541 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.120254109 seconds)
    (107/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.096995317 seconds)
    (108/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.117688939 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.111067361 seconds)
    (110/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.119695057 seconds)
    (111/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.122753195 seconds)
    (112/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092857808 seconds)
    (113/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.122235252 seconds)
    (114/309) benchmarking ("sort", Float32, false)...
    done (took 0.174755845 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.171171811 seconds)
    (116/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117316129 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.132769218 seconds)
    (118/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093647729 seconds)
    (119/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.139013161 seconds)
    (120/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.188708058 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110919288 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.187552097 seconds)
    (123/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.115167905 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.120180526 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.202041809 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 0.190105311 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.126046589 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.100187314 seconds)
    (129/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.443916989 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.110135777 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091613193 seconds)
    (132/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.089829246 seconds)
    (133/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.194428044 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118147241 seconds)
    (135/309) benchmarking ("sort", Int8, false)...
    done (took 0.18688721 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.121520673 seconds)
    (137/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.066760151 seconds)
    (138/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.198668794 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093283953 seconds)
    (140/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.090608292 seconds)
    (141/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.092517808 seconds)
    (142/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.101177262 seconds)
    (143/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067278326 seconds)
    (144/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.179994235 seconds)
    (145/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.089737022 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117404215 seconds)
    (147/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066317463 seconds)
    (148/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.112213398 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.08504449 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.141098603 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.138533412 seconds)
    (152/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.088541832 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.133884514 seconds)
    (154/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.096513654 seconds)
    (155/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.110894276 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.094297703 seconds)
    (157/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.109425032 seconds)
    (158/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.101356468 seconds)
    (159/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.136341941 seconds)
    (160/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.147980088 seconds)
    (161/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067863323 seconds)
    (162/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.0656458 seconds)
    (163/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.090841913 seconds)
    (164/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.13089885 seconds)
    (165/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.147932404 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.087948786 seconds)
    (167/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.110905126 seconds)
    (168/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137253971 seconds)
    (169/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075926038 seconds)
    (170/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.18070558 seconds)
    (171/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.091368848 seconds)
    (172/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.093210127 seconds)
    (173/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068106019 seconds)
    (174/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.194780764 seconds)
    (175/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.080946107 seconds)
    (176/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.216240568 seconds)
    (177/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.094738592 seconds)
    (178/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.12098627 seconds)
    (179/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.095987813 seconds)
    (180/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.09495224 seconds)
    (181/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.071325839 seconds)
    (182/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.182848184 seconds)
    (183/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.068367397 seconds)
    (184/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.096831654 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.128699445 seconds)
    (186/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.185283314 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096492634 seconds)
    (188/309) benchmarking ("sort", Float64, false)...
    done (took 0.171829096 seconds)
    (189/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135118007 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.13827152 seconds)
    (191/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066397177 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086139844 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.191243105 seconds)
    (194/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.096494793 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.118476193 seconds)
    (196/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.093485756 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086053371 seconds)
    (198/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.175797055 seconds)
    (199/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101413421 seconds)
    (200/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.118323778 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.139476275 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.090765389 seconds)
    (203/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.072462926 seconds)
    (204/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.11771763 seconds)
    (205/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.131530611 seconds)
    (206/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.071867507 seconds)
    (207/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.080766451 seconds)
    (208/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.106910464 seconds)
    (209/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.07132088 seconds)
    (210/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.187427061 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.100993301 seconds)
    (212/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.127630856 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.144153142 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.092191298 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.13857322 seconds)
    (216/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.073776757 seconds)
    (217/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.116149002 seconds)
    (218/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.101381908 seconds)
    (219/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.116134271 seconds)
    (220/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.093203095 seconds)
    (221/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.139256446 seconds)
    (222/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.103787021 seconds)
    (223/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.11674225 seconds)
    (224/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.072997116 seconds)
    (225/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.131268878 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.098531968 seconds)
    (227/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.123163999 seconds)
    (228/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.092856944 seconds)
    (229/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.098759342 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.090901906 seconds)
    (231/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.200404675 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.139870147 seconds)
    (233/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.184524217 seconds)
    (234/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.093170564 seconds)
    (235/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.098424571 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.093413423 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.198327588 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.143930591 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.092463047 seconds)
    (240/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.072757144 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.123247893 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.091800332 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.159925488 seconds)
    (244/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.118501176 seconds)
    (245/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.072788364 seconds)
    (246/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.119919685 seconds)
    (247/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.09563358 seconds)
    (248/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.072249829 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.173701393 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.197856201 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.14436017 seconds)
    (252/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.091819721 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.128501495 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.166362092 seconds)
    (255/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.097106899 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.092067833 seconds)
    (257/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.124544743 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.11560548 seconds)
    (259/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.096958921 seconds)
    (260/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.186012092 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096151906 seconds)
    (262/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.072849994 seconds)
    (263/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.121199394 seconds)
    (264/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.072223042 seconds)
    (265/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.096782811 seconds)
    (266/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.076122087 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.124653804 seconds)
    (268/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.092925998 seconds)
    (269/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.074523512 seconds)
    (270/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.097352945 seconds)
    (271/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.093819925 seconds)
    (272/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.11781658 seconds)
    (273/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.143532184 seconds)
    (274/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.200416575 seconds)
    (275/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.115082418 seconds)
    (276/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.117212677 seconds)
    (277/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.071097635 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.181697632 seconds)
    (279/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.083250576 seconds)
    (280/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.074365029 seconds)
    (281/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.116833696 seconds)
    (282/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.072389511 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.12564475 seconds)
    (284/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.073055918 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.116589581 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.092186441 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.141450633 seconds)
    (288/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.072614433 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.11688362 seconds)
    (290/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.07339483 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.125075002 seconds)
    (292/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.072675066 seconds)
    (293/309) benchmarking ("sort", BigInt, false)...
    done (took 0.227988513 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.117949926 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.09766668 seconds)
    (296/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.12599188 seconds)
    (297/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.098766525 seconds)
    (298/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.0983841 seconds)
    (299/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.094610695 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.163285185 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.092174658 seconds)
    (302/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.110021615 seconds)
    (303/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.072778881 seconds)
    (304/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.172389346 seconds)
    (305/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.185576986 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.086939088 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.214574336 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093685066 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141684122 seconds)
  done (took 40.678050734 seconds)
done (took 41.570643931 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.106050931 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.14418836 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.101909568 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.143937283 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.131533866 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098289225 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.126078288 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.10384846 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.130593509 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.133391981 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.103655018 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.101155219 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.101212441 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.127295116 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.103141357 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.144815373 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.131276208 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.099671335 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.126826442 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.091959336 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.127035022 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.092412947 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.1186773 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07548055 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.129351503 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.100279583 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.125107732 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.127492191 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.091786008 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.118270274 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.095909221 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.125411574 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.09249352 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.132599689 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.099031435 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.126989023 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102591398 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.129508215 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.119421229 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.093390212 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.12650541 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.091445293 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.124611708 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.100570858 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.123986799 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.097883657 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.127248119 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.105320924 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.145041889 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120780229 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.101285774 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.130662577 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.102924439 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.127015284 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.095653343 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.129061927 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.125683094 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11832121 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.127794303 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095673513 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.125858424 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.100400564 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.123965665 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.127093416 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.101585029 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.12867993 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.103831245 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.123634172 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.103081459 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.123310401 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.092572159 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.126275754 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.121530235 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.092329393 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.127618949 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.104078769 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.117348185 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.098904377 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.124638272 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.097614529 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.118256253 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095309017 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.120448219 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.099059691 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.120947197 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.075589551 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.121198449 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.098119634 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.11769563 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.102910697 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.124491868 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.099675344 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.120884182 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.104236071 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.117615332 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.123711555 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.093032025 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.118532299 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.094532202 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.122480936 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.091707736 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.121164301 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.102217072 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.119440544 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.098883753 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.130346829 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.091996992 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.124722617 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.092216357 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.119185066 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.132104795 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.102757651 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.118442704 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095584296 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.117082507 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.099822395 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.117653172 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.092980565 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.117918594 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.092425431 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.125089535 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.093081666 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.121112043 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.100643821 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.132696678 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.092826162 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.121582186 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096281227 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.118620552 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.098715441 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.118249238 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.092428335 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.119865956 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.084152913 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120994389 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.09384852 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.125044476 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095673603 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.126946606 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.120495709 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102715274 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.12310601 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.099030563 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.124912134 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.091889326 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.105898536 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095627383 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.122495966 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.094818654 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.118604344 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.094444891 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.118742875 seconds)
done (took 17.97428944 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.093041671 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.195517051 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.160443429 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.151816348 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.114319032 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.119551336 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.130032547 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126752555 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.120582503 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.152080693 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.117930918 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.141349806 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.15817592 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.093238446 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11939027 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.097638297 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.121567023 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.109991024 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.155214668 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.142361765 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.173049006 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.092321512 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.155550603 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.144734338 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.128337878 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.121859511 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.12007718 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.097363315 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.122993393 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.110621015 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.140506925 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.124097253 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.094401297 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.143151684 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.112690445 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.1287224 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.118222371 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.101402674 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.119805129 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.093429712 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.150986058 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.141524668 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.101209023 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.12576791 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.096842679 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.121754176 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.095264137 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.129129871 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.131215795 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.097892775 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.135042721 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.164623601 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.098865188 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.130974526 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.117976397 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.104945798 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.129818888 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.096299938 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.122583232 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.096697051 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.119714626 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.097293225 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.136264681 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.14962843 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.098174359 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.130551529 seconds)
  done (took 9.141698076 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.110373678 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.148195622 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.138340084 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.113232743 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.120096155 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.094542699 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.120643912 seconds)
  done (took 1.818011115 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.094314575 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.143398132 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11839971 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.144921639 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.140553988 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.134739104 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132023058 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.093875925 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.139811646 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.095767529 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.142336911 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161973055 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.096652722 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.128118578 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.14671045 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.094037298 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.146315393 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.095000192 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.124031999 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.145716209 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098030801 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.142822514 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.09687266 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.121250944 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.109123139 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.120928809 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.171710739 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100050484 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.124028984 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.097908294 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119830445 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.174676891 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.135744989 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.106764135 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.121013923 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.110346949 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.137271003 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092426263 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.138862799 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.127233986 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.11005667 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.123161757 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.096504899 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.119934302 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.099723819 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.133620318 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.096390382 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.123338873 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.09864581 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.142631672 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.096036698 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.13604979 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.122156734 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.099656372 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.123662428 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100799399 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132760017 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.096074787 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.143213386 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097313577 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.140299648 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13994742 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.109989788 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.139598183 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.097693965 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137420916 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.136814854 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.097675076 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.123229654 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.099010932 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.139460579 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.093347792 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.123989809 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.106011228 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123210513 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.146274004 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.119800159 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.124640585 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.106477083 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.122088715 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.095274361 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.123190304 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.14714232 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09923403 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122317341 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100227644 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.125506252 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.093444378 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.122009746 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.098411946 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.1201064 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.096348351 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.125096205 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.09691633 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125579395 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.140013086 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.095860534 seconds)
  done (took 12.585821015 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096613455 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.123028607 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.098595621 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.123643275 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.096334025 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.124194616 seconds)
  done (took 1.646463836 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.121731611 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.126573401 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.111504797 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.129021502 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.166908383 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.138634718 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.11175002 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.132962899 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.114888296 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.135416074 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.133076156 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.110398053 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.144215687 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.129392353 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.110621581 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.128648235 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.136993454 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.104353376 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.134440601 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103845255 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.146261334 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.129083217 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103524961 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.14170495 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.123727994 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.094644811 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127865957 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102773498 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.131013829 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124324622 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095541184 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119249731 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.122720713 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.097986021 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.13648098 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.102373397 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125415572 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.124510513 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100419056 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119241408 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.130750151 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097169814 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127745534 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096579743 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.126852133 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121712812 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093382188 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126053603 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.131998954 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094125833 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120585852 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095339673 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119225969 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.118523868 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.095846328 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123979814 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09433851 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130381656 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122880875 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095725198 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118810321 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094922426 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124974821 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119247056 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104668851 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.12039495 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121629668 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095815152 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123169298 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096363577 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119399933 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118670418 seconds)
  done (took 9.494988998 seconds)
done (took 35.649309725 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.700881397 seconds)
  done (took 1.676227001 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.734854466 seconds)
  done (took 1.712962658 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.319647693 seconds)
  done (took 18.298453641 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.521540969 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.587922194 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.816529721 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179499324 seconds)
  done (took 3.084288857 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.963611228 seconds)
  done (took 1.963966318 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.257189436 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.241909763 seconds)
  done (took 1.484861862 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.781405393 seconds)
  done (took 1.774319116 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.39636539 seconds)
  done (took 2.380560067 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.345543875 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.19426127 seconds)
  done (took 1.540384651 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.572862593 seconds)
  done (took 1.567687206 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.871881088 seconds)
  done (took 7.873898437 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.26908695 seconds)
  done (took 1.278976048 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.309318655 seconds)
  done (took 1.303645394 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.587385938 seconds)
  done (took 4.586654782 seconds)
done (took 51.505444291 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.106285615 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.134422014 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103562314 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124953144 seconds)
  done (took 1.460694968 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.107602221 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.130275572 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107440517 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.128750299 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.135784704 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.101976306 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.131185096 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.107812923 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.127252588 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.102203558 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.125770338 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120008694 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098416166 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123296245 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093975843 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124949991 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100499284 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121355856 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123943321 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095626539 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119389743 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098165418 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124439025 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.099906566 seconds)
  done (took 3.753972026 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.106649441 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.127200816 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101695567 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117919959 seconds)
  done (took 1.462799683 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.105818989 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.149305452 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.144267093 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100379042 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143750215 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.137442286 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.091954824 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.11731235 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093809453 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125372373 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.089993972 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149614114 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13778843 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.100165415 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127944559 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088162469 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117284273 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137120169 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099912994 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126051504 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.093088701 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125498107 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090696323 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140401676 seconds)
  done (took 3.838959078 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.165361442 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.1568213 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139441833 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095101384 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.156712645 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142774485 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.091257076 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141723291 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08816812 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130717426 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118680755 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132747756 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128771086 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088932999 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114133505 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.113218989 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.102485879 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129610786 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.093116071 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.146147264 seconds)
  done (took 3.486217577 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.104566749 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.126769849 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094803037 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.12476176 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.105020752 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122349407 seconds)
  done (took 1.689661632 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.096973035 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.123985012 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.097129382 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.122862144 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.099732848 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116051715 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089236643 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114774468 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090477713 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115207175 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088973625 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11446999 seconds)
  done (took 2.281207055 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.477691299 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093354364 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121624194 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112184866 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.09664893 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115581953 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103690138 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.118485645 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140965777 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089337115 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115566112 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091316537 seconds)
  done (took 2.686960614 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24483825 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134173493 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.302297524 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19551365 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158059134 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170826374 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151437551 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164480527 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.197789786 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158080205 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232803196 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19595773 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151715832 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21637092 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113095667 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144704254 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196253766 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244168628 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154617905 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203517606 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22773322 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166995167 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184878298 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153351894 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137613064 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168913417 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094670865 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131281563 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235356674 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181021233 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189344704 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161772451 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145975533 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238485426 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249630903 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194769881 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214203656 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109328192 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.170580182 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166931605 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263348632 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111585964 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233848634 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159190999 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131651233 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191768684 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168424249 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.173290097 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.149138391 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138574247 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221413393 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212165118 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191473933 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13820313 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160125175 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160386867 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.166520125 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152242605 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251712126 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197600895 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205291565 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094463304 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146204083 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191169108 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182692268 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.195491123 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.180893993 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150846076 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197750163 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187895267 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163963227 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216757838 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182699362 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1388922 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169825214 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17385612 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170251226 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258699055 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177873738 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122293433 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167986904 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15024789 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130490461 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.167663252 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1252001 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213374178 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151635464 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.135245186 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163098533 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159609836 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161112191 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199273569 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219363283 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119803061 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.112198992 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156852879 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155228673 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188950605 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139870478 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159033376 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160802562 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.103320889 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203311655 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097792966 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17679209 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.118350634 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176595414 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183792557 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126930921 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158368993 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152043576 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.125066853 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203513233 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19898282 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140443851 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106214244 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232672914 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175741697 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.15007544 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178663626 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20059034 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.142735616 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149806197 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225086742 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217692498 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141633623 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203401423 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154700543 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1360234 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133179718 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179183763 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156908267 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161105951 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106724897 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.208233262 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209425415 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125917741 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111347805 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214589278 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106944694 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132656187 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160634072 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148702222 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139496001 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145894962 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.124212539 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208549226 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178456127 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153790708 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167139353 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151879933 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25253745 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140814231 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.123004436 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146667722 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121479569 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192937639 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19652029 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132404526 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230530285 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.17188581 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15565753 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171398843 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10820702 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176772653 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130760958 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120422886 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194083354 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16706561 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162696156 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196298419 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155816236 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.180866658 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.208442894 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174627561 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173602747 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164713322 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159214209 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.138510716 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15947361 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162822202 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.097263866 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.142661407 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134389486 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15650328 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143205226 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105896072 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226229655 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16952088 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148654788 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159212287 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12213047 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178446007 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128854436 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175962731 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.203722222 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11941974 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.225224607 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193601941 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186202825 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14378132 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233059943 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093973144 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125852656 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142818198 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170831927 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106968478 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135915971 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166070464 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181220626 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208937107 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177075261 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162718542 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175774624 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190399868 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122911835 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.140633998 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211261279 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174915503 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.161442657 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13659632 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152907314 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176455083 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156598303 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25640951 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166508922 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176756563 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235472982 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149334249 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105099574 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150947532 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185117797 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153666601 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202891035 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120024969 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143425826 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160780432 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132690127 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159406521 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182068264 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16182372 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217001488 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.121945959 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213839594 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09976232 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190537272 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158059217 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16473792 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081876791 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173979208 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228603767 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147007439 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16894974 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192588919 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131425558 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.177644281 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211214705 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22022334 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110955945 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159007209 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159562252 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164178803 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172027791 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178067622 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15841883 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216330469 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129955613 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.13762478 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140656152 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14895923 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14998056 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.105754787 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14787786 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.173661864 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140354563 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186399442 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161448506 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157687295 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170073153 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149901016 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144008891 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14934111 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215920914 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17362717 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239713914 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149483147 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179347383 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204364196 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127363743 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131713981 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106898402 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176703415 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136724285 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189030317 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.147715652 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157761091 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179946543 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218862587 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112130564 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120214675 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155469719 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173735933 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164593205 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149949326 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158442028 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205260955 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.141558593 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104813353 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171019978 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157104379 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146653875 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194488381 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.1084941 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14780241 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102223208 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133079665 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164323408 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205756865 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.13657247 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.182182633 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171536423 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169107263 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164839906 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150477472 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147881399 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137412586 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229942211 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183444876 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132435906 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157755827 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17540354 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193381863 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160562036 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140194657 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228896734 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19255852 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.197579989 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142506275 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168242131 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167434277 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156844406 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184636279 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135909208 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232563606 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107293778 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223586908 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152882371 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143097574 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174523176 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.147839873 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113618669 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213533798 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1740042 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108290784 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133696138 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166108947 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203099011 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154370097 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100721421 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179837523 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126198182 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189876238 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258771718 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133969173 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154000891 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119228178 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136356091 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157765285 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158297479 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140303944 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.139720777 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229036025 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134686441 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191423694 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228103622 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169888107 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174742283 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143786837 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694449655 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.102152757 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22056339 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153299875 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204808582 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151050815 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171349522 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162309324 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168130481 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219901277 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159194905 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.202492492 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220632783 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.17758876 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131553629 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158449154 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16172297 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143755245 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152352371 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166165825 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131262829 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.152064007 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.202704351 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170346948 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.106393464 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140669241 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197224716 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155071717 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212188399 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178214617 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109909569 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169825842 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211651723 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132416441 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180447513 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204963637 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141624507 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15076915 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134369304 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.154888489 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259317951 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097891567 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22552996 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174956208 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156699548 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165735235 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147360147 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188782436 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159007809 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176183575 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145815046 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.15927401 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154638571 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137974685 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103127543 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154414768 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163976808 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148541761 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158777803 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.16279148 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191614267 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095350928 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144778459 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156560018 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186921905 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241361664 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136671212 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107630148 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162438895 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151745029 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.173596688 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17552929 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135357352 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136283114 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.135515061 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.131339 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137623312 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153212731 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128372735 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163559475 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234000765 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137248304 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.252948702 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138953652 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154388553 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088590768 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.131499302 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150221306 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146112252 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1582889 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149475088 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232299252 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.14547643 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132896373 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14880097 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098270905 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137031185 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165223907 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164910807 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177044306 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14394508 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.08132081 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158142907 seconds)
  done (took 80.656259848 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163401906 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.1306889 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147138982 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201627435 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174913109 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269393069 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208911481 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252022062 seconds)
  done (took 2.624543267 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.098189806 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145854617 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.152801446 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133164336 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091232734 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120160293 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.333370674 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.13471565 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.09052668 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.140198331 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.146960981 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.118424367 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.506858208 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.117977095 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118360203 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.082253479 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.116584414 seconds)
  done (took 3.71671216 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.466521836 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.714815184 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.476895759 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.124365395 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.124872093 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.133909302 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.761191229 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.209772779 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094232965 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.487417505 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.76947688 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.179556148 seconds)
  done (took 18.626393769 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.10488556 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121535947 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107296991 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.135537058 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096979478 seconds)
  done (took 1.65727411 seconds)
done (took 128.934509604 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.109113181 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.413538162 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071951742 seconds)
  done (took 1.608962815 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.112480536 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136930805 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108366465 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136291938 seconds)
  done (took 1.585076122 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.103039445 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127256234 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109707552 seconds)
  done (took 1.426524669 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.325233056 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.191413751 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.142857045 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.112268507 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129743129 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102657863 seconds)
  done (took 1.442063893 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.10277718 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.1279342 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097943298 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130430238 seconds)
  done (took 1.555164636 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.101956362 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.077731814 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.10699583 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075246132 seconds)
  done (took 1.456121642 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.119609927 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132957626 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104017173 seconds)
  done (took 1.453770605 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.139233198 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.145255419 seconds)
  done (took 1.384045423 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.112717909 seconds)
  done (took 1.206197879 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.124360102 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169731586 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.190731859 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.16498791 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.229103651 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.16568189 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141748293 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115087241 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.130848243 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.144055968 seconds)
  done (took 2.677677652 seconds)
done (took 17.654819797 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.110266224 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.522780442 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413823455 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116769897 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.724353088 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379625252 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.075695261 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146939695 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166421886 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093165609 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139059578 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.69938828 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.002673389 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.47229325 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.989913564 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.378085399 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.706789836 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092204681 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11968893 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09386437 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.060067091 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091808621 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122079824 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093146413 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704112626 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426019433 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094580791 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.377687796 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092011835 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126505315 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.410860487 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094480833 seconds)
  done (took 17.231745807 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.100996932 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174890301 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098312203 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137626337 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123786962 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094491521 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125290572 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093838152 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179536031 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122591909 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11203321 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121768296 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126552637 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094960614 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143650983 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092641915 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125365332 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120370781 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094048746 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123014976 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112300258 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.12158497 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093907554 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121639289 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09372048 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136297471 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123709431 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.09226711 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121186714 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098587027 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128260739 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09516552 seconds)
  done (took 4.840903535 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146640658 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183162653 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.1318587 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127023678 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.17491191 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123859305 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199357079 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147355196 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15379762 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124471325 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140040752 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093132336 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156800558 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123960997 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114697795 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121530753 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096333534 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12218459 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092228326 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123007259 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140379056 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092539184 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122942996 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09375409 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122708595 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136244759 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094893485 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121577376 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092179888 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127468087 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100743983 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124003774 seconds)
  done (took 5.171326998 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.103567472 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128321362 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109073107 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138564109 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096281253 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12588193 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.09786869 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124909846 seconds)
  done (took 2.027825418 seconds)
done (took 30.371741332 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110394185 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.122718263 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.098735301 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134583193 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.096816853 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131748163 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091307974 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.127917535 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.099514747 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.126507227 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.129213157 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092032393 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123395872 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091792934 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.128272353 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093266989 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132491579 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.096539158 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133525808 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133036715 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094769875 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.129702743 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.099417461 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132828777 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103263587 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133367767 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.133860179 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099058882 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123967872 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095072863 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124556423 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103000533 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.12235856 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.102816715 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123405832 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.09257703 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.121657657 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093108816 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133017802 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.129582869 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.095503032 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.129465731 seconds)
  done (took 5.909375966 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.11554245 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.14606722 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104829458 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.085813911 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116856761 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081503551 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138531994 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080786025 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111678508 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108310178 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.080695773 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106618294 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078571689 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102681994 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076815799 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075889837 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109271781 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076603394 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076737074 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106981431 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079570066 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073437363 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107893141 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079571524 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.104427558 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081848906 seconds)
  done (took 3.616937954 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.107040345 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.139252403 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11219154 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184049594 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161143793 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100757726 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132442046 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140739647 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108465479 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121543835 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096182251 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150671491 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111307517 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128630626 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091909821 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137295303 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136346767 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093555346 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128724829 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113949347 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.13868465 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101903911 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143118803 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133483288 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091083782 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12333609 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096266731 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.13559641 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.100310365 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131886045 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.125980363 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.096215228 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123208303 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.103864865 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125763636 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094476462 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14143401 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131433246 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.102085941 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.12267059 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096545931 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121940278 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11332159 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.166688884 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.120795616 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.099916806 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129214354 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104129247 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121515302 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11087549 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131557864 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091859866 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126755973 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092255147 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122509986 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135461383 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.098261804 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.123519826 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102151304 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125186048 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105963098 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125960091 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108563428 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.128234408 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.130025912 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.092332067 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.122198493 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.09189138 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144579685 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094378146 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164230947 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.130609198 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.094011266 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.131152609 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.100230991 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128240134 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092463127 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138188771 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.14003524 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.09980054 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.130472062 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.096258979 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.124601603 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.110407958 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124697411 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094161071 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123258728 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.098833696 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124491965 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093677029 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136079753 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.12187539 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.096318347 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.14014547 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.092882974 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.12414002 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099350762 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127766555 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092126784 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13510227 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.128341643 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.094217714 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.132889865 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.092753732 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125758374 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102961165 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127197831 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.121665383 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.097956969 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.128478382 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.094520604 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123679805 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.096123583 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.124826704 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.104025681 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130391273 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.09787023 seconds)
  done (took 14.886936768 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.23822783 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.218245054 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.126031099 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.209847203 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.105416829 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.135015471 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212665268 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156867914 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.094587133 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.124059268 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.094689135 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.162519585 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.156808757 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.169288263 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.103364929 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.122870993 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112565044 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165486184 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.213390569 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.206606901 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144202393 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.131467523 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.094515489 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.123815902 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.095616207 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132792746 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.108648109 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.132979847 seconds)
  done (took 5.224671266 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.115364063 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.160708652 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099050538 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145289354 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149387506 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093030344 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127759311 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094398741 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134831029 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135881803 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093198038 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129790013 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.101275064 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132275827 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123454422 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102064333 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133703501 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.096324927 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127290481 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096881208 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130082268 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.131834593 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.097004487 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122447604 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.100017886 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121652227 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086974955 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141610219 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124566428 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115034452 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121168923 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099306105 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133633721 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093242443 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124107487 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094973246 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125968188 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095045189 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124138249 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091945887 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121098153 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077854638 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121807397 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136578652 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100154281 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109997035 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.099528618 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128466039 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.098880488 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120775095 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096507134 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12588694 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096980629 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131419868 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098083202 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.128759507 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096417095 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116506133 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100790379 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126885981 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084801199 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121876922 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098390089 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118161635 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101759516 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127589972 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091518165 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124589372 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097465157 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128681641 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.125017969 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.095649895 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.121200067 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.095736155 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.128338445 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.099285775 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.12722107 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.094147671 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122746854 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093484093 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.106234641 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.093955781 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.104387113 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.096832989 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.121860009 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.093170191 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.125812874 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.101089878 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137856758 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096189975 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.12963197 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.123695283 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.092225741 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.126796443 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.084753244 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.126211892 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.10961483 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140634849 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093423216 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122642099 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.137830078 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.099740963 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.123067821 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077414611 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.131085415 seconds)
  done (took 13.035119267 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.12439512 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.149779387 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.096166936 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.13837292 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.150848631 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.117316223 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.131623715 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.100435422 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.125516351 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.1103678 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.12472519 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.102959018 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.127139528 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.131968312 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.117517227 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.131793169 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.096727897 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.134050846 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.101975484 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.159328658 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.137925484 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.108177079 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.134812185 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.095013113 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128318921 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.107515102 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.150942816 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.134502697 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.103463945 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.138637237 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.104875097 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.150012126 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.109259815 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.128670671 seconds)
  done (took 5.342192276 seconds)
done (took 49.119239628 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.230734048 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.440657219 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.205312648 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.116886424 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.21527169 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.204421193 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.217240912 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.210540189 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.789220738 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.203890143 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.474589001 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.885642689 seconds)
done (took 60.336724051 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.309539705 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.345230071 seconds)
    (2/2) benchmarking "String"...
    done (took 1.477261162 seconds)
  done (took 3.959380912 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.574846837 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.173307147 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.472817134 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.212341294 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.207821512 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.495019466 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.89492851 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.575505907 seconds)
  done (took 28.170909702 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.217225904 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.604804116 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.924333391 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.948453928 seconds)
  done (took 18.832191135 seconds)
done (took 60.980894385 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.214123136 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.256978607 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.237022221 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.187304971 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.324793461 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.234519818 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.545421729 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.462226771 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.211179745 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.188827551 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.228609196 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.230348242 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.22310277 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.559200824 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.217881527 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.214414948 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.225707423 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.752119257 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.626393329 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.220858565 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.226356635 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.247080295 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.244083379 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.214106539 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.256600842 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.222432641 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.208742138 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.231592192 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.863230723 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.213216561 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.218831068 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.761247086 seconds)
  done (took 192.407830383 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.216039113 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.21983836 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.327029363 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.258356333 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.677480411 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.412138689 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.34232291 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.743952482 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.23322788 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.242557106 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.479206379 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.21641231 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.547149649 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.19964884 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.222906888 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.321709734 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.525922798 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.544548411 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.236352693 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.486762159 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.217116726 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.4942035 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.400048808 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.42694969 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.272693438 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.279692444 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.24107703 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.22013561 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.419384893 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.449259637 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.237461945 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.257977774 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.847992985 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.075981992 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.224796254 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.228199969 seconds)
  done (took 150.888271808 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.519997719 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.216768769 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.216574718 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.216566538 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.250222341 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.217099807 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.810246446 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.792388798 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.715627881 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.763907174 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.280214561 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.538923858 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.216941499 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.314672467 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.224966332 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.215305288 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.231789396 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.259772135 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.217441374 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.217635115 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.81204641 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.229978534 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.31763432 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.22379801 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.215820569 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.252504693 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.608177268 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.212113825 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.252375425 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.218443174 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.545511376 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.262312482 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.214506135 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.586368443 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.414487578 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.330699845 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.214371192 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.252572352 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.218222238 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.495509829 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.213279502 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.21957042 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.221688468 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.871232072 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.219873985 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.812902075 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.220439224 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.184336314 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.218745108 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.218793236 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.506268554 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.827603133 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.236396173 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.218462424 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.220954209 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.21877121 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.219515123 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.253298022 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.529005213 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.321128888 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.234346293 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.220344121 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.223898801 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.255326381 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.219598434 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.290979426 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.220203707 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.684317461 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.276957269 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.444394392 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.816367267 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.220361761 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.317564833 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337748031 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.215018504 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.220074138 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.222512099 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.221354591 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.330212595 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.21491716 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.221524169 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.648716389 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.221359618 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.22285136 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.282338147 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.318465428 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.215841138 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.58659703 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.222415611 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.220785086 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.027590951 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.316871065 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.21708775 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.222237659 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.222626353 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.651198854 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.79358819 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.216737883 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.456469582 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.222870986 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.537692263 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.223039935 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.666590611 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.785410324 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.875209365 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.223070544 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.333596759 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.222221598 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.225532488 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.221852691 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.251645901 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.239597426 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.280801162 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.218304681 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.624444098 seconds)
  done (took 348.52075123 seconds)
done (took 694.474711597 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.917047335 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.868007131 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.003694527 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.883501275 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.864064273 seconds)
  done (took 10.683584404 seconds)
done (took 11.828607655 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.417056863 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.412193462 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.286506104 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.418113005 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253492476 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.43542114 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.392479515 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.244746458 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.327991202 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.306440624 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.327021308 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.276402184 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.252215423 seconds)
  done (took 18.497878557 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.541941568 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.528874704 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.283170211 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.547184878 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.258863207 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.545682961 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.4196568 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.430691311 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.438259764 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.256359723 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.239234764 seconds)
  done (took 16.641237703 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.548630557 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.541434582 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.286793318 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.554850267 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.261702618 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.547399572 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.425750235 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.441161335 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.439043867 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.257776908 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.238717221 seconds)
  done (took 16.694162691 seconds)
done (took 52.98111639 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.233306241 seconds)
  done (took 2.38368515 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.270060214 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.432210904 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.251576843 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.240794055 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.23542582 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.234879682 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.239928916 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.235954001 seconds)
  done (took 11.29303288 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.230341248 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.232408938 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.235117507 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.233846 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.231695612 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.233892994 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.235028171 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.231066707 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.235731889 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.234077859 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.232850308 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.235549955 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.233545728 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.232881477 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.236869723 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.235472696 seconds)
  done (took 20.893077683 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.234786401 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.231928306 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.233694602 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.234173968 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.234532583 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.233617332 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.235221302 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.234068405 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.233288713 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.234272123 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.235255055 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.233396166 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.236486276 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.233840616 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.235347899 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.235098633 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.235796277 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.23371703 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.237906984 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.233875859 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.234526347 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.233316676 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.234042441 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.235265566 seconds)
  done (took 30.782562038 seconds)
done (took 66.500526867 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.392303321 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.933868179 seconds)
  done (took 9.478913608 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.237059243 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.237880947 seconds)
  done (took 3.627720679 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.237107014 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.236736937 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.237784713 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.236803425 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.237329008 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.236705626 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.235965655 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.236635404 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.236614343 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.235951016 seconds)
  done (took 13.521229495 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.23612626 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.236817608 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.234878474 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.2379014 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.236911624 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.234144797 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.238183609 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.238244186 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.237478365 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.235158951 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.237712939 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.234867738 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.236551012 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.235274029 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.237994277 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.234693374 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.234566485 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.232964767 seconds)
  done (took 23.405692653 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.238386503 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.237151069 seconds)
  done (took 3.629513588 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.235300566 seconds)
    (2/7) benchmarking "second"...
    done (took 1.233975991 seconds)
    (3/7) benchmarking "month"...
    done (took 1.232806659 seconds)
    (4/7) benchmarking "year"...
    done (took 1.225524972 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.226331697 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.225505656 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.226938554 seconds)
  done (took 9.758774046 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.225575491 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.404174146 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.489293281 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.87143275 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.229087941 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.233875625 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.08022524 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.231506569 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.231802256 seconds)
  done (took 14.147349277 seconds)
done (took 78.719987843 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.252029779 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.236389225 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.420466415 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.217853463 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.251666401 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.562102488 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.237922919 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.353157997 seconds)
done (took 37.675459225 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.222023006 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.985088928 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.993081038 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.221658679 seconds)
  done (took 11.34538445 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.212820596 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.173352939 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.202093096 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.255411962 seconds)
  done (took 17.994516854 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.280750165 seconds)
    (2/2) benchmarking "read"...
    done (took 1.558271408 seconds)
  done (took 4.986957802 seconds)
done (took 41.69546277 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229432508 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.227738749 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.226239987 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.227466721 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.229527089 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.220793158 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.226988144 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.228542647 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.230721327 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.22740395 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.230514255 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.230512315 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.22995487 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228413735 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226348181 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225443556 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225268242 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.229767866 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.228082195 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225551682 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225102086 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228461092 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.229909449 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.226010608 seconds)
  done (took 30.615008368 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.227603015 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.225581886 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.22647637 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.226085818 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.221524564 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.228151709 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.225717027 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.224811282 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.227071791 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.228198998 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228150114 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.223284549 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.227461251 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.222627918 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230205535 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.222964019 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.230254696 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227739691 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232033992 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.22800746 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.230682805 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227463675 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.229859889 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227173952 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.224142934 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226814154 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.227687317 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.229562945 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232092947 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.225958318 seconds)
  done (took 37.965826183 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.232514937 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.234719829 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.229785679 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.2322645 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.232893995 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.231199616 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.230854832 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.230828485 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.232066587 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.231512024 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.229620691 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.230557972 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.233336957 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.232790085 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.227975257 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.22934061 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.22747112 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.231306877 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.228458913 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.231286321 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.233614571 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.231085447 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.235630302 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.232528806 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.230476535 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.233813778 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.229798318 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.231505788 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.233575565 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.23023393 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.231527448 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.230746162 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.231857019 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.236435948 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.228735119 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.231314898 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.235770625 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.241230286 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.232616726 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.229662233 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.233300024 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.231869889 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.235987417 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.233566919 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.234889589 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.230935979 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.23310962 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.232398173 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.233780707 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.232114659 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.234981998 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.23053808 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.231929742 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.230224982 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.23413489 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.233461815 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.23423826 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.234159471 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.233733689 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.233380876 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.232973352 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.232521975 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.235418091 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.235132179 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.232020411 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.234139524 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.232463668 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.232498086 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.229319269 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.231606218 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.230436856 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.235558242 seconds)
  done (took 89.884004325 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.233641398 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.233844155 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.230210597 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.232845699 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.230683547 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.235756166 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.231906066 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234479262 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232424654 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.230046046 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233606663 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.235012541 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233430959 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.236517454 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233270219 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.232714935 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.237971647 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.231322319 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.233528238 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.234219214 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233804108 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.231720473 seconds)
  done (took 28.290417386 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234214346 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.234299426 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.235266931 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.231940675 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.237593377 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.236672857 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.235538566 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.236073355 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236528063 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234398659 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237589349 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23441144 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.233437378 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236259345 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232577126 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.234479995 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237933757 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.233009636 seconds)
  done (took 23.390732645 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.236812547 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.234473254 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.237035345 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.235561008 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.235505167 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.233466619 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234587745 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.237379096 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.238350541 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.237731217 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.236279214 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234974925 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.235677066 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231815593 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234064858 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.231695366 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.23931706 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238600944 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237741042 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234749084 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.236172736 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.239711272 seconds)
  done (took 28.352605878 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235797434 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.235044982 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.234213991 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.23587541 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.23520846 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.236600695 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.234061579 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.234444287 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.238837657 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.237934719 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235714353 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.242013469 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.235622493 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.237451107 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.235375812 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.236302153 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.241234719 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.238652761 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.239041105 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.239735262 seconds)
  done (took 25.899170134 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.237391976 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.239937003 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.240596624 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.242652435 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239449541 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.241038266 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241057347 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.237500227 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.240801517 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.240159638 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.241447357 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.240449446 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.240193819 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.242420906 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.243052811 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.238145616 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.238962831 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.241211655 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.241014605 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239789985 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.242615999 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.24606804 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.239495219 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.24282255 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.241115572 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.243689103 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239939928 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.241561979 seconds)
  done (took 35.905978836 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.240097321 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.236449327 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.236974885 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.239562808 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.238116475 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.241715707 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.242295239 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.239650269 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.24031643 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.23829505 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.241486046 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.239998949 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.244562487 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.242365889 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.24261941 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.242142343 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239488349 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.244604315 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.239985194 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241891172 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.238547326 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242287096 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.243455043 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.238340139 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238385152 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.242785434 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.241420026 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.2420962 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.243618786 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.242556613 seconds)
  done (took 38.389580144 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.25938602 seconds)
    (2/2) benchmarking "in"...
    done (took 1.259121862 seconds)
  done (took 3.683020964 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.238935863 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242108781 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.245681793 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.240060522 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.240261124 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.246249147 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.245515001 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.24151114 seconds)
  done (took 11.101823996 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.244356772 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.245991437 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.244642645 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.244888465 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.248454256 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.249774986 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252103379 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.26853463 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.244413162 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.247852487 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.254756915 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.252440801 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.250781025 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.248156476 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.24799595 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.250131931 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.247384621 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.244625233 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.241080301 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.247872056 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.248254797 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.249394943 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.249203546 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.244951941 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.245843933 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.255274428 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.266120481 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.244333653 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247849098 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.251993545 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.244116167 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.240151278 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.247502581 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.248105074 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.245929487 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.252770737 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.253946352 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.266456043 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.256236467 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269657037 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247513167 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.244777907 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.249207898 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.251339118 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.254625867 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.247990065 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.249644767 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.247726558 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.248494315 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.250570629 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.252829233 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248297803 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.24794129 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.256116409 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.251706837 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25793315 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.272071105 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.24942536 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.257040025 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.259096667 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.283534228 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.273923611 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.252993429 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.250010656 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.259301451 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.27297955 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257770193 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.273257673 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.247293981 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.249815066 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.257280234 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.286434776 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.276358035 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.252226657 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253408218 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.251652491 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250258482 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.251615112 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258271723 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.276712785 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.254134361 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.251376559 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.263391516 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.272546861 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.252522968 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.252723439 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.252477376 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.253381499 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.252890716 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262817938 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.278709192 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.253783127 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.253696469 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.253485808 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.254783725 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.256795591 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.251820212 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.256706497 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.250180391 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.254419713 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250605729 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.255937981 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.260704624 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.251583355 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.253553401 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.260430967 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.276297123 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254771493 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.262658528 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.257130836 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.256758342 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.25929996 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.259519198 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.256738578 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261908473 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.263669265 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.259182966 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.260502504 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.255587775 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.256677305 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.270355361 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.283269699 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.255834276 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.257771678 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.261381845 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.26627751 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255122203 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.264049019 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.257229157 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.253987141 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.258205205 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.257851859 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.261167413 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.262198216 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.260226186 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.257679638 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.255376132 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.258038014 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.257735464 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.256710332 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.256732317 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.260890019 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.262455505 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.258645042 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.256320948 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.258270152 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.264252676 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.277989426 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.2578713 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.259567154 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.257759205 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260085513 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.258796683 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.262839745 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.25705429 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.263171392 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.257315618 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.258269252 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258599773 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.261622523 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.258075187 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.258507159 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.261389818 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.263461049 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.265316152 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.258788141 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.261940254 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.260239917 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.258854395 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.259582842 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.261401506 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.262613273 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.261491938 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.263376239 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.262371591 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.263729206 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.262139398 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.264032401 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.259415009 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262761667 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.262951009 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.267291113 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.259885241 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.268996768 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.277681448 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.263728981 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.263900838 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.265103375 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.263276585 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.263802837 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.264795203 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.269646831 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.276348929 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.28870173 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.26533153 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.265370733 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.266652679 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.269029044 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.269173843 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.2608872 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.266281367 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265389304 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.26556462 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264527803 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.267697808 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.265845318 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.265142682 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.267221245 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.266467965 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.260504795 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.266600362 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.267079673 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264108148 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.26534439 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26704559 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265605755 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.266655904 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.264580409 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.265191871 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.268146975 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.263982258 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.266999746 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.272362345 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.264474055 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267699289 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.26798303 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.266657745 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.266254415 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.267891292 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267876774 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.266669344 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272491554 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.287455277 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.268076972 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27357412 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.28706802 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.268311906 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.270018246 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.268255888 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.263902399 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.26912807 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.272160475 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.267210249 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.267493262 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.266647127 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267423517 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.269372296 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.273329197 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.283847122 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.267939395 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.26845869 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.272096276 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.26760156 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.268327635 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.268636168 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.268471163 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.269839575 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.269186283 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.269442873 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269895721 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.269152631 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.269701087 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.269549743 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272821311 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.276187065 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.272996153 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.271156305 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.272749631 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.271131961 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.273292144 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.270291461 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.270249292 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.270458265 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.280504251 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.292411133 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.27472719 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.289091492 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.273195363 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276991689 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.289838666 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.273394994 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.271401273 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.271954904 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.269200984 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.270267283 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.27047292 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273297114 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.270531673 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.271791415 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.282225885 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.270679832 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.272242771 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.268318062 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.272394427 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.271025559 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.272389631 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.269954589 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.278203376 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.270666882 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.26875056 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.266601283 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.268401792 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.275570586 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.287217332 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.269918361 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.274295815 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.267320179 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.264074729 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.267991231 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.270005972 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.273157391 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.276125197 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.274712727 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.270735875 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.260004166 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.267315123 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.25642437 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.261724063 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.264011303 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.258303434 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.263017606 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.262942835 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.257803371 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266726571 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.27811213 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.262059991 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.264543722 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260335101 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.258570231 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.262419679 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.261222108 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257208459 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.260062981 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.269788 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.279796066 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.265523661 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266412392 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.259161399 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.262913889 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.259558497 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.260725755 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.26245593 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.260158507 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.262187748 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.269386035 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.261394927 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.26230763 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.261923009 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.261507802 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.260401172 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.264116253 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.271506287 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.285191386 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.265655269 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.262872222 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.270231394 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.279566399 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269955689 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.282540476 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.263015669 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.268431286 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.260970388 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.26497431 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.259647803 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.262006311 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.260930881 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.260750543 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.267858848 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.264030642 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.264445929 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.26182862 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.26504915 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.262348701 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.2726311 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282432795 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.263095139 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268406498 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.259824284 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.263968059 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.267021625 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.26264104 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.261470448 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.265392342 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.27359743 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.270667543 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.262296183 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.262450334 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263900868 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262988083 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.26286994 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.263055431 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.264269196 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.263816663 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.262459545 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.262051854 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.265947355 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.260868781 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.264997904 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.265181336 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.265284874 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.274669194 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.283573279 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.264071621 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264871222 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.264540813 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.263320476 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.266405152 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.26938611 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.26689638 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266107264 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.265424246 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.272106101 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.269743358 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.266001551 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.264145011 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.265812121 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.263694747 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.263698976 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264728963 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.263057796 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.264473047 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.264867818 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.263956674 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.265428573 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.2634911 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.264449138 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.265415341 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265516268 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.268412854 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.271296841 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265188904 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.263179884 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.266288638 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266117013 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.264229103 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.264662665 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.272605909 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.286713171 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.275161554 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.271882391 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.269051228 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.265840327 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.268923365 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.273477608 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.264395675 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.266911682 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.266311641 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.27002173 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.267465464 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.268209113 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264611014 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.272598497 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.285422198 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.266217307 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.275312101 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.289648992 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26464966 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.266295804 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.268988139 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.265794554 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.263425272 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.266327912 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.265357434 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274456074 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.285630475 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266969059 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267766536 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.262226117 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.26735203 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269668319 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26914018 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.269774557 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.262642069 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.266244091 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.265133135 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266187998 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.26330984 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.265547178 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.271493139 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.273285374 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.272871662 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.262426377 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267651558 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.26589359 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.267684405 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266861803 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.268057648 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.263591966 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.263402472 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.266536138 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.265963499 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.266565437 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.269475096 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.266448954 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.27025531 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.266056722 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266305105 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.268550738 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.277122923 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.274780042 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.263612061 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.265734922 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.268143256 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.267913533 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.266444526 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.266087375 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.265893553 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.267920955 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.26706113 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.267433386 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.268250969 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.269459002 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281647903 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.284766612 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.26640204 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.266389502 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271358213 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.266362388 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.264859329 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.26657644 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.268168264 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.27020446 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.274725706 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.266707565 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273434556 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.284400935 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.269812012 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.269573208 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.269445364 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.273743819 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.269133225 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267679143 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.267137055 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.272764284 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.283430005 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267819133 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.277174733 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.297283567 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.287048148 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.269784204 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.268131921 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267548951 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.267085705 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.269296124 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.267483514 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.267815083 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.268217554 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.268481916 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.26984635 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.274016101 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.269883466 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.268447053 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.268097613 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.268561326 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.2700159 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.266707197 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.268764838 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.268696119 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.269607156 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.269519729 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.268783004 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.269037475 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.280861886 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.295399784 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.269317184 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.270472759 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.266423959 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.2729867 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.273061573 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280513886 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.277304658 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.269143491 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.270760004 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.271170278 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270406555 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.268517704 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.269166267 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.270530995 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.269526893 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.267604062 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.282231376 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.295903935 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.274146309 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.270735358 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.271868439 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.270873502 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27149788 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.271342461 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.270320012 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.271168493 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.271565432 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.273866288 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.271320998 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.271267347 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.275501346 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.279373963 seconds)
  done (took 755.300475747 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.269345988 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269059557 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.269510066 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.269986031 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269922429 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.269937848 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270268583 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.268774348 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.269077132 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.26940567 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.269682432 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269337817 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.270939872 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.27049316 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269378853 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.270798618 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.270071701 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.271522494 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.269951496 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272090805 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.271032853 seconds)
  done (took 27.860568894 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.274327548 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.270374935 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.271573112 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.273525375 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.270999974 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.273376055 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.27147097 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273324921 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.273573381 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271426239 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.273277444 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273651461 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.271431399 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.271718178 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270906353 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.274274446 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.274307505 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.271868531 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.273937076 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.271704595 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.272663284 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.27128333 seconds)
  done (took 29.185354772 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.275614987 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.273423361 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.273231212 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.272427817 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.274409763 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.271625587 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.273197441 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.274474698 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.274710441 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.274987724 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.273681917 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.275901621 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.281708798 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.279127605 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.277016136 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.27408054 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.419079752 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.274811561 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.275082565 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.274893227 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.272389477 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.279482488 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.292723222 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.272455969 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.27469987 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.274734927 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.276425572 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.274924467 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.275386158 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.277298323 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.278417467 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.275665105 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.275725858 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.27468571 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.274876152 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.276608021 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.279368616 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.277627643 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.273723731 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.276354449 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.286406047 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.298447229 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.275095766 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.281733208 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.297851434 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.276470462 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.27939197 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.283516715 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.274602903 seconds)
  done (took 63.923624774 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.276686577 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.276454995 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.27445198 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.275726475 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.276693153 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.276635081 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.27589051 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.280413776 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.272987308 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.27363725 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.275068979 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.273612735 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.273569574 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.275829747 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.2778902 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.273113454 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.273541201 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.27397128 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.274040499 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.273442101 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.273851117 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.275361457 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.278292232 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.273965281 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.275562199 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.273344502 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.273637031 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.277005784 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.273331598 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.274490989 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.277983954 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.274749334 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.277074054 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.273591232 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.273108135 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.275764085 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.276052344 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.273259185 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.277017979 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.273028287 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.276889464 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.274647876 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.276526875 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.27669454 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.272540662 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.273446528 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.274058882 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.273670296 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.27345928 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.275657799 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.275919021 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.273170552 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.275749335 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.273249857 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.276478428 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.276534504 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.272509991 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.273189553 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.276621039 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.273809403 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.273774557 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.276592248 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.274282533 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.276547783 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.27641419 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.274581641 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.273506727 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.275761403 seconds)
  done (took 87.899622309 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27709098 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.276400728 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275459324 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275519696 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.277077704 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.27544147 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.275230741 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.276455047 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.277607608 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.275082574 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.276834861 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.275894668 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.275976642 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.275700319 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.276239365 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.277114434 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.276782056 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.275434437 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.274987009 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275469506 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.275240353 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.274499665 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.274930323 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.275442621 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.278210274 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.273528042 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.272839704 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.274179641 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275008934 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.272673503 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.27513379 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.27527626 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.271815719 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.271554858 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.272802901 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.272641035 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.273904593 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.272491974 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.274070951 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.271599741 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.275153509 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.270670056 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.271619802 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.271921358 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.272075951 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.270673948 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.272474045 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.274176595 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.272285583 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.271975217 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.272419038 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.270099149 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271236965 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.271700551 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.270890857 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.273011926 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271104918 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.27275428 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.270466062 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.270978557 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.270407454 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.271590201 seconds)
  done (took 80.175496595 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.273484832 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.273094237 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.269861014 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.271849486 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.275844198 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.270957266 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.276129822 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.274187777 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.276111133 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.276807407 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274561637 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.273671987 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27373029 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27395041 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.273838591 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272118121 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.27399104 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.270749154 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.273573083 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.268819518 seconds)
  done (took 26.655233634 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.26948701 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.276788273 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.27281165 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.274256057 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.273616349 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.268247692 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.275286732 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275380395 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272100842 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272517068 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.276737717 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.272897403 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272756933 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.26947156 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.276591417 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.27082633 seconds)
  done (took 21.555405636 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.273548781 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.270750271 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.276424195 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.275836227 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.273005847 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.275023787 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.275493053 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.275195136 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.27064715 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.274851755 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.277076688 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.271547339 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.271814766 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.276300271 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.269799208 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.27318847 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.273560452 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.271041052 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.27539748 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.274963257 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.274760167 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.270677563 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.276177921 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.277019043 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.271271669 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.274932023 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.272527662 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.274391631 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.274401232 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.276570665 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.272956629 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.273363114 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.279127981 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.273699658 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.275073875 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.274767958 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.273791898 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.276446316 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.276873516 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.276788283 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.277276928 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.276541339 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.273930134 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.276425662 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.271028847 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.278462011 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.27289261 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.274174898 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.272659722 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.276604597 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.276835879 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.274291024 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.278564285 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.280061921 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.272877317 seconds)
  done (took 71.295098154 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.278615957 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.275421576 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.276294752 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.275984459 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.2769933 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.274249769 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.276198237 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.272417993 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.276091474 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.27837588 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.275312 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.276206345 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.272641345 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.280108463 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.275063272 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.275636105 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.277342706 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.27577043 seconds)
  done (took 24.160389346 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.275931665 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.277874963 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.278664387 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.2718391 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.27310535 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.278013882 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.27518027 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.279483573 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275490254 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.277009202 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272174031 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.278208077 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281091814 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.277725335 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.279836517 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276009772 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.280366206 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.280454258 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.275999093 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.274304891 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.279600632 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.275584317 seconds)
  done (took 29.28521023 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.279690925 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.275132245 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.274160976 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.292508288 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.293175627 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.296587423 seconds)
  done (took 8.903646202 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282557346 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280883216 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275557886 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276435926 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277743662 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277944432 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274757721 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278021683 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27804153 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275209767 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275033723 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276359856 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277372841 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274341219 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281671442 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280821708 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276238449 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27674607 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276117323 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281196092 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277088083 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279087757 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277303282 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279961279 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27922512 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274682943 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278183134 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278355756 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278234966 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280556225 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279690995 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275056422 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280817639 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281284194 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27991334 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279758832 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277832708 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281990277 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28342048 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277774293 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279360239 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279425508 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278521628 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278642383 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280072729 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280246344 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27711316 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279924394 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28021126 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279963516 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281536618 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281331757 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282758685 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281840385 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283897371 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279789674 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278121537 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281152093 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280177806 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279274129 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28050403 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280864405 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277452333 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278535244 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28491865 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282128024 seconds)
  done (took 85.64050979 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282070677 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.280941513 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278629783 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279585579 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283565584 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277806662 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281080366 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279391895 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281191459 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281443203 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281023332 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278725609 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280054196 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284212871 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282164536 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280939605 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279810433 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281612607 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281718798 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284834465 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280889347 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283064968 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281738954 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283935865 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279357328 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284502366 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285967981 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282873405 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280226505 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283330105 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278587338 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28315295 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282222559 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.286359419 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284609524 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286374926 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285263351 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285101637 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283322737 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289204935 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283203339 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289504953 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284049962 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286198404 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284513158 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285716799 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285841835 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285599954 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286995906 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289949659 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286839515 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283746773 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284287552 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285446856 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286559084 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283638937 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284735282 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288214338 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289041691 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289888186 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287400215 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287723179 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2906682 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288389542 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287363829 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286706467 seconds)
  done (took 85.940494593 seconds)
done (took 1752.406809942 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.310452436 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.361502715 seconds)
  done (took 13.875110614 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.45024497 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.404270562 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.289473458 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.310027566 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.289890385 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.290044961 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.303315342 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.289540784 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.288138905 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.289208717 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.28849571 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.474426478 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.282494605 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.289962607 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.290449685 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.3823428 seconds)
  done (took 42.419065284 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.317243464 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.295726213 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.398570897 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.315161107 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.315150835 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.466243091 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.34838759 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.300432692 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.450943536 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.336903802 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.735401909 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.316994617 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.295264861 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.321373137 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.312176513 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.471441349 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.531535352 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.746394593 seconds)
  done (took 29.480873367 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.703003471 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.307355451 seconds)
  done (took 9.215504783 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.327257676 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.317732651 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.310339935 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.310152868 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.286188819 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.311418756 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.324406068 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.315532218 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.323122643 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.298194924 seconds)
  done (took 64.3321012 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.314833342 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.292937388 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.295746025 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.294031639 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.287810981 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.298881801 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.294470968 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.289704991 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.62938428 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.413768224 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.318447945 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.302800712 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.310523787 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.297080442 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.292916493 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.331385581 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.430564154 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.310351468 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.292273947 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.304033605 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.294778425 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.378055751 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.332028491 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.298628058 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.409053071 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.650751507 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.30436152 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.302944019 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.411251794 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.31264579 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.295571181 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.295378272 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.297079029 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.860474005 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.815347411 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.309214388 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.334372191 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.305775101 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.294004891 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.407309776 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.313484892 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.303229026 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.288498943 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.803030135 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.450696527 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.407146968 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.499008412 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.304258256 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.299334824 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.357207133 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.300039472 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.298969835 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.324578966 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.047773394 seconds)
  done (took 108.718103494 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.336984074 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.778406751 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.459097348 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.316350806 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.060008649 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.97218906 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.310176952 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.554323365 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.328944972 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.290815628 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.630329499 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.775635918 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.31719567 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.291951009 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.938314408 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.364244277 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.291310446 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.060509098 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.309700825 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.290850736 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.699487369 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.3093434 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.292729476 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.475361507 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.331182577 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.740014965 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.701249475 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.721086998 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.313369997 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.292978959 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.732853549 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.316259081 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.343095684 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.293949129 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.557512664 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.632542395 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.630668081 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.313886756 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.324190624 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.298404939 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.30732374 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.735779117 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.639594611 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.310804681 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.29381026 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.75711107 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.313253443 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.302940695 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.294671375 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.489562634 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.227460578 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.295060826 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.695989196 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.294647932 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.6413192 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.326542476 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.341994034 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.768322649 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.313672882 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.357921505 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.319873461 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.297719746 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.297849449 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.293248009 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.294771863 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.622461278 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.427109963 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.297979072 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.621455162 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.743763094 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.308948216 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.807749572 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.221693145 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.299097612 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.368301283 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.298792713 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.83768036 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.774649256 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.320149878 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.295999108 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.608265789 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.308018667 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.607823534 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.313783012 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.29598534 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.720287869 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.320629825 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.306771518 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.297402636 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.297248503 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.920810819 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.295581724 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.56678806 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.320680629 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.295936767 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.296516226 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.328580091 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.293771234 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.296828955 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.300247109 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.798032013 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.314119807 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.584314964 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.320274138 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303986949 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.296872554 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.298412594 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.301847228 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.510368868 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.704149593 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.299729939 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.298649051 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.301210087 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.310252081 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.444686537 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.298173931 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.584986853 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.313217551 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.307408875 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.303149828 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.909417415 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.324660531 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.298554925 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.304531744 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.13948532 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.517525121 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.311333965 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.311171116 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.285694708 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.296285747 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.540975629 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.272839376 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.285603752 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.270307151 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.938589369 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.311892253 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.26841911 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.890929441 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.273482178 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.222112954 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.285085156 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.265634123 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.578582948 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.538395564 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.3055685 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.269507591 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.269496476 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.926630095 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.301612164 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.402510149 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.285524058 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.275101307 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.463481227 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.638085448 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.265254196 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.834597064 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.265322586 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.471575585 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.265063943 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.567569717 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.720013615 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.275858392 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.26503755 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.939797866 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.937623458 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.916949704 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.249856757 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.569476492 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.251499159 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.708471561 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.252563836 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.250091526 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.677938628 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.251382911 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.249595363 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.248452651 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.25318017 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.402638037 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.423769064 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.171402205 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.253678131 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.696346064 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.32541103 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.245168002 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.24667308 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.24576666 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.603862272 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.266050993 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.254748031 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.259997362 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.251672244 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.259489434 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.706275728 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.221337726 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.249100939 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.404043816 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.853217569 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.267920453 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.254681032 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.85387089 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.527016101 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.741870316 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.305975917 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.545411301 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.27809429 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.28956921 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.959107878 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.320822359 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.745956778 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.269197007 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.271174257 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.818458303 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.272350465 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.605089423 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.250508849 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.252585083 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.769473275 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.273438024 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.253032824 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.525980523 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.249016779 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.493378164 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.258782812 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.28075098 seconds)
  done (took 1099.30300968 seconds)
done (took 1368.545252723 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.25574618 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.249061225 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.234876997 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.259734194 seconds)
  done (took 26.172981752 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.269476996 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.260547275 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.265609436 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.260273471 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.264759967 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.263125208 seconds)
  done (took 8.760519141 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.290257632 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.253195506 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.255286107 seconds)
  done (took 18.974679339 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.463477978 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.490286369 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.605445841 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.352463543 seconds)
  done (took 10.088271156 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.263153476 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.263176742 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.264965019 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.263624438 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.264977186 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.267436083 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.264546222 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.266649049 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.269238643 seconds)
  done (took 12.562492332 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.004177819 seconds)
done (took 82.733893229 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.28168511 seconds)
    (2/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.581315801 seconds)
    (3/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.335669867 seconds)
    (4/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.276659527 seconds)
    (5/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.500437275 seconds)
    (6/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.241805987 seconds)
    (7/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.38141566 seconds)
    (8/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.554601266 seconds)
    (9/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.241209926 seconds)
    (10/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.106580525 seconds)
    (11/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.315844664 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.517900431 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.627723469 seconds)
    (14/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.61148774 seconds)
    (15/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.325653714 seconds)
    (16/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.278154944 seconds)
    (17/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.27660506 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.30252066 seconds)
    (19/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.826831072 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.291307983 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.664777634 seconds)
    (22/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.965484594 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.517182452 seconds)
    (24/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.288419873 seconds)
    (25/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.453968592 seconds)
    (26/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.34719829 seconds)
    (27/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.801181673 seconds)
    (28/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.387661945 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.374304404 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.554690425 seconds)
    (31/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.321558031 seconds)
    (32/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.263556622 seconds)
    (33/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.267617888 seconds)
    (34/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.324626764 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.27753915 seconds)
    (36/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.048799075 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.394943234 seconds)
    (38/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.286340813 seconds)
    (39/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.021145286 seconds)
    (40/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.263648665 seconds)
    (41/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.358416938 seconds)
    (42/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.46341446 seconds)
    (43/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.438497045 seconds)
    (44/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.286463078 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.741378291 seconds)
    (46/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.287770918 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.31595054 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.392723038 seconds)
    (49/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.331579526 seconds)
    (50/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.277861028 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.524532308 seconds)
    (52/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.264247031 seconds)
    (53/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.25683393 seconds)
    (54/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.634824364 seconds)
    (55/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.836371178 seconds)
    (56/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.736313558 seconds)
    (57/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.358748912 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.316809293 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.25677605 seconds)
    (60/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.289405157 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.63097609 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.266313839 seconds)
    (63/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.387934764 seconds)
    (64/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.476002617 seconds)
    (65/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.954360306 seconds)
    (66/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.627943941 seconds)
    (67/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.287106496 seconds)
    (68/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.2603298 seconds)
    (69/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.343281799 seconds)
    (70/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.964238797 seconds)
    (71/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.38109068 seconds)
    (72/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.374233884 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.301421544 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.331305878 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.268001005 seconds)
    (76/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.287058036 seconds)
    (77/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.254862542 seconds)
    (78/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.411310323 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.818395763 seconds)
    (80/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.628187026 seconds)
    (81/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.628033133 seconds)
    (82/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.458438178 seconds)
    (83/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.802214309 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 5.450972645 seconds)
    (85/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.620040734 seconds)
    (86/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.476347267 seconds)
    (87/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.997449176 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.846708484 seconds)
    (89/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.573307083 seconds)
    (90/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.087030301 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.24777368 seconds)
    (92/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.634273921 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.301139461 seconds)
    (94/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.255602204 seconds)
    (95/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.688039167 seconds)
    (96/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.548829875 seconds)
    (97/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.438265461 seconds)
    (98/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.850830672 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.621897204 seconds)
    (100/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.274976359 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.264193686 seconds)
    (102/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.252452894 seconds)
    (103/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.972302408 seconds)
    (104/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.615699836 seconds)
    (105/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.860742456 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.609673159 seconds)
    (107/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.28412771 seconds)
    (108/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.266238961 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.521354649 seconds)
    (110/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.29375297 seconds)
    (111/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.267019797 seconds)
    (112/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.985559584 seconds)
    (113/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.258079108 seconds)
    (114/309) benchmarking ("sort", Float32, false)...
    done (took 5.256307848 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.272805062 seconds)
    (116/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.298519599 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.619190345 seconds)
    (118/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.308617811 seconds)
    (119/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.839760464 seconds)
    (120/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.247997079 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.773939681 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.368392426 seconds)
    (123/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.34858825 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.156211568 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.269157832 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 1.786165319 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.304396633 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.545540014 seconds)
    (129/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.38105537 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.677900621 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.996948132 seconds)
    (132/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.650323438 seconds)
    (133/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.678050935 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.540324369 seconds)
    (135/309) benchmarking ("sort", Int8, false)...
    done (took 4.277521278 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.883025293 seconds)
    (137/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.857935139 seconds)
    (138/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.77592297 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.398965673 seconds)
    (140/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.268966984 seconds)
    (141/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.289004952 seconds)
    (142/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.001829568 seconds)
    (143/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.558629611 seconds)
    (144/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.802558369 seconds)
    (145/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.352673139 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.294906196 seconds)
    (147/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.564984472 seconds)
    (148/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.331293481 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.996849511 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.089639714 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.548564945 seconds)
    (152/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.330482283 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.314815422 seconds)
    (154/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.328439924 seconds)
    (155/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.27669039 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.289802713 seconds)
    (157/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.373751406 seconds)
    (158/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.433475213 seconds)
    (159/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.448863379 seconds)
    (160/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.470061435 seconds)
    (161/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.113410664 seconds)
    (162/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.550768963 seconds)
    (163/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.962364764 seconds)
    (164/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.273354575 seconds)
    (165/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.497343405 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.669392152 seconds)
    (167/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.078547315 seconds)
    (168/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.268658357 seconds)
    (169/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.650289716 seconds)
    (170/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.81752104 seconds)
    (171/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.353542372 seconds)
    (172/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.259623355 seconds)
    (173/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.552635469 seconds)
    (174/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.463895046 seconds)
    (175/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.622868907 seconds)
    (176/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.575994784 seconds)
    (177/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.298218912 seconds)
    (178/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.297359789 seconds)
    (179/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.296943734 seconds)
    (180/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.491695083 seconds)
    (181/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.066578728 seconds)
    (182/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.394702229 seconds)
    (183/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.893289207 seconds)
    (184/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.806605621 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.252741361 seconds)
    (186/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.540099021 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.31551774 seconds)
    (188/309) benchmarking ("sort", Float64, false)...
    done (took 5.556449954 seconds)
    (189/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.284568434 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.262735159 seconds)
    (191/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.590384875 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.894153906 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.359950138 seconds)
    (194/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.72827347 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.355840417 seconds)
    (196/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.586461084 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.113196765 seconds)
    (198/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.087059944 seconds)
    (199/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.566270439 seconds)
    (200/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.377655999 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.161469725 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.328254648 seconds)
    (203/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.306608123 seconds)
    (204/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.274450534 seconds)
    (205/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.400124278 seconds)
    (206/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.743084832 seconds)
    (207/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.606132062 seconds)
    (208/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.083642922 seconds)
    (209/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.6847699 seconds)
    (210/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.288850826 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.892648815 seconds)
    (212/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.356278692 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.493524533 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.272585106 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.643032249 seconds)
    (216/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.110866613 seconds)
    (217/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.00689618 seconds)
    (218/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.28243813 seconds)
    (219/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.614284976 seconds)
    (220/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.316811845 seconds)
    (221/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.075685594 seconds)
    (222/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.293251059 seconds)
    (223/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.27460267 seconds)
    (224/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.853725735 seconds)
    (225/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.398382429 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.297865993 seconds)
    (227/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.300211696 seconds)
    (228/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.324489331 seconds)
    (229/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.261066937 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.317236552 seconds)
    (231/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.256385378 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.692587873 seconds)
    (233/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.687123434 seconds)
    (234/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.399869702 seconds)
    (235/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.300914353 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.286297702 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.293374885 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.119986237 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.848727351 seconds)
    (240/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.887417597 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.071116239 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.177724243 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.341506762 seconds)
    (244/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.288976672 seconds)
    (245/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.683939708 seconds)
    (246/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.459868274 seconds)
    (247/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.360339189 seconds)
    (248/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.810215507 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.293813123 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.274151114 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.711639842 seconds)
    (252/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.993460875 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.151370214 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.287226421 seconds)
    (255/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.968154326 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.493135207 seconds)
    (257/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.299921571 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.146342695 seconds)
    (259/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.259933589 seconds)
    (260/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.01238101 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.304713262 seconds)
    (262/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.525413414 seconds)
    (263/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.296748186 seconds)
    (264/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.500603635 seconds)
    (265/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.99898493 seconds)
    (266/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.299576448 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.658445742 seconds)
    (268/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.305999168 seconds)
    (269/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.270810354 seconds)
    (270/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.131201419 seconds)
    (271/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.409027291 seconds)
    (272/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.277768462 seconds)
    (273/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.360814384 seconds)
    (274/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.275298838 seconds)
    (275/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.281639472 seconds)
    (276/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.406228633 seconds)
    (277/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.801365332 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.37996378 seconds)
    (279/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.503107813 seconds)
    (280/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.264784571 seconds)
    (281/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.524931718 seconds)
    (282/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.559737042 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.375933961 seconds)
    (284/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.856953629 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.36025519 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.106013446 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.673600133 seconds)
    (288/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.631006184 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.392006137 seconds)
    (290/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.819205177 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.065474013 seconds)
    (292/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.575659228 seconds)
    (293/309) benchmarking ("sort", BigInt, false)...
    done (took 6.296837925 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.195975591 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.322246922 seconds)
    (296/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.304676701 seconds)
    (297/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.306042595 seconds)
    (298/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.599434398 seconds)
    (299/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.392549545 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.316875934 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.682773277 seconds)
    (302/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.011222759 seconds)
    (303/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.517347838 seconds)
    (304/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.280865752 seconds)
    (305/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.280373196 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.939257581 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.280959297 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.319498381 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.223041071 seconds)
  done (took 896.371202888 seconds)
done (took 897.54926948 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.313596005 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.30710086 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.290785537 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.31228524 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.403318614 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.315167606 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.302571114 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.294069334 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.337784858 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.341476646 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.288692816 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.314238541 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.292506638 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.291172683 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.292060431 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.306094178 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.283544016 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.28590519 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.308274646 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.300793234 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.309194512 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.289497755 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.341039508 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.313913988 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.295666429 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.295262508 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.29729947 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.312291603 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.404260602 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.296023134 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.297244711 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.3036432 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.286003514 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.284407608 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.28755766 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.312074449 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.305292322 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.302239799 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.297956538 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.325146733 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.66693906 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.301502262 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.296227906 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.294241398 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.295973033 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.297247877 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.293900696 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.301618572 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.307440027 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.306975429 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.658283567 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.316701616 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.298088602 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.29451741 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.303846392 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.2959724 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.297614583 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.311478664 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.312635877 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.30883305 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.272601454 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.293463047 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.297453015 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.312621471 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.30162143 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.692792858 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.298407894 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.299358803 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.668047802 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.307656272 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.689061219 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.311024045 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.297716413 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.308844896 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.326584666 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.284551859 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.284459591 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.294473699 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.304225059 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.294827022 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.305556705 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.309184739 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.302598875 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.296358277 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.309945161 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.319894895 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.305619062 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.297680549 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.307782466 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.317879487 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.30350708 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.308393211 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.300308472 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.292955487 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.306261637 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.302082656 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.30135297 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.300694796 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.301128404 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.307836386 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.664110333 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.323122399 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.296075151 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.294106918 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.297742766 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.311956172 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.663956962 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.306841591 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.321359985 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.344712961 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.299786556 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.2744775 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.297546194 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.314674599 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.307646381 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.301936991 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.293777328 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.273006365 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.655352711 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.322714914 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.300525213 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.29772043 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.315554914 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.301483984 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.297037052 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.291464415 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.293157168 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.311620423 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.420137703 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.310850278 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.331027786 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.297442509 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.302658892 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.321789079 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.314146845 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.330685532 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.302687601 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.316978944 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.315709874 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.295655407 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.310579387 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.311800562 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.303795382 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.306201901 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.293567834 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.322650067 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.313946643 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.3126872 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.321412881 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.42019808 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.298313125 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.27299476 seconds)
done (took 218.756280694 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.357524006 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.294108979 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.379038453 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.298334892 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.397306364 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.395144843 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.295611427 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.295114783 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.294951133 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.671707559 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.295780578 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.296920192 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.291129121 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.296698796 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.380552739 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.300300513 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.294913941 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.637174719 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.299013381 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.368702402 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.296653881 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.295583688 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.29803642 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.677314511 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.291646801 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.291899464 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.369648505 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.298604596 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.642095627 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.295953478 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.292412441 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.643573245 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.387577468 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.31741391 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.307404056 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.307620646 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.397744944 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.318654365 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.378933524 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.379246877 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.382239852 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.337770667 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.297487671 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.295205612 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.301833014 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.302071623 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.296990926 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.328049119 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.295846828 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.298421805 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.637416521 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.309701732 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.297807059 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.297404876 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.29946763 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.329790124 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.298049481 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.302016644 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.390452104 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.298797505 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.363052599 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.679064616 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.676922731 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.301353161 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.295685495 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.299016482 seconds)
  done (took 146.047157057 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.367041177 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.373419985 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.408271968 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.315950196 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.351620348 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.414042007 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.315763619 seconds)
  done (took 10.756294134 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.30930083 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.302678561 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.351359922 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.354694665 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.302279988 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.450694306 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.301407584 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.313071213 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.299692944 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.354443829 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.303686896 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.303409435 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.309165477 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.303818394 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.350232309 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.312317551 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.416518798 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.303878062 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.304612986 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.454741302 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.300131427 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.310370725 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.355200563 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.312932395 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.305005398 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.308251795 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.866282328 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.302459416 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.300145997 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.301257585 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.302299962 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.341356602 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.304187831 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.299773144 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.302276787 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.418594883 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.303699112 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.302783836 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.304784474 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.301984718 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.305125913 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.304920296 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.30348731 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.301816478 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.304327689 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.326846249 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.303524251 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.305415779 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.304779588 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.306017827 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.355594972 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.306749422 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.30123629 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.302073551 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.359595164 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.310811147 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.304700295 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.301447326 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.306034104 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.301038359 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.455899947 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.353922266 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.306857349 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.351806725 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.307042295 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.305439672 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.306265303 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.306065842 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.35917789 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.305612986 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.354733346 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.303604515 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.458659668 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.329405156 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.30756927 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.308034938 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.307894938 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.307438831 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.306762451 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.312227794 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.304756468 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.307793301 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.311181925 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.304980375 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.304505899 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.407546416 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.414564918 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.304912718 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.319217095 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.313175958 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.305232529 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.360224599 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.3091846 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.304444652 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.360044732 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.421492598 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.359088448 seconds)
  done (took 150.341507595 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.312682081 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.315173037 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.306138497 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.323770997 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.310593151 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.307641011 seconds)
  done (took 9.092158911 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.309357511 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.308833918 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.308498244 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.30660538 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.308149995 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.308155074 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.3096714 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.307487125 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.311066602 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.306019194 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.308918894 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.312848839 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.311031084 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.308759017 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.309828281 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.311647677 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.3113082 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.30546671 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.310071602 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.308095812 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.411824017 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.309825703 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.309182638 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.310548633 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.313723114 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.309871085 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.31828799 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.309202477 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.311325653 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.313429705 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.324825519 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.312164243 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.310802339 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.316009001 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.31425523 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.312179849 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.314477168 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.312599864 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.308397827 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.311087494 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.314044721 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.308946911 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.3098431 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.312588923 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.311962597 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.314208352 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.317369786 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.318991862 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.311161004 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.3119293 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.31161395 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.312104781 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.311155616 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.312809263 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.312290975 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.329053995 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.316302988 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.311316133 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.310199737 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.313739928 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.313289727 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.313449313 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.314289813 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.314490362 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.309462985 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.314556588 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.311994313 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.316212462 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.311118814 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.31279772 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.313711154 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.310473858 seconds)
  done (took 96.780645543 seconds)
done (took 414.21865078 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.613359189 seconds)
  done (took 7.833387475 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.44455799 seconds)
  done (took 7.668167311 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.185755983 seconds)
  done (took 21.410862503 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.352923011 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.406596681 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.303740916 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.314216954 seconds)
  done (took 26.594083539 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.578397828 seconds)
  done (took 7.796004474 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.299363397 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.295968861 seconds)
  done (took 13.812410858 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.686550019 seconds)
  done (took 7.906388351 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.602244639 seconds)
  done (took 7.82284339 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.329600489 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.315193354 seconds)
  done (took 14.123984762 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.287920962 seconds)
  done (took 7.511732246 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.069233128 seconds)
  done (took 8.289544122 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.319788629 seconds)
  done (took 7.541561944 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.359561265 seconds)
  done (took 7.578511247 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.102533269 seconds)
  done (took 9.326062852 seconds)
done (took 156.434610795 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.304922573 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.300118427 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.303152091 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.305296165 seconds)
  done (took 26.438128094 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.753153277 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.344533473 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.349647437 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.360255549 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.350683698 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.349528481 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.356048336 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.341831065 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.360763203 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.353261006 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.353663084 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.353487583 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.349666696 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.339739454 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.35025809 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.350794816 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.360621117 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.349066958 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.34136131 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.350588366 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.318046771 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.357942457 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.352414142 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.315708843 seconds)
  done (took 33.986286784 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.8329031 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.383624775 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.466664631 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.369011859 seconds)
  done (took 7.278391712 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.365819921 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.365650249 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.382505209 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.419406486 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.451860171 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.375594038 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.344525086 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.337307441 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.324258108 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.369633505 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.447062953 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.387318847 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.494360605 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.318149866 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.521434086 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.315025442 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.316741691 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.366797712 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.417780477 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.43420893 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.317157373 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.370147396 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.375348627 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.387018358 seconds)
  done (took 34.433823451 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.330054976 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.323005225 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.317889457 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.318158783 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.340657537 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.31655137 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.31855638 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.318759701 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.314651006 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.322287901 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.312725582 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.331338817 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.316155312 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.315311539 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.324287029 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.321333758 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.321979507 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.319147361 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.316880841 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.31759926 seconds)
  done (took 27.644054578 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.31276991 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.164011893 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.664411066 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.564710092 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.314213254 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.306354754 seconds)
  done (took 27.554721005 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.385898063 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.532398427 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.312640229 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.658704175 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.744139701 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.329932969 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.317286946 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.55391582 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.853053608 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.837458006 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.372630164 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.381714604 seconds)
  done (took 19.510723069 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.309274722 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.310523696 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.323623232 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.329392059 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.37361539 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.340158138 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.32761613 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.315420928 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.372865443 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.390333544 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.336861567 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.373660475 seconds)
  done (took 37.33451366 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403006157 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.364241287 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.273393586 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.092703534 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.028364401 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.521990436 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.311495792 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.737043287 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.315166272 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.587636894 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271706233 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423660294 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.571641071 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.311069608 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.315400496 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.296621635 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.5550687 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797248636 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319632777 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.160112563 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34254049 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.327280093 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.250976454 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.344122562 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.528839412 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.292813699 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.574970893 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.09268049 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.595555657 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.326269357 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327875077 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3181061 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592637299 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970225275 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424460327 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329470825 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.028661933 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.858949582 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.317697688 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.250012336 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.003500266 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.321166704 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331004872 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318629362 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.254906656 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323735484 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.756766864 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.321487363 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.02893213 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.318638849 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.330376423 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415537099 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.322461352 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.306998075 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335368953 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.320131237 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.315752607 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326689222 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892805931 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.643246608 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.322406358 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.269169617 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.710184975 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.250366756 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94534366 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.436899066 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.325966729 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.325452126 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254980286 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.163133412 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.33793354 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4684256 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.340507068 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.970707819 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01089996 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.311286355 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.270010406 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87132021 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.318343309 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.254808925 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.548118333 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.094544856 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.257265019 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.261631599 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.256570272 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037694246 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325876433 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.7282635 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.323611913 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.748925531 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.326310064 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339711698 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346520488 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.545318997 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.198624946 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321637376 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.055492653 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470053985 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339002457 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.751079407 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.252370855 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.321863934 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.577415344 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.534315276 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.331105752 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.301980949 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.531376936 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322056928 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.338503382 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.321767882 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.331722675 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.877744397 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.34774266 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.651242562 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338749443 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.099807743 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069398016 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332797015 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.423590512 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.311677172 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580215125 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.078725134 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.480194232 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391000382 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.324756264 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.324738038 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.280032684 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.173966329 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.219167967 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.322039425 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.329398314 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.337104309 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.324162066 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26681944 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.316313987 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322409106 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.103715334 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.547093377 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.334638048 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597151189 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.256905774 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47027729 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.330003965 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.540686712 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.502158388 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.334362377 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580421591 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325066846 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.332673559 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.333520582 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344581438 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419838924 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347380668 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.335616085 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.58247267 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.324888799 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.330925452 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.295634967 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.104223497 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330121727 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.330315754 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.15569142 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884025387 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316488621 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.327034838 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.214759914 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.336460927 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393002945 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.33436261 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.334595364 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.090959451 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.161897156 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.326142359 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.329084882 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.543232971 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.337835041 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.274780103 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406680601 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.519247782 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.887113538 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.352847922 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.259799376 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.035807083 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.013842188 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325814887 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.512939254 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.324882388 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334556195 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.335342103 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.868385063 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.883655367 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343722133 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.195240034 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.331312218 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.338621112 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.33071587 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321553366 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.065719815 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.693749764 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338931129 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.337877016 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473287546 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.338234396 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.261300452 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.844979134 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.333234844 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.326522464 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.112567429 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359893903 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.186221445 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802257322 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.585217876 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.020495595 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.336513314 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.375786612 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.357632121 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.328209232 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.102785307 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347492394 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.332666837 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333424852 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.33848522 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.295147032 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.767447499 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892061054 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.025852138 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871503722 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266216547 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.339831899 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.213553587 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.760226984 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260024802 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.986206035 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.515770532 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.772354119 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.271038119 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.524276402 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.507534866 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.088865093 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.334298746 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.559801951 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.237673067 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.095437133 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356610762 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.541595876 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364165689 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.337191098 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.256289985 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.604054493 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559219762 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.060073505 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407617999 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.760918025 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.107048443 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.124602302 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.330209606 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.679168233 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512018143 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.957204323 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.717341923 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.326715834 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.336118644 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.80866962 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.337694657 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.857363376 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945214185 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.343391386 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.526932003 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263079497 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.341051656 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.340514906 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.325495772 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.587739391 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.335155577 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.58598372 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.341275075 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.265403345 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.329447959 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864716533 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.196215769 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.339366722 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331957055 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087123606 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.331911267 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.608964105 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.327398577 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.054097538 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351220009 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.2660659 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263141969 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.023190656 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.336321165 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308060545 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822151268 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.705184507 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.335896405 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.358811672 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174356611 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.587899088 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.34567738 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.902257202 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570367005 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.169806121 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351279498 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.433956488 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.211710668 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.329458915 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.218316702 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.568169191 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.166628498 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.549522624 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.301073551 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.229533227 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.330273893 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.540850088 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.214889216 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.339196283 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566644881 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.059304298 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.335646949 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016541518 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369552373 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.333889109 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.346960144 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.721128831 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.337170041 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402214867 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.348002653 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.343833817 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.343690215 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499607516 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327714981 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.334740682 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.349074332 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422013822 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.691428439 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.068150987 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.107611986 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91168941 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063286263 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.918840845 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359788758 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.333274504 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335261077 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272986806 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48157718 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.862903188 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609461884 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465840717 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.792005547 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354091984 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.231820552 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352448073 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561495281 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609029497 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.20463402 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332750603 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.989786166 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.228326849 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.348219819 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.545914137 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833483689 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894305134 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453148252 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.337034352 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.778156789 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608226695 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.424664424 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.332134541 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.92444376 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.342115755 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.686457878 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.355046493 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347791394 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477786969 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.344954981 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995117097 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.359956686 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.497264313 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.107896306 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.358227744 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.588890448 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.793726031 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.34547806 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913222048 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.035824609 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601044797 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404621916 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.348801441 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.445442493 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480990226 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.341246264 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.226915989 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.336832053 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176678123 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.046184173 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.348515647 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913357078 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612286566 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.336056598 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.346227477 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360209503 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.347490798 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.562280908 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056704743 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.558623783 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.348785488 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.339204141 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.907028136 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909106277 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364535573 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270279948 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.336589554 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570634128 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.591565416 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363484894 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.788575476 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.051354081 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891923092 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.30938804 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364526731 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352499012 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.021548528 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911674793 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.095604271 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838399569 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.991623976 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.343696365 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615067293 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.344574992 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.349904066 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614527946 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.339822875 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.351251629 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.351272367 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.912254732 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.099110414 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.343820336 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.247846256 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.281711697 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.567885284 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.990617949 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.271268271 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.34544192 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.511731986 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.33520565 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4704239 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.352182126 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.343229302 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349350907 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.094927112 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.626176025 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.341744937 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.333993396 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.211385992 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.358528106 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349918126 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.569564405 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343737264 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.016607625 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.690116581 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.598762494 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.353231992 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.319788977 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.343982647 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33734651 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.056788384 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.306947164 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.883344064 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909692819 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.339796654 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.352107983 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.344969951 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.559990154 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.552186932 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.35362285 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.354961991 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347254926 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356552057 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.241201406 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.107376581 seconds)
  done (took 1578.551027386 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.360465411 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.353697402 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.363002772 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.349900719 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.342202934 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.39844029 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.390760837 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.375169105 seconds)
  done (took 52.193418551 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.342188519 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.490317314 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.37457335 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.34801914 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.348150933 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.351045488 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.796015376 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.359602916 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.348876903 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.350408389 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.342261316 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.349199316 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.983548996 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.349052036 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.343047677 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.324175863 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.350647567 seconds)
  done (took 65.407809237 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.339035663 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.856833207 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.433757763 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.343292532 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.309162639 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.372949536 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.995945987 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.353895771 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.349633484 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.619120308 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.008162944 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.373998107 seconds)
  done (took 84.618222448 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.351650591 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.352400787 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.35343472 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.348284284 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.352127119 seconds)
  done (took 8.017199753 seconds)
done (took 2004.191076336 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.704753099 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.027203384 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.956279785 seconds)
  done (took 5.246350893 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.48631228 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.537194272 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.65577686 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.675977217 seconds)
  done (took 7.614325713 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.618315802 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.721362811 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.528988732 seconds)
  done (took 6.127065396 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.709351448 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.345302288 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.482081348 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.336342766 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.338660395 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.339322299 seconds)
  done (took 20.267104644 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.344013532 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.34997541 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.348249187 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.349735403 seconds)
  done (took 6.652509354 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.318925096 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.033171967 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.321936073 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.334222959 seconds)
  done (took 18.26873049 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.091701696 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.102569063 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.091227462 seconds)
  done (took 7.545700142 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.348488566 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.184753729 seconds)
  done (took 9.792603905 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.631403966 seconds)
  done (took 2.889664943 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.47856186 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.669884664 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.349974018 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.303157948 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.378592289 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.098105554 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.921056299 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.527730152 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.277390495 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.441743997 seconds)
  done (took 27.702452636 seconds)
done (took 125.605925677 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.08709688 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.724180142 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.546024406 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.056243231 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.564360582 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.545451622 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.758369443 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.0232908 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.561955873 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.551692402 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.098032058 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.565754502 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.486213234 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.716500976 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.487499841 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.343212391 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.570075254 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.126210763 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.771280537 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.934616869 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.763037003 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.692613561 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.925112673 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.713412052 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.566087978 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.492592439 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.272358281 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.584574339 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.951916782 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.292360663 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.488226373 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.116259785 seconds)
  done (took 190.638615912 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.352031502 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.341924427 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.341462393 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.34349912 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.356629243 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.356894196 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.34431179 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.355527374 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.355396824 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.342227673 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.338767287 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.355774376 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.342454818 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.359726496 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.343478611 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.356948124 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.340935081 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.359020041 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.348736737 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.344444101 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.3444163 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.352724519 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.343913448 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.341542449 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.354339538 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.342475267 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.345621528 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.342239584 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.36051478 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.357893681 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.359372649 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.341676162 seconds)
  done (took 204.429667716 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.345749522 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.357401621 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.345425715 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.357736457 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.344614461 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.339949748 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.356667917 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.343955116 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.363473045 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.343120111 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.344682268 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.357590032 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.342500732 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.341713605 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.344996691 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.37228245 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.344048742 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.359722981 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.34133367 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.342622175 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.344609166 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.346140799 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.370554633 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.342770536 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.343326487 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.363379882 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.348176031 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.343399092 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.34643035 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.357764816 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.345381634 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.343206075 seconds)
  done (took 204.449553611 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.54211415 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.357512021 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.354210019 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.293291005 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.35471156 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.354382001 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.347603234 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.547021003 seconds)
  done (took 14.415989123 seconds)
done (took 615.193982558 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.588731347 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.316516137 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.54727608 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.378324903 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.125931301 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.396153454 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.37525204 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.543154416 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.272823087 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.545653008 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.62248081 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.387819057 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.768531414 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.37513258 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.62261214 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.471252662 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.247086452 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.366887327 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.690343413 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.887758523 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.635608939 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.80597378 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.549314546 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.265705236 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.779508968 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.799048484 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.073605693 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.221525257 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.391952513 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.687246617 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.959692338 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.326193141 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.434443901 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.430531477 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.48565889 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.470631816 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.295490096 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.427261848 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.575696983 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.58611151 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.893072208 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.093398358 seconds)
  done (took 91.985574319 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.343657294 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.342239262 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.338575741 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.34413263 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.339105449 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.341137276 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.33964315 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.339552091 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.342389217 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.341780907 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.342858904 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.343847368 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.344118869 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.344520722 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.340300667 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.340674612 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.339932478 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.345703537 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.340738814 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.339729179 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.344053743 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.341660481 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.340453636 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.343012338 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.343142364 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.344334681 seconds)
  done (took 36.161942438 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.361608186 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.608061021 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.764984158 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.368222769 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.361052673 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.366650854 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.438471695 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.364914117 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.36316403 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.361474618 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.529651484 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.367633071 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.398377862 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.791313517 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.363091875 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.362590663 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.360958074 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.362498184 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.615215628 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.373563318 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.46144267 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.36596416 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.438911092 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.37379615 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.386195884 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.366060595 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.363997143 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.882530172 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.384324223 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.531875536 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.135607466 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.437218776 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.835651054 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.792286552 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.136494882 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.367750447 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.362826385 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.536932152 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.366585902 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.363276227 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.437247683 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.365519955 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.771393421 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.977415923 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.385892681 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.364359877 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.899557855 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.552571649 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.5941089 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.371889706 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.798872642 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.366364034 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.367560942 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.369932982 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.604417302 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.374106151 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.365226485 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.896156967 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.385833919 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.440209493 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.366545156 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.366889636 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.624605691 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.361052589 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.610946877 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.365270243 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.37373324 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.383524225 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.776532934 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.367973893 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.999692638 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.382389146 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.368871279 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.533166078 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.609384459 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.942826677 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.386134033 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.631035541 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.849598447 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.451482367 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.368323704 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.879588947 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.456302974 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.366241706 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.37155675 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.370681403 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.363961201 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.418552051 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.438112773 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.922221646 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.005075497 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.918201041 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.457841881 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.376902385 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.367843032 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.894217296 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.384199831 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.364950541 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.772908519 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.996027469 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.381660794 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.377127493 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.002121058 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.388929687 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.443569619 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.374563146 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.777239877 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.367984435 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.424849123 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.37007913 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.375384794 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.392734983 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.442718387 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.369622681 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.367537467 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.975689814 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.562918335 seconds)
  done (took 179.377483088 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.365080557 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.357892217 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.361946937 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.360846433 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.3614527 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.370773734 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.358107575 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.362438913 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.370775133 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.363946323 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.363766082 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.365686295 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.359297761 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.376057606 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.371520438 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.372493361 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.978267581 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.359707388 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.36072864 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.360307922 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.152744537 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.365318353 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.374905957 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.358872459 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.362775484 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.363138162 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.377994011 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.363761502 seconds)
  done (took 152.90069844 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.372854099 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.925206148 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.389025864 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.495111095 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.391211189 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.366647544 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.494331183 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.426954322 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.38821188 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.370636492 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.369030949 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.667208309 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.371463918 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.876178454 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.558166259 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.510186101 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.874197685 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.38651128 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.368761089 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.370070044 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.499631678 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.374721663 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.670597315 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.92683507 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.392975529 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.925355032 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.359733677 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.370291692 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.369293907 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.927361741 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.387041657 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.671858477 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.449145556 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.431544803 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.943934963 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.899112625 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.897970117 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.515173948 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.370696359 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.372599504 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.375848994 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.356137306 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.928191848 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.3929051 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.37207363 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.922675128 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.394901868 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.373064795 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.380549444 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.37110256 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.43009705 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.453391906 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.691526684 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.934978245 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.463240047 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.393891779 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.504272042 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.763339222 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.377091594 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.87851013 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.36180224 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.93197261 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.392884898 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.357455814 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.374210419 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.384336729 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.522405342 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.503321001 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.878240252 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.39213732 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.876339553 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.533526741 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.372551086 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.372865766 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.376473057 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.937324849 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.895565701 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.535148205 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.501494189 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.560225034 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.364457787 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.37524608 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.361012062 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.449439946 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.372020622 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.931409005 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.889442486 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.39376476 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.376949384 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.37552219 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.37771854 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.547182967 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.950828601 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.466666735 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.869436911 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.690045107 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.672256919 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.377909158 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.433661971 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.393534717 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.678665571 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.380957879 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.432591619 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.830323258 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.6790897 seconds)
  done (took 163.501000765 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.618519251 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.6308525 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.466939925 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.511857622 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.956832972 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.932708683 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.621810627 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.520086304 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.488894274 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.629241303 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.51174415 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.465954871 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.539767661 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.445196643 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.099243004 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.461444793 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.487847759 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.521114715 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.483768784 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.411564987 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.033539218 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.649404861 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.538351612 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.246571766 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.464129028 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.163848641 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.923773047 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.926051888 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.545974034 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.716877367 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.900902917 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.507245585 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.330109595 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.048819921 seconds)
  done (took 66.088815994 seconds)
done (took 691.27956241 seconds)
SAVING RESULT...
DONE!
