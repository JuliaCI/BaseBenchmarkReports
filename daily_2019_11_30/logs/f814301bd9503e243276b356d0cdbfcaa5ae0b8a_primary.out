cset: moving following pidspec: 903
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.265164118 seconds)
loading group "string"... done (took 0.641489217 seconds)
loading group "linalg"... done (took 7.348722048 seconds)
loading group "parallel"... done (took 0.158699706 seconds)
loading group "find"... done (took 1.167433409 seconds)
loading group "tuple"... done (took 1.818319701 seconds)
loading group "dates"... done (took 1.328303204 seconds)
loading group "micro"... done (took 0.223899719 seconds)
loading group "io"... done (took 0.946415236 seconds)
loading group "scalar"... done (took 39.034302377 seconds)
loading group "sparse"... done (took 12.128086362 seconds)
loading group "broadcast"... done (took 0.966563909 seconds)
loading group "union"... done (took 12.468771993 seconds)
loading group "simd"... done (took 4.403242537 seconds)
loading group "random"... done (took 9.17112635 seconds)
loading group "problem"... done (took 1.850990945 seconds)
loading group "array"... done (took 20.914778096 seconds)
loading group "misc"... done (took 1.683494697 seconds)
loading group "sort"... done (took 3.346204253 seconds)
loading group "collection"... done (took 17.415357975 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.526000432 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128194144 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.121165872 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121994941 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.150906284 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115121537 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12676456 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086073883 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.778334552 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148689072 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119320586 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.437114455 seconds)
done (took 5.164042366 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.178368741 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086032484 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083783453 seconds)
  done (took 1.292894755 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066445533 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126510759 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067894134 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067981422 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068282813 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06768102 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067271149 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067072578 seconds)
  done (took 1.656027852 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074980321 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070591486 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070307358 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06963544 seconds)
  done (took 1.410848436 seconds)
done (took 5.74068522 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.807254298 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.206490442 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187016059 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.409667882 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133669943 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.162632994 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.651844903 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.319873351 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.188630527 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081413242 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10756414 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.334800244 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111056202 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.64482498 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074161007 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091457994 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.135822429 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.432983981 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067177144 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082698667 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.08809611 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127767886 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084579922 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073666183 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14719541 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.06676204 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.138643744 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081804621 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065794459 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.212595048 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.173185128 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.654217301 seconds)
  done (took 10.315503062 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100353463 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099890918 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070656174 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125141786 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098966789 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.0721763 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072439904 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068619771 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089032358 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.131361138 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091179581 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104107613 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067157279 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070527145 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08640674 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.207583598 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082220963 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083610314 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072047471 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077087141 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110625129 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080512442 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079446534 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078939888 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.13178386 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182652304 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099217219 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098696452 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068735308 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081805179 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116488224 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127759165 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066859341 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067534892 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126908468 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095928589 seconds)
  done (took 4.645772883 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.015181321 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.148087969 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092766126 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.137521092 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.086348253 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065886918 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112441458 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067051378 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083324397 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.2152555 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.373881108 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.590127617 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110409832 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103231094 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066684444 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067718218 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066048764 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.483199106 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.094137281 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105307814 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08089075 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070275565 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067953014 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364346096 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067629792 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064949476 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069233482 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058638451 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.127977395 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069324183 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.962476859 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.131939786 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069128132 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103064073 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.163781822 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089223889 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.27676263 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070050806 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065458172 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.15817095 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072703828 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067960362 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086650507 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106306907 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116164974 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067281836 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068574363 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.165558474 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066404973 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082392969 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.639994041 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153106633 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078834198 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065509248 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.259307631 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.090812923 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071082699 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065931165 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.181248238 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135465592 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068015104 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067868574 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070287719 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071902997 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.368925317 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067868426 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.867173809 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070270452 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078192814 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071391737 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071530675 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074999588 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076944058 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.089628672 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06795316 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077601337 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068181635 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067534762 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068431007 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086459243 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.374866839 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067255725 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069110304 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066364141 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.090578542 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098208771 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068336563 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066827021 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101740091 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06770431 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066001782 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.109166839 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067695227 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086398622 seconds)
    (94/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071603843 seconds)
    (95/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114481391 seconds)
    (96/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067851885 seconds)
    (97/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.192527255 seconds)
    (98/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067415737 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.093690033 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066165265 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099121963 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07227622 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100544755 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08326204 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069233967 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.422044573 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064513107 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064829895 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.070496167 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06657397 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06946558 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068539625 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066178302 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080588498 seconds)
  done (took 21.180454222 seconds)
done (took 38.27860928 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.246478365 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077480918 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077941085 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.080272756 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07786066 seconds)
  done (took 1.775125642 seconds)
done (took 2.969130991 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.125005754 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102986728 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065291039 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099978578 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065882296 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10452371 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103672613 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083981101 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102974556 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066341645 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099934857 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065783525 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065218974 seconds)
  done (took 2.369561067 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08603231 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08686179 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071112183 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086255742 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065408463 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08538004 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083494597 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091461112 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083633518 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074231703 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065215251 seconds)
  done (took 2.068948013 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084500055 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085922539 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071547256 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087237604 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064868169 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083571646 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08355858 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088297731 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083512414 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075778665 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065046461 seconds)
  done (took 2.057957902 seconds)
done (took 7.678872296 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079160889 seconds)
  done (took 1.253001034 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.608693046 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.145228769 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08076794 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111368609 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.193811989 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.122168881 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.279695304 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.089493472 seconds)
  done (took 8.998861441 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.092201243 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070072534 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069968319 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071575375 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085323058 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072706801 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071069472 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073685072 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070186333 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070755093 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072647118 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072476265 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069419954 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071965963 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073781985 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073778682 seconds)
  done (took 2.4364578 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094463896 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093069972 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07577281 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076259084 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073374317 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073035716 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075700633 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075268364 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072472508 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073490906 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076090318 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075181945 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072892036 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06605542 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075116606 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076382853 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072232206 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075228942 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076100634 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07631424 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07650679 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06537233 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072848936 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075495548 seconds)
  done (took 3.108473813 seconds)
done (took 16.979930333 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.117833678 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073784768 seconds)
  done (took 1.371784871 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085180259 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085058751 seconds)
  done (took 1.360732235 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085989743 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067148001 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093590028 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.080700115 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067942356 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067591841 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.091587638 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066361673 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067127574 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06797298 seconds)
  done (took 1.945870905 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070301644 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080426896 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07201026 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083327372 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075780422 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065468597 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074774547 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069262116 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08048336 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063359379 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07260956 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084584911 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073118274 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084646111 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072556934 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068131343 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070455959 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067295983 seconds)
  done (took 2.52345396 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067639253 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068370371 seconds)
  done (took 1.333439955 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069210274 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064338321 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068802125 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067461756 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064676495 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063574275 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064592153 seconds)
  done (took 1.656169428 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.386205702 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.111423468 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.317732706 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072142295 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083408275 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.262291732 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066539217 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072033667 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072409775 seconds)
  done (took 2.685017968 seconds)
done (took 14.073703588 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082606262 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088311074 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099215628 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.383500107 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09332403 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067256337 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115467666 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.193244652 seconds)
done (took 2.330415639 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.2151454 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.633792595 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.39968909 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.204487039 seconds)
  done (took 2.438624436 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.3448438 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087203368 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059778916 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068713755 seconds)
  done (took 1.770427708 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068062062 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070543723 seconds)
  done (took 1.344982777 seconds)
done (took 6.975977356 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068084982 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084848106 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065881694 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063875563 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066356953 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063213824 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064929547 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067730972 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067274305 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.06737823 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.070078676 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067465685 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064875771 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064663547 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06740097 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067429236 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065200043 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064796076 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064874793 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067433652 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06507852 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067624373 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064656939 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064544398 seconds)
  done (took 2.850551457 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088057921 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067963541 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074064865 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071938038 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070599514 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072765763 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072413091 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067114924 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072488204 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06972598 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071292634 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071097081 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069870069 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07128271 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070013501 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071128053 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07282723 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06741145 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070017182 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071597596 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072574756 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067494804 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070854145 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072795737 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070842341 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073352977 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069907771 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067455143 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073405912 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071542888 seconds)
  done (took 3.362216683 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071554046 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064993611 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065252669 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072993323 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064716825 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066157488 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064891164 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065278753 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065549895 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064790031 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06648569 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064661444 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065216636 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065879377 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066335115 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068864998 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081316807 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065368858 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065114229 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066060347 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068242955 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065186799 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065411569 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064365677 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065074548 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064064544 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065215947 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064267256 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065613276 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064438481 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067384521 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068218998 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064388844 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071674238 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068124401 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064507274 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068854531 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064126708 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064819569 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064074516 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06403322 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064363747 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064089362 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071451817 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064184627 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065925265 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065077032 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065692376 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064425682 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.178478979 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063231058 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064199575 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066410417 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066109223 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068472116 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064107288 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065216545 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064194675 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065181915 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064315276 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064225466 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064259111 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066743719 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064824453 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079429875 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071258652 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06394995 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065919829 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065363452 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066914466 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066290681 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078375178 seconds)
  done (took 6.114690356 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.094102646 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089044968 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066842509 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066013436 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063258277 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065299234 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071398817 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065347054 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066973344 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08326586 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066078706 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066690074 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066190624 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069303433 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065381729 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066766754 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073735199 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063075223 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065226912 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068835718 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065811835 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071198689 seconds)
  done (took 2.76825733 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.160054695 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071859208 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107798663 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077354292 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071144114 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077014993 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071341331 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071080269 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071234781 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069078956 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068641672 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07150178 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071324668 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068924853 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068690803 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068917319 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071400172 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068728827 seconds)
  done (took 2.626907154 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079132028 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067465468 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.089965044 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067810925 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067590743 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069559917 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071563957 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075866498 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.07004964 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066929588 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07597152 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069486121 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069655532 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067075526 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069472451 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066870443 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070244242 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067084913 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075393616 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071319207 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071473926 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075562466 seconds)
  done (took 2.797628872 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081836866 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.0697954 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084598383 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070204845 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063282539 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06606031 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.072433804 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067492784 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071299823 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069388415 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066970595 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065473079 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069661952 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066473224 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070265897 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066338383 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069066296 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066442805 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068822406 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062634203 seconds)
  done (took 2.611498308 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08858013 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069089795 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068880698 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076372851 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068419095 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069511983 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076710306 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068542754 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068742891 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089761971 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068735908 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068243695 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076697094 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073473236 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068368656 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076456476 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076091698 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076184886 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067880799 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068676862 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089409784 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067977653 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075986756 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067925562 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068756512 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068357993 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068766879 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072979317 seconds)
  done (took 3.269314613 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068084962 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06765508 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064823327 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064424312 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06446405 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064789403 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064450085 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064554596 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066878793 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064733244 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06719747 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067538548 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067031931 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066987571 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067173516 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067127912 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067053647 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064527276 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064724321 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064305248 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067058176 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066773401 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067525419 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064336232 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064784406 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066781456 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064622767 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065052784 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067205596 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064688534 seconds)
  done (took 3.206345025 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077648129 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074335286 seconds)
  done (took 1.379624045 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065682979 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08208336 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064039181 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071556966 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070526017 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067757604 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074941544 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070594253 seconds)
  done (took 1.790818553 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083036066 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080090489 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069713033 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081305331 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.07878811 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084229175 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.136447405 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069000879 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073864577 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065407491 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081501879 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066669883 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073380736 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067620766 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073281857 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07435525 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064844424 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07369216 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069250232 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065603754 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068441749 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.0766647 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069835234 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062599297 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068925286 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090447219 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079618921 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067411488 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070955871 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075048394 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073347801 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061509491 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067455657 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067669721 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065418168 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076976033 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083325254 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069943885 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077276 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06834141 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077908396 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062118837 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071806922 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074190932 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077671924 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068025429 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067958999 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062466358 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065303313 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.06971126 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062592805 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070296576 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062307454 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.0743098 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071204978 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078047869 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066273522 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069065868 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070292302 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071004114 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074194358 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069428685 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070031519 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067261634 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077551358 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072285286 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076827919 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062382113 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061365861 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065425232 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077600803 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090938745 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074121156 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06823232 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068295587 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065409965 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070536759 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068498322 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074214444 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074473835 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067509034 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073337613 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075122514 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067470783 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070126328 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075607196 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065788163 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070661673 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065212155 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084765872 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066165299 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065500033 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065184977 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078128666 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070781884 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067423009 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065342628 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074746881 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061490161 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068247971 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068622703 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067839366 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078093031 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070724016 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071678179 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075630842 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074564882 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067064331 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069858874 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063225409 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067285587 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065806685 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073428032 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060971717 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069307046 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067591728 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066688464 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.074965404 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064967732 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066440705 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.1980285 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071974599 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067543723 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065510878 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071302897 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068301737 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07107925 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076783547 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067445594 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063161972 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062827979 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071863072 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068239751 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071491218 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072933649 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070785066 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062717612 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066418738 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073176401 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077168711 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068206518 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069092961 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074896362 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069844811 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067515294 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075590227 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070931625 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067017466 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074951552 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068536845 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062284242 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07152533 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070741004 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066221085 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072349658 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071263749 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070492348 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06888283 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067111711 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076417003 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069192681 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067128028 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068340173 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066861364 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078722736 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070302064 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063150501 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065091778 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077194021 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065977714 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067725751 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067570295 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069945034 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069323687 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065596874 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066977113 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069247151 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079237539 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072236551 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068178338 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073297023 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07854077 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066870577 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070182515 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067662228 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068347375 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068512383 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07636338 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072922893 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07201524 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069809079 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064078886 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073621447 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074940021 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066508309 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065130625 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066509104 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07185151 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073655698 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072269584 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068694114 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065617358 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068440131 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071218563 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070407782 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067285714 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066638584 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074448904 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065443374 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074375228 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068913766 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078014178 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070987366 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062383036 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071112344 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065435267 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074270051 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062877447 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.0652992 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067365826 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068773899 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066859639 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070487802 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061882572 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074455688 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074994373 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067910371 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066556258 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06666749 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074006121 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067538335 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070472137 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070473549 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072338741 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077120866 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066000477 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.0705927 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.077253716 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066643165 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060188232 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071628908 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065014069 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065515781 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065684453 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064280468 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.197775791 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075392338 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072796964 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061997967 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071077466 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067256572 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06753776 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063029547 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073193391 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071807767 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069234261 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075086504 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069582802 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069589323 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072448395 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067860223 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069221148 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069557515 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07130058 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068627479 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070324957 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068444243 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071926475 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067381919 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065733968 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.07040491 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06868328 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06836511 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073708502 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066943726 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068328523 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071069903 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068376442 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069532088 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06899006 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067532719 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071002549 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069710078 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068818684 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069801859 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062861008 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075841043 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067654203 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075929482 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068073861 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064854225 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075801663 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070647055 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074478059 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.0695756 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068964137 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069649365 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067636795 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070937879 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074989727 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065819117 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07884352 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075759338 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068476917 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070117738 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068054822 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069200953 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066724233 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068294074 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068688599 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068555329 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068068735 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072355802 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070987667 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068820929 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069621557 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069306362 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067436403 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069225064 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062437609 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066939058 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067355623 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067599516 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077565605 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06804412 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067317685 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06655153 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068623636 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066535812 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064956864 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075949472 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07768221 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069036877 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075027324 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066802954 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06941372 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079014871 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062332652 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066263211 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065417336 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06592154 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07565567 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069247498 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077411796 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068426708 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06734633 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065047278 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068770909 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066395553 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062147491 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06611572 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071592843 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066892626 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066861769 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068291483 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070775488 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068580282 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077664718 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066363219 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067768256 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067085757 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064039487 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065773047 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065602982 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069682848 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067533642 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064922212 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064016326 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066511203 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067578937 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068802726 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069042272 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068526672 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.205374222 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067310768 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073003653 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072874878 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063322218 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072076946 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06915351 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067751561 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067981956 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07278796 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072767645 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070354752 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077393772 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068309926 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06923031 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069056667 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066839486 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068486068 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068873431 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068034163 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06760675 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069989879 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076775466 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067132184 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071069137 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069046878 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068538055 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075225648 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068825454 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071613649 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075048509 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06939144 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069984455 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076403989 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07240097 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071484559 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069840748 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070332401 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07427465 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067134119 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075343377 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069206793 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069340333 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070412104 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065731429 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068264652 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068370622 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067065866 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074956217 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069014892 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06786512 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067350078 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066434944 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06924728 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071226818 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076536163 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070595392 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071486427 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062899878 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065343475 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06884936 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06626359 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069494092 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071326897 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073973267 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071163509 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068652693 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066749584 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077377987 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073939752 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071475127 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066058927 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072535929 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069569376 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070303179 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06885562 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067718938 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069132526 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071646563 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069738608 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067242829 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075186049 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071744969 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068671088 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069649485 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069122904 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068289076 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062897492 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069247089 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070009323 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073834155 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070339221 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068092637 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079259873 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065913361 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068538721 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071075298 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067062317 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072803344 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062899368 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069664385 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068822588 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069095933 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062932063 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067104938 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065679997 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070169441 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06689552 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06255427 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078845867 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077312274 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070943778 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066512882 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066063558 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062159655 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062147456 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066295047 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067560662 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06858446 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076488271 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065526072 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06557073 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061451011 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066296527 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069525991 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069731504 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063705432 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06165528 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066041742 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.201690386 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071647094 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067023426 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068953627 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071848554 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.0706519 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065844551 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072599863 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065103355 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072884141 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082242242 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069463432 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069769633 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075654104 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076424204 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069687493 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063564254 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06905304 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07196457 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069763356 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069355136 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069221628 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084863803 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071443016 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067481855 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067689434 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.0712958 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068148833 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07636896 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068751276 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068901406 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073714466 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070177171 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078286231 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071243723 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076432031 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073493084 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071886247 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067192131 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069127582 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066669866 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068156979 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069714186 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069598418 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073926427 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076696424 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067892607 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079318452 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076895435 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068286375 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063322522 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066425361 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066772725 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064695281 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069248561 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066527969 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067370867 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066855334 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06705956 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069250052 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073332694 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069632955 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068159261 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068377425 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062175467 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071267541 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070128416 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069209374 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064627959 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068049394 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069329753 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072600108 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071324034 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065383016 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068891639 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06887824 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068373072 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06282961 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074502782 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067034355 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069893878 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067057909 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068234356 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068901579 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070938874 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07296805 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069268694 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070250253 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071349877 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070145542 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065114338 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064826984 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073092248 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065698222 seconds)
  done (took 43.440406768 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102740261 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065368827 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063290523 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063466138 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075871362 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064658243 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063385816 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064539051 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06404129 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066711355 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063461856 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06336611 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071934777 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079400322 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074795138 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068073132 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063009566 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064484329 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063080035 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06438464 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071892704 seconds)
  done (took 2.758795829 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075451201 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.079808787 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.077970524 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084165878 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072463915 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072080454 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076150435 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070045511 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078699186 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073539531 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079970665 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073316496 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074452246 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074577806 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07390465 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072580315 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.080104705 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07277101 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072075166 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077274556 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072273665 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077105425 seconds)
  done (took 2.958971047 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068964169 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067080999 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068866634 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062785032 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067863027 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062293525 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070952209 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064998423 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.078719519 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066666503 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066550831 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066550009 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069004819 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062429736 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06724883 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065013674 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110077603 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071363954 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066679073 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067853925 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062387427 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068798958 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062447815 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062765203 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065488246 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070723333 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.06793591 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064822628 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066223615 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066154751 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066537943 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065423347 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068640441 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067383891 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065813585 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066276047 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066418812 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066907292 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062847546 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065276435 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067641877 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062634762 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06692482 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067930912 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065098836 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064535585 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06846603 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.06695887 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061879072 seconds)
  done (took 4.604294672 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081457855 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.11258625 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068674363 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091087045 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083742561 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074324171 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071106698 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091425552 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06462822 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065234763 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082999351 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081341796 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066775041 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071285614 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.074198621 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067326833 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067802091 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065673239 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070563265 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066412596 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070433244 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07340591 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.08135156 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080627801 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070676235 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065556364 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065918662 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071095279 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079537802 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071531897 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071489123 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07269314 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082350529 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068715459 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065732233 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068957194 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082936507 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067062487 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069672437 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.0644996 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068813437 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071005908 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073417693 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083828099 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067332164 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072101329 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066520339 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063878274 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078594284 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068575329 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074517798 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081326004 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070772299 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066504939 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071457243 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082060373 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067163374 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066758658 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06956424 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078983295 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064297959 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070337482 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080154225 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068597318 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073999568 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080913754 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072076065 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070528312 seconds)
  done (took 6.439333681 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078521746 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095678971 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085508321 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085407102 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076998758 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076657254 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.077756778 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076837325 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07716699 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081665599 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077531372 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118026286 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072359217 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079963628 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.077130863 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076900345 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076620281 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077191258 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077220381 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076692027 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.077355402 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084675699 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076794312 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08494117 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08094453 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.072348158 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076758206 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076897097 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08517016 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076948912 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080432663 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076512427 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076248515 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08442489 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080184654 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074582707 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065305816 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075593724 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07663763 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076298521 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07184449 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084539253 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076109206 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072264852 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076494218 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076085907 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.083992522 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.08016884 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079217344 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08162307 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076362671 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08443124 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076354568 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07655474 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.084269591 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.087860871 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085011573 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.084770482 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076860053 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.084662907 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085068715 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088233001 seconds)
  done (took 6.273059415 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085701147 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076218014 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.084199132 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062905855 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066063227 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073106018 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065813669 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065543799 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075229641 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075729049 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077704288 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07318592 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076897844 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077899667 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072380548 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075778447 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073385971 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073633688 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075874286 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073290362 seconds)
  done (took 2.79902823 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07655665 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084930534 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068471127 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07406954 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070179133 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072654246 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069750416 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070370789 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067951028 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070769453 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077402279 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077777224 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068130859 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072813907 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077371535 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072663058 seconds)
  done (took 2.484509429 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.086703153 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074618921 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08184393 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.0671047 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068191221 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063390971 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066649277 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06223211 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06331806 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079748563 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06688254 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.077864676 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066984855 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065801579 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063602279 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.072339331 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063426329 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064026793 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066776065 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079739475 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071427329 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065090671 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069914517 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066873414 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069551973 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071751666 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066157656 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067116596 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063935508 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067369579 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070173515 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070775615 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064215411 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065254841 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065657401 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064415301 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066446079 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066812862 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072656863 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067146206 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064901056 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069231076 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066967515 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068138714 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063456431 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067223419 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062880001 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069796372 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064920629 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069875478 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066795865 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069999272 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067397499 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073782156 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069698211 seconds)
  done (took 5.081026256 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081758103 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071618288 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063531017 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065788765 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070684278 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069240827 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071465926 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068866199 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068801807 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06545184 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06857713 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069988153 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068722563 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070959356 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068484441 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070940707 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063103818 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068602464 seconds)
  done (took 2.570583533 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072207789 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067231844 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.075070188 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067030729 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067378091 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069532686 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063027714 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065529632 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065511074 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067068985 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066919415 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069897545 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065640554 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069220353 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066841532 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067271092 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06911698 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065434883 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066645369 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062806185 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069371094 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065581274 seconds)
  done (took 2.803435229 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096371902 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085214806 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143802251 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081003269 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086103866 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072638416 seconds)
  done (took 1.882721942 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093463461 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102559838 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06760639 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070307325 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077586053 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071370593 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070922333 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070919648 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079775028 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077196632 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071367393 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080152365 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080118644 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078997883 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076733229 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07769552 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07152917 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071223816 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06738252 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085546068 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071437581 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080368826 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071312229 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07132162 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071356267 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079670189 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080224002 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077399189 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071391045 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080807943 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077301784 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071784751 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08055039 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077794123 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070295097 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07991152 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071510447 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085217008 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07737813 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078959189 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070396619 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077420384 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079759135 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07614945 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080129955 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071813827 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076280721 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071322265 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0715185 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087602306 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077149262 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079696657 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08342596 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080558883 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08019886 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087794812 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077364013 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079223502 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077788834 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077164078 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080158055 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077303034 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07905623 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077358558 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077547729 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079837193 seconds)
  done (took 6.423396201 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106023768 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068454299 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072056697 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078040416 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07931357 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071430755 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07171463 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071971935 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071528316 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068151813 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110197114 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07124146 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077450926 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077555038 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069722315 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069283535 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069526518 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077361182 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066325024 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085732408 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069467304 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077079411 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077460137 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078555608 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076316606 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07579571 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071086995 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071488383 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071688648 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071595856 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076576132 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072004746 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079466971 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068486957 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079556356 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071621763 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071351917 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076146451 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071508886 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077224707 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079549074 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085836613 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071236818 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070876525 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077321936 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071508271 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071413096 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068124404 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071293903 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068374688 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07728028 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077328152 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077504942 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079209825 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071442171 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071924409 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071371606 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0713509 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071610523 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077286382 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079486754 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071233476 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087742047 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071490256 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071498762 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079594105 seconds)
  done (took 6.295724154 seconds)
done (took 130.796771766 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.186673232 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.163771375 seconds)
  done (took 1.661648268 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070758337 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.101787333 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.079916912 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131028752 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066447173 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099525378 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098295852 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07724919 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065376192 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065599029 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065605825 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067804625 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.1306906 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065996724 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065804595 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068020792 seconds)
  done (took 2.644425294 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101043909 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.166476868 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102700168 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065072177 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098733948 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072424671 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064602261 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07491548 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070292535 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064263728 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072106337 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069840129 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.063976377 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069489047 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07062526 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071923809 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064101039 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072346369 seconds)
  done (took 2.764928461 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102864149 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094594151 seconds)
  done (took 1.528965602 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.160776549 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104606518 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.145097951 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.349595486 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166999418 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.127670811 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.130348044 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.131124906 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.128879439 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122455891 seconds)
  done (took 2.893329875 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101760736 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.157867132 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.27019762 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118127052 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072725492 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094716319 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117901251 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077450296 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080390082 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079594662 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080130551 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075933508 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099302923 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075487218 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075538809 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078386848 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106255703 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07450094 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076682086 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077927049 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.103341335 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066675954 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075440222 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074363025 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079875376 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07984677 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067142124 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066881378 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077782014 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075267993 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076981645 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092559503 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076734141 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106206914 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069602144 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107217301 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07597937 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073382247 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074252706 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073060088 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077728573 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079314746 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072720141 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075256456 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065154339 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075675598 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065605278 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066735775 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078411061 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067758258 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07848085 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079536422 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107211727 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066986904 seconds)
  done (took 5.993947427 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107003487 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.108240621 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071962344 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113478518 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102312356 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071936062 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102488296 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095303751 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103669673 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069402471 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067676088 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070048358 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082107859 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082973026 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114801602 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106234015 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073042123 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071057759 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105381516 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104786016 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068551974 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096100559 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09071006 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102565361 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06701853 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070197739 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067663441 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07199117 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081771738 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079166912 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06995624 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080702805 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084820724 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077231977 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066406379 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067030796 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067980898 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078983035 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07899135 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078528005 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077334133 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067220561 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067748629 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069607587 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069705526 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067776526 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078595779 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080669182 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078269427 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069525301 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069559774 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067505513 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068654033 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079979911 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077213367 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080528357 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079524583 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068077815 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068483982 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071940891 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080297619 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078998496 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079160166 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069127513 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07772167 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067724799 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079885913 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083134916 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067756921 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069580412 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067829541 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069389214 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069061995 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077319936 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077293178 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068919362 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068639453 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067610969 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079593129 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077771927 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067217662 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076608363 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066911076 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067961426 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069038793 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069031403 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077566245 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079635159 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069641595 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067745784 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069026167 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068180603 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066522951 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077316444 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080250299 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080332982 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.080026532 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070635242 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079966353 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079437965 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068669239 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07814468 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068662976 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07080355 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070310557 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079283385 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.205856559 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080147522 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069844544 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068832824 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.080104463 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081966455 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069519737 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079793779 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08297866 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.08265136 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.07139456 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084357626 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070139719 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079729393 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0696354 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079974521 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068522353 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080436004 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068599032 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068722401 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068519436 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079125041 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072059907 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068545513 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069805573 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070185366 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080334021 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083571429 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070077862 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079085472 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078102054 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070035087 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079453435 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068703128 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080592635 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070177393 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07035808 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068355949 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083879242 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068859007 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068267173 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069518746 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080485443 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069190904 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080749889 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078573597 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06849397 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081145109 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080589921 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07721553 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080264303 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070491501 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069512283 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069067217 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071210741 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081107914 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082241473 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072077814 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070125085 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081163874 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.081167897 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068888938 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.08069396 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080485473 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080552858 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069897545 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070880828 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082711718 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082973857 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080462902 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079555128 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080230772 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070072453 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079518315 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07889482 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067388817 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085507502 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069317574 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084506285 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079241795 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07632228 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078456756 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080355003 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079802333 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080179797 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082985833 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068134953 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067887929 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079842921 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068349095 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069288507 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077861087 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068823738 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070835384 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084023532 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067918279 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079377368 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067262447 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077752801 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065448345 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068521181 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081621051 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066433222 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067795971 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077738265 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068103563 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075559311 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078841467 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.206558636 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068305529 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070495725 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081467312 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079999868 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070146457 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070618333 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072555358 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.081792155 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.080177996 seconds)
  done (took 18.692422036 seconds)
done (took 37.51433785 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.217146382 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.15622893 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.185552411 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.122744907 seconds)
  done (took 2.115888034 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120877591 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103867972 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.097733381 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066997926 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102383154 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066524433 seconds)
  done (took 1.921799488 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.318790979 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210412877 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18819767 seconds)
  done (took 2.077847273 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208297735 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.193808327 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.421964857 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.263280541 seconds)
  done (took 2.566376867 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.148487983 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.091484675 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068698852 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084218697 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13583331 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161732525 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100926139 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124651368 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078401026 seconds)
  done (took 2.414651566 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148590661 seconds)
done (took 12.605199619 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.273394323 seconds)
    (2/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.188273832 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.13827831 seconds)
    (4/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.244979357 seconds)
    (5/309) benchmarking ("sort", Int8, false)...
    done (took 0.167642515 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.084086258 seconds)
    (7/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.082546999 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.12547258 seconds)
    (9/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.179196308 seconds)
    (10/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.113720724 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079671374 seconds)
    (12/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.076069706 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073436481 seconds)
    (14/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.192338749 seconds)
    (15/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.184545511 seconds)
    (16/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076466078 seconds)
    (17/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.087216909 seconds)
    (18/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.143111079 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.094566791 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.091883761 seconds)
    (21/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.211904158 seconds)
    (22/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.156573271 seconds)
    (23/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072267949 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.081820145 seconds)
    (25/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068753953 seconds)
    (26/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076107102 seconds)
    (27/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.081523505 seconds)
    (28/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.16099844 seconds)
    (29/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.198247228 seconds)
    (30/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050382749 seconds)
    (31/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074120344 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130080917 seconds)
    (33/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099643444 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070929878 seconds)
    (35/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.157223294 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.100014862 seconds)
    (37/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069451249 seconds)
    (38/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074777805 seconds)
    (39/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072291297 seconds)
    (40/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071441355 seconds)
    (41/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.215376026 seconds)
    (42/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.175983071 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08972273 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072679668 seconds)
    (45/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.173595452 seconds)
    (46/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074650736 seconds)
    (47/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.216268818 seconds)
    (48/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079825408 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085529407 seconds)
    (50/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073111041 seconds)
    (51/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066753689 seconds)
    (52/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.076227339 seconds)
    (53/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066935862 seconds)
    (54/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.062300164 seconds)
    (55/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.049656001 seconds)
    (56/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066250142 seconds)
    (57/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.162556724 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.089186032 seconds)
    (59/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.07226663 seconds)
    (60/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.141717804 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09303483 seconds)
    (62/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074800628 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.135344115 seconds)
    (64/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.14865782 seconds)
    (65/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07546812 seconds)
    (66/309) benchmarking ("sort", Float32, false)...
    done (took 0.132325485 seconds)
    (67/309) benchmarking ("sort", Float64, false)...
    done (took 0.130005714 seconds)
    (68/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073191441 seconds)
    (69/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090701047 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095919822 seconds)
    (71/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.146752436 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064534384 seconds)
    (73/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080591662 seconds)
    (74/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.192726856 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091460621 seconds)
    (76/309) benchmarking ("sort", BigInt, false)...
    done (took 0.187099967 seconds)
    (77/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.09869778 seconds)
    (78/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067273005 seconds)
    (79/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.158513727 seconds)
    (80/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.179787109 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.064979005 seconds)
    (82/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.049620468 seconds)
    (83/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.130232948 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.090435758 seconds)
    (85/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062058224 seconds)
    (86/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051668592 seconds)
    (87/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.345825429 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065636801 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092059177 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.162204928 seconds)
    (91/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.112306775 seconds)
    (92/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092166607 seconds)
    (93/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073649519 seconds)
    (94/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119938244 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065649561 seconds)
    (96/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062612036 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.181893972 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.089723581 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171780806 seconds)
    (100/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078179007 seconds)
    (101/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.182387033 seconds)
    (102/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069749999 seconds)
    (103/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.051716372 seconds)
    (104/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.162034489 seconds)
    (105/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071627588 seconds)
    (106/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072183002 seconds)
    (107/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.05190195 seconds)
    (108/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071909557 seconds)
    (109/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088651109 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073054954 seconds)
    (111/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080431049 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.1235464 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.094520954 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.138444138 seconds)
    (115/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071711539 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064539195 seconds)
    (117/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051375176 seconds)
    (118/309) benchmarking ("sort", Bool, false)...
    done (took 0.1464292 seconds)
    (119/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073883907 seconds)
    (120/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071842212 seconds)
    (121/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070471421 seconds)
    (122/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074206717 seconds)
    (123/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051146569 seconds)
    (124/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075430846 seconds)
    (125/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050543524 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.07637165 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070982685 seconds)
    (128/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.101636016 seconds)
    (129/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071973103 seconds)
    (130/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071636195 seconds)
    (131/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.157070466 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.1463089 seconds)
    (133/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070121246 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111418925 seconds)
    (135/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069784652 seconds)
    (136/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064294925 seconds)
    (137/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.155566087 seconds)
    (138/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072888007 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08875853 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092626793 seconds)
    (141/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066047193 seconds)
    (142/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.176880422 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.18163872 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065104076 seconds)
    (145/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07260151 seconds)
    (146/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066510382 seconds)
    (147/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.203057255 seconds)
    (148/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080653009 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.122116312 seconds)
    (150/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.049884873 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090572773 seconds)
    (152/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050315011 seconds)
    (153/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050154408 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.139256593 seconds)
    (155/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.155367696 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073736119 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065021196 seconds)
    (158/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074815421 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065752648 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.09419146 seconds)
    (161/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.154832889 seconds)
    (162/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05155414 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.14141556 seconds)
    (164/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.064993197 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.331875121 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.140333273 seconds)
    (167/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050498245 seconds)
    (168/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.154274888 seconds)
    (169/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064140251 seconds)
    (170/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078005573 seconds)
    (171/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.173980211 seconds)
    (172/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051044835 seconds)
    (173/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061245528 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.141896832 seconds)
    (175/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050314957 seconds)
    (176/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050526889 seconds)
    (177/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053748315 seconds)
    (178/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053619175 seconds)
    (179/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051218253 seconds)
    (180/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069214728 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065337013 seconds)
    (182/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062133105 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072328197 seconds)
    (184/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072184659 seconds)
    (185/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.106825447 seconds)
    (186/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.109793191 seconds)
    (187/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.050880546 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073798842 seconds)
    (189/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071691731 seconds)
    (190/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.107938896 seconds)
    (191/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053120783 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180985857 seconds)
    (193/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082154553 seconds)
    (194/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07045856 seconds)
    (195/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.152285753 seconds)
    (196/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.049716777 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.062836993 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.291391003 seconds)
    (199/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078698089 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090440991 seconds)
    (201/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052155245 seconds)
    (202/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080247297 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065941008 seconds)
    (204/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063891618 seconds)
    (205/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.16200371 seconds)
    (206/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066338103 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091547674 seconds)
    (208/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061283447 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074354192 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072873162 seconds)
    (211/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052297804 seconds)
    (212/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073679167 seconds)
    (213/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051080903 seconds)
    (214/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080082853 seconds)
    (215/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.196211759 seconds)
    (216/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.140637047 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065774118 seconds)
    (218/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.063363148 seconds)
    (219/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076839085 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071484136 seconds)
    (221/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064803007 seconds)
    (222/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074363901 seconds)
    (223/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051372414 seconds)
    (224/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.06694852 seconds)
    (225/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067645074 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.0642792 seconds)
    (227/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065320052 seconds)
    (228/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067660732 seconds)
    (229/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076258426 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065398199 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136752094 seconds)
    (232/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.105109057 seconds)
    (233/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050210312 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064742708 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094150538 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066126737 seconds)
    (237/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051171206 seconds)
    (238/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066388223 seconds)
    (239/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077595148 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088374713 seconds)
    (241/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051403126 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.095702724 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065549547 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065291075 seconds)
    (245/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.050808861 seconds)
    (246/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072316137 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.100295325 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.140350045 seconds)
    (249/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.17808981 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.096609117 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064055274 seconds)
    (252/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051561449 seconds)
    (253/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070386119 seconds)
    (254/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066354466 seconds)
    (255/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071691952 seconds)
    (256/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050395139 seconds)
    (257/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065769733 seconds)
    (258/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.098849134 seconds)
    (259/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.04974135 seconds)
    (260/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050029719 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093454797 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072563067 seconds)
    (263/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085425425 seconds)
    (264/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050596116 seconds)
    (265/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051805715 seconds)
    (266/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.049961185 seconds)
    (267/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066073291 seconds)
    (268/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066808105 seconds)
    (269/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064146205 seconds)
    (270/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.049953068 seconds)
    (271/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065278046 seconds)
    (272/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.049982389 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088069563 seconds)
    (274/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052407582 seconds)
    (275/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050287412 seconds)
    (276/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062639691 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089856588 seconds)
    (278/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05000778 seconds)
    (279/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060568518 seconds)
    (280/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064947275 seconds)
    (281/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170713953 seconds)
    (282/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072886244 seconds)
    (283/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.051846269 seconds)
    (284/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050179443 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073203317 seconds)
    (286/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.05123227 seconds)
    (287/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.11101701 seconds)
    (288/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065774031 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063526668 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063099278 seconds)
    (291/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068279301 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072119775 seconds)
    (293/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051579588 seconds)
    (294/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.05006603 seconds)
    (295/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065648832 seconds)
    (296/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068245304 seconds)
    (297/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051411869 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064827621 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070625972 seconds)
    (300/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063403382 seconds)
    (301/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.179906412 seconds)
    (302/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073036138 seconds)
    (303/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052608759 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090359074 seconds)
    (305/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050607982 seconds)
    (306/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067973991 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070555912 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08818434 seconds)
    (309/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.08839251 seconds)
  done (took 30.780234483 seconds)
done (took 32.15297142 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087290333 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096838191 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075375972 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094731414 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081675129 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076039807 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072728884 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078914954 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079946814 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082074573 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078611119 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053973583 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074083337 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074299922 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07438847 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091312498 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078724968 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073493011 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073156591 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064543762 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073554315 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065975402 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067099639 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054293756 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078489645 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071665357 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072428895 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074176224 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065788983 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065436601 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069101798 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073511881 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065636713 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078635434 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072120704 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073072612 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074836061 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07671319 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067536411 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065554229 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074651514 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065700489 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072958327 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073880454 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072063976 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071638471 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073428117 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078647273 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091709263 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068130395 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075022843 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076144669 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076145235 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073126597 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069750336 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073247336 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07116949 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091474201 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073129318 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067789215 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074061764 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07409411 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071205167 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072950556 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072871091 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075185517 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075348447 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071109963 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074391817 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071919812 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065267284 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072881123 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068699169 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065086992 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075922086 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077093496 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063765204 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071002935 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072446308 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070982422 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064182808 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067183336 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066782751 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071853505 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067066925 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053617983 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069220694 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071516767 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064295497 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073217427 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071661603 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072690774 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067124697 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07584346 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064533671 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070716548 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065278531 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065089993 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066604926 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069230119 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064696705 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067599114 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074620908 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066959679 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071509566 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079265107 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064715053 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072218327 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063971745 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064712991 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079547988 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074945803 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065069198 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067695794 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064421532 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073325189 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064517375 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064970787 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064854155 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064386825 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071208437 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064913617 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066809693 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072735766 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077462156 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063338556 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067472667 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065783316 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063585245 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070247228 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063515277 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063240602 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065315798 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060073979 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065417839 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063518353 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071491399 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.201415939 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073905335 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068125876 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074720138 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070950459 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07197829 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.0713971 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064770285 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059203579 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067385531 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068313526 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067737202 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065561354 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067464072 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065164783 seconds)
done (took 12.412944498 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069416661 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145588559 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099922942 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095444735 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085659856 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06660274 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07595893 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100898717 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067627291 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101279311 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.0874798 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085066098 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112221681 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064404711 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065563192 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069764137 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066991947 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081906488 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101011288 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086565679 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.11631059 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065020561 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094715043 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089029962 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086903582 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101391316 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068469265 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069723094 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069045458 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091109712 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086880726 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069469912 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066404137 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.096841339 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093228359 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08320276 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065961482 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082049559 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066213146 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065469967 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066857197 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097067336 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079627454 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079514961 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06979901 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.06872742 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06705804 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082678427 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088898097 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078093223 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086499702 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102706826 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068041043 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06518668 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064110643 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084526417 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06494142 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068624152 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065719325 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068056367 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065154379 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068409111 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081393991 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081715808 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069239497 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079565485 seconds)
  done (took 6.746749472 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086608034 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091510659 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083886515 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084682436 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06532512 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065524198 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065943483 seconds)
  done (took 2.007064164 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069311452 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092127403 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088943557 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089797953 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084129167 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08766727 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075442736 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066376541 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080457835 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06728981 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086993287 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102383096 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066750915 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072201389 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090789023 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066195046 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089962269 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066831331 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069230329 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090238216 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067683492 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082618946 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068938365 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066111213 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080881881 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065878952 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11351604 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070009137 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067254434 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068934034 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063709095 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107344371 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08067178 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075184548 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066352572 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080441141 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080748743 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064320539 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082995588 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070920897 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079386314 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066382055 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066966129 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064091276 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070474336 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077302948 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067282848 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066290993 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068328083 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085854854 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06676274 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079742862 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069223263 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068190918 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06733922 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069796182 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075927965 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06702268 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085874827 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067645968 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082813295 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08263792 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080150426 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082102307 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068521781 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079986353 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079934335 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068474526 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067382077 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070179265 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082466048 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064177298 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067669499 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077051173 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068273867 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089820271 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090049543 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067797648 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075702794 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067157237 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066680892 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066199936 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090131128 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070458086 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066231049 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070640002 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068819154 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064960357 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064945757 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069958286 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063926509 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067225653 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068739938 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06901819 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069018944 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08308188 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068088151 seconds)
  done (took 8.709809033 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071253259 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070611372 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071037588 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067922731 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067754173 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067775205 seconds)
  done (took 1.900516691 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097549223 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069594841 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080721294 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071727134 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105444211 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087025907 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087218952 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077824503 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08365645 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078598677 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086890413 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088646375 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093125446 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072391831 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08663591 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071794531 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087010322 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075771101 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077908491 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072986776 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086539947 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072380075 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073188483 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081258106 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076520597 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071502941 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066656089 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078684714 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078175753 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078776165 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07217472 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07562249 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070234547 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078613841 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086600306 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070096659 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070864337 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076982598 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07180434 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075299959 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087454169 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072323587 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073796787 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076871945 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077150269 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069918785 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077215834 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075591303 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086511525 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07730885 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077437683 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071477038 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075389196 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077298562 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070380131 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077772256 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077025168 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086857774 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072163556 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069722069 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068238447 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075476463 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077037672 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075414549 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078759112 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076921138 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069853784 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072897533 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072263081 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071725117 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077138565 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068749941 seconds)
  done (took 7.039848077 seconds)
done (took 27.853754763 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.541848065 seconds)
  done (took 1.990197109 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.622223155 seconds)
  done (took 2.096436205 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.567555519 seconds)
  done (took 8.040810976 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.405516271 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.49660258 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.721297456 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131286543 seconds)
  done (took 3.268553616 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.711090773 seconds)
  done (took 2.192672449 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.220245811 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.201951305 seconds)
  done (took 1.918148014 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.378563695 seconds)
  done (took 1.850788548 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.134428909 seconds)
  done (took 2.606387357 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.264704706 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175532773 seconds)
  done (took 1.922136348 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.493172287 seconds)
  done (took 1.972935219 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.851019868 seconds)
  done (took 6.329088565 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.219283296 seconds)
  done (took 1.741029879 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.244632079 seconds)
  done (took 1.723363525 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.713607166 seconds)
  done (took 3.197270137 seconds)
done (took 42.329784328 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083281164 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082833958 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081186179 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078450407 seconds)
  done (took 1.788575398 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080158257 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075831726 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078006653 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07268087 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076668578 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073274591 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074289276 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077068551 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072303755 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073109742 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072802036 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07252937 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074747238 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075178022 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071158628 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075615825 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076011698 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072191364 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075461292 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072573256 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070478832 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075132251 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07478134 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071378233 seconds)
  done (took 3.263564124 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081122101 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074895266 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.078180217 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074202581 seconds)
  done (took 1.797144466 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.08127484 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.096647916 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089419484 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078792283 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093726635 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086268169 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068744768 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068620188 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070716888 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077546653 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067810316 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09619855 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088365594 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077280863 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.07961631 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065598644 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068206634 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087493483 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077989769 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078712323 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069868724 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07792309 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067666858 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089050974 seconds)
  done (took 3.386258862 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081093223 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10646631 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078551527 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089020207 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091755894 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065414096 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074226646 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090999685 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127011129 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065885817 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070651485 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065045826 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07280224 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064763557 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076081657 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107107734 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110733825 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068290591 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096901415 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06536031 seconds)
  done (took 3.160385648 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074832385 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072014474 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067728079 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071396365 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078713406 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072424776 seconds)
  done (took 1.930764966 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071066234 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069735003 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068127153 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066967129 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071637344 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067251094 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065551879 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067408283 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067196829 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066507725 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066294979 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065378169 seconds)
  done (took 2.305585269 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.208482493 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068683464 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069550511 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065684195 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069959279 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06582325 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080454196 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067926224 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090995254 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066035109 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066189038 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.07031153 seconds)
  done (took 2.480288202 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213649524 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078344742 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242774523 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140278178 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111772736 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11561029 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104371098 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11375382 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143523161 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101359884 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16901771 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169278047 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108068111 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137628639 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089997143 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100819107 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156323141 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162985937 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105426047 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167186706 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146385717 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125533659 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148414638 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101274267 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108355464 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122559718 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071110165 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079648108 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172289367 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13588248 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147725584 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111760084 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093596385 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177689795 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176100292 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143828658 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136771496 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084383344 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104598623 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135019528 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20059281 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087829404 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161677976 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107847445 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217043933 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13534969 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121601894 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121251842 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107673455 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090156273 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146134972 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187105984 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138855372 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088567154 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114452269 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115184681 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.11638262 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105248039 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183702559 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16339981 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12864616 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071699966 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100958555 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154608719 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135169412 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109340576 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127025981 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093192712 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137128818 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157004848 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121215973 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146204079 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.13068476 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089414775 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119963532 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141365136 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128743751 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161794061 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124798901 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073106851 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125069008 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102903298 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080513937 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146119801 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07461338 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177110291 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098714419 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108748277 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11490283 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109057539 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10947842 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160625972 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145094534 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102486616 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064406764 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244580875 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.123208735 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149222183 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087941663 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109425938 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119056063 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079281278 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138143099 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076223667 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124584787 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077288048 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128813764 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130782616 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076708322 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122697424 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104069985 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101648411 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133794672 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162423968 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088657015 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082349506 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172807511 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123273652 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104486005 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145968898 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158700214 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101601489 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102147423 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15061444 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180426501 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089561183 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165046871 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107896265 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083445063 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087771155 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12445824 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111886042 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123877469 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081579151 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119307843 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169311809 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074617359 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095698939 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134289367 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079229335 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081005647 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106256078 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106687328 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09712943 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.09970365 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103326698 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136604522 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123356844 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105009173 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123256431 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097524386 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315518867 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089611675 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102575551 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105188646 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070395864 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137771451 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159342855 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07940839 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164755289 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124193611 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10800311 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120230122 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083378737 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140877632 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079190964 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070745177 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14581657 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111776677 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111240989 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152751934 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105793766 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127289523 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119685033 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134563115 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132653213 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130528635 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104911926 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089793507 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112543224 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125879721 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073052692 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091889968 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079750476 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104729272 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096558997 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082768717 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142774379 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124154833 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101545184 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1120882 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096439496 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148123584 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076110045 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128564998 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120096853 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096218736 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153958806 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155238625 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131759277 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098813387 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138217779 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069848783 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073220826 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088474102 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122120889 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081975938 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082604291 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257978475 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148427301 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131362869 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139879635 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114271156 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120666892 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156649672 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070742216 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116969002 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148809778 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123096882 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105858598 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090852782 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099337598 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143941385 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108584151 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184277074 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117288466 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124224807 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154592839 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.10132529 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079550645 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103758787 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137046267 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104727775 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146004021 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099605567 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088503898 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110371869 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074719935 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100035585 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127309921 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12025198 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13545765 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115779481 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13269386 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07764689 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116956554 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121612389 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123493624 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063713431 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120879247 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162793338 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094086827 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118267941 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1535399 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078445441 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.125330528 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175454194 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146054237 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087627396 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255577374 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121615974 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130346369 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121435116 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14199005 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10906178 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138907366 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110374952 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087554643 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088866197 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098026927 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104732131 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095383616 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10746074 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114833444 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.097106559 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133828603 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105635396 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110628248 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119208401 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098622888 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090977531 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098057614 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177735877 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119986928 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173558185 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.104446086 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145820342 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165010045 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075014159 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078840174 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078376009 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140777176 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084154464 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131210398 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.099347206 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106933105 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124863899 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146682726 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098417534 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068557653 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108624212 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134620823 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114200205 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098959841 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104770962 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164796857 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101193559 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079045371 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113473601 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106163286 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102788256 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17215281 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061003204 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097228728 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076037534 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079721926 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127155967 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291991959 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08091019 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104575666 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120946274 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113869661 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129211349 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103161355 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100420169 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116792113 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152766211 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129257594 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089550336 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111922571 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145364652 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157298897 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105675689 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09648951 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17596973 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153707514 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161476317 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088981636 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114552888 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114549702 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108951502 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138248529 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083388898 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164608639 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081792681 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137461114 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104908132 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089736126 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130043504 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.100220405 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087953857 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148492403 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118204344 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082665653 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077553596 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11878106 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120495657 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106537762 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074911336 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139463361 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073288286 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133220462 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16049333 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080797721 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107108628 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095808079 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079056153 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106557662 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102148749 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087795902 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098472121 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.321352585 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089052287 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152365472 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1361158 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11445196 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138245877 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103897778 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640720972 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078348414 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154148224 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11812315 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174858411 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100557611 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119605216 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110601458 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125251856 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146963878 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105676071 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.183194095 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132777919 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117914073 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079479757 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102701332 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105090116 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088762673 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108051855 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115190445 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118014421 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094969118 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11725412 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127003542 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083794231 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098598575 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157258695 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116850065 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144115934 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140404609 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085434206 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118578258 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13842312 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080252644 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122696184 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152500195 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105755915 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098845177 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080432958 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101336864 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158466156 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.0725841 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159191048 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118793721 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.253782331 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115471284 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114457207 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131857292 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109353609 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122250701 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093823895 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110576079 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11381197 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081967852 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077387894 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106210077 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113044905 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099004579 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098571135 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099724524 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154177319 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071990736 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100044507 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106477414 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146112871 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175523615 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089307558 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083032328 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119869794 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114472282 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113216007 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122600758 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078744761 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082092199 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081488514 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.078545452 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109444934 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113119844 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106320369 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110874452 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164147952 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.08284412 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.232845154 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095442392 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105378416 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069606941 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077849399 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09674948 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099235595 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108095313 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101953809 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160002043 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.0956031 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090599445 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092712941 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074194901 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082997948 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129018578 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109992771 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118034681 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09786193 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061606825 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107557543 seconds)
  done (took 59.058145375 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.113477828 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082683617 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097469598 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143612807 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122876773 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.20326242 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.153337704 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189732103 seconds)
  done (took 2.716725851 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07102238 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.099548725 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105751683 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082724103 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067420112 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070337427 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.233120802 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082684898 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066216094 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090662951 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.08075395 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070015676 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.436531683 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068014348 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071348186 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.066166643 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067358443 seconds)
  done (took 3.412947972 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.395704819 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.612867106 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.382585452 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073075677 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.428465724 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090796895 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.129179073 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.129755361 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072804802 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.533531632 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.703846575 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.124009759 seconds)
  done (took 18.2706712 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078214465 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071438708 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.087012757 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086309466 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072540802 seconds)
  done (took 1.982474423 seconds)
done (took 107.090524554 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08442727 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.398674288 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053600031 seconds)
  done (took 2.06693564 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086468956 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087834698 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085006548 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084161262 seconds)
  done (took 1.937523884 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077410898 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07919928 seconds)
  done (took 1.741952645 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.235092703 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.167782573 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087884738 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086032887 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080619143 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079316011 seconds)
  done (took 1.841426714 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076238606 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076072142 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072997009 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076410607 seconds)
  done (took 1.892959504 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080523325 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054377111 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055830566 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.057434427 seconds)
  done (took 1.839388489 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089554291 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080446665 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078118103 seconds)
  done (took 1.842600467 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106356714 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.087236046 seconds)
  done (took 1.786206374 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08460434 seconds)
  done (took 1.680738542 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.102239978 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.105369022 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.134214127 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.11178657 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140085436 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109776861 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084959935 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08632176 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076733793 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086942044 seconds)
  done (took 2.632205925 seconds)
done (took 21.420023018 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08196189 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.361769897 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361029391 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090872575 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66903997 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355747636 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.001994311 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09222705 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114802063 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06776625 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084762024 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649383655 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.959305782 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.314928762 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.944896651 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.414266968 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649008812 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068251165 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067512573 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067917995 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.98701067 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067889141 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067146221 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067989796 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649037763 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371787412 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068308363 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.414189008 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067658903 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06920532 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354410979 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067708048 seconds)
  done (took 16.243307419 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073208439 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122844227 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07458898 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084373292 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070564267 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068956415 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071309558 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069344921 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121490873 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067933519 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084559981 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067644855 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071621884 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068297746 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087402961 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067224444 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068405855 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067960528 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067920465 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068459349 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086712812 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067380264 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068106733 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067550071 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067897082 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080056307 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068016887 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067233996 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067559189 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069764016 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07058443 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068331866 seconds)
  done (took 3.99761046 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121791799 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128752074 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.0756401 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105524148 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114835271 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069886831 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147904651 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092885301 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129467079 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068025229 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084543012 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06777309 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101626723 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068365673 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087958751 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068265062 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069107154 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068898516 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068436081 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068333993 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088055748 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068194391 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068510579 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068628488 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068326849 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081474301 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068586668 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068442469 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068342026 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070816142 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071642444 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069035435 seconds)
  done (took 4.274837924 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075109649 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075647653 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083752996 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084425029 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.06977618 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072423469 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073442155 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069141862 seconds)
  done (took 2.212021833 seconds)
done (took 28.321225444 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081277983 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06986058 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07215532 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08175146 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07339302 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078873669 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066797299 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074991373 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07251337 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072953856 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07438817 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067459763 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070899515 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06714088 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074451313 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068171495 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079042129 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071574478 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078637053 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079506396 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070012073 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073277872 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074712161 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079267073 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078919421 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079018901 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078103788 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072982361 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069186831 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071099132 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076685179 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083988678 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068193279 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079314872 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067978178 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067805887 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071481997 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067575823 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08021635 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077002819 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069707361 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.07656935 seconds)
  done (took 4.692243373 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.09142754 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095289193 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08542422 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061856751 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066902865 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06561165 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089761363 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059452561 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058791153 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088413628 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.054972138 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059716726 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062920966 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053057601 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062468859 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055815143 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06191739 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055071831 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059414225 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059323042 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088711289 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.052989258 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077364022 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063152015 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055637839 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.060947892 seconds)
  done (took 3.360847848 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07729148 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08741008 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089631897 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130020594 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105932154 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079306777 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080406145 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095584771 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088846165 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066622218 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070975769 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093238098 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091321703 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074048209 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067435197 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087254632 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083999846 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069250815 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073723516 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096389676 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087540734 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086544539 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098951447 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083525705 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066500713 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069688928 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071396988 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082035669 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072161524 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076776983 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071105172 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070853871 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069398371 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.089995713 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071156301 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069236453 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091948054 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077168624 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07822041 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067668595 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070478752 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068066508 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092067563 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.131618677 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067276945 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073608893 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074924124 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076705716 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067174313 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087022864 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077837752 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.0662899 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07012661 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066208904 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066606563 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080141387 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068951355 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.06996916 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075879998 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070086806 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.091567662 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071630735 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08280184 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066187253 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07436238 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065840617 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06770841 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065628034 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094512906 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068193016 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111136388 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068863284 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067533536 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075511665 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074724557 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073487027 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067507178 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082827564 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077404852 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072862816 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077173754 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07120992 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070166207 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090887363 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069591455 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068467609 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067890963 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072906971 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069589104 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06788551 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079938655 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066894595 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069761483 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08411891 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066715208 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068475065 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073229738 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071310685 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066880586 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077859012 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072096227 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067500962 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076671325 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067021238 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069665466 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079970333 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073668497 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06610562 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07218859 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073058792 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067711691 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068679883 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069958934 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068694277 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075601627 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.0733963 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071297426 seconds)
  done (took 10.584835636 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.170258925 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159743798 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070475267 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14878002 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076579433 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079108672 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150352467 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094869532 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068019357 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068492018 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068268183 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110762383 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105858957 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11592997 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078650392 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067192093 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084623487 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114500178 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152373379 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146981812 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08494615 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076315428 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069730849 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068655143 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070118712 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07810832 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085440179 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076546353 seconds)
  done (took 4.384724668 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084769249 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.10445544 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076851677 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.09074671 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090633117 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06760562 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.06956883 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069382412 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081506758 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078446888 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066993496 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073313331 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074638713 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070628314 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06820638 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074730357 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074935052 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06909294 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071077816 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073569139 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077225476 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092160041 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071524891 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066752305 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07272722 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066697862 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063250227 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084473388 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067314451 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.094958351 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065246792 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076310052 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081719606 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068101616 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067251158 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067377556 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067178156 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067107218 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06967072 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065894697 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066237792 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056552278 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066218438 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078703137 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074056952 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055685448 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07220398 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071862689 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07262686 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064843818 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069789398 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069730595 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069901439 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075035053 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072286746 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072151054 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068378238 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073366017 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076176501 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066912033 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063959818 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065483659 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071920725 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065173318 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.077012726 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072442551 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06582295 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066788606 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.06882529 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073664943 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066929837 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070311959 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065119296 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.06955896 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071576695 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068728238 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.06797371 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065410509 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066789031 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067377251 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054871103 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.0669199 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052446071 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070108336 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066173745 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065660352 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066771891 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072349567 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079242808 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068342248 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072955534 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06800595 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066013586 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070369024 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059418052 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07005305 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082724957 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082220327 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067221172 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064929465 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081972933 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071677211 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066284325 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055125411 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074680113 seconds)
  done (took 9.095019342 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092510013 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070556163 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086158347 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093653468 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087170448 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075990892 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077956858 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069292407 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083457685 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074040569 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076982687 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067951694 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078360157 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078256558 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069850891 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077448683 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071744363 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085086213 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082761328 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067761133 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076001149 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080419706 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090549822 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082464966 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081232375 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081905675 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090359306 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.07218962 seconds)
  done (took 3.87162162 seconds)
done (took 37.589336459 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.700120592 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.854088027 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.687087938 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.059255674 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.834238676 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.699079818 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.862343489 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.67835812 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.699722255 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.716042239 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.894463604 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.844698906 seconds)
done (took 64.145171938 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.767962349 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.824827803 seconds)
    (2/2) benchmarking "String"...
    done (took 1.947633123 seconds)
  done (took 5.392023093 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.021106144 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.235053751 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.924329286 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.676651577 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.680929931 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.016813362 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.477667057 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.206593847 seconds)
  done (took 29.84026658 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.77960222 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.906374586 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.346592405 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.376273265 seconds)
  done (took 15.081165797 seconds)
done (took 61.80625073 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.693166587 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.699624114 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.706849284 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.660144681 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.730743706 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.686329586 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.15346242 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.758861041 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.673640365 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.666818434 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.679096681 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.100210747 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.682528398 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.981965668 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.6767581 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.682771066 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.71583144 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.121858258 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.829895316 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.696318868 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.673027677 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.723298005 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.677154238 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.679761432 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.71503727 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.673977136 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.112880769 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.672774757 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.290302014 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.675767601 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.702051044 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.319879609 seconds)
  done (took 201.128569601 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.674865104 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.532591508 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.600070186 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.675644172 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.012240918 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.867303388 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.961055182 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.109340714 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.677007573 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.705456167 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.857338237 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.6770692 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.89819321 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.673134433 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.706639548 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.68615487 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.850090503 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.908981412 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.708122087 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.864831867 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.689359246 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.683973805 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.63608484 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.856830568 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.716122805 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.776385759 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.681284543 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.852863427 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.879688805 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.822683445 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.684930108 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.691167252 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.90083292 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.549830691 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.708970408 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.696236036 seconds)
  done (took 166.093479119 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.05405225 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.681027759 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.682529533 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.678732675 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.679509346 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.69346206 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.678786304 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.802040338 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.803496651 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.276181365 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.155121 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.733848169 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.513897949 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.677227869 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.749049978 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.692159317 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.678080367 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.696481174 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.708360991 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.680531547 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.682265204 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.804768222 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.690758876 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.700812004 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.688890755 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.682616673 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.686359159 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.055324402 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.679539795 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.686741222 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.936291314 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.678682074 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.682945856 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.57288299 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.310876961 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.767206516 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.680612999 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.68769528 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.682790536 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.907187831 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.679083445 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.682533324 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.686200553 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.844895615 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.679015508 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.801097509 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.68291202 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.188963108 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.683949696 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.684335727 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.500671244 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.369272555 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.68353719 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.682168327 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.687556354 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.683087475 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.681206668 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.690246097 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.4366154 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.756041827 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.685333788 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.688902493 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.687514609 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.685600962 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.750593492 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.68056467 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.947364025 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.739602912 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.806319093 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.803483328 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.685720268 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.752640067 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.775449459 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.682019548 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.683134108 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.685034401 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.686154488 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.765845747 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.682347558 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.813937642 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.688527603 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.685286545 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.736080209 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.754116627 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.682226891 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.57412237 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.68437606 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.682652865 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.993072946 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.748511693 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.679738749 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.683517439 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.682323327 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.812719925 seconds)
    (94/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.803023299 seconds)
    (95/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.463086079 seconds)
    (96/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.683325234 seconds)
    (97/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.420072378 seconds)
    (98/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.684453189 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.682265184 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.684740782 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.82375933 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.68269364 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.868909634 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.685785212 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.769990324 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.686427769 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.686051871 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.686214113 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.719219954 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.687358324 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.749912032 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.685247863 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.684621243 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.060513741 seconds)
  done (took 391.618462792 seconds)
done (took 762.568821758 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.34866767 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.294508569 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.408717749 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.318368241 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.294553943 seconds)
  done (took 13.290095003 seconds)
done (took 14.912816627 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.774380455 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.777096928 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.706778258 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.777117959 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.705691352 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.775981308 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.753491575 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.711877509 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.746553102 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.711539984 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.745193318 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.71383866 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.698874086 seconds)
  done (took 24.225936443 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.920382295 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.93041407 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.758993712 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.933428558 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.73384915 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.935836989 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.856287599 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.841347527 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.845152421 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.703199713 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.700053636 seconds)
  done (took 21.785553991 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.928825603 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.930632254 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.767411636 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.932665939 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.742370394 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.927892393 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.856653127 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.846338767 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.847254956 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.703714735 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.699739712 seconds)
  done (took 21.813907328 seconds)
done (took 69.44953895 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.696212284 seconds)
  done (took 3.323460195 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.723065065 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.881281321 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.702769325 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.700727638 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.695291762 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.697779912 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.701232725 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.697670986 seconds)
  done (took 15.428105573 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.6945526 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.691899156 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.694624852 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.694621779 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.694803397 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.697983604 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.693685584 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.697443245 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.692064369 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.697144708 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.696202067 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.697597389 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.693285485 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.69798986 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.695842049 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.700766666 seconds)
  done (took 28.758576183 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.695293394 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.692715129 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.695242426 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.696797014 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.694774256 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.695149464 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.69555143 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.694046167 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.693511648 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.694336005 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.699369155 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.694532072 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.696662149 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.694220493 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.695679634 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.69445347 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.694891534 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.696995969 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.697953447 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.696468173 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.696893428 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.695215143 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.696215626 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.696536627 seconds)
  done (took 42.324846825 seconds)
done (took 91.457361744 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.582341948 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.080849395 seconds)
  done (took 8.291121505 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.699027312 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.698762235 seconds)
  done (took 5.070275896 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.696651939 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.698607772 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.697862269 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.699501234 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.698133342 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.697855775 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.69925434 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.698670646 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.699979072 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.698963497 seconds)
  done (took 18.615610933 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.698682206 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.700084037 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.697624364 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.69888639 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.698785493 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.698241996 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.699230039 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.698976518 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.698591567 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.695259399 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.700078585 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.697513274 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.698718535 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.696173114 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.69948999 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.698765176 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.698893053 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.697319934 seconds)
  done (took 32.201678924 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.699849908 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.701266829 seconds)
  done (took 5.034111233 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.69560899 seconds)
    (2/7) benchmarking "second"...
    done (took 1.697379305 seconds)
    (3/7) benchmarking "month"...
    done (took 1.696107308 seconds)
    (4/7) benchmarking "year"...
    done (took 1.698497505 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.697206457 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.696911589 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.696797125 seconds)
  done (took 13.511586525 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.699493075 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.856127196 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.923187867 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.375076743 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.70182686 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.702739749 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.659803322 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.705131231 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.70333437 seconds)
  done (took 18.958588386 seconds)
done (took 103.309542434 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.530022635 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.695571138 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.053765386 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.769647891 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.7115424 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.993142986 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.708122031 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.996182436 seconds)
done (took 42.089119003 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.705113683 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.243309346 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.277069652 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.093101528 seconds)
  done (took 12.240244017 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.674931751 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.210708075 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.727763945 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.272700376 seconds)
  done (took 19.53704911 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.067842974 seconds)
    (2/2) benchmarking "read"...
    done (took 2.044811292 seconds)
  done (took 5.745885468 seconds)
done (took 45.855365179 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.697089768 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.703209362 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.696770942 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.694409145 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.696572082 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.693187756 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.69459999 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.704282888 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.695474077 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.696905032 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.69510596 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.695997958 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.692294081 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.699232419 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.69298656 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.697306532 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.695232335 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.693260319 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.694199251 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.703654928 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.696388713 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.696906495 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.695551304 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.695866124 seconds)
  done (took 42.345533368 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.700470717 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.695057231 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.69698004 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.698611982 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.693885464 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.698158398 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.702663464 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.693519014 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.699348828 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.699179882 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.693822633 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.694567982 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.705796716 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.696882816 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.698321555 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.695916189 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.697765542 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.695435298 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.702154647 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.696767487 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.697695701 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.695136077 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.695842063 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.706545754 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.693830315 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.697260544 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.699039713 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.696719483 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.699006786 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.698214515 seconds)
  done (took 52.563783087 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.703692849 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.707960866 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.699663751 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.698684379 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.701340702 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.699454142 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.700829947 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.701073036 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.699244321 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.700506872 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.710410483 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.701021942 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.700976293 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.702154487 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.699866592 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.702382881 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.703715138 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.700884053 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.701754816 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.700922388 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.700899539 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.702359579 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.707114573 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.70310158 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.70125779 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.702860781 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.700160484 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.702763444 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.701829429 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.702986987 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.704351182 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.703265866 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.702562182 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.702220577 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.709780377 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.705003436 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.706901009 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.712111804 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.702565562 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.705741788 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.70591778 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.708830979 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.706621134 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.706971686 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.702599489 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.713383174 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.702251632 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.702905373 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.704329539 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.703003772 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.704028074 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.708490877 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.705074008 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.702997544 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.70415393 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.704641122 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.705128021 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.708879936 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.703856111 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.705212936 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.705937819 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.707759252 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.704844075 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.711821254 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.70610633 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.706118059 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.706862688 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.708640475 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.704158764 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.708950363 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.705871068 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.707099671 seconds)
  done (took 124.34360411 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.705056038 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.704890689 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.710235111 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.704280687 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.70596383 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.706626012 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.704139922 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.706842464 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.702454022 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.707215683 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.706948055 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.705593874 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.704385368 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.707788683 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.708392391 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.705225992 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.707606365 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.706069249 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.708882466 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.70864625 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.710179804 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.705008859 seconds)
  done (took 39.184286327 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.706584423 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.707069343 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.708623841 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.707853795 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.705362576 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.707539865 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.709053326 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.708930441 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.707720789 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.707339576 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.706042079 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.712928235 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.704902675 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.708083272 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.710936792 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.707815573 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.707510996 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.707202497 seconds)
  done (took 32.382806369 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.707617917 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.706328014 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.706808338 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.70886593 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.70569274 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.707356824 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.708620017 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.709123269 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.709048435 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.707281412 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.710823665 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.70860265 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.709361466 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.706042666 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.707277998 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.707104104 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.707416911 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.707269332 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.712850732 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.706040863 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.70419819 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.709601574 seconds)
  done (took 39.214598947 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.707209235 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.708852376 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.704869396 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.707534178 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.706671442 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.711625998 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.70859317 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.710110477 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.708518115 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.708529718 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.707737309 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.70947561 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.706903253 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.708034663 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.707623497 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.706286634 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.712768513 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.707864917 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.708833841 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.706517215 seconds)
  done (took 35.807556467 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.710510665 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.711294338 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.709273897 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.710251862 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.710654043 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.712448542 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.710634243 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.710216187 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.710160448 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.712038274 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.708980473 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.711937779 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.709778414 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.710117125 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.710030724 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.711936558 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.712638168 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.709704328 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.712300196 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.712192092 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.71006999 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.709710059 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.710393828 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.710921769 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.711202188 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.710280426 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.712239286 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.711633905 seconds)
  done (took 49.548163382 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.713297838 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.710034882 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.707810709 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.708581007 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.70832982 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.708422969 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.70883068 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.709860973 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.710365594 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.707376319 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.713183125 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.709855971 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.711679686 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.711288381 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.709829459 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.713546478 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.713485426 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.708957254 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.712424043 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.711768351 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.712905999 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.714566211 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.715545616 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.708809462 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.709914159 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.716569113 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.712198935 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.713137047 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.713436612 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.712733829 seconds)
  done (took 52.984141335 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.731334685 seconds)
    (2/2) benchmarking "in"...
    done (took 1.733046686 seconds)
  done (took 5.110024756 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.712994705 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.714410173 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.711895552 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.710675373 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.710765317 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.716266454 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.713465124 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.710752405 seconds)
  done (took 15.346961359 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.712055136 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.713887422 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.719133437 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.714150719 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.714305296 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.714711738 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.720526858 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.715705414 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.71671849 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.713445104 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.718043829 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.71931205 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.714667334 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.71460575 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.71683705 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.714450733 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.714189577 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.715062319 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.714559907 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.717857913 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.717077711 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.715199068 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.716055139 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.713446036 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.717828389 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.731077299 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.720366354 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.714188652 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.716095431 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.716371244 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.71649109 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.720275365 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.716768004 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.716526418 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.715495987 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.717070421 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.721621202 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.718261337 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.717432037 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.714323981 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.713018527 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.711104784 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.713597112 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.719038066 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.71646743 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.71774714 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.717115765 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.713439911 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.718324333 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.725783825 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.723052966 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.715348358 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.71368197 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.720535908 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.721420953 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.721858582 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.717972926 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.721756216 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.72800503 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.727735071 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.730757384 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.723240285 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.71676137 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.716766004 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.724975724 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.74323196 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.726294237 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.715314941 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.715944482 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.714477302 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.722506688 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.727424117 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.732517025 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.718727707 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.718685997 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.716179914 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.718598035 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.717620554 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.727023224 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.717934506 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.715695722 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.716686764 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.725386746 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.741181347 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.714996923 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.718129593 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.718470305 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.716763712 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.717665569 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.727884835 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.717680115 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.720425871 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.71947503 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.718712551 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.718639202 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.720855419 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.720859765 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.718749481 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.71778905 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.719315571 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.718715893 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.722534342 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.729886407 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.721921696 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.721438493 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.727105055 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.720485437 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.720292122 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.726123435 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.720986707 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.722857009 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.722509124 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.726809331 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.718486452 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.723012138 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.728499689 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.721306253 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.722695487 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.722417106 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.72111921 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.730164708 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.747653916 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.72077918 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.721015024 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.72462019 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.733566426 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.721437316 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.722397698 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.721311793 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.716728707 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.720589026 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.723457723 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.72203852 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.722340573 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.721037352 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.722077085 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.7186269 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.721065938 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.723661533 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.722264393 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.724645715 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.720585297 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.722094533 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.721590064 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.724478057 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.720919378 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.726978216 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.722215526 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.722452365 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.722876085 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.720532095 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.723393563 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.721829105 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.721646782 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.721060135 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.724820205 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.720661682 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.724376416 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.725150977 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.723674659 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.722029714 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.723755094 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.727350748 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.724676135 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.72794655 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.722875628 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.720756561 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.724375295 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.725230924 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.72258924 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.724162574 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.722981952 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.726027508 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.734583301 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.724083755 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.725995413 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.725440227 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.723657569 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.723981054 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.722817209 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.726777684 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.732643771 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.723246286 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.732259443 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.725588608 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.725222374 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.723311712 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.725587517 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.724091162 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.723454985 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.727645411 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.732103673 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.735565194 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.734666395 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.726670346 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.728563939 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.726856544 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.729815393 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.728244033 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.725289926 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.72479765 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.724830516 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.723711877 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.724922513 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.725677 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.725809409 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.726061573 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.727405851 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.726211892 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.726892258 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.726305688 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.726595015 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.725775118 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.7227289 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.72537135 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.725360915 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.726010245 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.722929261 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.724813309 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.725002939 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.728416492 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.728133598 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.7322576 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.724300752 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.72702188 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.727533093 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.724432686 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.726218297 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.725326685 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.727651704 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.725298006 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.731480546 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.727412228 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.727221796 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.732604353 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.726823022 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.724070072 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.728365338 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.728916127 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.723230034 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.728810114 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.737338155 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.727745103 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.728555059 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.727949084 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.726583468 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.728403516 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.731378435 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.724562033 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.726982494 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.727915975 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.730950093 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.725328515 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.729361104 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.728355714 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.728259892 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.727226316 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.72960128 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.727670128 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.730200335 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.730995854 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.727289006 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.728648547 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.730823593 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.736614419 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.73229486 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.729629179 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.729099057 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.730497264 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.734579175 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.729678547 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.728490708 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.729914138 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.74155138 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.736711532 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.734835726 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.731531232 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.729915437 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.731971862 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.731102065 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.734653055 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.730732037 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.729968571 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.729935566 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.729022074 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.726623457 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.729782112 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.729192464 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.729392758 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.731313295 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.733962505 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.729783446 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.729569484 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.732361924 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.727872556 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.727137261 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.729541652 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.731412895 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.730501555 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.733133327 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.72889917 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.730149438 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.734755856 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.730390412 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.731155075 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.730288017 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.728593241 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.731844484 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.731537579 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.733305957 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.734483313 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.740112184 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.732671689 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.741307957 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.733941156 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.741482914 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.728618437 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.735049105 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.739443045 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.727245069 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.73002733 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.732732067 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.731642106 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.736640642 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.732728382 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.732790319 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.736121207 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.733271657 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.73348042 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.732696499 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.73108284 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.733190091 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.730988071 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.7401683 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.733771752 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.737415639 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.734064974 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.73094121 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.73405928 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.733418817 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.729541362 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.736221572 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.734785025 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.732524881 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.733092277 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.732881626 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.733893895 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.733166466 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.73370607 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.731254507 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.733414472 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.739929329 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.733991769 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.739757351 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.733609467 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.741449748 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.733225826 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.739677318 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.735432794 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.733280472 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.734513895 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.733359166 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.735884816 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.733986847 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.734324198 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.73418154 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.735122793 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.739422297 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.734576665 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.735036612 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.733509084 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.734977973 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.7349915 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.74437713 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.758417206 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.736881312 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.737966559 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.732356686 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.736415825 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.739901814 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.736563027 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.732591793 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.737185299 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.745021863 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.744525696 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.735537896 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.735954487 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.735450185 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.736933984 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.734369561 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.737253177 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.735057087 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.735301979 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.736296382 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.736669352 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.738221249 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.735558687 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.735927021 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.738743037 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.734599689 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.74569665 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.739094371 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.736007266 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.735785173 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.738413555 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.733311744 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.735212264 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.735114104 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.733128236 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.736785381 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.736950138 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.743061098 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.7431539 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.740925973 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.735374219 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.738378508 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.734820221 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.736961142 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.738308374 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.735290615 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.736959216 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.738286226 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.73594054 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.735905233 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.736212327 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.73472192 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.737239869 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.736310109 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.738260021 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.74634711 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.737583121 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.73717423 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.736958314 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.736867628 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.736418316 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.73842272 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.74681572 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.741039966 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.748926865 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.745910908 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.742697916 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.737052141 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.739979964 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.746755142 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.73676293 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.738443763 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.737890523 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.73622995 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.737386347 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.740857935 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.739221272 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.745493194 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.738742478 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.738374003 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.745254396 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.738164032 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.741939035 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.739494282 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.743140955 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.740635485 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.737474023 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.737564749 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.736580118 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.743117601 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.740730377 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.739284997 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.741318195 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.735237412 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.739338945 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.744900729 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.739947426 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.739758769 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.736288195 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.740242591 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.738330043 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.739582947 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.738229496 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.739108052 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.738046786 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.742278067 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.746367299 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.737152044 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.739631988 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.741978252 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.741550172 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.740709585 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.742339583 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.737312556 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.737871129 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.739672824 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.742420193 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.73998057 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.742693656 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.740239787 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.742922934 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.740556529 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.73922172 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.743579718 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.750678277 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.750711138 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.738290231 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.739296057 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.739849009 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.742691982 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.741052795 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.741446086 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.74219531 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.744059498 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.743908855 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.743921485 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.743194984 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.743936046 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.757830364 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.742939317 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.742592079 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.742309509 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.746084497 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.742773902 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.739583533 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.741581577 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.744455275 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.745120426 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.750816172 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.745231217 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.7477161 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.741663617 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.741138794 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.744792856 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.74659783 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.749274385 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.744586239 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.742439514 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.743379464 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.74905093 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.759478738 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.741461187 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.751985459 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.771679263 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.745526025 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.74477729 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.743931526 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.743012234 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.742564245 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.747578585 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.742740914 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.745219563 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.744215082 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.743476772 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.7447832 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.749470746 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.745224954 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.742067676 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.744836076 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.743257068 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.742574428 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.742363873 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.744512171 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.743586222 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.746324059 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.746825675 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.744949104 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.743693502 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.757039578 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.755340056 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.744879984 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.745316015 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.739971865 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.74909115 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.748465534 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.754611959 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.752852482 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.746243111 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.744239737 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.74636439 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.745494179 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.742339963 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.746503637 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.742349752 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.74669229 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.7429684 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.757883986 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.757750684 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.749768527 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.746824792 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.746394622 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.745022829 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.74301595 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.747053072 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.746260972 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.745888757 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.745554467 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.750094613 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.74696818 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.746958862 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.747927959 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.755671419 seconds)
  done (took 1033.965614879 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.743297472 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.742800099 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.741668494 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.744778054 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.743354718 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.745045244 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.743873134 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.743281016 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.744246574 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.743908002 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.743432631 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.744777117 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.742820136 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.744439008 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.746780676 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.745374765 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.745123115 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.744135329 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.745962907 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.74454423 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.746343186 seconds)
  done (took 38.30693812 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.746894475 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.742101635 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.74509463 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.748193552 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.74431009 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.747189685 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.745654154 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.74650372 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.747806726 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.744029712 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.746763504 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.746461092 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.743985808 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.74574537 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74560386 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.747548185 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.746393203 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.745269526 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.748633432 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.746106421 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.749180634 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.748275214 seconds)
  done (took 40.09602182 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.750201192 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.750967781 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.747739986 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.744888693 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.749534451 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.745266337 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.750326142 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.7485909 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.746756461 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.748636356 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.745068878 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.751151339 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.753822819 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.753533613 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.751497405 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.748466922 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.893409272 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.748522243 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.75146225 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.748338267 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.745315074 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.754284856 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.744200922 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.748208262 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.74820612 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.748505209 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.750067985 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.750910248 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.748612528 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.751939148 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.754216292 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.751031448 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.750892069 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.753321462 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.747903116 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.749613824 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.755026843 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.750944573 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.745859208 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.751061832 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.759673839 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.769823435 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.752033632 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.757484342 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.749033225 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.750262611 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.753804403 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.759870795 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.747573513 seconds)
  done (took 87.607093839 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.750300592 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.75354127 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.746795717 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.752955076 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.750885667 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.753392716 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.752309962 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.752102565 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.745243941 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.746801318 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.750470888 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.749698071 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.746569064 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.752048846 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.751866008 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.749853881 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.748865001 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.749112318 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.749702268 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.750657651 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.748638974 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.753659535 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.751367698 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.750020043 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.751954749 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.748833871 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.750689283 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.754224927 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.748344991 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.748648728 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.752475552 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.751030097 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.751777415 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.750805226 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.74936268 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.75265007 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.751556257 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.752191937 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.753226326 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.748832003 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.752634128 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.752931274 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.753744033 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.758235653 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.749685604 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.75087191 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.751611098 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.749593724 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.751304435 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.754217583 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.753954816 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.752317928 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.754775166 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.75068962 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.75622324 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.75463611 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.749835848 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.75227879 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.75204202 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.750090071 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.752013371 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.754764237 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.751945323 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.755859236 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.753921972 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.751020814 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.752506628 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.754335258 seconds)
  done (took 120.785335249 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.753620945 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.755143112 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.755853369 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.75659162 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.755087803 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.754126334 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.754246962 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.75452051 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.75510252 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.757061177 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.754242216 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.754976678 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.75613742 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.755894279 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.752068239 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.755965533 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.755400472 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.755402574 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.758229091 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.753530545 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.756994639 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.756686969 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.755659972 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.755493146 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.75718503 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.755421153 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.756532809 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.755587507 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.756283075 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.756476186 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.757241567 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.758266203 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.758578831 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.757774905 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.756564386 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.756347776 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.757146738 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.756862419 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.756299427 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.758352987 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.757656496 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.756742145 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.755902664 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.757629313 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.756930044 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.757707312 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.758222805 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.756399642 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.756292594 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.755643102 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.7578455 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.756898022 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.757620365 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.756371026 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.758070045 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.758664295 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.757736087 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.75722882 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.756703824 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.757064374 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.757625948 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.756824765 seconds)
  done (took 110.585653982 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.756617757 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.757816148 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.753789065 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.753249831 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.757903737 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.755765988 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.757946944 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.759238195 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.759096604 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.760347512 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.758275993 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.756439682 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757069545 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.75973674 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.753978465 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.755730412 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.755382691 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.754407587 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.759741653 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.753702251 seconds)
  done (took 36.823693829 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.755727264 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.759383956 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.75553704 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.757393173 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.758366449 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.757165666 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.757402846 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760133392 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.754847162 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.758108235 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.75832379 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.759328728 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.754726843 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.757156525 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.759672292 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.757136484 seconds)
  done (took 29.808217479 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.759830756 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.757820741 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.760807388 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.760192986 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.75736495 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.755985651 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.76070603 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.758314229 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.756529599 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.756622656 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.758941326 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.76132641 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.75695566 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.759875717 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.757411315 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.760513483 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.7586212 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.756217272 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.760401865 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.759349317 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.761634196 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.758391683 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.758396379 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.759667241 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.756757519 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.758412459 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.759232414 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.756968074 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.75743949 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.761436455 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.759759027 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.759084391 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.757646807 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.758460508 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.760593892 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.757767769 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.762413145 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.760996944 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.761190495 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.762105013 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.763141004 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.759179349 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.762578981 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.760381079 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.759848042 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.763631674 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.757096798 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.757821013 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.75826315 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.760697841 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.762402749 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.761388234 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.762472538 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.763848585 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.762213214 seconds)
  done (took 98.469168437 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.762929945 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.761859698 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.759598024 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.761964159 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.763430883 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.758542078 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.761585544 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.760150691 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.759733724 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.76167537 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.760802965 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.76270829 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.759443703 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.762567589 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.759071298 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.762749123 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.760830723 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.760772252 seconds)
  done (took 33.392587926 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.761151889 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.759836102 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.761367457 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.760646988 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.760895211 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.762740654 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.759930315 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.763071158 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.763929284 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.760641691 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.759099047 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.76433925 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.763826442 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.764202713 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.762389227 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.762825214 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.763677095 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.762988126 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.760247369 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.761031235 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.76565825 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.762791782 seconds)
  done (took 40.45998633 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.761115466 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.765352003 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.780298123 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.786479121 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.785103125 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.799283844 seconds)
  done (took 12.37193548 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.760932494 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764250997 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.763849977 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.762968385 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.764263933 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763387406 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761285945 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76373807 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.762637563 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763471545 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764497409 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76384841 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766164242 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.761370982 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764508409 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767527685 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763400113 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763834215 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763118292 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768105181 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.763986434 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768395155 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.763131239 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764728931 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764274201 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.762247235 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764664413 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.762909996 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.762792736 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767140511 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766267663 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.763351965 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766516531 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764243282 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767833713 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765879726 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764804779 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769253428 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767035134 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765427773 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.768191608 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766525986 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766323107 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764757002 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767022854 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.762679818 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765657975 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764132782 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.762962166 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768359626 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766752158 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766187987 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76685775 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768231487 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767157178 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766786232 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766638843 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766247237 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767718549 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766151519 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764954345 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768866572 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765228665 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766327801 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769036835 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766180592 seconds)
  done (took 118.206175409 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766159388 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.765005621 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765050811 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766389816 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765389946 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766331388 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765965044 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766809043 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766379487 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.763407632 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768519607 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765702115 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766591423 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766591469 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767169427 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765311329 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765674139 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765856947 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765696162 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770814303 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764424593 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766366763 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765926414 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767404404 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766279471 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769011676 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767196762 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767216138 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766967672 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766442259 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767300871 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76692565 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765353805 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.765921552 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768724949 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766625537 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76754946 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768537566 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767418624 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772335225 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767234602 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770750261 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768210306 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769052905 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768337204 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769833951 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767977502 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767517233 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768109487 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769247661 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770882258 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768388477 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770241143 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767793166 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767675824 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770799089 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769943575 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768602776 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770703617 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771128333 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76678919 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769321585 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770797689 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770347397 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769593845 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76829705 seconds)
  done (took 118.36705211 seconds)
done (took 2409.701826321 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.83160151 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.808586247 seconds)
  done (took 15.341114753 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.931334716 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.882377706 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.765913302 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.779105398 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.764581406 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.781533054 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.772036927 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.766444873 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.766205539 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.76921485 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.768583392 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.954888618 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.767335454 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.765927485 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.766884824 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.862933795 seconds)
  done (took 50.580408704 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.77065482 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.774514783 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.78144289 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.774377992 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.769941337 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.78298768 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.806020858 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.773970156 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.804806574 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.782415446 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.839242364 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.781646123 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.773022591 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.818459556 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.782277549 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.790794326 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.86096227 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.844493043 seconds)
  done (took 34.010469218 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.84834336 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.773010083 seconds)
  done (took 10.329880688 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.767951204 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.76929846 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.761570191 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.782126075 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.787627659 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.759931054 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.788550502 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.806121078 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.778463066 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.792506486 seconds)
  done (took 69.514761191 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.780672193 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.771969536 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.773576088 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.772396875 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.761257802 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.76658571 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.771909443 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.766009674 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.442112051 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.803667132 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.775425877 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.777447835 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.773444077 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.771560101 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.773121441 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.793906608 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.901569585 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.769762249 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.770676801 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.779596774 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.775206925 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.85230096 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.786543079 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.773808565 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.802608591 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.451255569 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.779391032 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.777883648 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.90422321 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.772445529 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.772714253 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.774489992 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.779760261 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.168557788 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.046597984 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.773935977 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.779904789 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.782231218 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.771145619 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.88668904 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.773884123 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.777402663 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.679720072 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.024525471 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.889054034 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.811774047 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.153802848 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.774222031 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.773609015 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.803411644 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.775053679 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.774209596 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.784612721 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.283517033 seconds)
  done (took 127.296896516 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.767895639 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.033390747 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.925056145 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.768734415 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.056917595 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.978071367 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.770543935 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.821510318 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.768599276 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.003114646 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.929668994 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.879530785 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.772324715 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.768821919 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.766738165 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.7659719 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.933575112 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.843553413 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.772488702 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.766493172 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.802923884 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.012343693 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.899760728 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.77144628 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.795250458 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.983431575 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.895012866 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.879059576 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.045360009 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.769277408 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.83535582 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.771075933 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.770674378 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.771304228 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.9299867 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.869693731 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.862121407 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.772916282 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.76895289 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.771473853 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.442310505 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.967242762 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.870091933 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.916583533 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.014471058 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.975011197 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.563146817 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.770479513 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.509811983 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.933597088 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.004683014 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.001786918 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.894487905 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.775242241 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.291389392 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.773796474 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.770352838 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.00663678 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.999843143 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.874030967 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.77274126 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.771315781 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.770791127 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.018046482 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.775894658 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.86886071 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.772544073 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.770268108 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.870222066 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.87946999 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.003449382 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.985418958 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.807551943 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.111648365 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.250809901 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.022394615 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.841453203 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.006141484 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.776580909 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.770932979 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.85980899 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.620820513 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.931030977 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.024249083 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.030857872 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.808147382 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.500084081 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.774053158 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.003421511 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.997680044 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.078635765 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.011395447 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.927172652 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.967305098 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.772496202 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.772447696 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.01366844 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.912060621 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.776651392 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.136871603 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.011566829 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.347764792 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.800803176 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.084366325 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.9079634 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.775773596 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.416420845 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.772606609 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.99928437 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.816724588 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.7765658 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.774721131 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.999600269 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.849921843 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.773800872 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.411014315 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.839708586 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.776761067 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.012771774 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.775971982 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.047619827 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.77854379 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.012197469 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.542508304 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.808022365 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.002084551 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.013084295 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.775163444 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.040630344 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.021812874 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.893369548 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.993818799 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.401095941 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.773343644 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.069491057 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.777641474 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.77480673 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.946481449 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.776048361 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.92174733 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.774847476 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.116976079 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.798791203 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.929735289 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.77449503 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.033709057 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.81258501 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.826622115 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.777959498 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.904061215 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.776577917 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.648810283 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.931268686 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.778170126 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.774069438 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.513636347 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.774857717 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.931875727 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.007891969 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.801438255 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.851075621 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.450822319 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.776312349 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.865272473 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.803089449 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.118600646 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.777343405 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.932326134 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.775745002 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.304750569 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.77257117 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.019522063 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.959681095 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.776905317 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.777063538 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.689442103 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.773208108 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.774999582 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.938068622 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.283563932 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.775695531 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.980615836 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.780088391 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.907730543 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.77370829 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.855588952 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.130918808 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.7753762 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.776132866 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.776601621 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.776098476 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.776634249 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.044243585 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.806121999 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.309673135 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.916957194 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.049127834 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.098550775 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.032334068 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.824697415 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.777272899 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.022247225 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.77969878 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.842294765 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.779314517 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.80231528 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.011204601 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.780756455 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.990999302 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.061274695 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.722423111 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.826445167 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.779858628 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.777591828 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.656427847 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.929361916 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.86782209 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.779414977 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.777813116 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.896293474 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.904391068 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.991691941 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.780711509 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.957566014 seconds)
  done (took 882.971140602 seconds)
done (took 1191.741817168 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.779339336 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.774965008 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.765704587 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.778356423 seconds)
  done (took 28.810084131 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.789623145 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.785497458 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.786728372 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.785138806 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.788471077 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.785858658 seconds)
  done (took 12.435809255 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.829764801 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.77859268 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.777942488 seconds)
  done (took 21.098070476 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.852695643 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.190294006 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.895136307 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.223193462 seconds)
  done (took 9.87403592 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.789140431 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.786303882 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.787608022 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.789057384 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.788577701 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.790831962 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.787555484 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.78768074 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.789733686 seconds)
  done (took 17.812459664 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.18293856 seconds)
done (took 95.922682461 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.772117756 seconds)
    (2/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.02267942 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.858563427 seconds)
    (4/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.908748004 seconds)
    (5/309) benchmarking ("sort", Int8, false)...
    done (took 4.794858276 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.939800594 seconds)
    (7/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.782547651 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.062864296 seconds)
    (9/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.928505867 seconds)
    (10/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.144207615 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.911233357 seconds)
    (12/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.868875604 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.809541527 seconds)
    (14/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.979010432 seconds)
    (15/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.996259088 seconds)
    (16/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.721196648 seconds)
    (17/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.916033833 seconds)
    (18/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.113212388 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.112375401 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.478398289 seconds)
    (21/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.024722665 seconds)
    (22/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.769109047 seconds)
    (23/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.869806796 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.017898621 seconds)
    (25/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.910826332 seconds)
    (26/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.891681182 seconds)
    (27/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.916886158 seconds)
    (28/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.062152752 seconds)
    (29/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.090185566 seconds)
    (30/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.425232826 seconds)
    (31/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.811946337 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.902387777 seconds)
    (33/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.458200423 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.923017786 seconds)
    (35/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.084346192 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.8860248 seconds)
    (37/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.850568044 seconds)
    (38/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.785000529 seconds)
    (39/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.841962553 seconds)
    (40/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.809700758 seconds)
    (41/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.768008179 seconds)
    (42/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 3.771100057 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.761529225 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.909870453 seconds)
    (45/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.008610643 seconds)
    (46/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.452095259 seconds)
    (47/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.524902653 seconds)
    (48/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.921576206 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.033749613 seconds)
    (50/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.752229254 seconds)
    (51/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.025184972 seconds)
    (52/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.861217708 seconds)
    (53/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.84171093 seconds)
    (54/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.92588432 seconds)
    (55/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.093523527 seconds)
    (56/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.938632117 seconds)
    (57/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.278862131 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.121539517 seconds)
    (59/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.128656589 seconds)
    (60/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.958678188 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.428323008 seconds)
    (62/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.927745015 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.811318057 seconds)
    (64/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.86748848 seconds)
    (65/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.803232975 seconds)
    (66/309) benchmarking ("sort", Float32, false)...
    done (took 5.54953365 seconds)
    (67/309) benchmarking ("sort", Float64, false)...
    done (took 5.570082232 seconds)
    (68/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.904331018 seconds)
    (69/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.868928738 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.846026711 seconds)
    (71/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.771420232 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 3.790475644 seconds)
    (73/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.722309262 seconds)
    (74/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.772560401 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.617890847 seconds)
    (76/309) benchmarking ("sort", BigInt, false)...
    done (took 6.789851615 seconds)
    (77/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.135376106 seconds)
    (78/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.849791303 seconds)
    (79/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.251345406 seconds)
    (80/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.169956141 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.462346615 seconds)
    (82/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.980897226 seconds)
    (83/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.284026658 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.084918624 seconds)
    (85/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.960147197 seconds)
    (86/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.861985693 seconds)
    (87/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.150996438 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.487523457 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.698211071 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.791316956 seconds)
    (91/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.99489202 seconds)
    (92/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.823180406 seconds)
    (93/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.370879438 seconds)
    (94/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.892580811 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.034450142 seconds)
    (96/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.99217585 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.261651712 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.11412703 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.790742943 seconds)
    (100/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.876556956 seconds)
    (101/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.086495287 seconds)
    (102/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.285086671 seconds)
    (103/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.279132437 seconds)
    (104/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.355896787 seconds)
    (105/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.880073309 seconds)
    (106/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.197034221 seconds)
    (107/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.261920927 seconds)
    (108/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.819213663 seconds)
    (109/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.804649625 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.997400532 seconds)
    (111/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.303118382 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.470745675 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.903264081 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 8.210231732 seconds)
    (115/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.963681745 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.134862874 seconds)
    (117/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.777503144 seconds)
    (118/309) benchmarking ("sort", Bool, false)...
    done (took 2.234477754 seconds)
    (119/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.814302277 seconds)
    (120/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.053466179 seconds)
    (121/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.80895082 seconds)
    (122/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.914821375 seconds)
    (123/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.173131515 seconds)
    (124/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.889972366 seconds)
    (125/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.971933999 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.089685937 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.008850827 seconds)
    (128/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.931146049 seconds)
    (129/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.046162846 seconds)
    (130/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.119089554 seconds)
    (131/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.773020024 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 3.554876897 seconds)
    (133/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.801559019 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.865507212 seconds)
    (135/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.907007367 seconds)
    (136/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.006489862 seconds)
    (137/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.000562926 seconds)
    (138/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.906846648 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.692363036 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.483299949 seconds)
    (141/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.803124594 seconds)
    (142/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.809127037 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.791964198 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.015575697 seconds)
    (145/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.819460839 seconds)
    (146/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.871567222 seconds)
    (147/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.774676669 seconds)
    (148/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.71240521 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.782450799 seconds)
    (150/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.904819481 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.201659183 seconds)
    (152/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.084519201 seconds)
    (153/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.898138604 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.798358904 seconds)
    (155/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.898761152 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.819587951 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.170462384 seconds)
    (158/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.917884061 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.79309247 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 8.41126278 seconds)
    (161/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.135016887 seconds)
    (162/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.281800986 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.897046836 seconds)
    (164/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.410503401 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.009792276 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.7931797 seconds)
    (167/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.968315783 seconds)
    (168/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.000397034 seconds)
    (169/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.886245082 seconds)
    (170/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.479964461 seconds)
    (171/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.727317311 seconds)
    (172/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.926923124 seconds)
    (173/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.051929346 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.795853527 seconds)
    (175/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.722202804 seconds)
    (176/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.158416373 seconds)
    (177/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.775239883 seconds)
    (178/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.054707353 seconds)
    (179/309) benchmarking ("map", identity, BigInt, false)...
    done (took 3.69879834 seconds)
    (180/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.353429175 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.031171788 seconds)
    (182/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.076163156 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.817656095 seconds)
    (184/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.819103753 seconds)
    (185/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.972572385 seconds)
    (186/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.111185873 seconds)
    (187/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.2269765 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.944620167 seconds)
    (189/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.82015041 seconds)
    (190/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.732543674 seconds)
    (191/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.774411131 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 8.059941073 seconds)
    (193/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.617940393 seconds)
    (194/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.889803442 seconds)
    (195/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.108991179 seconds)
    (196/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.862283614 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.853480637 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.813574302 seconds)
    (199/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.803462595 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.70537297 seconds)
    (201/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.14879198 seconds)
    (202/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.373075376 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.099261467 seconds)
    (204/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.77873115 seconds)
    (205/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.040217214 seconds)
    (206/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.794799004 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.047656283 seconds)
    (208/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.308393493 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.598269414 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.005091113 seconds)
    (211/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.352304936 seconds)
    (212/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.80351978 seconds)
    (213/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.961975447 seconds)
    (214/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.335963867 seconds)
    (215/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.149803812 seconds)
    (216/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.779975453 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.254657879 seconds)
    (218/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.122438033 seconds)
    (219/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.80980696 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.814877854 seconds)
    (221/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.936547388 seconds)
    (222/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.824138925 seconds)
    (223/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.959583973 seconds)
    (224/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.887911507 seconds)
    (225/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.793702417 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 3.209931998 seconds)
    (227/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.051555832 seconds)
    (228/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.280739142 seconds)
    (229/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.91736053 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.19629548 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.671596608 seconds)
    (232/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.031752706 seconds)
    (233/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.152962655 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.432084774 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.853324675 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.795685768 seconds)
    (237/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.00807457 seconds)
    (238/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.800080391 seconds)
    (239/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.828180263 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.892780494 seconds)
    (241/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.787251816 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.782927847 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.180813098 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.097099276 seconds)
    (245/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.781758738 seconds)
    (246/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.83572969 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.868634957 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.796108583 seconds)
    (249/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.799464303 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.124356947 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.989755514 seconds)
    (252/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.782003566 seconds)
    (253/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.819100177 seconds)
    (254/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.905501416 seconds)
    (255/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.819968262 seconds)
    (256/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.951650126 seconds)
    (257/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.922250988 seconds)
    (258/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.052635083 seconds)
    (259/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.880058969 seconds)
    (260/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.104786873 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.830036412 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.164831878 seconds)
    (263/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.811215162 seconds)
    (264/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.980508957 seconds)
    (265/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.36539108 seconds)
    (266/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.188214058 seconds)
    (267/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.883620649 seconds)
    (268/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.900709502 seconds)
    (269/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.879523218 seconds)
    (270/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.896360853 seconds)
    (271/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.508350371 seconds)
    (272/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.017415725 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.781564848 seconds)
    (274/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.776339991 seconds)
    (275/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.20736666 seconds)
    (276/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.362731839 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.594898122 seconds)
    (278/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.907067339 seconds)
    (279/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.992343491 seconds)
    (280/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.289072061 seconds)
    (281/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.011480034 seconds)
    (282/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.80964243 seconds)
    (283/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.794321083 seconds)
    (284/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.405489169 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.881462505 seconds)
    (286/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.927591169 seconds)
    (287/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.098151191 seconds)
    (288/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.795673008 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.963572082 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.938567135 seconds)
    (291/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.860511442 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.568207815 seconds)
    (293/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.263529127 seconds)
    (294/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.997201604 seconds)
    (295/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.800185269 seconds)
    (296/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.817960975 seconds)
    (297/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.944826551 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.077891285 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.838237699 seconds)
    (300/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.879258924 seconds)
    (301/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.796377819 seconds)
    (302/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.816326294 seconds)
    (303/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.802359796 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.440311937 seconds)
    (305/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.211922254 seconds)
    (306/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.861947107 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.818239557 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.726913549 seconds)
    (309/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.810475508 seconds)
  done (took 994.542275897 seconds)
done (took 996.525093524 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.83998094 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.826794513 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.810674462 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.831486184 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.923723248 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.845255298 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.819756895 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.812139334 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.857987635 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.859827157 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.808044825 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.839933824 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.812281264 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.809652861 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.810480069 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.82508314 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.127943705 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.839357124 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.827421645 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.821211737 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.826688297 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.808762888 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.866957385 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.838086477 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.817251222 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.815592594 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.813983965 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.837781576 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.922818564 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.815307926 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.81345452 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.823830206 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.123829161 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.84014635 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.807987644 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.831427145 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.823314492 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.822132966 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.815540339 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.844782343 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.26779556 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.818006566 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.815698678 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.814779356 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.813976737 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.815810563 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.813121468 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.819470962 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.827133786 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.825521051 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.265108969 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.833144692 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.816023677 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.814880805 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.824796043 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.814587604 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.820075752 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.830491898 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.833934536 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.828934671 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.116247684 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.844801233 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.81664967 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.829579182 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.822996025 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.30378905 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.813339346 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.819161004 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.26930694 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.824270649 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.308545756 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.827444059 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.815365151 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.828901583 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.844291508 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.126055465 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.835497415 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.814537933 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.821239457 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.813993537 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.829946018 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.828074523 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.820707538 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.81723715 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.829319472 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.842514696 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.82907518 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.816700241 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.824461028 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.836110852 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.822571674 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.827403665 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.819756596 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.81131976 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.827436645 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.820725949 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.817715451 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.820163802 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.821721893 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.827903631 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.269391138 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.835907021 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.813981749 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.813725786 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.815818835 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.830664763 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.267430325 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.82160148 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.837659357 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.86466128 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.820087714 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.115661865 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.851838596 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.833682582 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.825292688 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.821480075 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.812232636 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.118754344 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.302083137 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.836605308 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.82018713 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.814551157 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.832585946 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.82233069 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.814288252 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.128019989 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.847358241 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.830557963 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.939222371 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.827832157 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.850906355 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.816054488 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.819730954 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.846841968 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.837045466 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.849423308 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.821521123 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.834350559 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.834468811 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.816643759 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.831446565 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.827956591 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.819594365 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.826658763 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.81414924 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.8485163 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.832669372 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.831907141 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.839464365 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.93989005 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.818078275 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.118200774 seconds)
done (took 285.783230125 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.885240343 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.810131487 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.916970143 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.817036764 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.899667676 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.904155679 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.81296821 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.812175268 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.811831726 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.187229006 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.81322511 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.813412794 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.807571646 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.812504578 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.896900155 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.815574674 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.815085624 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.153648339 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.817318663 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.887689702 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.816798624 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.813171579 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.815580183 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.190144411 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.813496504 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.815225103 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.888971852 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.816513513 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.156186543 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.809301735 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.811344692 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.157391855 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.908143642 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.835002806 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.828001138 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.823447572 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.898195214 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.823212002 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.898211693 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.898423987 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.919116062 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.857463672 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.81110918 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.810836075 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.820452408 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.819293686 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.816014309 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.84388264 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.816965371 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.815341088 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.152522335 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.826475573 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.815758068 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.81553062 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.81605908 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.848787238 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.815156157 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.819782928 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.909097748 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.817676146 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.881846433 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.20312722 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.189558099 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.818593241 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.819199474 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.81515514 seconds)
  done (took 180.743904669 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.885290124 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.89278548 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.885282315 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.822053981 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.8662735 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.885984748 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.823355446 seconds)
  done (took 14.804627262 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.825474803 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.819331311 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.873755216 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.873031962 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.818228264 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.967310623 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.820296043 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.831702285 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.816838706 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.888076492 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.821035756 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.821200158 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.825643607 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.810397578 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.873012296 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.831027023 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.934124215 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.822061291 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.821653933 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.970304733 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.818012567 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.825802766 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.873728273 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.832361278 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.820841936 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.825365804 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.408134853 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.819995304 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.818764346 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.819666207 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.816389491 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.86219031 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.821177479 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.815666346 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.816857166 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.934334951 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.821365218 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.81798303 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.820931026 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.814955133 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.820030406 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.820878663 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.822482989 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.81961858 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.821024988 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.844401318 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.819634264 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.821782965 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.821891128 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.821048265 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.882623846 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.822627912 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.819229713 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.816666167 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.889272706 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.828658728 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.822930103 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.818925839 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.820485178 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.819385589 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.972888626 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.875155128 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.821470393 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.87586707 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.822157823 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.822340506 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.82166457 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.821959957 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.916248359 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.820416402 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.875600054 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.818083688 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.006649681 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.845924959 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.825752392 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.823374923 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.823746884 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.82313926 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.81454177 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.827980494 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.819531085 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.82303899 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.828342962 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.829751754 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.819275895 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.937476181 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.932544468 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.823292257 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.83560074 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.830482928 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.821624369 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.885789848 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.82143029 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.820053454 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.886737719 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.939250994 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.878258883 seconds)
  done (took 201.177274658 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.82715757 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.830309476 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.824980432 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.840069274 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.823241556 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.824364399 seconds)
  done (took 12.720332522 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.824652061 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.826715061 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.825132749 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.823598154 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.824787054 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.824539456 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.824466816 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.825332517 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.828698356 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.823321974 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.822863397 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.82331794 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.823688615 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.827075528 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.825579274 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.823217277 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.824447376 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.822891321 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.825166494 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.824507619 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.971712374 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.824952707 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.823730778 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.827314165 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.827951992 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.824902185 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.832142914 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.825122725 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.826130677 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.831782673 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.828853291 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.824910155 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.82473584 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.830093174 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.829830277 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.822598398 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.827479607 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.822718307 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.820962721 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.825985907 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.826905634 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.824948002 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.825766659 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.825194861 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.825882667 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.830533094 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.832424471 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.832089045 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.825994182 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.827549266 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.826589222 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.826780131 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.826628279 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.826851006 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.82899258 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.830630407 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.833151285 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.829458753 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.823742844 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.826324293 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.827147897 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.827004151 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.82716202 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.833407551 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.835770672 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.827353819 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.830490444 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.831209578 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.828988822 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.825615152 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.827893166 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.822986742 seconds)
  done (took 134.421501226 seconds)
done (took 545.623504692 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.935698793 seconds)
  done (took 8.687148457 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.93397047 seconds)
  done (took 8.778312475 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.463220868 seconds)
  done (took 10.2170904 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.838173677 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.845177694 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.835263774 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.819769788 seconds)
  done (took 29.101862752 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.888950074 seconds)
  done (took 8.640958013 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.836226682 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.816400406 seconds)
  done (took 15.442041214 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.872544243 seconds)
  done (took 8.628732817 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.901809268 seconds)
  done (took 8.65749559 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.823782517 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.860985164 seconds)
  done (took 15.452856905 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.807375342 seconds)
  done (took 8.560361644 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.504820923 seconds)
  done (took 11.264728273 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.830548557 seconds)
  done (took 8.6002609 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.864767658 seconds)
  done (took 8.619528519 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.027080015 seconds)
  done (took 9.780789323 seconds)
done (took 162.180108933 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.824991775 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.816989448 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.821250335 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.818562771 seconds)
  done (took 29.035124114 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.861239331 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.862700051 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.86207903 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.873843915 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.863645719 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.860991132 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.852791433 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.854953373 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.87291193 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.864149093 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.863800594 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.864079391 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.86194918 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.85509183 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.862592609 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.866356553 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.874402787 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.864490971 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.855137198 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.865543504 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.829056143 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.872961559 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.865402983 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.829220735 seconds)
  done (took 46.41559489 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.028433703 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.900404108 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.984182948 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.88199165 seconds)
  done (took 9.549317922 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.881654137 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.881355742 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.893722218 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.932945998 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.956649717 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.894151563 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.857351609 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.851761721 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.839793255 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.883146869 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.957769062 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.879226665 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.980533264 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.82962363 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.017376123 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.830698095 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.829515879 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.884990153 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.934592567 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.947989429 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.832669028 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.882391714 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.88578065 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.878445598 seconds)
  done (took 47.198135119 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.826526699 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.836669511 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.834233965 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.831050302 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.828259599 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.830535583 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.835653646 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.830319002 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.851698465 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.830321599 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.829645459 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.829912287 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.829057515 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.831031842 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.828844676 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.842420443 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.842411005 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.828762778 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.833366857 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.836178128 seconds)
  done (took 38.423126488 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.82220089 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.676938528 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.176403635 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.082037222 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.825985887 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.822640832 seconds)
  done (took 31.163431348 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.844400747 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.837959702 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.831648108 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.888767563 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.966625601 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.836226177 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.831779487 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.841102006 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.877867384 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.894202253 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.851323918 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.861360807 seconds)
  done (took 24.12203552 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.825959923 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.826435105 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.826838897 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.840892091 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.842958278 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.841638828 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.837811241 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.827014015 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.844771558 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.853130482 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.843402367 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.846304118 seconds)
  done (took 43.819065589 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918575444 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.721774707 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.852946267 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.511196921 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.297140396 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.036363574 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.404556386 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.16301629 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.831414666 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.101878976 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.830623123 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930458583 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.083558593 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.827438062 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.84538921 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.297746502 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.121918165 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.054776123 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854295862 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.58452669 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873149026 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.417106062 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.741506895 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.881464336 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.038974786 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.962155824 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.088405979 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.780720641 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961724103 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863785664 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838768182 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.83299446 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.104034148 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199347191 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92976997 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839277744 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.448915042 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.546306446 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.816161942 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.60222632 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.589494771 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.947377007 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839425112 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.830762232 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.764162701 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373143709 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206451384 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.835422976 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.540988139 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.831636718 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.843047964 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918087703 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.835887035 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.649746781 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.742527411 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.105671108 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.827759875 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837924575 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.399132054 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.922826171 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420066251 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.806995034 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.028680515 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.58329879 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218206274 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.976482266 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.836630203 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.835913101 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.768011922 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.586645886 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.879230913 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.977219286 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.848053842 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.482365879 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138586902 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.899678874 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.773465621 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.568911243 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.671629958 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.806038997 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.059560489 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.789926786 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.766167604 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.691317498 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.767903341 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096300735 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869233132 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.459231995 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870348954 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.165223789 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.845286483 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849960911 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839229063 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.057988839 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.398347731 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833809768 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.623360854 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.983126511 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852027148 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.168636346 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767824377 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.831874141 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088502515 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.044943735 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.116904674 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.344084438 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988295758 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.832946986 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.910664933 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.802501422 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.882835856 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.100181479 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890216565 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.929765732 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888348787 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.7965641 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128596923 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859261338 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.998239749 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.853318957 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.96027592 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.152025854 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.123519275 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898164712 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.832662634 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.834874857 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.609688088 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.38289167 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.101782262 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.836691347 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385037861 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.883528808 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.835178896 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77283677 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.461358103 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.866673235 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.805310346 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.058029202 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.836324836 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.147814523 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770698909 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.981549447 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.94416174 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.055104485 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.474126689 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.900813906 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.093678027 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36413657 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.163780887 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885790183 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854410138 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952789406 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860440913 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.306585739 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.130318912 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.839489686 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.839953935 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.600790201 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.83627937 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.837952726 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.842145874 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.591334388 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106444915 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.855929029 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.838539946 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.726782848 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.848774986 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901510345 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.842516083 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.849075454 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.379954379 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.562966133 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.842645071 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.441773535 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059101093 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.846222479 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.594912221 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944543145 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.920899903 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.112341363 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.892681395 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.771976613 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.551366214 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.530578989 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.837850815 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.773792066 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.837343984 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846415509 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848307039 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.220041438 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.11099014 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876735005 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.717746974 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.876124681 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.850331866 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.842608583 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.83874225 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.378102454 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.930929121 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413452328 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.887367782 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975179614 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.853182766 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.775090519 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.843698771 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.842804847 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.837959927 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.796537283 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891247058 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.633131003 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.219662068 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09520918 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.487170925 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854469786 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.625319496 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.893514959 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.859977042 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.64299122 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833994466 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.878829395 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860862566 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.854497519 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.593934229 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.533026164 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.408299461 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159462161 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142575673 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.271249271 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.37664744 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.144302004 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.176910978 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077195505 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.370242965 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.902401547 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.180228117 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.786409728 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923294374 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.477953292 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182786366 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855844847 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.068348018 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.222624763 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.556611336 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.979247233 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.052433495 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87632246 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.828640159 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.80424733 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.045004186 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983915265 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.565121959 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.039354568 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173304701 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.511141054 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.929334728 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.842885685 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.515586733 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925742948 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.553258424 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.205153441 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.434309397 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.756745583 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319550407 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.844781677 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.287647532 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19034106 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.224471783 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.965445134 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778514049 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.85318679 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.853179176 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.8428915 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.838989028 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.713441772 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.093144045 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.853248366 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080270173 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.161664207 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137910503 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.745219303 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.849521043 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842652907 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136722119 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.677412727 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005329796 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.332291447 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.372492693 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844687831 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.778803992 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.780106152 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.536496182 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.85216677 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.821364134 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.05902627 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.031949582 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.758803543 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.403328241 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089705802 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.098600253 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.85720337 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.113925109 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.117401351 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.543218253 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871798055 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.945811911 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.495273124 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.949958802 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.112061051 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.080884326 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.596879567 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.070024173 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.880734702 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.632906262 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.846236372 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.059490047 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.115611117 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.729627261 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069813408 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.568187517 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.857741611 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162411491 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904156293 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.715668084 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.992471048 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.040158287 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857291432 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928992675 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857169494 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.85773772 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.855902931 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893160602 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.735790424 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.96290527 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.860192922 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936939316 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.949340947 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.371988617 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.848657079 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.118778766 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201491348 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.170985441 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903088199 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.8465613 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846861719 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.78047121 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980899368 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.293434181 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.120950654 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.978341325 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.14557257 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873647673 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.500045657 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.277534774 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089191545 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.124375594 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.742548508 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847357834 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.86675719 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.115021841 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858617101 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.058519292 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074884808 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161748902 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319697102 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.152025765 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.21237595 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123277834 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.218287582 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.847962511 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.438783767 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.860616908 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.517950733 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.887379833 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.745820019 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11058994 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.858910914 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224294139 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.867677511 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.046385737 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.364768404 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.610316934 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.135722576 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.832639366 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.90540691 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.120897397 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.232987984 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158064938 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922545654 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.859928861 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.557294985 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987684819 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.737080691 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.116160519 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.848535159 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061337433 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.560078593 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.858572375 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123867881 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153151781 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.845431168 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.744554297 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85621391 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.860459556 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.076954885 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1138114 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.101464486 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861872967 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.856874869 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.666709825 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.123948343 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903938311 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.784942264 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.850930399 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948595729 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.095621248 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.869793015 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.365997575 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.560033567 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146141613 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.768532029 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87491789 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406610249 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.212684903 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170392892 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.389387763 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073039545 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.408063436 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.853095692 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14971321 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.858733154 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.393442343 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.156578071 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.856275895 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.511621436 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891349184 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.119589387 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167997143 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.859393527 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.647701552 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.817579121 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.075624385 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.407012272 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791333153 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.848205145 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.912940587 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.851323516 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.985086172 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.862239748 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.749017813 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835279552 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.670021216 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348493532 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.857349267 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.837711557 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.578957229 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.565265352 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885294344 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998913888 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861488852 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.572494166 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.146868685 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.107228228 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.513999754 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.858170005 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.857767597 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855627552 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.781571302 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.048135803 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.23343701 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152068014 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.353869456 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.891294553 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.859369687 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.070698758 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068861099 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.724535158 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.988400285 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403249007 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.892034837 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.627208594 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.535573449 seconds)
  done (took 1671.75968756 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.86359764 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.8896331 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.890383719 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.892412548 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.920514617 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.879535768 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.906692668 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.905292258 seconds)
  done (took 56.935164364 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.86377766 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.048364035 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.864951908 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.855936186 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.861896825 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.856838877 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.025736919 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.862782411 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.861120327 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.865799571 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.85824458 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.851476542 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.184540464 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.879034921 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.857736401 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.854702962 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.860246432 seconds)
  done (took 74.132743871 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.855365607 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.070596442 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.88944493 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.870864256 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.7888958 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.86174768 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.952975737 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.859995209 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.857014898 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.079882554 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.487445665 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.879178461 seconds)
  done (took 90.239613874 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.867038348 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.864032965 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.86367336 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.863436976 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.865768501 seconds)
  done (took 11.116460307 seconds)
done (took 2175.687324406 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.254198637 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.087240232 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.08921305 seconds)
  done (took 5.962858733 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.004024775 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.055127301 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.172424378 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.19287182 seconds)
  done (took 10.214969642 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.147662554 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.239119836 seconds)
  done (took 6.172204638 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.268346614 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.864236163 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.250083436 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.852881277 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.855790505 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.853848079 seconds)
  done (took 22.353852147 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.859603193 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.863044901 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.859413488 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.862789173 seconds)
  done (took 9.23177717 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.839284684 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.53155642 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.840056598 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.851657085 seconds)
  done (took 20.84973197 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.609733319 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.258035866 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.604032658 seconds)
  done (took 9.257572404 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.307788592 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.734712803 seconds)
  done (took 8.827600048 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.115414904 seconds)
  done (took 3.90184531 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.991031507 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.133650752 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.396095195 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.377179543 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.465321959 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.723678904 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.187553811 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.111089328 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.265059024 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.301448171 seconds)
  done (took 24.741478238 seconds)
done (took 136.935462506 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.242383674 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.107143233 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.061593261 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.252708017 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.090397958 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.061054945 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.26688509 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.23484963 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.703790976 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.699360919 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.20790648 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.095216113 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.015569732 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.868170235 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.017995992 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.228380765 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.123311287 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.261225139 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.940364726 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.102670717 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.274357045 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.837512683 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.048381361 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.848038994 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.086714638 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.013460222 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.428550892 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.227913211 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.095281765 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.433302621 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.010360041 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.256020997 seconds)
  done (took 169.928571657 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.60236928 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.855931376 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.859704124 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.856173846 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.059728317 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.86105294 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.857738026 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.855885109 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.040986713 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.020492136 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.86722071 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.057172515 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.859635281 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.856632279 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.864866392 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.855179072 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.148971393 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.685889763 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.871105767 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.872093078 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.877206819 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.011858636 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.873022336 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.043065932 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.151180396 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.873364863 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.845699358 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.871618642 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.862036055 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.825987046 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.864355978 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.857482158 seconds)
  done (took 206.556349087 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.861535879 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.857762376 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.856246479 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.856440061 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.857797885 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.856003397 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.860690316 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.858123947 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.537844899 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.531060895 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.864777514 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.865998728 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.860484958 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.856262673 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.865226091 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.860525541 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.865267906 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.862441504 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.861529159 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.866400781 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.865210961 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.57580525 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.866161864 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.588833319 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.862889418 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.862433511 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.859003109 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.865940663 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.894406444 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.870812979 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.873552947 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.859109291 seconds)
  done (took 220.212586417 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.064687335 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.868050487 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.870406857 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.810868387 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.870582264 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.869859519 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.81639257 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.068653003 seconds)
  done (took 19.053587958 seconds)
done (took 617.548067537 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.332956299 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.180072848 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.044715574 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.895696591 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.150885417 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.928227574 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.889062835 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.956264814 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.620172954 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.955019481 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.536616594 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.90567324 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.625196307 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.909045227 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.014097149 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.948052624 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.475641274 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.568749304 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.067989686 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.961305611 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.06342769 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.82775319 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.966576055 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.641998734 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.643495597 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.872967281 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.089680286 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.477330553 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.898045465 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.053477585 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.633317701 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.279014104 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.896857433 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.8873395 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.946198528 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.924669929 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.265651657 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.895814823 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.013847378 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.629003016 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.964169796 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.508048833 seconds)
  done (took 103.1379833 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.860987731 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.857716168 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.858695339 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.859161573 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.860148153 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.85884377 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.85935768 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.857103511 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.858348483 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.859252291 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.858029893 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.860824772 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.859012997 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.860061343 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.85939997 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.858585037 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.858681655 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.861911859 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.858775209 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.858040961 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.85875675 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.85879399 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.874879332 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.857740892 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.858748297 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.859024554 seconds)
  done (took 50.158571268 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.873910403 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.035959206 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.124463483 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.888392956 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.872692295 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.877915889 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.891825483 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.878834057 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.876235613 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.876440751 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.979717121 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.879707323 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.8923637 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.123059382 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.886160279 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.873986233 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.874793926 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.875112467 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.045541715 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.890371565 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.891415531 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.877610423 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.891247253 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.888293445 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.874559918 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.873854993 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.877024515 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.356632642 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.884031965 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.977640396 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.9168603 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.896616439 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.302063547 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.145148413 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.925561181 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.877144454 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.875692471 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.981870678 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.879534996 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.874917512 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.891198243 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.880288845 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.121004686 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.360144533 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.888545603 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.876853912 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.367589064 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.987916883 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.916215269 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.882461898 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.126592355 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.887686425 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.878295456 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.875748015 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.912055415 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.883515432 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.875005677 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.219598836 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.884262123 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.893627125 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.880769135 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.875441828 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.050148888 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.881414182 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.040664331 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.882724088 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.883533819 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.877417182 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.123697771 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.889412942 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.373972077 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.886068157 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.877771434 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.979146172 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.041874896 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.393123724 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.885484867 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.051570571 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.318808 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.899276488 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.884390907 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.348390685 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.902647173 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.884448786 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.878847109 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.877918835 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.878153244 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.922565842 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.891171405 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.2992618 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.369312973 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.228452388 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.90334933 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.89347499 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.877131587 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.218600055 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.887516606 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.878278698 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.119488975 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.375652065 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.885982927 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.883484938 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.355161632 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.887923709 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.897609947 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.886204772 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.132080894 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.889894965 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.925253619 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.878289345 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.885396045 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.881504957 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.897041419 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.8844114 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.878045231 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.344478249 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.997078322 seconds)
  done (took 232.9966194 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.873853595 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.868964526 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.872154198 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.869950455 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.872203418 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.878186416 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.872537786 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.872374567 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.879527561 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.872715975 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.873651819 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.874010708 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.875004344 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.881212508 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.908346907 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.879511478 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.48781313 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.873323764 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.87354861 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.871502725 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.52391056 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.88079929 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.873892448 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.882848533 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.875487212 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.873393222 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.875972016 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.911209752 seconds)
  done (took 167.635273166 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.880014199 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.995236763 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.895896175 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.908047628 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.886202605 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.878190004 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.90395873 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.892367814 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.885502637 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.877523837 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.877429278 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.940162457 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.888816648 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.979604374 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.906533136 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.907377419 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.979256012 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.883215684 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.878437811 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.877677698 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.908757585 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.872883977 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.938716227 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.003172632 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.894069699 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.994738188 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.881760242 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.884434674 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.88133784 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.998483043 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.894191774 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.941308391 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.908701362 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.895709428 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.001767279 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.994502731 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.980087851 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.907186013 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.885660316 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.879183594 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.879811997 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.869312563 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.999179742 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.899650035 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.882495745 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.989048701 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.898828995 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.882071901 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.890659517 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.880039757 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.895197829 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.89988944 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.9507403 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.015973204 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.915212056 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.90303795 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.906958617 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.171506113 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.891064859 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.982329564 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.870006132 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.999783129 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.898025083 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.870149958 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.88286542 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.887727577 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.911177544 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.90991953 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.983467032 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.88588901 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.980512333 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.913562239 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.886136452 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.881415927 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.884833146 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.000134672 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.999206703 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.914873461 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.916739366 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.910035409 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.878757347 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.883322515 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.870308481 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.900148866 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.88611376 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.999342634 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.997397676 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.888569279 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.885737229 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.885147219 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.885533317 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.908400715 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.008566857 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.918666679 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.974946011 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.948079293 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.955693229 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.898216961 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.897696639 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.887159635 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.948470273 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.897883006 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.896010503 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.227349016 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.95303103 seconds)
  done (took 203.74661861 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.364173163 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.935578132 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.942756559 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.20515808 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.306123742 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.723711971 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.929741437 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.934279129 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.958587866 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.125031263 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.004192998 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.954609389 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.916722772 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.90682965 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.933944671 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.957285769 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.946222261 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.240430513 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.066596531 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.057476196 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.910406898 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.246213026 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.253403033 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.375405843 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.966609692 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.27310789 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.61001311 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.18447931 seconds)
  done (took 62.045648836 seconds)
done (took 821.510051135 seconds)
SAVING RESULT...
DONE!
