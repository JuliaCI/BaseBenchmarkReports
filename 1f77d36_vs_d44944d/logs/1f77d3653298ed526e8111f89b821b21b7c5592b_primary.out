cset: moving following pidspec: 3578
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.680559713 seconds)
loading group "string"... done (took 0.577849751 seconds)
loading group "linalg"... done (took 9.848339815 seconds)
loading group "parallel"... done (took 0.189419012 seconds)
loading group "find"... done (took 1.512451738 seconds)
loading group "tuple"... done (took 2.141989527 seconds)
loading group "dates"... done (took 1.476228995 seconds)
loading group "micro"... done (took 0.213829347 seconds)
loading group "io"... done (took 0.618358291 seconds)
loading group "scalar"... done (took 46.839589617 seconds)
loading group "sparse"... done (took 14.459486272 seconds)
loading group "broadcast"... done (took 1.274688955 seconds)
loading group "union"... done (took 11.331067104 seconds)
loading group "simd"... done (took 2.792927991 seconds)
loading group "random"... done (took 10.894798172 seconds)
loading group "problem"... done (took 2.304208777 seconds)
loading group "array"... done (took 25.824949883 seconds)
loading group "misc"... done (took 1.199786266 seconds)
loading group "sort"... done (took 4.017921099 seconds)
loading group "collection"... done (took 20.476945593 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.767864594 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.150120043 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.253455504 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.354683746 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.250032133 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.149703766 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.165718131 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.36822433 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.033175276 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.239224707 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.150167397 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.592680591 seconds)
done (took 6.136048258 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.254699643 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.328361764 seconds)
    (2/2) benchmarking "String"...
    done (took 0.173938219 seconds)
  done (took 1.104938492 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.087119919 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.182691756 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.10885517 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093977589 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.108152322 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.10993094 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.109285501 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108149355 seconds)
  done (took 1.427287168 seconds)
done (took 3.491168654 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.532277684 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.881310369 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.54466471 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.163017146 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.331948426 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.401891772 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.33879771 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.204313376 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.106865265 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.108826197 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.178310094 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.403816804 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.472586016 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.986119309 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.105361152 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.092545611 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.128459529 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.772731427 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.07709549 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.1314872 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.582728766 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.213520328 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.110489603 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.116489249 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.197745334 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.115482868 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.178973668 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101729696 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.662092265 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.129417064 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.199029537 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.094188039 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.172936735 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.230862258 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.242863401 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.089619553 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677548438 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.196339775 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098821709 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.097267728 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.675702432 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.129752175 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.164013574 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103101104 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.089556845 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.185589704 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.115013975 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.088864688 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.110706542 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.083429057 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.164840876 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.453658549 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.089246418 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.166723399 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.087711441 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.699783793 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097473661 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.28462218 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.133222193 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.103810877 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.071870811 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.102160355 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.155678393 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.106920261 seconds)
  done (took 20.582871223 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.158564232 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.166958874 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.08895789 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139488864 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.141062914 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.092053621 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.080402891 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.089077837 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125505114 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.234996776 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138909734 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.168054671 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.086391008 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082470598 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.143026296 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248254144 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119068604 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103013818 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.096862708 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103777441 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123755715 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.109459266 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107714303 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.107764495 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166520841 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.197529451 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106354972 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.119763118 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098004728 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.119378841 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.136743987 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147692091 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.086695799 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080693044 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.184054774 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.116738477 seconds)
  done (took 5.240495088 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.223708366 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122188817 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.23706417 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.170727572 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.1453011 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.169755033 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.155717089 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.296934921 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.267042702 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.17889551 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112087689 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108720307 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090286508 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081439773 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.09035097 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.65736026 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.139807303 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.1764722 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165336048 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099996654 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08274673 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.382115825 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095044316 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.078833766 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098296511 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.073428764 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.220598336 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098855756 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.215606928 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.082311127 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103739969 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127601172 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.185686949 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.127769338 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.131963532 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.157589361 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140693902 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096434083 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077677946 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.23157632 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.092975455 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.089869568 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.129705848 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124975379 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117076857 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097898739 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.104991491 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.235979408 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.077620635 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123599286 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.141691753 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.206755837 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.118858455 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.099024307 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.336241252 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.111017719 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085769446 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.095245129 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.300405096 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131058231 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.076148566 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.091909953 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079659497 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.090504995 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.432407077 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106784065 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.958837863 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.093199147 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.168095238 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101784564 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099457403 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081309433 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097511882 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113719118 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.075650957 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.090885199 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.075462971 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.090972429 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080050924 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.116293442 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.095305888 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.076247313 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.156016697 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.111329328 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095104958 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123072994 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100197078 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.075663638 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12452564 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.091501988 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.079601937 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094678751 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.16965021 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103428333 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11486938 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097833762 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.122095641 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.090444332 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.207377051 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079325785 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124913743 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097353015 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108743449 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11111667 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.091849042 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.079061657 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.090125952 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.075869478 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157135531 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.075278617 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.09044203 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.097657602 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.077962292 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109153804 seconds)
  done (took 23.812380202 seconds)
done (took 50.239390143 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.560382127 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.115955858 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.116416779 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.116360342 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.098226686 seconds)
  done (took 1.698239598 seconds)
done (took 2.360637017 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.377441121 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.181967046 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.123950711 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.182082453 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.100517972 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.188141564 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.188546747 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.098616059 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.217701483 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.097038316 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.179327584 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095821648 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085184414 seconds)
  done (took 2.809986583 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093550795 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.127147223 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097014904 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110323024 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07406313 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108719011 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107393226 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107201479 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108625901 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086313606 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090954115 seconds)
  done (took 1.777261065 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09109753 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117511278 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082446609 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106771931 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074935553 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106314926 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.089425251 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120567295 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109829686 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086394595 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09101131 seconds)
  done (took 1.741457644 seconds)
done (took 6.986628557 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.186674777 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.7168602 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.146317545 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.202554649 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.376796115 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.247408598 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.625665958 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.166378793 seconds)
  done (took 12.545513373 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.175087138 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.082276825 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.09939882 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.097171627 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.080911794 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.097532615 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082278969 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.097701608 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.083254817 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098114212 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.081730202 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.095649295 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.082411173 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096781076 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.09652627 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.081123844 seconds)
  done (took 2.267213137 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120507257 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119775242 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104413019 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109102459 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086480039 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102419741 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105269551 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089927137 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100997831 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.086656973 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.107176428 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105374584 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.090416997 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.099856274 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.103180468 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.093805025 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.100743253 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10382077 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.09006217 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.106076564 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092073339 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.102440742 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.104226623 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.090554634 seconds)
  done (took 3.196659518 seconds)
done (took 18.674621657 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.173630151 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.095962662 seconds)
  done (took 0.945224995 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.145882115 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.14667143 seconds)
  done (took 0.971114422 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109584483 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094255303 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138156269 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.11697727 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081427473 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.094220369 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.132913353 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080029062 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094671249 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081589406 seconds)
  done (took 1.706092604 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08515619 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.099630602 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.092567476 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.159559779 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.093357171 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.10150801 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.085930083 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099791614 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.085696728 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.096314921 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.105985027 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.12037925 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087063063 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.123145853 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.101081196 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08964472 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.109246652 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.103097022 seconds)
  done (took 2.522477285 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079098998 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09595262 seconds)
  done (took 0.856767645 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.085440357 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095092905 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085559673 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100820282 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096726212 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.080606877 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095705707 seconds)
  done (took 1.320922348 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.56213616 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.274046495 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.380105578 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.119082408 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.140987671 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.404917461 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.142135552 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.113795752 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.098114112 seconds)
  done (took 2.958319158 seconds)
done (took 11.963828541 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.086642372 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.22044316 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.685622848 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.103681536 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.09602079 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.139202743 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.31924542 seconds)
done (took 2.339955132 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344167264 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.153614249 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.088078146 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093753159 seconds)
  done (took 1.362476984 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.074803098 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103878622 seconds)
  done (took 0.867486852 seconds)
done (took 2.926776943 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078006683 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.076912335 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.091968642 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.07763535 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.093614685 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077040188 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.091946893 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.129187398 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.076573376 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.095097553 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.078086061 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.093767988 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077763056 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.093547968 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077704708 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093354996 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077199101 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.092415171 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077265095 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.092816994 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07667489 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092406676 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.076547383 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.092154802 seconds)
  done (took 2.804348832 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102842221 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097787631 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101245848 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084143067 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102033637 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085216055 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.100468862 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096246156 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085208483 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.095555057 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085207696 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.101566225 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098484944 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086027868 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096367276 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.085596706 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.099888551 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096106525 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080955099 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100963912 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.084872518 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097430168 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.10027476 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08570284 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.101325418 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101752072 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081075122 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096416987 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084825312 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.101704486 seconds)
  done (took 3.50867128 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086532979 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.090107082 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.07887603 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.100720117 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.07488171 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095180171 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.075107297 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091933472 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080122064 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093462625 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080488724 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093924995 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.074460833 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095823262 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.0801066 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097313985 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.088938811 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.091923078 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.075558367 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095814086 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.080651647 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091784117 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.079228645 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.09489837 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.078633245 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.091431716 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.078436164 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.093231251 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.079310809 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.095469343 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.08198248 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.09745755 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.078608235 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.103555614 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.081858134 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.094218226 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083406302 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.091092044 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080275615 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.091631872 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.07584586 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094956548 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.07583348 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102275574 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079085816 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.094670892 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.075686255 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096382904 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.096361879 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.083146665 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.090947017 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.075642534 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.097885601 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080543998 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098687496 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.075763309 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095600442 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.075749267 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097661699 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077660172 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.091999226 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.075621888 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098591198 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079479471 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.114000708 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086718089 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.091708375 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081293795 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095538718 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084895029 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097537413 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.106458808 seconds)
  done (took 7.028088041 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092846918 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106860824 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080376831 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097343323 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079679462 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095165584 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.087922754 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0958268 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096644667 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087307511 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094979536 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080896041 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097179082 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081311439 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096357654 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.080509709 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.104993975 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095702 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079809327 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096225896 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081893597 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10287259 seconds)
  done (took 2.709604797 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.256236161 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086525272 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.148901577 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.115493098 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.119521265 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096789548 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100314318 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101435226 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083919746 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106995665 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107713155 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085684435 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119336465 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10719607 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091871046 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107858831 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100655222 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09151275 seconds)
  done (took 2.726569316 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.096613152 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099539948 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.225557395 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09853346 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09792189 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082116854 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10706022 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113776825 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082596777 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099225902 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092030307 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098234927 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.082885966 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098165769 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098336453 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081218414 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099282186 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082181692 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10934451 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110055798 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090544016 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109216642 seconds)
  done (took 2.956292159 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098604662 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098099576 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.132294305 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08658165 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098435753 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079878339 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105043962 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082453149 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105972146 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.097057551 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082701847 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096605644 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.091303752 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098104798 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105730654 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081942297 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097604097 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082282316 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098261626 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08105227 seconds)
  done (took 2.601337517 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.17449411 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096165753 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113362139 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126818401 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097530496 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.113258242 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126812093 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.097212854 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113562783 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129045491 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097436193 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113708786 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126619479 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121206875 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.097868914 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127407276 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127737836 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126028753 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.097725817 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113987723 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129620211 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097654219 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126800686 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.113467916 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097888348 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113933759 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096766641 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.121046924 seconds)
  done (took 3.940482161 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079782694 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079865437 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.095299996 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.079047256 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.096332089 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.079164411 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.094716143 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.079711008 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09495181 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.079015729 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.095384957 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.078607294 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.094715086 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.078951751 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096758434 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.078670847 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095362101 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.078365246 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096249794 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079366694 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.096304155 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078453008 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.095890552 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079591464 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096005439 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.078947037 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096002823 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078569733 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095845644 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078437249 seconds)
  done (took 3.312302131 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093141822 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107010733 seconds)
  done (took 0.908999062 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.088390147 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116164729 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078615237 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.097445764 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089888292 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.0967932 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108949702 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089789265 seconds)
  done (took 1.47382862 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.146923399 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.148578233 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085266694 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111123213 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.147277494 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.14257554 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.143026999 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086826307 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.099955837 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.074642675 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.141514686 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.094237015 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.084868121 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098676701 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.084515577 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108059463 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098430119 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.091767489 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.105689482 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082683277 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104244821 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092130925 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105361341 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.109525377 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.076723889 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.105556481 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.090258451 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.109902795 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098999026 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.089212025 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.099574563 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.081813306 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.102115303 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.086992271 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.09768501 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.146611905 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11115073 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081225376 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.102374411 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086860325 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108557744 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.08145089 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.104708363 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.099148286 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088128958 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.103423291 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086484689 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.098757731 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.076970279 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.094312625 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.08091686 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097530718 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.081139271 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103168369 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.10198149 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094093594 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.099917807 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.078817479 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.096629842 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.080445692 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.101744759 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.097628007 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088737745 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.101911344 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08189789 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.103406984 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084844902 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.099253086 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.082574349 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.098986193 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.102818579 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100234929 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.104661303 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086745127 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10485094 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082306889 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.100315001 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103939467 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085523204 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106033623 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085659934 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106314997 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.083538384 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080891864 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.098160071 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.089489884 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.100064003 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084395263 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.092090783 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09499429 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099787114 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080935462 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.093941131 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.099920952 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.080270807 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101704598 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.077451379 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102091314 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078893507 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.10406274 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087200038 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094625411 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.088289835 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103579608 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105140048 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.084768944 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.140638058 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099614426 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.081475752 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.100789409 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087962544 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.097514052 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.084836409 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.096667908 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079074045 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.098658726 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103430729 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.085411254 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.099346916 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085921336 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101217013 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.088525252 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.100197077 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.079763134 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.097037416 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085505176 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10710808 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.103664458 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.082750304 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.098950736 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.081259736 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102856874 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085372474 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102670148 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087562439 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100271844 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.097910684 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.085184876 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.103928262 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.086709559 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.097648247 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08496078 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104317932 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.101741761 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084182578 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.103797992 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08084025 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.094765991 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087246701 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.097444595 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.082983535 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108261329 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.098326274 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083615755 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.098875424 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092172935 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.099675389 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.087858107 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101727446 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.104763695 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086960101 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.092365158 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082408354 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100754936 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.088784252 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.098852381 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.082341743 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098978298 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.087911427 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.096208304 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.086028448 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.093943714 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.095597841 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087550112 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.100672792 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084699918 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.098222135 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09868146 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.112452042 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104456269 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.08515288 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.102070817 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085775956 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102634599 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.086515405 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106039039 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.089090216 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.099776736 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.100800398 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087266067 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.096869359 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.085025498 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104935376 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086370856 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.092963458 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081921787 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.093092091 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085317872 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.105671741 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087966055 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.104215543 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.1012181 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085138479 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108699008 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.082492388 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.103337485 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.078294793 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.103510292 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.092553773 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.10536391 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10474603 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.08705543 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100894006 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.082364966 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109558119 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084618447 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.110772279 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.083139923 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.095807014 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.096052888 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.087698523 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.103134779 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.08109084 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097729125 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087367486 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106488321 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.083652452 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.09537973 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.086045595 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10772589 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.098229317 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086747045 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.098470252 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.085718353 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112802856 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.095659536 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.080562667 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.106803873 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.088040156 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.098759336 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.083501095 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.102062646 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097060953 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.102573219 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.084795811 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100627867 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106883742 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.083154996 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.09818946 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.081577913 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101492978 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.07800442 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.101397209 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086771743 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.100031371 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.082730384 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108877742 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106252169 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.08790094 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103024497 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.086656086 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105989191 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088578624 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09829375 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.088262487 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.09792241 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.096409718 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.083490968 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.093744859 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082251964 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.09946086 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.087084124 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.101860594 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085850532 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103259336 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104614727 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.083215076 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105110741 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097286149 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.094749513 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.078759517 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10059986 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102988386 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.081964601 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.099735491 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.083084431 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105175562 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086630931 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106530467 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.096323658 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.080254601 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.104866585 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.081961065 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106518871 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087463392 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.106478208 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08142925 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.103753821 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.081870073 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108534913 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.096176723 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.085608374 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103211037 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085395228 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.10066395 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085235787 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.099882827 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.095867565 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.082356643 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106242233 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.078679726 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103770895 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.082649433 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.102024899 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.079019122 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09996862 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.088439344 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.098020131 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.08882371 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.099952582 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.096115299 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.079086689 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.106442851 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087816131 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.105667671 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.081240685 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.102903178 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088753488 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.10302831 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.082139132 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109515873 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108000487 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.089744884 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110885127 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.077819334 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.102694714 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092023679 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.100156041 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.085535093 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100709013 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.07923803 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107114977 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.106261673 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.087038381 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102768806 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.078574326 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099600078 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087870857 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102519463 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.085817516 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.102145765 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086830872 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.098739187 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103561793 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.088520206 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103773762 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090028704 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104635836 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.086051203 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.101135214 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.088311321 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.101510163 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.079361296 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.096456199 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.102012058 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.088870147 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.094870796 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.085918754 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.104048158 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08289672 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.10226249 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087401567 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.101028044 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084301422 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104832616 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.081953084 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110682426 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.101007084 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.081101131 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.106151286 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086113849 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.097362352 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.083204176 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100177576 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089162282 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.102223901 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.087381203 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104152676 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10633041 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084169363 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.106208716 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.087680501 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.106149258 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.079173721 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.107724643 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090301186 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101441482 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.08369043 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102049252 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.096954422 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.084484569 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.107237052 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.082785821 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10920465 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.088173296 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.101447922 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.084882696 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104872228 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10324483 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088717929 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.09944962 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086191488 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.096965351 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091005525 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.103523665 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.089944648 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.099691404 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.098512762 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08716048 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.106168719 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08601401 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.108369057 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.089559051 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.097111985 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.079480548 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.102765932 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.082945503 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110723645 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.101112165 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.084307079 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103157762 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.085050347 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.101479046 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089527423 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.098290695 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.082707168 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105889127 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104919549 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.080898686 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.099121814 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085689246 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.103437257 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086094946 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.104137308 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080862298 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.103950521 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.089584485 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.101603579 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.097578805 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.08352819 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107815814 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.086248565 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.100211693 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.079543188 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111761074 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.107342806 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089834897 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.098233618 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.086244859 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101982002 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.084375089 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.108155874 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085281924 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105771181 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.10232223 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088444487 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111805233 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.079142566 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.099272184 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094100566 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104669351 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106038228 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.083902004 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103777669 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09027327 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108269939 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.086450296 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.098172099 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.079901153 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.099650109 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.080384429 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.102814765 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093410785 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.103378784 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.101729935 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087618989 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104597328 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.084035524 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.102750816 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.079208607 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109040448 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.083220397 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.109187505 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.080137562 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.095305941 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.084405867 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105100283 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.100183413 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.0817118 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.101554296 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.084607002 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.099680088 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.08355514 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109692161 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086301206 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.108307057 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085513778 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.102220376 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.08466773 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112740842 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.101633268 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.083675627 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114563139 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.089388234 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105409351 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.104267887 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091001196 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.107718009 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.085381701 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.107998828 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.084054196 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.100699821 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.089802805 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.108028289 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115902831 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085062761 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.096459871 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.087167858 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.099301309 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.080336006 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109081293 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090703948 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.107819309 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.104949766 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.083239674 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111189939 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084869566 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104822773 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.085516843 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.102154531 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086573778 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103055298 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.086520706 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.101173426 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.108759733 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.090187196 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107269917 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.091817024 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.09716156 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093380024 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.107803356 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.108878009 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.082365152 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.100213694 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.080432798 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.103696119 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.089931903 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.10768907 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.08545848 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.105100906 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087022722 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105842021 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087842122 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.102516555 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.090989398 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.105394447 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.08317418 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.107568016 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.100029064 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.080821604 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.101556832 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.089376929 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.108801586 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.08756618 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112680312 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.090398055 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.103191295 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.102763575 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087439412 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.102960202 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.08852409 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105632071 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.083269679 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.099222736 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088614031 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.108637382 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087804838 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108090603 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.109755873 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085486884 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.108289256 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.092397221 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.107299701 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.083643898 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.107424732 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.085974088 seconds)
  done (took 57.708801084 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.163238277 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091632747 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103340281 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.085439614 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131978215 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105537382 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084646799 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105125184 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087580828 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.116665952 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103451951 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085377628 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.126324517 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135860587 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131617132 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.117848828 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084328052 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.104756181 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08459987 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105045849 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107427206 seconds)
  done (took 3.027697513 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.110290589 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.12155443 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.121551003 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.124936454 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096329845 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.119684895 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.120192589 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119566672 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104914703 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114748125 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.122883135 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119474801 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.097155996 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.116651584 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117213066 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116387795 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.10520304 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.114808877 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.120737439 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.121687118 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097451485 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.12098205 seconds)
  done (took 3.286856565 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.096653609 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.106120922 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.090154682 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.10278774 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.087383717 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.10346755 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.094181927 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.102560316 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.093357302 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.103067613 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.082284288 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.101835377 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086517974 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.102944005 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.082094848 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.102825175 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112802322 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.087645389 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108399509 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.083861692 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.11987299 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.084867373 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.104566703 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.082349059 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.116468585 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108468672 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.0849311 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.108581045 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.079832798 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10800976 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.084539628 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104639963 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087596762 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.100443596 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.07984735 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.107056218 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.08818989 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.103898132 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.085356725 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.100793861 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.08556548 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.10803351 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.109860982 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.08561409 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.103363189 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083310186 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.107690754 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.084978537 seconds)
  done (took 5.401335605 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.123250046 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161999013 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090149722 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.150183561 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.1258059 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.119345832 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088973422 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.129699356 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.109130578 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.109790491 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.107634308 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.128807967 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.110971227 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.114809635 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.089308843 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.111564696 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.094317655 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108917797 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.116537433 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.091368099 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.117488569 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.114157519 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.107493514 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.125226147 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112409082 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.109975978 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.090829607 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.114161378 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.125720479 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.099463967 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.114709158 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.116947414 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.107118382 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.112381542 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10959917 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.091796043 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.127191827 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.111220265 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092743774 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106990404 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.110671889 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095745694 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111831007 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.128909279 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.092002879 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.11273447 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.111020052 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.08869812 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.125026249 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.111369186 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.101386133 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.128263294 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.112669013 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.093119009 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.1145696 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.12572031 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.111316841 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.090208627 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.111658082 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.1247266 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.088471665 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.112642365 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.126607744 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.092707656 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.118389575 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.127368219 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.095102642 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.11351035 seconds)
  done (took 8.506708367 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121358097 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.115323739 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12837922 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.128397665 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.097984942 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.114798964 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.115575201 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.09671933 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115247487 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122509503 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096207077 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.224624124 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.092092801 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121722798 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.116037775 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096227874 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11436743 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114552533 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096590893 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113918958 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.115707168 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.108270894 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.113818541 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128249078 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131039036 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.091408442 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.115567565 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114864447 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108933954 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.114526148 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129993866 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.116802202 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.096309759 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12913768 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.130295077 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.115330828 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089487573 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116317045 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.114599906 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.096395819 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.110868236 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126845181 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.096204723 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110424682 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09643806 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115372728 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.127966314 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.132341208 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.122645139 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.104543549 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.116282038 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.127600825 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116202778 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096616462 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.128934507 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.136662552 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129986573 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128356765 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096767494 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.128539828 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126500761 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.138705368 seconds)
  done (took 8.010287451 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085150813 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086290878 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.10490701 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.085741578 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105401111 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085000681 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.104553267 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085954216 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104805252 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.085603624 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104211607 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085942836 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105334547 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08541266 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.105994757 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085963215 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104880097 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086676735 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105023214 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086733118 seconds)
  done (took 2.665993234 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.097985372 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.129219665 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.088700938 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.119513291 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108187402 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.098303424 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10707952 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089557917 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109048707 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109135232 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100677068 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.121714263 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108587123 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099426434 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.119886029 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.117431097 seconds)
  done (took 2.502938775 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.111763099 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.130117391 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.167843604 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.111272945 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.090039313 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.116819234 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.089092332 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.111294598 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.107438233 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.096880053 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.112298232 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.093452231 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.108410431 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.089749445 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.108358787 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.11236777 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.087204471 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.113345283 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.08926323 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.168627695 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.114204218 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.09301801 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.111073284 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.112829939 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.092016051 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.115407029 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.117918303 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.090576751 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.111746941 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.089418304 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.112963963 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.099102437 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10819586 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.114745632 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.089703521 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.110217887 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.089336807 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.10865323 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.092916448 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.108487304 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.092103562 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.111924827 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.110135667 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.092212034 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.106635695 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.089874097 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.106938345 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.097275477 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.110682699 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.111987787 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.089743812 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.114952956 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.094948882 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.121271972 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.116632086 seconds)
  done (took 6.648464459 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103019626 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111028769 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.103847653 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105971419 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089390137 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.112356895 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109912351 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092254252 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110503396 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086757001 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110313589 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.092037063 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111124941 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110496853 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091750103 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10992792 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086951144 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111174919 seconds)
  done (took 2.632450058 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095600848 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108787156 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095109098 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108616255 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088702054 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109013581 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087037712 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.107647239 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088305979 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.109132864 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088313918 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.108658991 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087194178 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.109113229 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108109637 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09022186 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109386979 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088191348 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.108230312 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088168305 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108652158 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089110075 seconds)
  done (took 2.967674542 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.100918828 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.166331319 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.118960292 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.179071126 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.10986245 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.087501468 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.118147964 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.106465124 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.10817226 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.107667427 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.08719374 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.106514677 seconds)
  done (took 2.185935194 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117111557 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150504486 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111123664 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089357193 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123424125 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095844256 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115432128 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115731973 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126473068 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111730444 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116637969 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127420064 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127616779 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128791279 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102121891 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122566969 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115594249 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096460735 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11113788 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140018928 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097400788 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129309808 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114417851 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115383601 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09668914 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128435657 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127836731 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131180015 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096518952 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126590754 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1219528 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115634825 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107012404 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13258476 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108800017 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127073661 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096114349 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139803222 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122042815 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128988546 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089380795 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12214676 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127749895 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124534701 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107274701 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115203582 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123635927 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096272389 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116407339 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147070274 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121643292 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12939775 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104704923 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126335885 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12747384 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147673144 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131605908 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128676586 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121778456 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113184099 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130043693 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121812247 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129121304 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132240918 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122654402 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108756473 seconds)
  done (took 8.665472154 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136652404 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111748109 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117661679 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13273258 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109081531 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115911252 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11616687 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096711148 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116269046 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111736272 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168273138 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096526423 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129132021 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129040233 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116313755 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097522637 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115976582 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132764267 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091634138 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145631472 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116968871 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129026017 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129419935 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129328268 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111494008 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124085612 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115805731 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09757826 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117745286 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117033586 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106325778 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116057837 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127887062 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111998656 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108376765 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116590947 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116186558 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104540461 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116375342 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123042158 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128812082 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139943573 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097922311 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116277193 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131268924 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097976402 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115488982 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111495468 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09604643 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111144079 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135353757 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133702383 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131068282 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109396621 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116073726 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115808703 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096399551 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116634695 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116307943 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102732428 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12931712 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115661046 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147879256 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097350759 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118136651 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129401499 seconds)
  done (took 8.578856622 seconds)
done (took 157.448616988 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.151402506 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.171442467 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.148550608 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.148318673 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.103890331 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119055248 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137714167 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.151386175 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.084120814 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.104265734 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.083531698 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.107828873 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.149287016 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.103374774 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.083698245 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108140014 seconds)
  done (took 2.747766219 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.183300632 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.336128631 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.12485211 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.114556971 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.092972208 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.106486201 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.094341042 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.114962053 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.107703223 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.099626187 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.106771517 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087920509 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.119603677 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.106824365 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.088211496 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.106703241 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.118747567 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086918162 seconds)
  done (took 2.995921881 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111233525 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146127446 seconds)
  done (took 1.060675526 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122915024 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.192469259 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.327153421 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.158346877 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.13619767 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.110420547 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.160278681 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.124954721 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.201662328 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.129783434 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.129453845 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.090815975 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138861057 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.117342628 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.12431482 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.091181399 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141378348 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.121048339 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.100691113 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.113427526 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.136331382 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.092201552 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117638369 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.102341754 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.210951103 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.108523213 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.113294039 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.112657941 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.092862874 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.119987488 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.09278516 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.129603478 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.128428812 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.199170184 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.097500613 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.194178057 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.100475243 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.110428891 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.119445668 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092202431 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.115818341 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.116966356 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.107937151 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.111772139 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.11217826 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.100587426 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.112348738 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.092321442 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114770836 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.122738881 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.095087174 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112498915 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.195013592 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.103046783 seconds)
  done (took 7.714219718 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.90189663 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15469864 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089610964 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.033664771 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138406332 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125516573 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.888208409 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13494078 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.27712498 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.904703428 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.106294779 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124661872 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.261733062 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.291983556 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.188402717 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.371771536 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.764001534 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103606933 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.141241874 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.160970853 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121081944 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138862505 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.134176949 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.436445051 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.09179337 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110249577 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120600148 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103483669 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.199033761 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.089182911 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114782912 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.22029195 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.282847556 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.226372682 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.091138837 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.108807627 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.087724112 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.205029337 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.299414518 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.247461982 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182252851 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105213962 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.087863982 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.119050503 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131984245 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084779142 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.204558445 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.192642421 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.213069689 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09546197 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122435858 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.123129425 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.097424195 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.198328379 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.086161018 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.387635524 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.373087955 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089592815 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121303497 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124776706 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.297712811 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.089048665 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.276782959 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118428794 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.240147023 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109615336 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81778556 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.184621447 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109430772 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.116302419 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098994856 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118055706 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.117800335 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176764267 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.407347828 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102506158 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115744102 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109540563 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.245105175 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.109749846 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.08874536 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.203893723 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090783185 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121645527 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123452082 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12258874 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.188631205 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.267485828 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124148788 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120619304 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116055496 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.105177698 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.111833579 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.228661632 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.249681737 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.19534134 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.236152465 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121033624 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.206283246 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.186081426 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118237172 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.188905587 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119332295 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105987318 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118531252 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.250210543 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.15157892 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.110678609 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115454781 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.100949786 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.157542692 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.112618033 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.100112567 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.206591538 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.497756499 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.185519696 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.106277197 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093643676 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121452893 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179913456 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120086194 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.286290665 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12208698 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.186133155 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119797733 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086673269 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12201815 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.182846985 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121206391 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121572164 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09762361 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122308784 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.289451793 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.249852847 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.1035732 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.26584451 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.191644122 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117630711 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.191845568 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120867205 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.206997147 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101959786 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118860529 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091962307 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.837243049 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.105386737 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120388767 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11649191 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.198646464 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089305864 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110944312 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.088737067 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107056007 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.82650028 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.091786775 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.107618259 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.091081091 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116613505 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120992557 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100236609 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117308277 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179756828 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.28885024 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103651025 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121639574 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.1089981 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.180478054 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.113367317 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.089660726 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.111242724 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.090343721 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122250471 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095754127 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.112522021 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192545626 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.198141349 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.253629069 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.578399873 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090680926 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.110371023 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.265413021 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110244733 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.344593349 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121489818 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.261223615 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187101487 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.108067475 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.374580778 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.190597167 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.221544795 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.094451144 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.215194622 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089155373 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120627262 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.181018036 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111597115 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100103084 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.200072075 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129135721 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103573749 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.201930054 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110344686 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250528801 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108493413 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191572451 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114477879 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119598738 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.351620271 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089673844 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129647906 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.204822245 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099039764 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.111181517 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.791917667 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.111398183 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125887223 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096150201 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.283438072 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.191304258 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121378099 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102952894 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124158467 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.203664872 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.237521657 seconds)
  done (took 47.093930631 seconds)
done (took 62.408618384 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.32023993 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.27846889 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.3349251 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.229864732 seconds)
  done (took 2.062148063 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.227329704 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.162127321 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.210714535 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.092492799 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.199269365 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.108473999 seconds)
  done (took 1.819822396 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.536596477 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.414521776 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.377239166 seconds)
  done (took 2.157351191 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.276096783 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.269408847 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.361460111 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.496552272 seconds)
  done (took 2.363689651 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.253978539 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133819873 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.127148871 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.181040713 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.220347691 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.221567457 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.151791818 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.166249743 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.11271349 seconds)
  done (took 2.449703038 seconds)
done (took 11.679666259 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.348201815 seconds)
    (2/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.40305251 seconds)
    (3/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.303123533 seconds)
    (4/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.305369301 seconds)
    (5/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.283992167 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.201107996 seconds)
    (7/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.25011442 seconds)
    (8/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.322491669 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.09764428 seconds)
    (10/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.125003275 seconds)
    (11/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.296788915 seconds)
    (12/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.186051714 seconds)
    (13/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.271755774 seconds)
    (14/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.095782139 seconds)
    (15/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.279736079 seconds)
    (16/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.121923987 seconds)
    (17/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.231040485 seconds)
    (18/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.235149295 seconds)
    (19/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.357465872 seconds)
    (20/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.199160484 seconds)
    (21/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.120508737 seconds)
    (22/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.12090024 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.107356244 seconds)
    (24/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117419694 seconds)
    (25/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.24311664 seconds)
    (26/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.206065057 seconds)
    (27/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.222036712 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.203962615 seconds)
    (29/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.172739633 seconds)
    (30/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.299297574 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.14931956 seconds)
    (32/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.098929248 seconds)
    (33/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.10221815 seconds)
    (34/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.216056526 seconds)
    (35/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.152956925 seconds)
    (36/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.171984235 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.157447282 seconds)
    (38/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.227668868 seconds)
    (39/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.201253243 seconds)
    (40/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.118388793 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.109177019 seconds)
    (42/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.122161027 seconds)
    (43/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.126657743 seconds)
    (44/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.091101078 seconds)
    (45/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.097002652 seconds)
    (46/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.118662211 seconds)
    (47/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.109320999 seconds)
    (48/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.106853338 seconds)
    (49/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.11722394 seconds)
    (50/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.215950176 seconds)
    (51/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.191211856 seconds)
    (52/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.108757021 seconds)
    (53/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.095443337 seconds)
    (54/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.17621852 seconds)
    (55/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.120319361 seconds)
    (56/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.095231206 seconds)
    (57/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.230614323 seconds)
    (58/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.07833345 seconds)
    (59/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.104914442 seconds)
    (60/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.080128497 seconds)
    (61/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.185473711 seconds)
    (62/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.118188815 seconds)
    (63/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.097711393 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.149457718 seconds)
    (65/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.219228222 seconds)
    (66/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.23879196 seconds)
    (67/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.085822328 seconds)
    (68/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.121372589 seconds)
    (69/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.082270475 seconds)
    (70/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.080626787 seconds)
    (71/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.128555885 seconds)
    (72/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.086059556 seconds)
    (73/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.176709413 seconds)
    (74/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.199610879 seconds)
    (75/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.151313169 seconds)
    (76/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.11492236 seconds)
    (77/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.155872763 seconds)
    (78/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.200994203 seconds)
    (79/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.13610078 seconds)
    (80/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.215404438 seconds)
    (81/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.078557366 seconds)
    (82/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.119970177 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.095898915 seconds)
    (84/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.203507819 seconds)
    (85/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.174692011 seconds)
    (86/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.096417435 seconds)
    (87/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.101597845 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.126846034 seconds)
    (89/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.102858329 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.096107039 seconds)
    (91/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.224124096 seconds)
    (92/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.102527249 seconds)
    (93/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.173869683 seconds)
    (94/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.135532362 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.119663728 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.096022622 seconds)
    (97/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.200414472 seconds)
    (98/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.157207139 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.131211504 seconds)
    (100/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.080169845 seconds)
    (101/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.202352841 seconds)
    (102/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.080301586 seconds)
    (103/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.102151189 seconds)
    (104/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.101578342 seconds)
    (105/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.111124432 seconds)
    (106/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.098249989 seconds)
    (107/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.10195199 seconds)
    (108/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.22057462 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.096996208 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.13012715 seconds)
    (111/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.219601587 seconds)
    (112/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.080806566 seconds)
    (113/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.08162925 seconds)
    (114/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.102621283 seconds)
    (115/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.079407039 seconds)
    (116/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.110837799 seconds)
    (117/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.080326714 seconds)
    (118/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.103312249 seconds)
    (119/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.176415343 seconds)
    (120/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.103287827 seconds)
    (121/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.215801863 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.096287467 seconds)
    (123/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.117745278 seconds)
    (124/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.079130716 seconds)
    (125/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.170425951 seconds)
    (126/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.096706254 seconds)
    (127/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.120348676 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.096500215 seconds)
    (129/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.12177349 seconds)
    (130/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.089190591 seconds)
    (131/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.114756918 seconds)
    (132/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.080976647 seconds)
    (133/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.108113667 seconds)
    (134/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.086653391 seconds)
    (135/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.102285305 seconds)
    (136/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.17618111 seconds)
    (137/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.128865435 seconds)
    (138/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.115233766 seconds)
    (139/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.086425275 seconds)
    (140/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.137410639 seconds)
    (141/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.113824636 seconds)
    (142/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.11252775 seconds)
    (143/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.081050654 seconds)
    (144/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.102550228 seconds)
    (145/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.080855036 seconds)
    (146/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.181254482 seconds)
    (147/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.080218558 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.12118538 seconds)
    (149/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.080572712 seconds)
    (150/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.102127002 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.096387462 seconds)
    (152/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.11935295 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.119806087 seconds)
    (154/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.080648734 seconds)
    (155/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.080034266 seconds)
    (156/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.119005947 seconds)
    (157/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.120615763 seconds)
    (158/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.08237144 seconds)
    (159/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.079340815 seconds)
    (160/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.103407415 seconds)
    (161/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.097721362 seconds)
    (162/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.111045378 seconds)
    (163/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.092528912 seconds)
    (164/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.102121164 seconds)
    (165/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088522696 seconds)
    (166/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.104427471 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096964597 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.13615407 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.096102164 seconds)
    (170/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.35312986 seconds)
    (171/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.119910897 seconds)
    (172/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.096044386 seconds)
    (173/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.102712464 seconds)
    (174/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.090360572 seconds)
    (175/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.119349837 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.096247365 seconds)
    (177/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.103201001 seconds)
    (178/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.085581337 seconds)
    (179/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.08062137 seconds)
    (180/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.102412943 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.096578551 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.137263988 seconds)
    (183/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.080157541 seconds)
    (184/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.102769944 seconds)
    (185/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.08725541 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.118803707 seconds)
    (187/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.080889454 seconds)
    (188/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.104802502 seconds)
    (189/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.086180792 seconds)
    (190/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.11943757 seconds)
    (191/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.082529687 seconds)
    (192/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.081991965 seconds)
  done (took 27.751544758 seconds)
done (took 28.594054672 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.230549621 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.103322122 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.123619327 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.123535643 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.184041642 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103191928 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.133685156 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.125942084 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.104192051 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.120785707 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.09001343 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.128764338 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.12295725 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.182979518 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.105949165 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.116131022 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.092966614 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.12869073 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.131621056 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.110441709 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.179766497 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117142064 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.10492304 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.114127225 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.183682264 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092177673 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.123855316 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.123364737 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.107653604 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.119901575 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.100057836 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.114724625 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.132223317 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.107848355 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11241986 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.096187503 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112615986 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.088199875 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.121684169 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.098586432 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.128959909 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.121304408 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.1011881 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.115562963 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.098837006 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.118835066 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090215987 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.127226199 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.113192436 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100708963 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115078676 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.109376547 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.119739171 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.090038151 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111788194 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11577569 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.106029173 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112292144 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.107790267 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113239385 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.092667448 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113763571 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.098748328 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113811137 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.096350481 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.115241679 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.120504708 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.100045824 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.119362898 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092501525 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112574193 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.096997563 seconds)
done (took 9.281373772 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.098030889 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.177906924 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.181255289 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.187878285 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.14678557 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.133691856 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.135453158 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.121157902 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.133030268 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.139796625 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.128833979 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.143038502 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.192742369 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.128695705 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.133272016 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.099491208 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.129039181 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.123228254 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.19055516 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.116502751 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150605658 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.128532131 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.150311902 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.112853934 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121824864 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.154709376 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.101244303 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.122141679 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.120642238 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.106003744 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.14166122 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.121348769 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.100668157 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136622188 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.109350967 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.126463179 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.133201963 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.099133316 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.119176124 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.097213534 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.134331647 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132039082 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.0970797 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.132919592 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.123395417 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.107246509 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.128120789 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.129634367 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.102245905 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.12425248 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.100565526 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.150687436 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.130024823 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.109501142 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.129968725 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.127091778 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.10524211 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.127560557 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.099976684 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.128071958 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.119875179 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.098999208 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.123110141 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.147913518 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.100371849 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.129334115 seconds)
  done (took 9.301532558 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.121366417 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.159581267 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.131981315 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109021104 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.127025211 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.112043418 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.087720267 seconds)
  done (took 1.724585522 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090280605 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184560658 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.182687145 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.183525406 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.182536598 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.216374587 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.111719384 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.114893347 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.149914058 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.101178493 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.18256516 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.239304887 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.096681272 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.133220335 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.190465335 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091146612 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.211019689 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.090964902 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.126761013 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.185464631 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.105267651 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.144383338 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.130616799 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.091197343 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.178908344 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115638201 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.239663046 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.130452067 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.119778996 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.099898237 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.128453345 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.201629096 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.180978084 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.129821985 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094737644 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.182157802 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.178423794 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.126812276 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.194405039 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.118156504 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.178364396 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.102053908 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.127742313 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.104290471 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.125967765 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.166665243 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.132084955 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.10401549 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.124237598 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.188568239 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.127994709 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.180212179 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.098109915 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.125510607 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.102568525 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.128132725 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132891253 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.102123927 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.186381445 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.129299367 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.182106762 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.183968688 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.180311047 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.181925572 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137963265 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.18257248 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.179673251 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.100825406 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.123092337 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.12785563 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.181278257 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.101339546 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.12769723 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.169346832 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.130549018 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.182270769 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.18274861 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099304594 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.129395359 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.095740385 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.124193895 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091517455 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.176589312 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124356725 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.125183464 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111738946 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12892775 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.12805142 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.095664807 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.142253566 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.126719676 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.10456235 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.130962266 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.10253284 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133305338 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.184476653 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.127578629 seconds)
  done (took 14.65395114 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092681291 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.117046296 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.098208937 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.117288107 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.094019335 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.1185223 seconds)
  done (took 1.53363239 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.125310531 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.129050778 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.140093754 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.105597881 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.185842526 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.188170309 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.188902276 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12537864 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.1460263 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.115093153 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.188988344 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.217140578 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.189276539 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.107434873 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.192898413 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.130904631 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.189469088 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12599447 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.113584861 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125430633 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.134965149 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.10750734 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125162315 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.180291002 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.131346553 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.105731061 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127510173 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.137019681 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.11235748 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12468831 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.107692248 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.129496035 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.12102532 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.100982389 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.213576042 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.098633374 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123777039 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.109691502 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.131722292 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.130032715 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.193798223 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10088851 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.137489063 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.133586158 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.10220337 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.12175032 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.149567574 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.104038091 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.189741427 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.134714377 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.133799229 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.104434062 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.129937295 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.132673906 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.098124395 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124653358 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.132075037 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.190110022 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.107887252 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122428653 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.105247649 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.131364159 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124532481 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.109741795 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.129679264 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.13367143 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.098691307 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.130732068 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126240918 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.106135824 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.134770745 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.106295363 seconds)
  done (took 10.565181031 seconds)
done (took 38.65904032 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.204904785 seconds)
  done (took 2.10182736 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.925441467 seconds)
  done (took 1.829143822 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.018702002 seconds)
  done (took 17.960623932 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.578667948 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.638096849 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.001809622 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.169150289 seconds)
  done (took 3.29321829 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.001643716 seconds)
  done (took 1.923152507 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.352168454 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.280970033 seconds)
  done (took 1.534828978 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.711981664 seconds)
  done (took 1.627524981 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.247609937 seconds)
  done (took 3.159043344 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.37892334 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.196231806 seconds)
  done (took 1.495930738 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.687245847 seconds)
  done (took 1.604466209 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 29.43642687 seconds)
  done (took 30.355941321 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.251250495 seconds)
  done (took 1.182782001 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.32007739 seconds)
  done (took 1.241036441 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.554883693 seconds)
  done (took 4.479546638 seconds)
done (took 74.698791187 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.105999838 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.131213099 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106189233 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.128301085 seconds)
  done (took 1.392787671 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.113411941 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.128040036 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.108667585 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12752524 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.137980502 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.103570098 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.128267092 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.112289151 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.127497374 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.129689368 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.103515279 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.128146213 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.130187789 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.103020376 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.1253059 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.106006041 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.131440715 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.129387953 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.105174545 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.129163093 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.105007472 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.129566699 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.131223673 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.105087375 seconds)
  done (took 3.807505122 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.105219097 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120563941 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097809439 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.120453406 seconds)
  done (took 1.376755651 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.115346942 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.143587129 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.142515771 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.110516317 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144794753 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.141760013 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.101177729 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.124109315 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.101223843 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.135815923 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.152269478 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.123750178 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.142506934 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.129233152 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.113497639 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.120712193 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.10578143 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.144296977 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.136608739 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.112158438 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.127782926 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.136052897 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.101688888 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141626638 seconds)
  done (took 3.98022375 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.217208811 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.116465007 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.152484431 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.181550313 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.160755373 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.101657858 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.154354149 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132866083 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.110573203 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.139004984 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.131000579 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.191274556 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.105510205 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.128812482 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.105618789 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.133368022 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.143126903 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.134326754 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.175545724 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.10853754 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.131872425 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.142102116 seconds)
  done (took 4.034010726 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.106934929 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.121121754 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091864407 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.120921644 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.103926864 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.123175669 seconds)
  done (took 1.600799166 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.10145321 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115371984 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095387753 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.116531388 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095199795 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114485999 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089947351 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114713755 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090626191 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113515686 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.091429902 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114384728 seconds)
  done (took 2.187374618 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.311254711 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.094936619 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.123580501 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.118018296 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.104187462 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.120322346 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.140494366 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.094102802 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.262329287 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.091630699 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.140356104 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.201259972 seconds)
  done (took 2.734983267 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228386368 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106291414 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321702882 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.401542542 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168525547 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179641848 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.287037259 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178407711 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.206457412 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149789933 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237863675 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142908848 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166128906 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192607687 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151395745 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.223565878 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189565189 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217145068 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162121626 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24964209 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176481513 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181859442 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196023991 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164684877 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122798326 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171283092 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.131173828 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136983458 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18925196 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18523528 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190004927 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16107594 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151513404 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21921754 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252224656 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194557302 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.314523683 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141147705 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.204878538 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.197789817 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28831547 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125159839 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239633285 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168063452 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114894376 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219084786 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168338592 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.196722401 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.116553127 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150436051 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202890183 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187118361 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.22473702 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14835619 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304278074 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15765697 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.158387973 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190231561 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204662153 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205807103 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176915302 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.129455694 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19677445 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194833198 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191063207 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.157731528 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.183781928 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13649975 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185089875 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212456554 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196830881 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176829668 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.226209355 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142659185 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176908914 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183830877 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165278432 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182083238 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172872541 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.1034854 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162597407 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147876064 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109892012 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.20001377 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132593962 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226686349 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143672867 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.397866985 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22128684 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170527065 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176313049 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177364835 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179084901 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158217106 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.131583883 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133481469 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.174277512 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169860717 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140672669 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171277129 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15134203 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.112788987 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16240365 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.131061771 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170938815 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.160042376 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181838803 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175812411 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.114159535 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176889271 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1612546 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.170426891 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184699449 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201784712 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140600785 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14016982 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202191608 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168168341 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.118606402 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.215034387 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206353881 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.178874352 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121491684 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181424146 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235252102 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12673805 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231431032 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128028153 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14245428 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.16691056 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169738053 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17155374 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.165819587 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111209271 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.169260681 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238025218 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.109300092 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145976692 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187582038 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136610045 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110901755 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151414186 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146530796 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.12583109 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.1577655 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.148338846 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167914127 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17191715 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164596741 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172409113 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152545097 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21090378 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141786924 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.171678476 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13165113 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.129206358 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.199655197 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20037533 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138495882 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21433627 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.184085321 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235728714 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174575777 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112221249 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193754489 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138150968 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.13046185 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17736173 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175101638 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176063872 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.202056726 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206998316 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.184391576 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.165566676 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159433932 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182363319 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.189554057 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172233066 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.156931757 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176586464 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183350207 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.12997908 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.107734758 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.138755482 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152403133 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114556401 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140962801 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197976187 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178877303 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22593825 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172220387 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125690234 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.224938502 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.109274805 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178496235 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.189400775 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150625034 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.203956461 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19813188 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180441782 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151108233 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178516662 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.131191042 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107113913 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.145108968 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183332122 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141718906 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11767188 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152959477 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199222154 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21479994 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135046372 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244565623 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180629372 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208601759 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.130656988 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.176713267 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185076463 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169562276 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.171212621 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137728358 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.173139748 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192901189 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156623961 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207812752 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175147343 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18077113 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24587938 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.168323463 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111751945 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161021618 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178794527 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151190168 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179086885 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156933012 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118501106 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166488577 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.148844736 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13686868 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198671263 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153173703 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197585146 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.171002791 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190623904 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135388512 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155291488 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171873888 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12933404 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.129254179 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186526958 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205222905 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157631701 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173233038 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192717766 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138861934 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.333487778 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205342252 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227273729 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119920009 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155172708 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174755775 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171638887 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178241244 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19377421 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155771414 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191634987 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174166011 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.153108756 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11795501 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159420653 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162330026 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.168017504 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.145283618 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.166949848 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.125360272 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227996068 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12470383 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171379835 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178359264 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.159020745 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.167925913 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127099654 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240895931 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169164172 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194346794 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.166566168 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.183179389 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214499149 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133361859 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108884399 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.138248961 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195268984 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115153726 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170748247 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.218643757 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209613493 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169869767 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179705354 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148021559 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.107748321 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173154188 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159610301 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236933925 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126090153 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.14893516 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207937543 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.162531503 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139691192 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177226495 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290933087 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154772802 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190312197 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.104239295 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.305963508 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109233627 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141188265 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17333216 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184747827 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.117776086 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.192300186 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176697855 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155850569 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173859063 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148328811 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202702585 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222401566 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184224316 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218688501 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.127730075 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171797232 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176584309 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218632649 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126708648 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.157893623 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175277184 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198933749 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.202378073 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.144016399 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175903832 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176918226 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172975193 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19316588 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144146836 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215173799 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140057781 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177144474 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124154505 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135091251 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170488989 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.194469057 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142530749 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192187865 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169733775 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140068452 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111126124 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164139882 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170167577 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155812571 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.137413736 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197602671 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.108550968 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174720137 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184630453 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139589427 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166616576 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130651508 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143833624 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153979002 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157403403 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146262322 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.152604497 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196158642 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.143499576 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192880353 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179248089 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178376433 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172311312 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156627054 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.679983058 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.112174786 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22518353 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131447453 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20440662 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159995926 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180647571 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173604937 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161364086 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180169655 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162303052 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.235691256 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177939539 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.17353777 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112704003 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155969475 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15427213 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143223977 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163368416 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148698817 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150488228 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.149848983 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.173413927 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154950557 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.129930504 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147810763 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200367569 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159887262 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20081478 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198715332 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150914414 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180359453 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193092317 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139231309 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178037809 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18612875 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152229053 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165857902 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.116013079 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.147638435 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183222678 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.134710641 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176251023 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144852187 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175554117 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176011459 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148005125 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173076992 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152717688 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174143815 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109989693 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.168454931 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170477432 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143681168 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.113418507 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166803999 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172983522 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.171622553 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13919871 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.155470871 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193039677 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.132656559 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14481402 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288699298 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173094617 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208336958 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.168996021 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144933306 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126663158 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169655238 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.168504373 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174416861 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.140436071 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114025685 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.144021157 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.194069427 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.170725304 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169804513 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193166538 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172966901 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218223893 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.15704471 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.283942156 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123141709 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169196836 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.143136228 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.113190134 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154758111 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144427913 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155881893 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203435596 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182178574 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.165125394 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.156645631 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112234997 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.132640284 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112717511 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174090485 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167367607 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171564996 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15816953 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102042164 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155494951 seconds)
  done (took 83.512529211 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150292829 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.141790448 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.152085352 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201461632 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17040186 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.262089473 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211507097 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.232026015 seconds)
  done (took 2.540522803 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.107704487 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.139846682 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.148627555 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.128747622 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.12965166 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.409986158 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.143572119 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.127028917 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.194370708 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.14112608 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.124270525 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.601807125 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.126398497 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.101919496 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.121564166 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.127858184 seconds)
  done (took 3.88600619 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.410746461 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.539425609 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.938640964 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.255350732 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.237181017 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.187050763 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.743177173 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.176307996 seconds)
  done (took 12.506420014 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.134413823 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.148014797 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.354490429 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.223215559 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.167281533 seconds)
  done (took 2.054549933 seconds)
done (took 126.535403914 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.108930557 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.134473264 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.110259468 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.137025672 seconds)
  done (took 1.494364511 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.1549433 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.117133064 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.093083843 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.115738175 seconds)
  done (took 1.49625172 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.529643794 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089397001 seconds)
  done (took 1.673359036 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.133883367 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.154702948 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.155222497 seconds)
  done (took 1.473435632 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.116002675 seconds)
  done (took 1.137430964 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.115644761 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129660198 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.197409264 seconds)
  done (took 1.466755524 seconds)
done (took 9.765720726 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.106985685 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.432652067 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.421156394 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114118009 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.732212679 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.382519938 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.07827637 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.162977209 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.213260366 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12181916 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11737495 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.702370594 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.0313986 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.343940665 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.013113536 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.341614316 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.703283502 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094756648 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.130133063 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124141031 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.026812999 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121469303 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096858966 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122334709 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.675388958 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.442819525 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095337219 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.383552924 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121628104 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102927335 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.408782648 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095160585 seconds)
  done (took 17.070585299 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104301673 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.190676305 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134998217 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.098224312 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.131553821 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097217643 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.135213862 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.110381573 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.230003774 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095350639 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.145364777 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094454414 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129317587 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095534774 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.146791814 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122523374 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095745764 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12305346 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.103311193 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124583227 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117397193 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122456088 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098081334 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122535927 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096351804 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.155741923 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122624669 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.110200118 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123159158 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103364785 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.125184749 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096601221 seconds)
  done (took 4.934882992 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.147547786 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.201129035 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.136252958 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131454207 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.182688862 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125120113 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.214897122 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165463375 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203444611 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123593076 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118248598 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123561726 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.139795231 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123871224 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.148562783 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096217953 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.12513955 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096874605 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.131269519 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098757047 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.145062949 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122517288 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09810163 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.124271038 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095573206 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.156455726 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095919238 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.138512215 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123457309 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104345451 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126442486 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097118993 seconds)
  done (took 5.29645364 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.110176969 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.138039554 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.121959477 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.150290709 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.103816963 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.135247528 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.137139771 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.103472217 seconds)
  done (took 2.043958962 seconds)
done (took 30.369868425 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.123074839 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.142179356 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.114858069 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.136903178 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.200717713 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.099953428 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.140185646 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.099328355 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.138013038 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.117323161 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.123542182 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.102350959 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.144176892 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.105325559 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.183668161 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.139230865 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.192702637 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.184796981 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.101465311 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.137338485 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.102000775 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.191489631 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.13467046 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.129441031 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.168361084 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.127964062 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.17995799 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.105733782 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.133518918 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.131918895 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.186928649 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.106609063 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.130026796 seconds)
  done (took 5.57598031 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.206652593 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.211837991 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.102405607 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.130960053 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.203700892 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.101898168 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.205060054 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.129021103 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.100823087 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.13006208 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.100762518 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.205179926 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.218949651 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.225151764 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.242842351 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.214283134 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.202652548 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.210575321 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.200266406 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.219996557 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.20078819 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.129034253 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.216822211 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.21556483 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.100324852 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.130280754 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.240450283 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.213728298 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.237594068 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.197830113 seconds)
  done (took 6.48337182 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.111206653 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.146518507 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.123527125 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.200184364 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.164170214 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.106213811 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.142996423 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.148919548 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.12392459 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.124421407 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.112557495 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.163955176 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.143058489 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.107892307 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.130892756 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.116348188 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.150997124 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.098435614 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.133023482 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.117647101 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.144437162 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.143797358 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.112753098 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.135652852 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.09616839 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133558296 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.103530459 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.13819777 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.135640615 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.112671907 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.132859375 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.102185171 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.130321579 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.107057299 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.132463246 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.135815046 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.124337275 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.136213863 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.109605041 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.155999429 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.107157657 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.130883689 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.149731834 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.151277676 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.126927029 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.110503506 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.138196976 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.139331791 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.09829114 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.14530873 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.113454358 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.126155225 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.119837492 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.126421187 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.09905437 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135973339 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.127117813 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.101262908 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.139651981 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.101950007 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.152888417 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.104565132 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135803079 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.099590423 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.132507973 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.098879742 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.125850376 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.129887673 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.123755154 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132888102 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.133324242 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.127233674 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.109151863 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.135367259 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.133040409 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107262485 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.126754217 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105184285 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136029143 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.104541372 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.138374253 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.101394345 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.130985679 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.11814541 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.146384646 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.13646078 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.109939022 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.136880749 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.102164392 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.127336314 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.14045369 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.099903069 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.130444759 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111679713 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.126774086 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.101075977 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.13781016 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.107557972 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.125452467 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119384195 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.132629476 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.126632826 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.116365123 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.126736828 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.102998255 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.136520008 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.112232866 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.126224924 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.108350806 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.137347725 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.098457927 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.131294166 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.103213793 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.125508879 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.143059176 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.109150049 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.131163663 seconds)
  done (took 15.70887037 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.306130854 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.312766135 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.206532726 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.372825275 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.15394998 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.207225415 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.3086935 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.32625326 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.104686054 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.17544217 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.188693087 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.279445654 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.099101514 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.16174269 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.313653241 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.376833158 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.160783255 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.173960933 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.171713199 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.123497323 seconds)
  done (took 5.584955093 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.123448334 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.171654116 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.159184809 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.160378615 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.105128216 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.14289019 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.098157933 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.152118531 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.135595253 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.106344903 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.126342201 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.124013051 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.136451696 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.109884474 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.146199801 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.175396242 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.103518013 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.133659218 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.152559828 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.107385232 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.138465121 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.158585082 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.109759419 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.154812955 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.143562384 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.114003068 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.126450115 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.106324475 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.131048543 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.103714289 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.133617872 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.148349058 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.104865507 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.132671753 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.108772649 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.13972516 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.101549586 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.129558423 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.099866395 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.131004445 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.144294606 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.107602662 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.131416742 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096147034 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.141596531 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.101278477 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.139951254 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.109418255 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.13934136 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.113550703 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.13775899 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.112527965 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.133556791 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.148009255 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.101754237 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.143492454 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.112191414 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.139916092 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.136264068 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.097001177 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.125004885 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.103083713 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.132157497 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.111967495 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.137824293 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.150053399 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.113776864 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.127760796 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.105417624 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.131700751 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.103051301 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.146550237 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.153296037 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.104679941 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.130927231 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.115760594 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.131261876 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.091208851 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.138777866 seconds)
  done (took 11.102868561 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132984917 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.133522593 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.119728865 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.166514962 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.142416006 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.105796347 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.133776477 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.119515615 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.142413861 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.112177701 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.140570372 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.142878099 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.126346911 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.141604322 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.104232216 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.145494331 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.109407607 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.173690563 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.148594388 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.163068798 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.112571885 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.133609368 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.112727201 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.141684145 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.16378004 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.111602867 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.163428042 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.138448361 seconds)
  done (took 4.851172792 seconds)
done (took 50.345196952 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.228429119 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.353820926 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.14298534 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.143417538 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.136837702 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.153525379 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.142198516 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.142640923 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.855945308 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.129714388 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.147392397 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.15994192 seconds)
done (took 26.803141682 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.412564142 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.640455737 seconds)
    (2/2) benchmarking "String"...
    done (took 1.431855063 seconds)
  done (took 4.139356945 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.140266785 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.138980151 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.380697834 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.140478741 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.137936919 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.152514821 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.145086898 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.144839107 seconds)
  done (took 15.306985634 seconds)
done (took 25.065990432 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.194503552 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.30561287 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.381906689 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.147565667 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.156064159 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.148162214 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.142454828 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.155660285 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.140722705 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.160539386 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.536157217 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.393041362 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.158771222 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.517089082 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.146399081 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.163561381 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.137426034 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.372111776 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.140128412 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.195045522 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.130360139 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.163734559 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.146968571 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.150410788 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.143951499 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.15126951 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.14612317 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.149504606 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.318695613 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.157215104 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.18018873 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.142913722 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.141965362 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.143078618 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.13409859 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.140118594 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.319667618 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.144830775 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.133304122 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.160218608 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.321075403 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.160266277 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.140157964 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.147489629 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.1440016 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.196178671 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.142908731 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.247480611 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.166430862 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.153871004 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.193626946 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.50496892 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.137452131 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.150107967 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.166640869 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.35749308 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.154407327 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.187148985 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.159859577 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.147480252 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.15453628 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.138158384 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.187238736 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.145030679 seconds)
  done (took 139.662514326 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.141824909 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.141790891 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.140330956 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.159708459 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.139392645 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.140647905 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.145419254 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.144689807 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.142709456 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.163759287 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.141388633 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.141047791 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.145246748 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.098807588 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.149486 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.16186296 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.147002575 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.14217055 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.158382843 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.14329161 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.168855948 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.141950386 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.153985677 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.142097925 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.171344397 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.22452318 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.183146199 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.1722519 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.15313083 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.145926496 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.181095973 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.203701235 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.731254809 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.012193946 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.162901493 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.167143645 seconds)
  done (took 78.073233824 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.144705785 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.146925527 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.144728388 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.179228244 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.148814607 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.708662224 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.710507853 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.871706317 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.504742681 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.453904847 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.373709913 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.143579013 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.23852201 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.157415999 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.153261221 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.162249679 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.184942561 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.148384593 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.144642457 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.707042306 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.160795185 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.147850644 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.339953178 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.155173429 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.179943115 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.552403501 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.14394983 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.1792819 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.478142533 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.18650189 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.145046093 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.503601311 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.084908575 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.144439738 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.26146345 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.142394263 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.150287146 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.180641265 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.149098448 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.431175594 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.149170494 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.150313554 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.153762374 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.775356566 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.144589683 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.708561799 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.150205033 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.063216039 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.142548816 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.151199143 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.015434004 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.702471201 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.159871844 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.148018109 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.150976119 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.147597633 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.148041545 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.180644443 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.026053305 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.245510445 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.162399725 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.150030785 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.181269831 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.149078627 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.218162832 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.145926537 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.983603365 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.207562308 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.270091636 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.708954694 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.151425614 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.246324262 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.265417205 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.14710069 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.149929056 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.151321661 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.15122531 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.25967032 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.146873351 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.558623391 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.319104457 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.161082822 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.46382978 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.251759242 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.14599357 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.534595883 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.155635864 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.152239031 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.866623195 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245725563 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.147428886 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.150017004 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.151610186 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.151661708 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.561375312 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.712146355 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.368904752 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.155108912 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.348927925 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.155680367 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.559986955 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.696025165 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.821624465 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.156441678 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.26332869 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.321404687 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.162348648 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.151705559 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.465606362 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.154306583 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.210504525 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.154236878 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.1540128 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.550124001 seconds)
  done (took 360.167011113 seconds)
done (took 578.967062419 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.901250457 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.85277417 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.986353097 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.870202443 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.847678248 seconds)
  done (took 10.537507119 seconds)
done (took 11.612589865 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.341435299 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.341379384 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.212385693 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.344217645 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.187950239 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.35728997 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.322962592 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.176444222 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.255837884 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.230419951 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.25371032 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.202188443 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.183820515 seconds)
  done (took 17.487612605 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.430260853 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.156895403 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.237152801 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.431987574 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.193903926 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.429927679 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.448430148 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.159663609 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.310764586 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.173009542 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.172871986 seconds)
  done (took 17.223417175 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.457993491 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.157441201 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.23841738 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.43321581 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.200687182 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.454071483 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.464590262 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.159990051 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.307626479 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.171170934 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.175081785 seconds)
  done (took 17.299503336 seconds)
done (took 53.089880914 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.200118416 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.324642972 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.183399512 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.174211997 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.167589758 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.170947763 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.174718551 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.165750017 seconds)
  done (took 10.640383189 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.167038876 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.169291652 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.16797158 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.165114586 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.169304343 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.168336031 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.16477538 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.170296339 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.16642407 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.166726105 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.167221826 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.167313169 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.166427096 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.169918171 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.16670546 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.165332846 seconds)
  done (took 19.758164335 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.171694495 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.165623039 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.166700791 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.166440579 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.167431024 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.168660178 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.169561423 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.167782494 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.169588914 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.166797405 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.169313044 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.165720437 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.164696746 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.166800759 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.165602414 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.168352567 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.167834945 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.16973784 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.173341054 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.170201894 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.167340768 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.167734011 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.167945029 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.16928646 seconds)
  done (took 29.115780059 seconds)
done (took 60.594531317 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.160198893 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.171107683 seconds)
  done (took 5.412027015 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.229321639 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.228523367 seconds)
  done (took 3.541788621 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.168325702 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.166151315 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.168590149 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.169300539 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.166275658 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.17091341 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.169190785 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.169589089 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.167129584 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.166551543 seconds)
  done (took 12.765542654 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.169207068 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.169674206 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.172655321 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.170092784 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.167838108 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.168377787 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.170667321 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.171061914 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.169449291 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.169906766 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.171377741 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.17020236 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.170203785 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.169190656 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.17424168 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.170487699 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.168118079 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.172203244 seconds)
  done (took 22.146488619 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.183233831 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.193154921 seconds)
  done (took 3.460216416 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.310337626 seconds)
    (2/7) benchmarking "second"...
    done (took 1.212851523 seconds)
    (3/7) benchmarking "month"...
    done (took 1.288187932 seconds)
    (4/7) benchmarking "year"...
    done (took 1.280369453 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.214250731 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.191019115 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.212241473 seconds)
  done (took 9.792843019 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.173851123 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.368684933 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.481006499 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.715469348 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.174220689 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.19824528 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.002603025 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.19673525 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.190672834 seconds)
  done (took 13.584039836 seconds)
done (took 71.783055134 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.161433623 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.2075865 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.196014169 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.195329408 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.48010707 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.171784031 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.162957397 seconds)
done (took 15.660214501 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.154381031 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.156302195 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.16936136 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.169752336 seconds)
  done (took 9.73445892 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.162471922 seconds)
    (2/2) benchmarking "read"...
    done (took 1.488701932 seconds)
  done (took 4.736637758 seconds)
done (took 15.557649971 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.174100093 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.175572153 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.17310453 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.17416101 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.175590159 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.169422899 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.171124821 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.17017793 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.173370697 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.171847624 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.171112119 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.175268513 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.170523609 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.172818853 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.173796846 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.1749047 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.172758076 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.171385456 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.174837058 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.171939569 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.173213021 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.174900959 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.172967052 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.172661948 seconds)
  done (took 29.237506108 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.174121645 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.175172246 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.170410675 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.175307169 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.173603587 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.176904442 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.175125955 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.173638012 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.176360992 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.173456562 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.171957212 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.173013578 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.174164477 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.175683524 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.17227572 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.175286226 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.174300668 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.174012675 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.173685703 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.174810592 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.17538617 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.173699987 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.175978656 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.175045529 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.173552598 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.176083753 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.177243422 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.172670982 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.174050881 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.173435575 seconds)
  done (took 36.317146277 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.174360238 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.181197098 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.176977191 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.177268884 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.176569607 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.173731775 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.174621746 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.173780771 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.175527042 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.17553638 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.175704523 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.17544119 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.174263939 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.17489586 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.172712959 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.173651314 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.174991666 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.175097418 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.172005491 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.172629024 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.175612241 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.177532267 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.176324583 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.174811199 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.174726523 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.175672961 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.175250747 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.174225077 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.175051567 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.176966608 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.173773722 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.178459618 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.172291531 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.171904975 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.17295508 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.174268146 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.175302719 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.179490979 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.177267004 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.175263595 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.176879946 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.177232172 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.174601127 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.17498049 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.171829072 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.177620448 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.174724226 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.173194709 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.176606477 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.177822707 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.175232801 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.177179901 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.175585407 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.173545108 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.177375395 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.177378825 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.175075095 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.17662189 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.171254608 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.175134848 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.17607485 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.174726469 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.174847052 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.172142829 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.174754705 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.173689963 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.176009192 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.173808537 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.177557117 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.176098569 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.169825111 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.173308247 seconds)
  done (took 85.703485144 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.175099501 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.1740609 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.172909577 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.180032145 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.177001683 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.174028802 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.174599555 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.177049838 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.176541338 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.173214634 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.174189162 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.17292064 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.173833911 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.176995427 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.17545156 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.179235977 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.180094694 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.177138561 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.175201114 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.1750595 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.17858588 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.180685916 seconds)
  done (took 26.962819289 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.176865531 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.181432172 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.175440466 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.179197076 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.181667877 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.180928098 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.179208437 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.182738153 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.17654994 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.173302145 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.17622867 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.18111391 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.176371596 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.179259695 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.176938642 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.181316589 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.174629046 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.176688271 seconds)
  done (took 22.29812505 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.177983711 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.176062479 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.177971066 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.178913464 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.180130218 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.178021147 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.178895028 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.178133051 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.175473265 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.179212477 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.179200656 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.177614576 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.176741258 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.177944075 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.173689152 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.18171451 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.17615939 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.182133401 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.177812858 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.180071621 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.177630931 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.178325392 seconds)
  done (took 27.014001828 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.176737281 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.184108145 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.176491901 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.180723827 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.180899126 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.179720942 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.178237922 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.177088655 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.178572053 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.179740252 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.181933998 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.177776747 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.184670734 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.179142062 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.180180252 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.177281948 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.176804427 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.178999819 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.183234247 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.174719515 seconds)
  done (took 24.681862623 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.180763083 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.18471831 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.177508872 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.181368641 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.177543123 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.181375536 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.176686654 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.180706372 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.181806201 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.178094285 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.183600429 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.178292715 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.176099314 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.177492677 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.177436985 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.185011517 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.181053854 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.178942755 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.180771959 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.180079146 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.177085852 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.179986421 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.179680639 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.18229768 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.180577647 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.18157982 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.18249835 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.180629769 seconds)
  done (took 34.133680342 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.179355763 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.182508902 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.181697627 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.18188249 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.180658513 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.180223923 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.181651447 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.178327893 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.181012721 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.179662471 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.181928471 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.180181959 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.185128366 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.178161079 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.184272783 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.187081789 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.187142958 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.187442926 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.180860338 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.184613508 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.181823133 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.179195735 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.182791078 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.179116969 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.182942737 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.181752388 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.183133396 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.181671194 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.183403231 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.18056764 seconds)
  done (took 36.554169166 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.228908413 seconds)
    (2/2) benchmarking "in"...
    done (took 1.225169613 seconds)
  done (took 3.550384371 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.180552521 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.184890362 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.183642179 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.185770268 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.182842745 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.182567308 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.183918331 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.187685447 seconds)
  done (took 10.564609643 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.176028698 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.185850507 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.180579007 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.182282668 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.185264607 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.177573054 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.190676926 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.189872961 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.179932901 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.182265601 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.185252316 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.188086059 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.187228203 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.182037436 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.182480172 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.184533149 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.188503411 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.190415828 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.187160885 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.185881066 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.18141934 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.182113694 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.183658622 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.18871035 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.181525334 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.188367711 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.188786831 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.188040195 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.184137748 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.186923786 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.187063974 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.186611464 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.185632933 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.187570243 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.184598944 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.185266633 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.195391159 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.210081101 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.186565145 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.18670758 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.184222912 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.18629883 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.183881288 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.184510982 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.185080177 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.18776161 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.18966935 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.188513606 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.180086934 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.183799008 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.196196046 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.180313087 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.183445363 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.184220635 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.185880235 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.192199544 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.209503149 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.183766756 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.191532798 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.194909674 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.199121639 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.194372472 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.185744867 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.193105593 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.195078563 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.201312869 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.193310638 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.190530487 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.188016713 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.188752579 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.1896154 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.199385158 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.203412413 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.187126916 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.189743487 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.191626752 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.186400937 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.191469484 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.190104841 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.190430029 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.19512335 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.189338631 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.193169721 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.197818241 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.184596287 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.18764453 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.191833764 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.186753248 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.186741483 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.198220178 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.21397712 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.18795003 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.183621185 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.18515609 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.182292738 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.192006999 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.184216435 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.18436341 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.189239538 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.197490636 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.192132322 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.192145627 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.194405415 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.193767723 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.190438774 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.193393106 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.193343943 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.185345173 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.198629029 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.194737428 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.195847738 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.185651771 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.190125728 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.19171734 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.189187225 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.195106543 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.19397288 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.186980574 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.191535312 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.193185419 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.195306746 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.208458531 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.200879288 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.192775529 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.191081013 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.200758854 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.195170181 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.192677611 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.195207627 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.193195405 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.19363632 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.191800322 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.199903499 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.192229328 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.199267556 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.191053725 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.196486274 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.19728233 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.194935474 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.192042203 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.197618703 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.19212753 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.188838781 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.193382547 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.197367663 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.195903567 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.198664231 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.198152069 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.19012715 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.192820907 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.200114455 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.197102471 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.191050735 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.199326074 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.19080427 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.198637927 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.191859149 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.192438986 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.194485681 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.193490522 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.197648322 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.18829037 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.19659731 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.197679479 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.192925343 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.195525705 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.199359591 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.198924879 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.195998508 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.196253531 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.199725894 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.18999119 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.195501442 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.204958199 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.194735419 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.195606493 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.193732548 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.201043389 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.199154595 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.196761945 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.193602208 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.200505918 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.19992289 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.19838074 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.206018998 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.19983424 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.196543309 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.19671809 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.194724232 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.201698555 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.19800188 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.203819582 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.206324259 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.208300952 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.191939235 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.199900393 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.191190391 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.202453652 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.198943049 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.202545443 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.201194654 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.197784427 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.194676015 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.199620727 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.195398427 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.199140619 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.194304514 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.20091129 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.199699822 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.198667396 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.201955506 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.193641235 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.198538008 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.202041256 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.196623483 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.199890558 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.19232417 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.200243326 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.19342218 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.198548469 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.20364845 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.198168755 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.203185025 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.207295062 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.200307541 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.202462487 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.202713708 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.198012234 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.202438682 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.201105447 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.200208927 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.208683029 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.205683911 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.193944922 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.202671723 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.219541892 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.197600107 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.201221944 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.20699441 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.198815072 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.199405732 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.207228532 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.199003675 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.202637242 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.199241246 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.197745723 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.200099447 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.205153735 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.206585885 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.19495572 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.199004208 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.196915894 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.20310122 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.200939578 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.201017752 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.198744719 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.200648584 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.205773972 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.198470994 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.198364206 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.205786892 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.202036723 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.203594803 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.201568694 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.208376522 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.205374897 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.202178649 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.204420686 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.202258199 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.207436596 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.202922594 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.205281665 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.200005217 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.208378007 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.216014563 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.206045899 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.201773335 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.206018084 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.206212707 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.204831818 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.198666981 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.199391071 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.199359918 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.197406982 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.197538823 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.204314974 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.202106978 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.207362453 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.201835094 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.205352903 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.209832021 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.204652228 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.199453238 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.205001284 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.206669562 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.204559335 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.204379703 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.209015962 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.204517953 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.206712467 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.207950257 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.20462681 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.214227797 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.209206374 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.20472048 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.203227951 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.204573615 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.201623017 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.203334386 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.21012221 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.206223021 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.215512804 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.203492515 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.213031171 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.204975914 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.214776783 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.215542982 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.207494471 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.210861745 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.208993411 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.2009041 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.204715087 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.20649976 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.213689269 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.21279033 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.206439485 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.211058521 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.208035428 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.209267711 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.211172548 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.207492596 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.212319724 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.20589251 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.213310938 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.227446692 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.208630959 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.20954729 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.212429095 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.208777318 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.212453754 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.204897908 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.208819387 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.210404523 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.207027247 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.207264228 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.209533047 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.209655995 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.207331194 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.21026353 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.206063052 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.208244426 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.210014242 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.210953012 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.206125882 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.209594044 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.211899036 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.211185872 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.213421282 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.214831946 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.209399768 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.208841763 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.209658648 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.206839197 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.20567455 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.20479433 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.213134517 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.207868263 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.212673628 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.211799332 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.2098742 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.205092426 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.211696654 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.20605953 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.213734646 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.227131547 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.207031333 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.212118779 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.209790522 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.203806023 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.21418228 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.207589576 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.203595939 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.20645489 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.212793233 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.217907258 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.205598858 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.208762502 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.205780778 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.213588956 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.209980227 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.206377823 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.209270883 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.210811226 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.208003133 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.210804122 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.208260483 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.21352242 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.208064294 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.210663064 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.207874882 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.218660868 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.215838403 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.210014497 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.214035954 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.211667542 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.209050227 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.208119228 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.211304637 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.204549255 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.212935749 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.208366872 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.210542181 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.211894878 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.210423328 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.210329499 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.212906863 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.206204794 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.209134749 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.210963067 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.211666062 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.21288842 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.212762495 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.210612011 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.208410369 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.206135434 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.211942792 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.207336907 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.214471836 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.20828427 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.213709066 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.209255841 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.211506623 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.213613633 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.208346548 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.209191201 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.208046145 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.215242037 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.215765543 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.213456684 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.213308971 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.2159862 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.209153061 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.209852654 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.213649781 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.208896422 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.210265799 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.214622396 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.209351631 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.210714283 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.211818638 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.21313746 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.214735218 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.212595881 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.207329025 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.216987268 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.236691166 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.214839821 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.20902445 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.212650315 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.208515148 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.213033665 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.208986713 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.21042377 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.214600093 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.216404973 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.213441871 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.2118979 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.210704496 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.208698982 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.2143048 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.215757031 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.21166419 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.21530881 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.208100397 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.211700644 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.207273843 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.21214823 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.208659224 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.207147654 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.213037259 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.214635824 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.216322103 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.210865762 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.213033076 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.212390543 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.217087775 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.214228966 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.211996185 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.210372873 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.209529824 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.21525648 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.209154124 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.214952799 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.215065215 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.20940063 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.215699352 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.217138679 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.211635797 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.216929236 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.221241521 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.214765628 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.212452099 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.211157451 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.209443206 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.217348392 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.214047783 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.211041728 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.211355752 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.217300315 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.215814832 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.215693197 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.212716618 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.222868927 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.239537512 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.212510209 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.212179332 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.212532873 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.215487328 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.214812863 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.21708952 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.213561255 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.213459248 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.218251822 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.21118388 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.219638145 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.232157813 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.214144272 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.219888603 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.211846628 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.21793225 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.219058421 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.218982774 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.212621417 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.217842656 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.222847436 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.22141024 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.219011631 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.237667278 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.218652516 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.209128452 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.218510095 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.212581527 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.21774193 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.213709257 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.217149531 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.218561367 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.216859635 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.217538774 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.207594691 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.217213668 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.211558133 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.216259394 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.218604262 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.21502368 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.211002783 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.210158134 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.218186514 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.221154739 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.220041241 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.215646078 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.217321037 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.215010616 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.221467849 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.223252904 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.213058594 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.212833508 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.214249102 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.216635887 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.209378731 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.219012861 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.222171308 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.214222968 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.22001641 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.215262911 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.217378014 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.213306578 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.208155485 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.209420838 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.21011184 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.214632232 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.226218601 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.22914733 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.214313525 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.218479774 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.217035433 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.217118865 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.213148135 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.21394796 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.219941367 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.216597584 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.21608085 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.219973605 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.219610889 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.216629848 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.217441383 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.219314448 seconds)
  done (took 718.701387817 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.216492213 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.215517128 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.221626967 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.219414949 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.220321726 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.217459231 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.21276339 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.2158167 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.219839823 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.214243754 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.215565114 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.219853368 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.216848462 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.21829806 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.216917218 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.220066582 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.216005731 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.219571559 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.220400708 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.218491461 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.217339916 seconds)
  done (took 26.701896149 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.216535891 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.218429785 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.216613028 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.212177543 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219677551 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.214311903 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.215387635 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219071993 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.220563751 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215724633 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.217558112 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215689588 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.218846592 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.216195107 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215085739 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.21273 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.219118915 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215325419 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.215308684 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.21755117 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.214554668 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.216809716 seconds)
  done (took 27.887216439 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.214016077 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.21622312 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.206963114 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.214044001 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.213368715 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.215717254 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.212207669 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.216146169 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.211666446 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.211311232 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.21062497 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.208977718 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.216325412 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.221255309 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.215786876 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.22068908 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.212128084 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.211639141 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.218357744 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.222023314 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.214774115 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.219620057 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.215423768 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.209610845 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.217068286 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.214251876 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.215371268 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.211405578 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.21192591 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.215472603 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.215441347 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.2063917 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.213114564 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.214164794 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.212357682 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.217106164 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.214860529 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.215673512 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.216209823 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.220942758 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.231670482 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.218379186 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.21775566 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.220895335 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.215049555 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.213123716 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.220780813 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.214597954 seconds)
  done (took 59.461915441 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.212064132 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.215599253 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.211031532 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.215553445 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.219343077 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.212384501 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.213514603 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.214200555 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.218312852 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.212699819 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.217070284 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.216884785 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.215106691 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.2190706 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.217309751 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.217499357 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.217782935 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.218279877 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.216844603 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.216703734 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.218022067 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.21474928 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.214287132 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.214860053 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.215262582 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.214887557 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.212283155 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.214930813 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.217112349 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.217429593 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.217608139 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.214324277 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.215182452 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.216157542 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.213302942 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.214931005 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.215230376 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.215285328 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.213577176 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.216041844 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.214532872 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.219369429 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.217387312 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.217608505 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.215275288 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.218123027 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.218183733 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.217971481 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.214603185 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.217203762 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.215272203 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.215318891 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.216335735 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.215405572 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.215785712 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.218495916 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.218327789 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.21826345 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.217911748 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.21523468 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.215808633 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.217539008 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.212568066 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.215460532 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.216180152 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.217335632 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.214326699 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.216144639 seconds)
  done (took 83.807549499 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.218903016 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.220382253 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.216231733 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.217094802 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.214315494 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.216582188 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.215866581 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.2137634 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.216893362 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.216020997 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.2144111 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.215897095 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.214655554 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.21699455 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.217346521 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.218870347 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.215954028 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.21670428 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.219134349 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.215914674 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.215624219 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.216622182 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.216688342 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.217630467 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.215973508 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.219634309 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.216592125 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.219642624 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.218493529 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.218134989 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.219692687 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.216352204 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.218792648 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.215630599 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.220742399 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.219708367 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.219403924 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.217921577 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.217445169 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.214132122 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.219639893 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.214357927 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.217139381 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.219819626 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.218738751 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.217658161 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.21942191 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.220040945 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.218461081 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.217040478 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.219274167 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.220908178 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.216465295 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.220930608 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.220636626 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.221130542 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.22071023 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.218491796 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.217419937 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.220159047 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.222536023 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.221374797 seconds)
  done (took 76.640016634 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217987043 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.217579027 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.220001491 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.218462544 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.221329653 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.219515112 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.218222228 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.218989502 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.219404271 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.219957164 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218373895 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221387192 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219827629 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218397855 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.219095991 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222212241 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220267614 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.218436814 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220297227 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.219788442 seconds)
  done (took 25.522370748 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.219547414 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.217005763 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.220286588 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.222895962 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.220617311 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.224684616 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.223501965 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216914432 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22134253 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221488611 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.219206387 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.221927084 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222424209 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.222741207 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.222674775 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.219386409 seconds)
  done (took 20.669406884 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.224011118 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.2214048 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.221349557 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.222471759 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.222707286 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.220753083 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.22192972 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.221179778 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.222176796 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.221803808 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.221494001 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.219463136 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.220048343 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.221735336 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.224402869 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.223387959 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.221633326 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.222095873 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.223059676 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.223749479 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.222403544 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.222531552 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.222743663 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.222806424 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.224055912 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.22411532 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.224140934 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.2239223 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.220992517 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.219825676 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.226722568 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.227378099 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.22587581 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.225399167 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.225751217 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.225486136 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.223019508 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.222863801 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.224764928 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.226081472 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.224830038 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.223298771 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.221962031 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.224706203 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.223825339 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.221478311 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.222841942 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.225123824 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.226018314 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.223409398 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.222047098 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.224544092 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.226180609 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.22652559 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.224368375 seconds)
  done (took 68.414235822 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224162696 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.224662966 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.224565073 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.223381812 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.22369637 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.222522668 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.223329818 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.227364522 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226921587 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.223928371 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.22509403 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.226339383 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220494032 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.226566281 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.225685844 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223075048 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.224575108 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.223366862 seconds)
  done (took 23.179152136 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.224339843 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.225558857 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.226693727 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.226259389 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.225524086 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.225381776 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225609888 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.225577167 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223662905 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.225694884 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224435306 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.223013291 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227251102 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.220167357 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.227648256 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22565729 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.226244407 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229173128 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.223537393 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22266208 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.225230704 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.225005928 seconds)
  done (took 28.094564274 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.218964378 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.217826658 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.217531516 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.233141151 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.232956626 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.217312507 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.216361478 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.217496717 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.240992593 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.266206668 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.259430783 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.232638451 seconds)
  done (took 15.908908714 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224787153 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225073268 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.227359863 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22290144 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223031999 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223637436 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224895445 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223699308 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224216697 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225049699 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224573034 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224326083 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225167118 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228424693 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223500243 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22500827 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224676967 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220419914 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22402445 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223375392 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227174494 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224563625 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227104549 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225683121 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224132884 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222467004 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223323926 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224465036 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220852377 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223674555 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225894126 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223646531 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223844209 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225712395 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224301324 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224057416 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223533407 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222344742 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225509011 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223969558 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.224126479 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225802963 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224917645 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221598384 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224324402 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22361541 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223269916 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224942243 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224963255 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223926298 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224196704 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226369352 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22380635 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223180502 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224050793 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225276598 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.221710697 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225922614 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225426216 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223427366 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22420076 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225129465 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225701638 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225604542 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225178638 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22356156 seconds)
  done (took 81.953488684 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225367672 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.226551164 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225163507 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22577189 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226547761 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226286603 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223911699 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228985096 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226712091 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224862862 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227352799 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223667196 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227006792 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229280762 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228287837 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226704007 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225793268 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225732689 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225773997 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227888019 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225387194 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228140385 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231333738 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225934107 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225551019 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224687338 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224063227 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227279982 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225602627 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227024189 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226897128 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223743981 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22497002 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.222323678 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22687524 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228187121 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229251567 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224595764 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224678001 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227554331 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227135061 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228270921 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229068386 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223785451 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228163772 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225901709 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226394044 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230799088 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226643208 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226283591 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226990195 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230563551 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228259471 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226053408 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224759527 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227082153 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22543176 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227270893 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230378122 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228967096 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229230655 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227718668 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224962455 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227750205 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223321204 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22874607 seconds)
  done (took 82.100733969 seconds)
done (took 1677.147066181 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.383639594 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.350046946 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.222986152 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.240383444 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.22189213 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.247208623 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.231050914 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.221388723 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.225001942 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.224188779 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.223053619 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.415047297 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.277692206 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.22536473 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.225033415 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.319699727 seconds)
  done (took 25.387399945 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.247863722 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.233351311 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.337943433 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.247867923 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.25373611 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.401219207 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.285127359 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.230917233 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.382165741 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.245508815 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.226966638 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.252231969 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.226619624 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.216637346 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.244540151 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.401931638 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.464227456 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.213593874 seconds)
  done (took 27.254656927 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.637250319 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.243530381 seconds)
  done (took 5.01594529 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.245388825 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.232620446 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.226984207 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.22692166 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.219979379 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.223200334 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.227373658 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.224183012 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.234842689 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.343552349 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.233446278 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.242115785 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.243792707 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.229522666 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.235400871 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.275467953 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.388542139 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.23740216 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.231329895 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.23319238 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.232014382 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.31351607 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.268841546 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.243120285 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.339914731 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.236979237 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.233986289 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.236916116 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.347928913 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.240736119 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.226457147 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.227609178 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.233178749 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.225080586 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.664956138 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.249624478 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.235886438 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.257338526 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.232121842 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.37754925 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.231679651 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.233251486 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.231827024 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.65501641 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.364452623 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.347361533 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.23873775 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.226835664 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.227969148 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.29812089 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.237919597 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.231987976 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.294047284 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.065115864 seconds)
  done (took 79.601636833 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.229497596 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.22437481 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.403374632 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.244080246 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.225495575 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.220613422 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.240892635 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.48581076 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.260494424 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.236505789 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.504284604 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.773391534 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.244827157 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.279865299 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.092403428 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.315632394 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.226452968 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.226016531 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.229546081 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.230968103 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.756480038 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.229363945 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.232862881 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.365344098 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.257836159 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.717149071 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.226177301 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.226314046 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.229486624 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.22519465 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.73370377 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.25969551 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.296145574 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.230584651 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.486444229 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.578905274 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.551391876 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.237170275 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.263778206 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.222507475 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.227014293 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.7039359 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.56289805 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.224256517 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.237700609 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.711535814 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.228572018 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.23716647 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.235925417 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.474029137 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.232590441 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.233029413 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.22430899 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.243828017 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.227984815 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.326972958 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.313299803 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.723941878 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.236376183 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.225285889 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.252678538 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.231043408 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.229492537 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.228407826 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.242430499 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.550704037 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.37661036 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.226477551 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.550038576 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.713982623 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.229688641 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.773798964 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.234495166 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.232628227 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.248688282 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.214809652 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.220521593 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.69409391 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.235038541 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.206168551 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.51951705 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.207788812 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.487275601 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.224187451 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.217434565 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.761448185 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.219048884 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.211379201 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.203094299 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.20310995 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.203524309 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.203923281 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.478723392 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.237946214 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.203274075 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.204071027 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.237053524 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.208795261 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.204142198 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.206935815 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.760612204 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.232168586 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.203573724 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.209549375 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.205340721 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.209408693 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.206335187 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.204649757 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.468566494 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.209050541 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.227762549 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.202741109 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.204886733 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.214477451 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.333439669 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.209461305 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.489119971 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.211791105 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.204186972 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.213110864 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.204288744 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.279125751 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.205844799 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.215377565 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.065179218 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.503357762 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.219217308 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.22199593 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.205466878 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.205594466 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.206401102 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.212733092 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.249145738 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.209971967 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.974748646 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.251932596 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.213657277 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.207531048 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.215207195 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.205758889 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.20826651 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.20574489 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.495433351 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.470778768 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.363476728 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.209235303 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.206651439 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.958687817 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.258986477 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.383504146 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.222415353 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.206965093 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.456060571 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.419721952 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.208140597 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.207699947 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.209064094 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.46312073 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.211719511 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.51550529 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.741901773 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.228022608 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.209054961 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.983606426 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.985498805 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.215475053 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.208933214 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.484805688 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.22807058 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.209726083 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.207980366 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.208378328 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.223711731 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.225461096 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.21185271 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.208779491 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.210007301 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.247695114 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.396303557 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.223140896 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.221493778 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.695851256 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.282240889 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.208573333 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.219793138 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.211277355 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.209137995 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.28179535 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.215318667 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.236290315 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.211129402 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.214578744 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.747920468 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.213387774 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.215225325 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.398507827 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.880760471 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.230809672 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.210744401 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.21035505 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.128081831 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.720326375 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.268182493 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.497369798 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.221173376 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.246256195 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.212374471 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.255662426 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.720375822 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.216154572 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.216060233 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.845914032 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.231136617 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.81104092 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.208094828 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.209138876 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.779260103 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.223752207 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.20601523 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.20093375 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.215669826 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.505026511 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.200969958 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.241342189 seconds)
  done (took 471.069093427 seconds)
done (took 609.462962089 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.194598997 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.197220623 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.185878546 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.19415786 seconds)
  done (took 9.885903532 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.202160571 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.194385979 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.201755585 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.192037129 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.196774836 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.19164178 seconds)
  done (took 8.288591799 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.185562381 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.191443554 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.190052767 seconds)
  done (took 7.67364374 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.386399657 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.213306277 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.513241412 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.21046517 seconds)
  done (took 8.430649313 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.196965986 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.197607692 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.196876374 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.196715881 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.201209599 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.200828497 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.199363948 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.198821653 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.200445224 seconds)
  done (took 11.895058296 seconds)
done (took 47.288237175 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.888808892 seconds)
    (2/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.183733442 seconds)
    (3/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.229454453 seconds)
    (4/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.235202266 seconds)
    (5/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.191634096 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.262746436 seconds)
    (7/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.300423659 seconds)
    (8/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.974340387 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.252030206 seconds)
    (10/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.241214371 seconds)
    (11/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.336047061 seconds)
    (12/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.279033563 seconds)
    (13/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.223086477 seconds)
    (14/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.279351221 seconds)
    (15/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.203899059 seconds)
    (16/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.231807021 seconds)
    (17/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.199035434 seconds)
    (18/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.257347059 seconds)
    (19/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.20596375 seconds)
    (20/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.345631173 seconds)
    (21/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.250559878 seconds)
    (22/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.236987258 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.240486718 seconds)
    (24/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.235682155 seconds)
    (25/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.26015815 seconds)
    (26/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.194922576 seconds)
    (27/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.394562224 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.427585392 seconds)
    (29/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.294146339 seconds)
    (30/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.407503709 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.318420446 seconds)
    (32/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.209242269 seconds)
    (33/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.385973505 seconds)
    (34/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.344265524 seconds)
    (35/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.286294349 seconds)
    (36/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.29091055 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.296033211 seconds)
    (38/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.450910471 seconds)
    (39/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.210518976 seconds)
    (40/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.264348568 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.293683028 seconds)
    (42/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.21847318 seconds)
    (43/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.26519704 seconds)
    (44/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.197284737 seconds)
    (45/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.249240512 seconds)
    (46/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.244268742 seconds)
    (47/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.271944183 seconds)
    (48/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.25824115 seconds)
    (49/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.242929155 seconds)
    (50/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.197996088 seconds)
    (51/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.205673982 seconds)
    (52/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.311231928 seconds)
    (53/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.3140154 seconds)
    (54/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.421934117 seconds)
    (55/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.109969514 seconds)
    (56/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.315801518 seconds)
    (57/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.445012716 seconds)
    (58/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.252689862 seconds)
    (59/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.901714593 seconds)
    (60/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.904479294 seconds)
    (61/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.203031413 seconds)
    (62/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.274201497 seconds)
    (63/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.24859733 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.334482501 seconds)
    (65/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.948279889 seconds)
    (66/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.384396583 seconds)
    (67/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.351356766 seconds)
    (68/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.270977347 seconds)
    (69/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.890407165 seconds)
    (70/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.856373099 seconds)
    (71/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.206598166 seconds)
    (72/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.354241561 seconds)
    (73/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.380930736 seconds)
    (74/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.921115422 seconds)
    (75/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.269333364 seconds)
    (76/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.21648081 seconds)
    (77/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.27360297 seconds)
    (78/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.01710084 seconds)
    (79/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.290808387 seconds)
    (80/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.969554062 seconds)
    (81/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.372384837 seconds)
    (82/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.322482651 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.346456074 seconds)
    (84/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.352480277 seconds)
    (85/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.207575593 seconds)
    (86/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.246317519 seconds)
    (87/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.336273322 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.344777389 seconds)
    (89/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.200643833 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.410372437 seconds)
    (91/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.213868246 seconds)
    (92/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.216628113 seconds)
    (93/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.31069059 seconds)
    (94/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.304346762 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.344174116 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.304250789 seconds)
    (97/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.016530112 seconds)
    (98/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.285658682 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.289125857 seconds)
    (100/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.197609479 seconds)
    (101/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.202215921 seconds)
    (102/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.905777088 seconds)
    (103/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.958190853 seconds)
    (104/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.247655137 seconds)
    (105/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.309690544 seconds)
    (106/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.234059686 seconds)
    (107/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.32966534 seconds)
    (108/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.20021868 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.40881472 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.244928103 seconds)
    (111/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.987541485 seconds)
    (112/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.397830434 seconds)
    (113/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.18992793 seconds)
    (114/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.096287588 seconds)
    (115/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.310215029 seconds)
    (116/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.306354616 seconds)
    (117/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.190519371 seconds)
    (118/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.939079941 seconds)
    (119/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.346131712 seconds)
    (120/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.199194393 seconds)
    (121/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.194043395 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.33622181 seconds)
    (123/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.198700333 seconds)
    (124/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.199589637 seconds)
    (125/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.304271557 seconds)
    (126/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.259154304 seconds)
    (127/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.24697241 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.297088188 seconds)
    (129/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.253724161 seconds)
    (130/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.294572834 seconds)
    (131/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.20974552 seconds)
    (132/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.204806565 seconds)
    (133/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.353918051 seconds)
    (134/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.373663819 seconds)
    (135/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.370377069 seconds)
    (136/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.349529947 seconds)
    (137/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.259776562 seconds)
    (138/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.23455988 seconds)
    (139/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.322030561 seconds)
    (140/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.34318663 seconds)
    (141/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.286029736 seconds)
    (142/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.303207293 seconds)
    (143/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.199662518 seconds)
    (144/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.207370914 seconds)
    (145/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.131847074 seconds)
    (146/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.268255117 seconds)
    (147/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.20034067 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.272308703 seconds)
    (149/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.200448561 seconds)
    (150/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.370742617 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.325391426 seconds)
    (152/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.305409194 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.31856583 seconds)
    (154/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.995710031 seconds)
    (155/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.883876254 seconds)
    (156/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.208913938 seconds)
    (157/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.281794416 seconds)
    (158/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.199084483 seconds)
    (159/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.351883751 seconds)
    (160/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.200262031 seconds)
    (161/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.243567701 seconds)
    (162/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.266347017 seconds)
    (163/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.098757299 seconds)
    (164/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.983353969 seconds)
    (165/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.277578522 seconds)
    (166/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.891186468 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.246212137 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.313769845 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.288717965 seconds)
    (170/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.23002348 seconds)
    (171/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.242964415 seconds)
    (172/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.365234346 seconds)
    (173/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.344895983 seconds)
    (174/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.376121259 seconds)
    (175/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.240264132 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.301258044 seconds)
    (177/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.202250801 seconds)
    (178/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.26950787 seconds)
    (179/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.964492436 seconds)
    (180/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.875175553 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.346563716 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.441627105 seconds)
    (183/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.247305899 seconds)
    (184/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.369766111 seconds)
    (185/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.20363708 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.235408027 seconds)
    (187/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.215904673 seconds)
    (188/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.995969093 seconds)
    (189/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.37818633 seconds)
    (190/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.253265358 seconds)
    (191/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.203393666 seconds)
    (192/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.204416552 seconds)
  done (took 312.587779326 seconds)
done (took 313.695004143 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.234876389 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.280509717 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.219366294 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.219964854 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.220541155 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.201425604 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.247238817 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.22100518 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.240242911 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.239976675 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.201735036 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.235336381 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.233512374 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.238061205 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.254645595 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.220004382 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.220186746 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.236153805 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.241944351 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.243710225 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.220645701 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.222768952 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.249716631 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.220503203 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.229565012 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.229183397 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.22757566 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.213607128 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.235505519 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.243200023 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.213068584 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.227985513 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.244668082 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.240715973 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.22247989 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.237698607 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.222871159 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.278751083 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.248857715 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.237943043 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.235592982 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.244332798 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.227075841 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.227142109 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.240311931 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.251481911 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.230342544 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.237668802 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.213748585 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.193851467 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.239619673 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.240393839 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.237463737 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.192911197 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.225147097 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.238439061 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.238906786 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.239246496 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.235999654 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.223689073 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.256388221 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.238601065 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.241271041 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.231450009 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.23727952 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.23618999 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.24091441 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.244881196 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.238043481 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.22615357 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.224369259 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.239721593 seconds)
done (took 97.91995654 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.35274029 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.22288611 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.367758752 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.226933499 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.389696723 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.372812812 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.225927242 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.227840233 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.226186853 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.073778987 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.22632854 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.226723437 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.224296789 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.226848648 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.354143842 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.227345279 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.227204812 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.965015313 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.227917682 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.363811501 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.221929434 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.227363339 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.227789795 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.08609546 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.223071057 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.219014849 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.365561746 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.2284011 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.980051755 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.217754055 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.221658212 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.978745995 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.367900161 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.247010148 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.238271422 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.237861545 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.39017187 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.247836774 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.355462816 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.355815745 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.370456012 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.267644926 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.220191382 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.22497995 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.229763724 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.228963655 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.228583146 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.258855885 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.226812145 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.229287601 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.969140584 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.238905787 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.22913006 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.230253465 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.231915653 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.259083676 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.230753071 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.231137794 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.368653462 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.231296005 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.356086622 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.087877235 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.076562587 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.229707118 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.222773669 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.229920066 seconds)
  done (took 101.638048538 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.290485333 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.308102103 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.334667916 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.227029104 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.27948945 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.336318776 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.227660791 seconds)
  done (took 10.139460748 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.23227004 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.231815406 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.275169017 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.274993687 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.230138477 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.385373391 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.230551561 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.238884415 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.231005021 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.279326266 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.231798336 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.23253145 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.241704694 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.226232334 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.27429017 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.239128145 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.340580144 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.228797358 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.230954398 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.379250735 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.232940956 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.242257696 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.279995499 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.238469426 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.232877943 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.23470015 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.991705027 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.231805895 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.230898351 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.231955303 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.233792669 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.281077097 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.23247135 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.227200648 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.231685739 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.345649542 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.23339563 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.233553666 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.232407376 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.230118994 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.233012378 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.232425166 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.232991254 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.232397079 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.233443981 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.253020633 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.233440609 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.233758475 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.23339791 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.233526319 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.279386301 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.234405579 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.234131374 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.234308699 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.284685889 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.244778567 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.23348467 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.2346664 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.235057157 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.234503363 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.381677779 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.277902186 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.235357062 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.277666382 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.235913675 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.236216756 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.234803738 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.235602719 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.322908354 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.2344258 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.278459036 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.235181097 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.41062066 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.255107034 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.236797342 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.234394136 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.234104491 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.2344813 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.22841972 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.238018169 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.235650528 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.233085723 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.237949309 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.236935744 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.236195772 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.388231086 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.340845792 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.236249298 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.242352816 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.238767081 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.236055291 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.285449363 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.236372748 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.235705073 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.284795672 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.346080187 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.285309454 seconds)
  done (took 127.60009025 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.244086199 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.24569747 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.235182243 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.25926527 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.232984121 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.232319897 seconds)
  done (took 8.590506017 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.234574419 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.239413267 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.237043205 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.237367408 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.237364897 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.238401523 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.23722612 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.234612498 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.239048549 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.237697287 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.238405837 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.23813401 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.239941674 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.238514112 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.238119593 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.238101912 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.237770204 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.238161244 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.239226817 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.238266709 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.233866435 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.238647838 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.240343782 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.235577211 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.242174283 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.239174476 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.256497755 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.240816645 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.239515649 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.243036796 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.256059732 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.2392623 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.236114063 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.239415192 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.241636182 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.235340212 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.24196702 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.241723634 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.24103418 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.241721282 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.240922111 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.241068913 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.239389413 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.241886793 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.237932355 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.239002703 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.243934706 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.256969713 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.23910724 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.241849668 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.243688029 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.240183614 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.241604845 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.241256846 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.238896718 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.255913597 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.244482369 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.239984059 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.241079756 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.237347056 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.243293812 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.242908069 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.238481486 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.243536395 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.242145473 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.243152202 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.237869433 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.243981257 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.241149099 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.241758079 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.24416775 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.241435849 seconds)
  done (took 91.478475714 seconds)
done (took 340.579488612 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.017604759 seconds)
  done (took 4.163240943 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.501306541 seconds)
  done (took 3.651542716 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.293342542 seconds)
  done (took 21.681912669 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.25916385 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.291571703 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.250924792 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.235620185 seconds)
  done (took 10.185666093 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.511725806 seconds)
  done (took 3.658556413 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.237386355 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.237499126 seconds)
  done (took 5.62529262 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.385159658 seconds)
  done (took 3.53303359 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.372749841 seconds)
  done (took 3.522028102 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.253582709 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.251118906 seconds)
  done (took 5.659726523 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.226017326 seconds)
  done (took 3.374878843 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 30.236549271 seconds)
  done (took 31.387655305 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.249677786 seconds)
  done (took 3.403416084 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.278561741 seconds)
  done (took 3.427325179 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.628060828 seconds)
  done (took 5.776820436 seconds)
done (took 110.19858744 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.234610879 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.238737581 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.235471787 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.239100184 seconds)
  done (took 10.095761265 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.321077445 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.321135868 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.329186664 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.318969818 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.310387013 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.332356965 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.270992339 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.271349036 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.315854411 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.315787743 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.328713233 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.297552395 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.323187836 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.271915834 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.298194427 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.331096503 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.320974361 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.330934191 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.272758088 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.311101948 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.246930877 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.317599879 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.311351998 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.248185919 seconds)
  done (took 32.467994415 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.752503208 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.31104376 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.395092131 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.285995928 seconds)
  done (took 6.895191961 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.350164476 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.348975839 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.363808227 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.40545836 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.530569326 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.3651858 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.273613085 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.268588624 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.255182233 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.35103594 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.376052078 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.324808701 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.546461533 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.247542621 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.58292412 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.247700477 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.248237691 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.338326452 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.401749721 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.418087308 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.248981153 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.351096875 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.339334619 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.324800556 seconds)
  done (took 33.660627191 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.256992872 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.263368865 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.250560384 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.265272501 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.249338131 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.250595724 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.251221407 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.257081072 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.249498725 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.249489273 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.250512825 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.264476364 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.253541386 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.250889432 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.259177866 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.250529781 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.251817922 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.257455262 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.260099934 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.251018513 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.255493069 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.258148832 seconds)
  done (took 28.759746589 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.239408908 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.23984523 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.58963498 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.493525854 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.239316554 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.239743609 seconds)
  done (took 13.195404736 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.30970576 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.459401335 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.245779785 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.574827278 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.671694027 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.251523286 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.24578501 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.479276052 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.773177057 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.7569149 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.300541184 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.311776515 seconds)
  done (took 18.535370754 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.247465887 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.244450246 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.250157693 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.265434842 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.301897336 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.254545455 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.25759965 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.239877574 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.302382553 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.305470547 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.254983071 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.297656397 seconds)
  done (took 20.378830189 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.33851993 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.246131431 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246618435 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307326229 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264193574 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.091037061 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.303893782 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.973766014 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.274547268 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.521206457 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246313442 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356827998 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.499775472 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247424552 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.250638237 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.166091054 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.48043494 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.737539689 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253895113 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256412872 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284507098 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.261463996 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.251578993 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.452837634 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.09628799 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.247400632 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.642890938 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.246940007 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512375009 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.266056223 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.25642843 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.247437609 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.523530015 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89322298 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.37929778 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447022092 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254291204 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.249574139 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.239825764 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.25323708 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.25974799 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.255097024 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.258025508 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249320743 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.248941933 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.248475624 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.973394665 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.279546686 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.248456344 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.248383545 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.486905077 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352893383 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.254383953 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.250229539 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259463332 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250561008 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.254560138 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372895498 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844989431 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262802191 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261234722 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.255508759 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.24561231 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251604603 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912229139 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.257931049 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.255696926 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.254132735 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249001586 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.25110735 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.27333723 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250076002 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.275959231 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250481408 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997214496 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.258056982 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256339103 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.810093498 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26350109 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.255648593 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.480129467 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25083866 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252154975 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.250205315 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.250847247 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910892528 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.26431623 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.243792144 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.298160272 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.963838198 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.471593276 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275939797 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282560843 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.473727007 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.238714893 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25072389 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.257321854 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260003547 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.274065432 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.969225847 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2756453 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.259068877 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.50782598 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.462474475 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25320064 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.180620945 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.724250459 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276427673 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.27679285 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.252451478 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.459254462 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.82566694 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.271637506 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256023258 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290787299 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.252640997 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950357479 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258698269 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.264252666 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.253142024 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.526785817 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.00793011 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259178239 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.316311944 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253594449 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.253272196 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253273769 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259874674 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.254059318 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.444368397 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277528592 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.270193121 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.255150136 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253691614 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.25464682 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273636919 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.260604587 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.476743718 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261809609 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.535849308 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254276665 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256121564 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25427298 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.476378859 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.255434171 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.262409234 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.515259263 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255663967 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.260772916 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.270542344 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28687969 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.364692103 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285359794 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.267882177 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.514915975 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.260830003 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.261542752 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.255762849 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.261320332 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262358863 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.263131903 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257527852 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.847062441 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263305329 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.260146855 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.25650855 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.271223035 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.318948054 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.264123489 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.458560596 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.263830178 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267342443 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.263973556 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.25631757 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.486404645 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.265449624 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.264345923 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.339699071 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.716918486 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.86078407 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.275511434 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.257211633 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.257192331 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.257106924 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25807623 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256951618 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.25745102 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457420695 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.276146649 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.256503719 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.836122345 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2611604 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.258705191 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.272139798 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.269478798 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.265986739 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259466967 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.257756824 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272840461 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275081632 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.270321173 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395914874 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.274062414 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.258542043 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.777764068 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.266482307 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.260467244 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.259327043 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28925009 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.260602997 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066367956 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.521030305 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.254581558 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.515792192 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.266759316 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.283588828 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.259292542 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270579174 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272410824 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.272404505 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282839665 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.270002067 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.260103157 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267209495 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827783775 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030929833 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792813413 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277113185 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.268871859 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.265347325 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.981887395 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283909587 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.259663902 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.484856148 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.973765914 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282871946 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.731831516 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.283379556 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.991273838 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.505248554 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.49742062 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.27073362 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.276597435 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.510218672 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.477650526 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294908248 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.269573338 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26694025 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.24820876 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795702104 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.293884959 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.348614814 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.983532534 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295661689 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.268566302 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.323948198 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.264198178 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.672822328 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.285404978 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262353088 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.267890895 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.26950383 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072642493 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.267835853 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.263103402 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899930635 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.270929028 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.734816853 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286550656 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.465775891 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.278432026 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.266441513 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.263872633 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.263617615 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.516362074 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.503738424 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269930248 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.26929306 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820982719 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.133352026 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.272556175 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265608671 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964154663 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270820841 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552198081 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.285995565 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.268838907 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267688586 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.264397733 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264640368 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.264018797 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.269403161 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264987046 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.74874838 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.285606661 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263141645 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.28891085 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270607733 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.518023779 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.281539115 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.833900213 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.494315833 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.264974445 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314477463 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.270726128 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265068238 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.258957865 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.26590216 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.264989664 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330027213 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.488404256 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.270541248 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.257784541 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.288650965 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.476752865 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.267421671 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.269184713 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504452279 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.273050561 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.281233784 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041820262 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298005568 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.271391057 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272656627 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.263728244 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.306543596 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.335547557 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.469991435 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.283409512 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.277175843 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.656983426 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291505936 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275850352 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.282654662 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.362986077 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269977093 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.274816937 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.04269036 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.861557339 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.039521665 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.866760084 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.515931028 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.273984507 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273582901 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268974419 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406971579 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.270115495 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.542966146 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268803496 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.266245235 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306579635 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269256646 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291169124 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.500532063 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.545586895 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.270131382 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269196857 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276196225 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.269749358 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.281151157 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.480010675 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.759859673 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824022324 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277327199 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.26982184 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.000544964 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.568959442 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270371927 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.27054023 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270686122 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.288905245 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.288178494 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.281463714 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276016935 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411978184 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.512122587 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928249845 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.301419804 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.313907707 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.875889075 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270839324 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.528639665 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.272182447 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.495436688 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.869250137 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.978568173 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.535197122 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.338800942 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.476341297 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.276388135 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406711949 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.271829866 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.27548491 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.27298036 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271142268 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.273743466 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.281355446 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.870754423 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.54020879 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.2775927 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.280153618 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300942908 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.282468009 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.493866577 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939740031 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.499912303 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.281498435 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.277868069 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.273738347 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.876853877 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.516769738 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280231372 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.277682316 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504880437 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.27909847 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.303254046 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.967205064 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.273898644 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.833362678 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.490258509 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293743808 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281901663 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.97900517 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858130994 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.275907312 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.768629052 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.281272592 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273894524 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555255592 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.281111926 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.275934674 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.556600582 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.280637332 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.275758744 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.486466772 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.846372625 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.013465922 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.297456632 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292411839 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.28166887 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276076698 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292289675 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277042221 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275994906 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.678756248 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.296549103 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275691429 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.288600887 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.285727112 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277740983 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.281412469 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275055697 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.283798488 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.280121275 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.26333689 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.284540386 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405928217 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.817608514 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30373035 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.953394433 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.60267225 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.530636874 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.278121331 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.268273258 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.281704888 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277522247 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276935749 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27759784 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.290565905 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838833403 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.284731912 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.291954127 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.281081284 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.267688171 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.487841913 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.283185212 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.488773003 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283117686 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.315629297 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.264526273 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278363038 seconds)
  done (took 921.353913123 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.303806878 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.275610574 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.286418286 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.286988085 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.278428154 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.375459028 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.343130805 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.276767315 seconds)
  done (took 19.610570477 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.280905453 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.28568358 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.28056896 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.281856938 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.284890064 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.723264443 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.291041471 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.281074406 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.293563241 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.287400534 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.281308385 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.906920829 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.30317223 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.287029432 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.275515427 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.288679216 seconds)
  done (took 30.816832845 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.120532252 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.368005298 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.994682146 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.277486958 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.278162289 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.276167199 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.460069122 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.294509248 seconds)
  done (took 25.254912001 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.285448461 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.284945545 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.286533457 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.285716768 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.286124945 seconds)
  done (took 7.614778953 seconds)
done (took 1169.791922787 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.286020232 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.28555846 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.286217668 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.284676416 seconds)
  done (took 6.328077851 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.266010702 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.268391591 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.268694848 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.28064321 seconds)
  done (took 9.268088099 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.934860496 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.848778584 seconds)
  done (took 4.968026476 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.742245928 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.761765018 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.743970571 seconds)
  done (took 6.43783565 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.571782985 seconds)
  done (took 2.761192963 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.146985243 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.280503328 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.927234157 seconds)
  done (took 7.544461642 seconds)
done (took 38.494338159 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.276884895 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.524938439 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.43404624 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.284663373 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.436378175 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.434750339 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.080899045 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.278061133 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.28374944 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.279475702 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.287213214 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.437740369 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.994945022 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.527697486 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.997216774 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.527582177 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.438776331 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.285465317 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.290237496 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.284411095 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.08132931 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.287990097 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.282768264 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.289888176 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.478125002 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.421537423 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.284095847 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.533356055 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.278515703 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.286579955 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.4229826 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.278651795 seconds)
  done (took 79.502042611 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.283565902 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.277914681 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.28574879 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.278303615 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.288114112 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.282773436 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.27859271 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.278582299 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.278376292 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.292520455 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.277482379 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.280616148 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.281391239 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.28777867 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.281090381 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.287769934 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.292264624 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.290718185 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.279267839 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.293768251 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.280001241 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.279403222 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.295509041 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.278096106 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.284610743 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.289547509 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.280439671 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.296343564 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.280912708 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.280610608 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.306864565 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.288665666 seconds)
  done (took 74.307457052 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.28047208 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.280608326 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.283518361 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.28144329 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.294204192 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.286042903 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.284064422 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.28096457 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.292193438 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.290950742 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.282800838 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.293246269 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.283278932 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.282439622 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.303009158 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.281448451 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.289146021 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.280566462 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.281745038 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.288254218 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.282222269 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.292120252 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.281458481 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.280939383 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.313007469 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.281883183 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.282536088 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.297684124 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.295040406 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.282561213 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.298833482 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.280932809 seconds)
  done (took 74.38140579 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.56719977 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.293645392 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.296459807 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.287030207 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.296883599 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.293147293 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.289414421 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.569706687 seconds)
  done (took 14.08542603 seconds)
done (took 243.467201412 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.301880878 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.774873984 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.33091062 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.287963745 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.311749368 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.316893195 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.505638885 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.331601169 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.508022325 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.306134139 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.308863464 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.293319211 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.062169953 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.435764354 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.084301313 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.185797229 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.137746914 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.285020422 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.836929462 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.563659129 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.315883677 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.298243329 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.079133414 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.161098198 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.275814531 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.366822577 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.383267887 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.51272138 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.448051131 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.366812369 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.786648271 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.290391031 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.290458258 seconds)
  done (took 60.938441374 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.289714092 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.39535688 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.295354354 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.295788453 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.397010927 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.295496324 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.290050697 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.295719241 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.296832067 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.296443196 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.295768811 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.297772033 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.29788919 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.324653133 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.399968564 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.290612613 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.291698912 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.392907274 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.292435518 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.289144767 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.323491254 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.296961299 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.299502526 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.326125915 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.298103432 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.29824289 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.395210755 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.299620351 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.29938788 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.392567815 seconds)
  done (took 40.74533214 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.298052706 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.85105221 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.991178195 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.298596623 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.293370136 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.297295013 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.562558909 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.298661338 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.297091434 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.296979722 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.758558808 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.300820756 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.328154344 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.031737659 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.296969973 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.298612057 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.299855012 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.295770786 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.864652617 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.304711247 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.581942251 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.300067519 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.564400525 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.304260318 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.315545642 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.296280016 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.299708857 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.089412603 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.315072709 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.755074743 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.022080071 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.566198054 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.032793955 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.022769781 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.03361891 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.306184221 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.300983595 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.763093126 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.297656765 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.297471212 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.564339897 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.295757618 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.011921322 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.973638224 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.313710703 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.300589574 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.122750196 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.781875564 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.525865848 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.303535289 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.027799958 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.301358825 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.303287578 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.299100845 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.527025941 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.298742477 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.298465967 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.104086336 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.320483872 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.566990616 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.301970355 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.298388164 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.863283456 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.297708265 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.855442707 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.300298667 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.3071395 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.316557704 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.017029737 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.300954213 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.987574551 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.313546766 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.30324317 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.76677044 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.855626722 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.16484125 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.301924044 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.865050694 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.061398654 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.582794675 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.30675578 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.083402935 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.585572817 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.305976794 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.305842751 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.305923255 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.303225888 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.415224282 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.565399824 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.934495968 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.984489395 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.128106941 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.592259832 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.312137394 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.300013043 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.106516867 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.321700973 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.30569215 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.007629525 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.99201975 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.316504465 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.308776328 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.992049988 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.318866138 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.571157062 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.309337575 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.014340622 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.301875963 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.371406491 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.305605573 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.308174797 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.321909989 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.572073974 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.307467982 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.304517821 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.97625912 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.786013004 seconds)
  done (took 182.783420623 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.2968014 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.296089696 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.29833641 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.295881574 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.296926082 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.301801592 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.295582858 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.297830811 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.301332759 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.294817201 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.297713433 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.305744003 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.302295316 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.297341599 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.297934355 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.297822568 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.296579054 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.30158294 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.297361533 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.29729513 seconds)
  done (took 43.171040709 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.306781508 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.83265292 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.803222118 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.311958586 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.307264416 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.30288604 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.356188199 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.311630326 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.307995247 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.584192726 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.468936559 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.308751881 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.307933819 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.308135612 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.799219163 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.303851833 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.58737154 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.840044717 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.313626506 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.835857701 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.302138799 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.307937279 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.302331296 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.835653794 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.598843992 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.575827444 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.364029797 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.835331966 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.30888888 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.308431843 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.832988013 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.308894776 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.30479858 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.832481627 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.324596185 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.323394312 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.308449575 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.359959629 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.359630593 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.587755149 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.83901861 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.580495277 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.321175179 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.483350947 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.312216476 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.298723232 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.841653447 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.325394579 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.29915893 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.312529279 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.315861338 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.809588414 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.326762252 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.811953066 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.32861321 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.311244415 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.840015702 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.815326208 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.825275317 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.472267413 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.305705943 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.574488982 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.315449136 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.84418686 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.325939582 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.310449295 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.311295808 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.469079226 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.856386854 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.57763311 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.59064112 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.590188101 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.311666872 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.36718119 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.326660668 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.592677425 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.365437796 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.713657629 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.592913086 seconds)
  done (took 118.801049726 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.567155045 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.414656771 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.691218023 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.906153019 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.307361581 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.441092388 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.415567918 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.554943687 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.312299279 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.414688203 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.920898037 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.42232602 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.065809955 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.39315439 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.410448096 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.447717277 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.693461662 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.257611451 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.97574293 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.905062335 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.307738969 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.425459662 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.820181615 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.505383283 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.322589116 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.900194323 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.236835178 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.946605558 seconds)
  done (took 51.191914398 seconds)
done (took 498.824085534 seconds)
SAVING RESULT...
DONE!
