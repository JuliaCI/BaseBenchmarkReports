cset: moving following pidspec: 10315
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.699016504 seconds)
loading group "string"... done (took 0.565873519 seconds)
loading group "linalg"... done (took 9.629760005 seconds)
loading group "parallel"... done (took 0.178784899 seconds)
loading group "find"... done (took 1.442170442 seconds)
loading group "tuple"... done (took 2.147153664 seconds)
loading group "dates"... done (took 1.567061597 seconds)
loading group "micro"... done (took 0.215255672 seconds)
loading group "io"... done (took 0.614211347 seconds)
loading group "scalar"... done (took 48.217550524 seconds)
loading group "sparse"... done (took 14.589535343 seconds)
loading group "broadcast"... done (took 1.288824262 seconds)
loading group "union"... done (took 11.307605892 seconds)
loading group "simd"... done (took 2.835308688 seconds)
loading group "random"... done (took 10.928230834 seconds)
loading group "problem"... done (took 2.355844608 seconds)
loading group "array"... done (took 26.238034833 seconds)
loading group "misc"... done (took 1.195508843 seconds)
loading group "sort"... done (took 4.070301614 seconds)
loading group "collection"... done (took 20.833374091 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.694479111 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.147167195 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.229916692 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.36964167 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.237185718 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.16223275 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.144842214 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.294066999 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.22441252 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.227845529 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.149914327 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.579838507 seconds)
done (took 6.164508649 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.251452756 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.256596654 seconds)
    (2/2) benchmarking "String"...
    done (took 0.174381255 seconds)
  done (took 1.072963315 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.087674171 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.173895387 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.092232807 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.109357616 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.10765853 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.10822216 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092483299 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108145415 seconds)
  done (took 1.432493424 seconds)
done (took 3.496508668 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.547202166 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.896033463 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.58405446 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.163231054 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.322046766 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.349464747 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.339878111 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.203412563 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.104670608 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.105184611 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.177101045 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.41302214 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.449418493 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.010798714 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.105429642 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093976301 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.130155636 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.781866276 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.076416194 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.131681157 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.576940721 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.212779154 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.095420134 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.129818039 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.197007845 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.116172842 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.176853233 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.105167948 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.662664079 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.129189378 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.204121212 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.078972402 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.176468183 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.248232354 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.221759702 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.103935041 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.665585488 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.198035655 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09671475 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.097612728 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.683961377 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.127966632 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.167727592 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.100825224 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.089743905 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.186114396 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.115359615 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.08992697 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.112508229 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.082821382 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.163570556 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.460799385 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.088896178 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.168670241 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.088673854 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.699909393 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096829543 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.279167972 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.134753758 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.10149156 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.073269602 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.103045395 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.158210902 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.10629108 seconds)
  done (took 20.64098443 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.159031202 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.168309613 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.073794232 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.15685187 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.142743974 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.092248119 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.081369788 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.090754131 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125604323 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.239188994 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138690637 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.168473887 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.070937532 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.099268509 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.146339499 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248397854 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.102986272 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.119492595 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.097902581 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089601263 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140148563 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.1091467 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093417171 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.109144035 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16596218 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202105569 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.116801335 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.118100469 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096648522 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099742624 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139116754 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.16162084 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.086982122 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082669084 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.185964029 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.1161867 seconds)
  done (took 5.29843475 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.225319378 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121835632 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.237027111 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.179741152 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.189875346 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148344549 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.185349964 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.142998658 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.314170629 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.248103579 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176535428 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110892554 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108811812 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09123746 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082460381 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.092013967 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.611115969 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.181836951 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.148410469 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.149571266 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100351998 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084937716 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.384688433 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096285084 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.092644773 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084428482 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.089424107 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.203490882 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099392205 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.319104002 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.080307295 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.096750291 seconds)
    (33/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.077711158 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.1032549 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.07796071 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127876989 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.131491703 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.139694387 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098069785 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078163795 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.235441272 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090374866 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.090758184 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.112434503 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129712994 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.130168981 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095614867 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.107525678 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.22603093 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.093734561 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11891651 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.119810635 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197441105 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.13488126 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.076844189 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.095709752 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.317489742 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095196983 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100491742 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.093427699 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.289354594 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.128533949 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.09415036 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075816415 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10140811 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.074325924 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.445565936 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104515231 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.774107601 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.080387752 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.163130258 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098472999 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102048203 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097507118 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082979722 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11258194 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.075611249 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.091953802 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.075497319 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.091481748 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079124266 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.116733161 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.095938909 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.076360285 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158020847 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.1091831 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095764876 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120857636 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.096516629 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.074470032 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123587729 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093196269 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.079740569 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.16747857 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102301732 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.116158446 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.095632112 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.122171072 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.092294262 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.200821298 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079523534 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121955756 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.095090116 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107649006 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.109985533 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092808477 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080437879 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.090890215 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.075229545 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158971168 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.076584785 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.093804732 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.095332039 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.092228275 seconds)
  done (took 23.516303264 seconds)
done (took 50.099258364 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.523770208 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.120352104 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.118900283 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101668551 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.119332996 seconds)
  done (took 1.709401702 seconds)
done (took 2.408460236 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.399540337 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.207738064 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.117565937 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.19867855 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.102008374 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.209585052 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.21158497 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.091782278 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.2402615 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.099172859 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.20336029 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.099489127 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.101400005 seconds)
  done (took 3.005358532 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094441891 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.123823119 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095591878 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111363826 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074260288 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114260157 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108222395 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11022195 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109206345 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085397321 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091399515 seconds)
  done (took 1.814518689 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091842011 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118620465 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083223273 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108105431 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07546039 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107357592 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090534547 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.122265156 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106996307 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088892244 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090964803 seconds)
  done (took 1.783828883 seconds)
done (took 7.294310676 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.180376028 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.168613677 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.170119626 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.207629158 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.38089009 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.256914813 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.647046806 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.167501638 seconds)
  done (took 13.070074552 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.114441218 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100114317 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.145734861 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.081673342 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099382565 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.097939175 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.083724434 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.096396026 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08249902 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.09854035 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.081233702 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.097989435 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.081784627 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099220032 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.082180347 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.098183322 seconds)
  done (took 2.309209721 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119999037 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119253324 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106448701 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108981262 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086111742 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104584887 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.088955778 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.105117903 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.099306403 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.087258072 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.10850529 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.090120898 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.106522094 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.100515175 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.089991799 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109806019 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085553856 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106587815 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106030107 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.09058105 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.1082419 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.10364728 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.09120742 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107656791 seconds)
  done (took 3.244827335 seconds)
done (took 19.325062989 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.179330035 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09694911 seconds)
  done (took 0.981989999 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.150257566 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.1539045 seconds)
  done (took 1.014910494 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112143144 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096016266 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.142971074 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.117969282 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080822323 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097488904 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.136240497 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081308993 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098327893 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080584782 seconds)
  done (took 1.758784255 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.086801696 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10171262 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.093112247 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.147919542 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.111634882 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.102928649 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086505378 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101854444 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.086177731 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.099119826 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.105343255 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.107325208 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.106296123 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.125679187 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.102199168 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.092803815 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.113108114 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.104194708 seconds)
  done (took 2.589600763 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081457098 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097932169 seconds)
  done (took 0.892140754 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.086974694 seconds)
    (2/7) benchmarking "second"...
    done (took 0.097430119 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086585237 seconds)
    (4/7) benchmarking "year"...
    done (took 0.102564631 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.082338564 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.098854101 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096990604 seconds)
  done (took 1.363963107 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.515689865 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.287246815 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.349509656 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.120339117 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.161447518 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.375550325 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.146071093 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.117227712 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.116045156 seconds)
  done (took 2.942354496 seconds)
done (took 12.255612293 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.08968132 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.226914245 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.6538523 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.122173071 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.081115912 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.158260611 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.31268125 seconds)
done (took 2.361441096 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.34879441 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.158071473 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.089187709 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.078756781 seconds)
  done (took 1.389075658 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.076103712 seconds)
    (2/2) benchmarking "read"...
    done (took 0.105554968 seconds)
  done (took 0.901480193 seconds)
done (took 3.018358931 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.114282432 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097688551 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.076784412 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.096587975 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.078757173 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.097463962 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077747992 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.094743988 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.077293189 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.094054495 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.077975993 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095328849 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078550758 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094450379 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077899448 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094765608 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.078466265 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095240834 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079017883 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.0938608 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079031485 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094208882 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078605666 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.093659026 seconds)
  done (took 2.873144887 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103307927 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099635272 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.085447827 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.10436196 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104347065 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08601875 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102977537 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097825257 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087467269 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099023775 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086776205 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.105419635 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.082228493 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.104046462 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098261309 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.086779018 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.103602612 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081949664 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099711328 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103812393 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.085308021 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100423161 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.086919806 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104857171 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.10460807 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087370168 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.098899221 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082137496 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104266733 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.1035022 seconds)
  done (took 3.600732792 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088455465 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.091633771 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08043809 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103313264 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.07677201 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097358208 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077315787 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.092102403 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081992644 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094570128 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082211316 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095465268 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.076737787 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097301467 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.081852304 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099093254 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.090477691 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.094295614 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.077311431 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.097964313 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.080744423 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.093001314 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.080166065 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.094820963 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.079644123 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.092814572 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.080307017 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.094970507 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.080571966 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.095870752 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.082060512 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.100418729 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.080422329 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.106647215 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083309588 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.096349814 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084693623 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093400487 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080953501 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093614183 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.075781841 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095623733 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.075989512 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103977197 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078959922 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097840538 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077045675 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098424129 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081579698 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100979803 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076441581 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093356282 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.083532696 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.100073109 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.083270555 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.092881416 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080460944 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.093721049 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081634732 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.096144651 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.075853724 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.092105363 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.084186277 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.098262312 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097590349 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.104612787 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.075417756 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.100148001 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.080076884 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.10206071 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099349469 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.092986128 seconds)
  done (took 7.146883064 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.094948779 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108397948 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081756959 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098920276 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081084927 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097269585 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.088600799 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0978292 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081368974 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.107081342 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096669747 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081628552 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097596012 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080966117 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096855288 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082615717 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.106503446 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080338177 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.098420258 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.080845434 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099135116 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.104156218 seconds)
  done (took 2.773670884 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.244767553 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105474543 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.153665269 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.115869699 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.120499344 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09862989 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103097944 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086042168 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101739333 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109337046 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092090449 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102947657 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121888768 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092589519 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108909421 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110907065 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084869836 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.11198829 seconds)
  done (took 2.794504068 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.098201385 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100329911 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106159267 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10145925 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099659316 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083648319 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10812569 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.098767101 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.100711851 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099795097 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.094514488 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100270275 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.08212519 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100065707 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082284558 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103163143 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.09934171 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084530235 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11147249 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108716717 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.093602859 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111699476 seconds)
  done (took 2.898142966 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101268963 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099997835 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.134063232 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088621181 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.100332166 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08312624 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106969172 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.084687913 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108963261 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098734909 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084969896 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097970206 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.093545068 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100630281 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.091652674 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100823245 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.081472905 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102094371 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100500289 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082890894 seconds)
  done (took 2.674822925 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.181193771 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097363491 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.115926444 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129669298 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097695395 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.11620279 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.129668035 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098567355 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115338056 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.1321407 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098521249 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.115409062 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128668842 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107339134 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116802846 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129159708 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128013595 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111465783 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.116089006 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114826701 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.131309788 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099662415 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129878593 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115601098 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099802865 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115330588 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098499217 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.124678306 seconds)
  done (took 4.030610895 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080138097 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078421004 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.097532377 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.079023784 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.097333044 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.079774849 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.097739198 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.079217462 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096846841 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.079445728 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.216113111 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.080164842 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098050742 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.079455459 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096950921 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.07941124 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09697044 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.080838245 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097503056 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079011772 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.097156298 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079851894 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.095680941 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.080352094 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09648619 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.080280464 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096628656 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081842248 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096919656 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081071918 seconds)
  done (took 3.491556704 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093193327 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107174535 seconds)
  done (took 0.938496471 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.090194732 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118597046 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079388378 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.099770817 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090873966 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099088111 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110285474 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092467195 seconds)
  done (took 1.517094627 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.15127477 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.151657215 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088513668 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111801742 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.151266162 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.144492891 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126763435 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10588377 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.100475032 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.076161502 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.146444183 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.094444037 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.085369242 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100308056 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.086234212 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109814867 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.081452833 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.109369512 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.105714043 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.08460754 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103829908 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093653842 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106260002 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.091447353 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.095981739 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.106233326 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.091268958 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.111905681 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.083046713 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106652037 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.083283103 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.099576988 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.102402264 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.087649596 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.098192005 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.14972271 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096639577 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.101341219 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.086131884 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106561459 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108406102 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.082999429 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.105683012 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.084028009 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107414082 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.086609854 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.10551891 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080940441 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096242943 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.077756709 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.100805566 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080557486 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09968035 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104253311 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088479009 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112811384 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084047183 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.097699733 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.079997222 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.099206603 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.084652995 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.100060299 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105651465 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.085304986 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101000498 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086241207 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.102782467 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.081481726 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.102230773 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.08198341 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.10372917 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.118941583 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089687763 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.105671579 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087125606 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.100403818 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082710423 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107400999 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104113032 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089016809 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.104263584 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08895595 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103238706 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081030337 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.100613367 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.105218435 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.084161185 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.101020282 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.07651672 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114907302 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084944514 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.100162232 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.07770493 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.102576493 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08097265 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.10376781 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.077919442 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104408572 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.0806831 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.1057096 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10453622 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.079833527 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.106522902 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087885215 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107309185 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.087209082 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.144589765 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101721168 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.081208869 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.103251586 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087280183 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.098222652 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.102745364 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.080963896 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096760434 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081660103 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.10457036 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.086719736 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.101550908 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.08659901 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.1024193 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.088196349 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.103127979 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.079420524 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.09947386 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.10383938 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092897727 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106695012 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.083732916 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.101946576 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.083249068 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.10446604 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.086042694 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102445009 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104693933 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086071455 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.097939808 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084053055 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104527388 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.087766857 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.09965645 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085483423 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106375508 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.102535012 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.08591271 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.105811355 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.081668967 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.095694804 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087751854 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.100336656 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.083429755 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110522638 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.099250949 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.085026801 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.099393387 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09235751 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.100838007 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.088134298 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103398992 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.086935572 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106474399 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.075207465 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102588823 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084081447 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110525461 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.100937711 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.084294289 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.099821399 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089383992 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097149172 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085729278 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.096364622 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.079802449 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.108096675 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.08319323 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.104080174 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.082106112 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117960671 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.114016095 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088083291 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.103304421 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.086044967 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.104313045 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.085482891 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.104176078 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106458949 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.089643508 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.103695111 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.085499151 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106450718 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.080015338 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.103507428 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085343122 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105903054 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.076407453 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.101733595 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.075859116 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.105246644 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106982629 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087386679 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10554039 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084620492 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103275612 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093056 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.10047815 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.086026904 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.097324907 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.086114878 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.112979763 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.105183496 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089362053 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.10577932 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084788151 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.100875468 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093463311 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103237614 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.08648579 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.101988876 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079696252 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.097778868 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105298193 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.085412798 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.098976464 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.081946423 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.1056275 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089417035 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103071486 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.079210176 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.105850836 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091408583 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.100707217 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104782361 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.083020595 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.10374728 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095682969 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.097527845 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.081875794 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.108304707 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104260478 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.091066502 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.101430979 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.085442005 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.106313838 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.08467741 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.102354538 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084346745 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109405776 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.084013396 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.099687214 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.082774124 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.103774267 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.079847256 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.102495003 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086833259 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.102828993 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.100771243 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092954394 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108546544 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.088513743 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112475936 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.086605954 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.108458686 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.106458037 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.081471606 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.106709993 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08250282 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.096548837 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.084076288 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.095527615 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084527385 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101321772 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.086862154 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.104257133 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085522753 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.10523227 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106798271 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.08407813 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.106216583 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099148674 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.098505859 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.097026059 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086589739 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104891338 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.083462232 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.10156179 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.083925328 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107117662 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.087069548 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108954137 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.078762744 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.100835023 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087533478 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.102895889 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107023383 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.090269332 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.107398046 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.082791818 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.106389488 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.084063702 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110719912 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.079754105 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.104612027 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104719984 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088144508 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.101778904 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084384955 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101524814 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.078495029 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.101531491 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.088905542 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.099077645 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103217095 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.085795844 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.101819005 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.079948735 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100410916 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.089490254 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.098601192 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.089222154 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.101360638 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.079991347 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.098237533 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.087535543 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106145585 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.087989578 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.101359721 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.102314947 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090861762 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.104074783 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.083537591 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110168101 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090309576 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.107357508 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09263062 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.096414748 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.082730565 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111385666 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.098691163 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.086526823 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.102131613 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081221438 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107752036 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.089548616 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.106730461 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084894061 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.098755877 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.082156717 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.108400661 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.084884211 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.105335345 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.082880175 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106672145 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.09931417 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086961408 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.106763926 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087421905 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106593195 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086743671 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.105270921 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082898566 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.107645385 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.081752704 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.098563062 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.079618131 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.103471025 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.106938194 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.077796032 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.105349132 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.088295918 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101354231 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085791841 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.105540552 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.082537183 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104437582 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086958676 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.102127201 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094965224 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.102632601 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.100230115 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.089487674 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.106347245 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.080245928 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.101876462 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08293547 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109350434 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.085422868 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.10744986 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08772451 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106985812 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083679379 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.106592523 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.086377966 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.108166546 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.098061042 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.090843801 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109321709 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.084742609 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.102386779 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085408605 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.098216299 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.084714366 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10939366 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.083404033 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111542288 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.107570312 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.08529695 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.102806431 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088982618 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105352995 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090577909 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.099509929 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086941857 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.099906651 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108194561 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.086313883 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.107829115 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.083106051 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.099078622 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087248498 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.105706494 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086421147 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109214593 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.08949645 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.099229693 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.079124321 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.104969892 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.10128637 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095619227 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.101916623 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086666137 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105249847 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.084891337 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.102952298 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089952645 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100047021 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08359398 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.106667232 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104747959 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.081259244 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.098262693 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086873657 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.103629632 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087388985 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105918521 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.08072388 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.10598403 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.090302411 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.103283091 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.078764209 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103860451 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109574281 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087127228 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103059375 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.080884216 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112244103 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089265655 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109435099 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.098923469 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.088703004 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10139388 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.085428093 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.108697814 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084184309 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106395861 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.084838752 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107885461 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111087965 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.080164898 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.098175339 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094871893 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106913841 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.092321043 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.103752325 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.084709202 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109956654 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091446363 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.10471724 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.098524918 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.082044429 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.098762209 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081876764 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.104214915 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093873953 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.104792691 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.08421278 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10708046 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086150518 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.105161991 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.085046663 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101208049 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089922845 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.10310471 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.10950438 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.0810519 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.096997773 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.08579481 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106899491 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082600004 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.101021552 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083766647 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.10448076 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082041205 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.103662641 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.091044859 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106619203 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.089729581 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106358866 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.101677099 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.086367884 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112085389 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.082956297 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.103602453 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097674638 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.109136423 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087962992 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.106335101 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109659704 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.089729478 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.103908544 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.091100963 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.103694739 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.082924548 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.111116551 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.090245872 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118370869 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104664631 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.080198864 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.105939327 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.082757659 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.100007454 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.091451593 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110691863 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.08964617 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106740567 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.082728094 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.1112399 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101966695 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087300117 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.103277883 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086021426 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.106999986 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083696453 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.106145207 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.083358294 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.111588781 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.091021428 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107756327 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.108902523 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.079765014 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113008388 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.091137812 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.111546432 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083183268 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.100152475 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.081572677 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.105520207 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.091417735 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.108264393 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.086426117 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.105870834 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.086342373 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.107409805 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106068635 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.085507754 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.11007545 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.089364434 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.101193259 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.090159667 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.101370703 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082235719 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.102459241 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.090810174 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.110693803 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088791389 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115826398 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.107948138 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.086852433 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.102793609 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089218703 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.104521325 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.088333943 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107154401 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.084171234 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.100258708 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088780581 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.110123807 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086266636 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.112483983 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110039199 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086201228 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.108597754 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093345322 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.107795068 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.084193072 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.108570028 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.084788494 seconds)
  done (took 58.320294127 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.162996191 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092754682 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10401797 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.084890377 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133795248 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106176453 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085563392 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105453738 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087825714 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.119765627 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084649746 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105122202 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.128970956 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.1371987 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132590869 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.101426766 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10487417 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.085876256 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105279022 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105609028 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108711797 seconds)
  done (took 3.072225235 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.110604434 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.123675509 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.123663616 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.125865269 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095117882 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.121110574 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.121978066 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120843705 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.105928214 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117668667 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.126397758 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120261075 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.098921273 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.117324873 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117411583 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099247207 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.125886354 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.115667938 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.122549988 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103190621 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117693587 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.123293463 seconds)
  done (took 3.343022027 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.096063743 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.106628043 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.092171003 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.10427388 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.088680553 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.104177415 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.095531543 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.103603157 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.094843942 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.104801945 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.082317329 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.103193504 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086444242 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.104289301 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.082570128 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.103966438 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.09425651 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.107888188 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.089243206 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.104477166 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.121027189 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.085406524 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.104663039 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.082160546 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.119409715 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.090414706 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.105262815 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.08718811 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.099619352 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.08718833 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.103920223 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.086241875 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.108679389 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.101797007 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.081208238 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.106116577 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.089325207 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.103842957 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.085992473 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.101277266 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.086878025 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.108897015 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.091835344 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.105444781 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.084702688 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.102599523 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088948967 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.105074761 seconds)
  done (took 5.463727527 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.124113534 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16447313 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089921882 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.153244146 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.127915388 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.121048748 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.08939421 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.131628094 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.11023018 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.090075982 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.131534253 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.129469088 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.112024798 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.095500976 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109546545 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.110256046 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.094601585 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.110258366 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.118618438 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.09329692 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.118436888 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.09349389 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.126519087 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.126822563 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.113526144 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.091630189 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.112276768 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.114180862 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.107796189 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.120360946 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.115860928 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.097604482 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.12778385 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.114446795 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.091185525 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.111340008 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.130127344 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.092059069 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.112848233 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.108382052 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.093300984 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.114983455 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.112456836 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.11124662 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.113243948 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.114538505 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.093141643 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.107663405 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.128713561 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.094069608 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.121387021 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.130079212 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094762207 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.113340543 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.115129712 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.107310717 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.11334143 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.109530467 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.094413729 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.127419975 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.108670976 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.095636476 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.129508925 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.110750877 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.101275354 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.129753612 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.114459088 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.093949075 seconds)
  done (took 8.579722526 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.123825268 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.117315593 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129527698 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.128935298 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096938651 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.116066055 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095596265 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.115815077 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115785853 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104694636 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11677583 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.203442036 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.112782959 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.122975461 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.097764618 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.117140346 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11629746 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096464795 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.11747802 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116973239 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.096727923 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.129847517 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.115687777 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128662643 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.113283544 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.111874977 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114917094 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.096675414 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130118776 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.115787716 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.132128296 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.095551482 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116317105 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.130729428 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.132201835 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.097093463 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108123586 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095860977 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.11667114 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11588521 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.091962992 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130387879 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.117096987 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.091881392 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117497143 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116032927 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110080202 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.133971323 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.122529934 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.125761666 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.09806138 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.129858994 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117412397 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.116564681 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110996348 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.140173325 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131703389 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129873672 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115968878 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109770662 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129113885 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.139857399 seconds)
  done (took 8.08521515 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086541804 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084309483 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.107166184 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084348782 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105804726 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085629182 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106952984 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085011373 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105845662 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.085126434 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10554759 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085645636 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105660812 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08570946 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10630404 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085974851 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105711752 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086443077 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104926101 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087075177 seconds)
  done (took 2.697341643 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.098838165 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.130398131 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08837719 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.119202428 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10927981 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.098822594 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.110033005 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089581385 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110619872 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108623306 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104100907 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.122154438 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110683492 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09945701 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.122824473 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.118397503 seconds)
  done (took 2.54655098 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.11407358 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.132508506 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.170807188 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.113990218 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.090384078 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.118919576 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.088301706 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.112208419 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.086914035 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.11740751 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.112674037 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.093498052 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.110183471 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.09059347 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.110259534 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092901178 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.107888153 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.093401407 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.110691735 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.169334103 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.117259341 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.094278354 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.112323014 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.091704069 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.115541588 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.11605104 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.097718266 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.110668783 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.092827185 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.110846043 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.112640719 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.099723139 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.108862731 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.095694931 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.109357403 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.091084205 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.109153897 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.0895386 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.114164462 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.108843052 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.091061104 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.113052081 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089379973 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.1126173 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.088867475 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.111092033 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.087785172 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.117982903 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.11070109 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.093906072 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.109350118 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.096319901 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.11530706 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.11970956 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.099821113 seconds)
  done (took 6.69674525 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104331223 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111169178 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.104800338 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.107322757 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090939654 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113221992 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110509277 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.0926316 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112965076 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086582314 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.11249542 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.093188759 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112846017 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.090659977 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112084411 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111417921 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.087717309 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111107284 seconds)
  done (took 2.67739251 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096419685 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109689168 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095079405 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109579931 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08981488 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109344848 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087260841 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10770975 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088003877 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.110158254 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089325343 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.109260639 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086635851 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.110039394 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108231503 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089879741 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109035482 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089060797 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.109681404 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088316051 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109468502 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088432034 seconds)
  done (took 2.9993209 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.108124909 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.173118183 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.1236598 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.184936795 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.111847559 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.088832803 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.121917904 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.11050053 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.112291256 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.110210728 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.089022437 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.11171374 seconds)
  done (took 2.260710486 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119093365 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.15034202 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109972967 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090838388 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122833259 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096280968 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117139074 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116737956 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107151264 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134077471 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117613724 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128484924 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127652025 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110771861 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123633282 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123443564 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096970782 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117576664 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110926092 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139839973 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097506227 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12910052 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116753672 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096858533 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116952597 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130792415 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108246221 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135540197 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117834264 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128117382 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103120099 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118225755 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128200334 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134072832 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090396374 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128669569 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117705934 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141302123 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102207045 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130003467 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110170884 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103998899 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129421963 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12642949 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129196602 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096999649 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126956762 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117489011 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097625296 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148327625 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123391531 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130487719 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12282159 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128933157 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110746576 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147819682 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134399075 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130577331 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122696241 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13397677 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10945657 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123683327 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131163995 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134676993 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122940068 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11063106 seconds)
  done (took 8.755124929 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137495339 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.112816898 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117734142 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133653397 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111219342 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11757779 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116865244 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098126671 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117163719 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091369726 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.186555243 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098577571 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133968446 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131369231 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096787986 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118638006 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117643986 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129341809 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09220389 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14800026 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118242433 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131046911 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111519645 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130304827 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134701102 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123788115 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096372116 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118474422 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117347029 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097082973 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126885108 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118470179 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130259728 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09295555 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131801207 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117837612 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09779286 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127113784 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117381084 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103408143 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131084633 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141646343 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118371747 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097446673 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134431784 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117328845 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117183059 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093468273 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117693846 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093039018 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134431913 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1358113 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135123665 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130747606 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097322799 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118653342 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117936669 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097987362 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11788397 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123961268 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109995206 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117904596 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149347674 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118119739 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096438114 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131993553 seconds)
  done (took 8.670074665 seconds)
done (took 159.625065949 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.134620121 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.19492042 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.150846357 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.149276661 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.10356082 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120477828 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138868256 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.151378918 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.084067232 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.103570978 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.08387847 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.109261106 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.151758651 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.103162205 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.084937958 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109099021 seconds)
  done (took 2.790108767 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.178852391 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.343008504 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.124642917 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.114267968 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09478272 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.107717857 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.093795113 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.116928832 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.107211829 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.100482769 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.107758138 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.08825574 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.121090575 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107628224 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.089051749 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.108452955 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.099297702 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.108565 seconds)
  done (took 3.034818882 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112995397 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150981487 seconds)
  done (took 1.08750443 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.123374517 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.193303048 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.323485702 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157135071 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.115132068 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.132451985 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.159811262 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.127047036 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.199868935 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.128920177 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.129033002 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.091922574 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138892411 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.118666442 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.103488517 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.11230316 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140161678 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.102147669 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.121793911 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.093433436 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.133775427 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.116500304 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.098009499 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.122124001 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.190487883 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.128818805 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.115006889 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.096644945 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11451043 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.100193233 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.11455175 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.131891547 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.128314265 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.182285787 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.118201517 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.17511215 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.12387868 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090898846 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.121040365 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.111032852 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.096514078 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118521005 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.13232676 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.090626121 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.115999081 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.123214608 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.096474295 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.116936123 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.11531119 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.106313226 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116287287 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114227539 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.176604957 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.126329649 seconds)
  done (took 7.793697411 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.859913843 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.153847614 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111989142 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.013985931 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138680943 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104513922 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.883719421 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112688116 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.277349961 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.880998185 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.105805075 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124906951 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.257975917 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.266597236 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.203193121 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.369461391 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.724087305 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127296258 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.139228234 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.160968003 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100286423 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13964464 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.135715096 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.423375489 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.112212247 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089452466 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121822431 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123962053 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177105498 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.109738139 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09601019 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.21887973 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.281259578 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.230066164 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.1111966 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089893106 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10850774 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.185140469 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.298789899 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.247592091 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.183837661 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106261481 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089339097 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.120129567 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134399428 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086815968 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.198780436 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190567938 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.189615752 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117451455 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123709308 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101770458 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119409641 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.176669144 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.108524637 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.36563172 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.371657788 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110415749 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100459022 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128486928 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.292072305 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10912031 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.254993256 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140053793 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.240366068 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089766097 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.818673254 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.181918995 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110146244 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.116032759 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.099134637 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119345088 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.119040855 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176303686 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.388798718 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101788858 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116444462 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109318185 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229159245 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.110719662 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088461052 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.202531122 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091639004 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123235433 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125238051 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.101992611 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.207866238 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.265208658 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124857177 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122391798 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097576442 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12671802 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.110784535 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.228723445 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.251939376 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.173521527 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.256176856 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098827968 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.203387419 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.183044331 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119277769 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.186090758 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121162721 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126323824 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098397593 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.245624248 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.150770569 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.112913266 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116586969 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.101802583 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.155930606 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.113929837 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121313772 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.186101578 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.483789434 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.183945271 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.084766946 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.11666334 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122171927 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.17991095 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11992695 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.289858491 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102135994 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.206350403 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099581755 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.10916147 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121283624 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.18338418 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120121336 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102083194 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120539221 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125034772 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.267988308 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.250213073 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124431349 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.2635797 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.187296537 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.097128299 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.210899636 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100328221 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.209529495 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100348277 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120845786 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11339865 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.812585481 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.104843221 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122520231 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117861908 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.202067022 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087818345 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.112999913 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.088797943 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108217982 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.835528182 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.091808708 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.110099131 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.09122477 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121062249 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121545018 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100479286 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119170014 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17659095 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.284570781 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.104451947 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121530563 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.088067383 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.199389602 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.090802319 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.112039944 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.088536438 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.112056707 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123046587 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.096951343 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.113025425 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191562747 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.175241006 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.272218201 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.557397606 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112171821 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.110035641 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.26204159 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089183239 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.337336319 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123407428 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.255317144 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.205047773 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.088277932 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.369555979 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.206136534 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.202863128 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.092745863 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.208318917 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087603524 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.123093956 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.178137676 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.109540714 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098743414 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.195698311 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.105772904 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125978638 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.186917929 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113121835 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.246805981 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108125702 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.186298881 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.112368117 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098123111 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.33815247 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112198399 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129338833 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.178741725 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117815392 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.090887905 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.638057386 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.089631748 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126722883 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119311659 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.254397248 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184474351 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123394994 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124218603 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.104219855 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.201776116 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.232787206 seconds)
  done (took 46.523830269 seconds)
done (took 62.055217393 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.317075019 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.282051743 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.340919645 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.231990225 seconds)
  done (took 2.103789692 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.229961127 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.161934763 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.192086524 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109766722 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.201480702 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.10981406 seconds)
  done (took 1.853285297 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.544994509 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.441207081 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.352800564 seconds)
  done (took 2.192221389 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.273687001 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.29689233 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.337445624 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.517779794 seconds)
  done (took 2.388564247 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.257840152 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.134684759 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.128189208 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.184340464 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.223854504 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.222626339 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.130381258 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.188861259 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.115158744 seconds)
  done (took 2.488424852 seconds)
done (took 11.880824168 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.338251674 seconds)
    (2/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.371630256 seconds)
    (3/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.338320737 seconds)
    (4/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.239136762 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.212077242 seconds)
    (6/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.214258525 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.156039317 seconds)
    (8/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.079810504 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.123588292 seconds)
    (10/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.282634744 seconds)
    (11/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.347692992 seconds)
    (12/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.127847041 seconds)
    (13/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.263215992 seconds)
    (14/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.213034935 seconds)
    (15/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.095471595 seconds)
    (16/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.281606977 seconds)
    (17/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.120183126 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.127346925 seconds)
    (19/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.183258726 seconds)
    (20/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.341592205 seconds)
    (21/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.247954745 seconds)
    (22/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.115390766 seconds)
    (23/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.171623219 seconds)
    (24/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.097142949 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.152219823 seconds)
    (26/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.115300152 seconds)
    (27/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.136815716 seconds)
    (28/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.207671816 seconds)
    (29/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.290448403 seconds)
    (30/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.207081742 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.155142408 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.096780211 seconds)
    (33/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.166807853 seconds)
    (34/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.24040186 seconds)
    (35/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.123646086 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.1208089 seconds)
    (37/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.237471572 seconds)
    (38/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.098122041 seconds)
    (39/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.204229228 seconds)
    (40/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.172787115 seconds)
    (41/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.096212882 seconds)
    (42/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.105975108 seconds)
    (43/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.239709086 seconds)
    (44/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.161140375 seconds)
    (45/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.108746329 seconds)
    (46/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.096122466 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.121325471 seconds)
    (48/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.239000508 seconds)
    (49/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.31034774 seconds)
    (50/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.228205288 seconds)
    (51/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.091291651 seconds)
    (52/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.191036922 seconds)
    (53/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.083379042 seconds)
    (54/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.207513958 seconds)
    (55/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.128468864 seconds)
    (56/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.085590669 seconds)
    (57/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.241836827 seconds)
    (58/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.207578448 seconds)
    (59/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.081077201 seconds)
    (60/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.137983576 seconds)
    (61/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.112255216 seconds)
    (62/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.08093274 seconds)
    (63/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.196639819 seconds)
    (64/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.097326056 seconds)
    (65/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.178128143 seconds)
    (66/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.25122897 seconds)
    (67/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.112061713 seconds)
    (68/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.100193108 seconds)
    (69/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.10133182 seconds)
    (70/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.135724901 seconds)
    (71/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.174021313 seconds)
    (72/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.120239877 seconds)
    (73/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.1152042 seconds)
    (74/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.11819994 seconds)
    (75/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.095780046 seconds)
    (76/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.225573298 seconds)
    (77/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.209999136 seconds)
    (78/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.119171482 seconds)
    (79/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097355373 seconds)
    (80/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.199467797 seconds)
    (81/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.231191805 seconds)
    (82/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.229127383 seconds)
    (83/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.080225818 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.132311872 seconds)
    (85/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.229084845 seconds)
    (86/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.210498736 seconds)
    (87/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.2043215 seconds)
    (88/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.081318464 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.089587626 seconds)
    (90/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.119980134 seconds)
    (91/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.127870359 seconds)
    (92/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.082522226 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.120234653 seconds)
    (94/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.080976569 seconds)
    (95/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.126907455 seconds)
    (96/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.098996864 seconds)
    (97/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.176057437 seconds)
    (98/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.08014403 seconds)
    (99/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.080167684 seconds)
    (100/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.113731456 seconds)
    (101/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.182484187 seconds)
    (102/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.172827538 seconds)
    (103/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.178019575 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.133268949 seconds)
    (105/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.081240247 seconds)
    (106/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.210461418 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.097448479 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.122395891 seconds)
    (109/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.118991129 seconds)
    (110/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.08298423 seconds)
    (111/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.08703879 seconds)
    (112/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.109132762 seconds)
    (113/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.081416535 seconds)
    (114/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117472976 seconds)
    (115/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.108515835 seconds)
    (116/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.119239953 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.095468811 seconds)
    (118/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.224372596 seconds)
    (119/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.103376327 seconds)
    (120/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.096155482 seconds)
    (121/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.194408257 seconds)
    (122/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.225287579 seconds)
    (123/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.079073601 seconds)
    (124/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.103794459 seconds)
    (125/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.098352253 seconds)
    (126/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.109363576 seconds)
    (127/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.082305327 seconds)
    (128/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.081253179 seconds)
    (129/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.114885942 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.098047192 seconds)
    (131/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.208456423 seconds)
    (132/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.110097082 seconds)
    (133/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.091067943 seconds)
    (134/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.104687499 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.116611948 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.138457281 seconds)
    (137/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.079807314 seconds)
    (138/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.105023526 seconds)
    (139/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.081746845 seconds)
    (140/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.080576306 seconds)
    (141/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.182609615 seconds)
    (142/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.113315257 seconds)
    (143/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.095994476 seconds)
    (144/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.120520816 seconds)
    (145/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.082550089 seconds)
    (146/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.119235081 seconds)
    (147/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.099135626 seconds)
    (148/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117589819 seconds)
    (149/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.080917118 seconds)
    (150/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.08071985 seconds)
    (151/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.104228745 seconds)
    (152/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.089928689 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.125094429 seconds)
    (154/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.121136658 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.099064679 seconds)
    (156/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.208577287 seconds)
    (157/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.079690189 seconds)
    (158/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.109759803 seconds)
    (159/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.091905954 seconds)
    (160/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.103995559 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.091055804 seconds)
    (162/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.08140331 seconds)
    (163/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.104346622 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094509801 seconds)
    (165/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.105608029 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.115272567 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.122928155 seconds)
    (168/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.081159483 seconds)
    (169/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.103852219 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.0988087 seconds)
    (171/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.105885668 seconds)
    (172/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.08176103 seconds)
    (173/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.103903289 seconds)
    (174/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.082892767 seconds)
    (175/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.081255805 seconds)
    (176/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.106094955 seconds)
    (177/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.08189963 seconds)
    (178/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.103088588 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.099964986 seconds)
    (180/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.114461953 seconds)
    (181/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.087896518 seconds)
    (182/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.080744911 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.12292373 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.139523866 seconds)
    (185/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.098894033 seconds)
    (186/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.104887272 seconds)
    (187/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.09223558 seconds)
    (188/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.106178856 seconds)
    (189/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.080376451 seconds)
    (190/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.119176745 seconds)
    (191/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.10025065 seconds)
    (192/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.115488021 seconds)
  done (took 27.877517823 seconds)
done (took 28.741122827 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.231967936 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.103834458 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.125764447 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.123310498 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.184188317 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104188904 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.133795745 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.101485705 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.129843695 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.121013079 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.090887099 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.13039209 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.10015733 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.184099743 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.128128547 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.116054416 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.093396799 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.12869169 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.109515978 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.134763062 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.184726493 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091505679 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.130007948 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.11555279 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.184428504 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093059418 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.122639733 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.100192049 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.132142899 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096397774 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.12387588 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.115082141 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110289186 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.132748239 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090481125 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.121793874 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089951919 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.112691613 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.097745951 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.12224036 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.106637892 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.122123818 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.124984178 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.093445381 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.12243701 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.097406937 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114539244 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.103644381 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.114486958 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.123523606 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094092024 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.132614207 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.096121995 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.113601862 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.089399001 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.117522821 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.10531978 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114752703 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.130548271 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091201924 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.116708728 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090997883 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.122514769 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090176267 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.119970835 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.091878338 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.12209473 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.099289737 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.120255054 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115751382 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091676881 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.118874569 seconds)
done (took 9.348865878 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.099115546 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.179852117 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.186338444 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.191593536 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.149735542 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.136706343 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.136740436 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.121752155 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.134284175 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141424937 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.129158701 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.145032664 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.196264629 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.131054011 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.135479955 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.100007024 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.129811351 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102147822 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.192489395 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.14291277 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.153440625 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.129376564 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128752517 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137913619 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.123630371 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.157551847 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.101315342 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.123203207 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.099676774 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.132355834 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.142521126 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.100133343 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.124445087 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.137122811 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.110231239 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.128445003 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.134737479 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.099987042 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.122109507 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.099229019 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.136902137 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132183472 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.098914731 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.136430513 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.122342608 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.10967987 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.130065186 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.105590603 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.126517107 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.122712883 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.102392145 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.152695612 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.128928227 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.110013638 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.129313298 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.104204235 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.130318668 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.127456619 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.10113933 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.127133564 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.09791944 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.12512811 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126227962 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.125334158 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.124461196 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.128483479 seconds)
  done (took 9.424914776 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.119931469 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.160012063 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.132499502 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108879406 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.129650433 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.112395416 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.087917877 seconds)
  done (took 1.755867905 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090299607 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.189236067 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.18717157 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.187114189 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.184199224 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.222245531 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.113702065 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.115107685 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.125125307 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.127728225 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.187222725 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.217954126 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.122895186 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.134060487 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.191477364 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089852955 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.192297794 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.116365912 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.126297893 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.189418583 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.107007435 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.146525367 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.131648865 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.092429543 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.180980961 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116803484 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.244818798 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.132915815 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096677374 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.12657827 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.102619301 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.228313866 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.184482279 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.107346698 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.120706486 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.187889893 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.183772469 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.127998103 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.199484266 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09556257 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.182912516 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.127301612 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.128472034 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.105411588 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.127386465 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.169014427 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.107998998 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.130059201 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.124608204 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.189867028 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.106564642 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.18461602 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.124288157 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.102500983 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.130707248 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12834997 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.111446065 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.126971216 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.192003399 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.105987064 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.183359468 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.21029184 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.184959107 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.184718509 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.114295152 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.185601606 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.182631327 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.126133104 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100604126 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.129067398 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.18577107 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.126873221 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.105469203 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.171354888 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.13187657 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.186067287 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.185433228 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.123533412 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.106999837 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.120427707 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.100421711 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.350076139 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.172777842 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.101715223 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.12510215 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.137193773 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108007819 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.129526543 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.097233389 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.143907838 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.127352909 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.106566472 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.132731162 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.127078199 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.11051463 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.187920578 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.131197428 seconds)
  done (took 15.079579 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.097034057 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116233189 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.099514391 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.118126434 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.094076105 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.117466842 seconds)
  done (took 1.569176635 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.123960889 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.131035896 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.137554409 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.105872675 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.187766114 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.19091862 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.191831164 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.128144274 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.145999225 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.115319 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.191668474 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.22050756 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.191536278 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.108615942 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.195706157 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.132572609 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.19376536 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126456826 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.114804522 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126093887 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.111609538 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.13342084 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125065127 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.183467717 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.107167487 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.132990305 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128301611 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.115040207 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.137855534 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125082439 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.108623303 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.130509182 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.098222053 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.127237384 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.192868397 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.123847101 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100037994 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.136742645 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.132096964 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.108048537 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.195699876 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126494179 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.137960844 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.11069764 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.126799118 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.097044083 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.135253759 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.129173142 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.195091559 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.134290646 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.111446503 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.131522153 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.106449944 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.135682541 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122480251 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101894712 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.134945368 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.192567875 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.134134294 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.098448616 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.132052423 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.131909371 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.102545036 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.135122444 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.129797346 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.111137392 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.122972649 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123744852 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126867139 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.129423839 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.1118027 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.130267988 seconds)
  done (took 10.687172675 seconds)
done (took 39.415082946 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.136972645 seconds)
  done (took 2.059373344 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.939151778 seconds)
  done (took 1.862041482 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.807955279 seconds)
  done (took 17.771963768 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.571349109 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.660681286 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.958007649 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.166377317 seconds)
  done (took 3.281877594 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.981397719 seconds)
  done (took 1.925359307 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.347386948 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.28236616 seconds)
  done (took 1.560879869 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.719352271 seconds)
  done (took 1.654354107 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.586602955 seconds)
  done (took 2.51688963 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.4001642 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.195584842 seconds)
  done (took 1.542694799 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.687381412 seconds)
  done (took 1.628811229 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.844977013 seconds)
  done (took 18.786033032 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.224558966 seconds)
  done (took 1.178455584 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.316817965 seconds)
  done (took 1.260028094 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.511704365 seconds)
  done (took 4.456612013 seconds)
done (took 62.43886749 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.105750063 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.131467636 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108112205 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.130113157 seconds)
  done (took 1.412343805 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.109709025 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.127885661 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.108269587 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.126884971 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.133923841 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.105494022 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.12870995 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.107405211 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.128833269 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.104051736 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.128314803 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.127594562 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.107857071 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.126386045 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.101624204 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.133090198 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.106804389 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.129473223 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.129754656 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.104811483 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.128894424 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.105844421 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.134071008 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.13011668 seconds)
  done (took 3.822821701 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.103051976 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120075392 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099539356 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119008905 seconds)
  done (took 1.387269141 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.112477447 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141939361 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.114186611 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.13557128 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141924825 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.115129327 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.127324953 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.099029042 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.127691786 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.136540755 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.12264423 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.14332881 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.140394664 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.105361327 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.13911854 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.097845595 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.13018223 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.140454519 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.111425125 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.13870614 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.104180353 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.137426892 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.133025893 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.11405879 seconds)
  done (took 3.95694307 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.208834252 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.11879533 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.154151618 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.177353686 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.160204488 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.102669507 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.155422831 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.134487128 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.111367618 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.133412249 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.131330208 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.155215974 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.136627091 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.129679975 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.10505614 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.135223019 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.14153581 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.11146131 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.176343167 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.135364404 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.109984182 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.1449343 seconds)
  done (took 4.02515425 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.111402613 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.122535986 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093232133 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.121664452 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.110987302 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.126905849 seconds)
  done (took 1.643130306 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.099767457 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114316955 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095989934 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115889902 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.096022559 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113136086 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090718319 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115103044 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092580293 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.088858425 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.118073879 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.088673815 seconds)
  done (took 2.186656935 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.31857303 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.095717971 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122830725 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.12062142 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.104795234 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.119981882 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.112811271 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.120891928 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.240231271 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.117091817 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.111883777 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.229022608 seconds)
  done (took 2.772450329 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230766208 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104244159 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.360894665 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.373155637 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174857717 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180478681 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.291008429 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181029048 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.232009427 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125091217 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238103122 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14482387 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166985001 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201410581 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151803425 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.223605032 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19374939 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222834974 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164584525 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250822785 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179490003 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184137013 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19818373 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164038097 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12241174 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167692547 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.130534266 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112832644 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215623177 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185002224 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193046997 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161103008 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151588367 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223416874 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208909923 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197186385 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.345214648 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118315791 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.209383834 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.198325989 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.299564602 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152112509 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218065038 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170627848 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139292558 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20116261 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171414166 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.198328808 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.143043566 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125337422 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230844593 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192225867 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.204432122 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14660971 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316903941 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161405845 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.160507424 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193438905 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208171453 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207963936 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183221761 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.133501916 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201905019 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197719614 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221320765 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.133147362 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.186114341 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13802445 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190405699 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212421625 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230315771 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17712382 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.205924533 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140252343 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175752533 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184444703 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16744534 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194482228 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175457126 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.102968293 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163428586 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147207411 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108839274 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.198223459 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128336752 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224336756 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144982893 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.396297565 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223800127 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171831492 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176915275 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179596674 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180607909 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15938465 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.103838782 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160239405 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.175920688 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171107315 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148583063 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170169534 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15395353 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.11845079 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16614837 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.130096307 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17585913 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.13601012 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182777797 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176712505 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.143234216 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182258328 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16297455 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.168410676 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18932056 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203836557 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140126177 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11706191 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203933924 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173261241 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.147216853 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191374577 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206945476 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.178925558 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150011385 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183179123 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209770054 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154052695 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206688004 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148898014 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141898655 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.143955477 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176774525 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173084554 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16543489 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135042877 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.167902874 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214659596 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.135974005 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121560565 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187622552 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146540392 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136090057 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12558879 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149730662 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.152078703 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.158352004 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.122600299 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16925606 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17766394 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170282176 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174587874 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146169082 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192583374 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141373237 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.147325209 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159778747 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.129240056 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.200096608 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201100875 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139687499 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216595403 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.184198297 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239077238 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17555998 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117012858 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192955271 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137825706 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.1028952 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179618041 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174230085 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179269753 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.227328554 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209664262 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.188443917 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.167578785 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16235787 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184635988 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.190529537 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172025161 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.155967038 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172133065 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186784501 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.103630752 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.136010446 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.13714294 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126907132 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143235426 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141497809 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201795505 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179871623 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202538078 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17190988 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152857432 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200255367 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.141005827 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180514345 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.189324289 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148873336 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.20443358 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198804978 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185080693 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153095189 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179701246 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.104228366 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135873385 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.146365527 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181545301 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11522349 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144890973 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155375335 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200470443 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191259056 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162953449 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220738213 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212006471 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212857623 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.104383922 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.177045854 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185390279 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172688909 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.197312558 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127097578 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.174489234 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193841785 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151072954 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236209599 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145977013 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181142653 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245916537 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.171087565 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11388252 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161925469 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180471934 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153442343 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178828343 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156355893 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114529146 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168057542 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.148794755 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110881925 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228350034 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153268916 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196290645 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.16879604 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192466732 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108091512 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156945547 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175514714 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1573091 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.100807581 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186665804 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234390368 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157624231 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170489426 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191015826 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113171241 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.338475029 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232335767 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201378315 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146543592 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129118049 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178621615 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171461989 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178759457 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194071607 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156477222 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193798103 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175511785 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.153685486 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113657689 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158704794 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163488652 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.169954141 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146425386 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.173551357 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.128281752 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231037232 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126201885 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177349997 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176917979 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.159674093 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.167262305 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127302005 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240848703 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17151431 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194426473 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.143453082 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.18252647 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245896925 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10549339 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141745784 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.145112286 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19598163 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114446033 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177153429 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.224109383 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216088778 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179616181 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181954028 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147023204 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.108997242 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171372751 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162473781 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216023969 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147720334 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.149761979 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208020532 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.165925931 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139936685 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150633203 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.322604482 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131345238 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215642141 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.114504737 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.288971246 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138008265 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141759913 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148155783 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186754544 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.14846982 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.195708449 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176867553 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156153591 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172462283 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122294876 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.233858191 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227993949 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184908356 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19363379 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.155915405 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172863129 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178793847 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193683435 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15383307 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.1601421 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149742921 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198888716 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.230078677 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.119194523 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17339363 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174109663 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170433163 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192061248 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143824437 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21761704 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140780005 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177712385 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153045684 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108086656 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17260494 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.196646618 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142879963 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191963969 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176701315 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145326789 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111108289 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159949653 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172787801 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151047436 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.139122087 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200366603 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.110036106 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180595956 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198673949 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139296801 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170484731 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130419566 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144045115 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155817598 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157416363 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114455805 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.181629082 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200708899 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.145506711 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193353421 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181845568 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180394568 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174006158 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156660822 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.650767904 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.140393492 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199743662 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159804149 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204563164 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161202807 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178795729 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173821701 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162152169 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182045802 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135865175 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.235618117 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177659006 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.175907331 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142006135 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156757556 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125314497 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145108049 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164369305 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173801908 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151944136 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.122900653 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.17633183 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155040106 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.157992426 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123211757 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227444504 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133586887 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229657788 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196757025 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12006623 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178596307 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192648468 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142985781 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.17908424 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18874387 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152996977 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159335808 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.11542525 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.149433764 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196706417 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.13210532 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148690557 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17839692 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173729319 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174744946 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148009022 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17799602 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156318323 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17523757 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11168269 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.168708703 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173178649 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14246104 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.113083259 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171790378 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176135903 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.170350907 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111221956 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.183229889 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199009555 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.1323673 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118127828 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.321885032 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175766831 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209710596 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.168860447 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118676262 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155887528 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173315667 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.172857532 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175595621 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.113551402 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140542079 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.11595184 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.197634736 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.169510452 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173079687 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197957893 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175234417 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218838478 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.155678905 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279587532 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148086112 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143407365 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.144803254 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.142219137 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127433873 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146602924 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153195906 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207187226 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195234811 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.167770944 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.157482179 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111763976 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.133841148 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141701117 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148858084 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169191171 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174227968 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159768481 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.103080173 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158291192 seconds)
  done (took 84.029421211 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.154520615 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.143998285 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.155039897 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.20478854 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176629532 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270049598 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.214652003 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237930108 seconds)
  done (took 2.601305838 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.107097036 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.142910859 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.149527562 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.131438952 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.130672245 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.401959395 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.144626666 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.104214893 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.189148917 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.169551518 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.102675205 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.643341378 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.099896779 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.131422848 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.124942592 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.129391146 seconds)
  done (took 3.935862612 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.306376238 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.533416297 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.850256876 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.243961305 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.253552423 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.169270633 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.73885848 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.175819175 seconds)
  done (took 12.31053208 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.135984524 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.150668452 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.327708799 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.226666017 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.168403648 seconds)
  done (took 2.058618822 seconds)
done (took 127.081565093 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.107556618 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.132919914 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.108904771 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.137377598 seconds)
  done (took 1.51878327 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.157692148 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.118434353 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094413589 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.115652372 seconds)
  done (took 1.528704009 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.534436322 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.090312669 seconds)
  done (took 1.69316736 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.135904667 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.153885725 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.155008906 seconds)
  done (took 1.496734216 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.114158753 seconds)
  done (took 1.1600311 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.113652318 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128157892 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.1995632 seconds)
  done (took 1.491788547 seconds)
done (took 9.935576192 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.108672541 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.437638033 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.420573355 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117672626 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.730854996 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.383755927 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.083520833 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165786477 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.216408673 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123361918 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.120485874 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.70229251 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.037624043 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.349163654 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.017332988 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.441287608 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.705670174 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097293492 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.132964757 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097007754 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.059683745 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121872694 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097524188 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122259575 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677712196 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.443870521 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095878895 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.485490508 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121910919 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103735555 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.409892576 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096994897 seconds)
  done (took 17.364925529 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103796386 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.196899668 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134903057 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09890751 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.130702046 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097664765 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.137734803 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.113898566 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.234559792 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096501962 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.147644404 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095949313 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129694277 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097225459 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.149812295 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095673151 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124386559 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095434297 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.134860407 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125808282 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11988449 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122766353 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099426014 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123917908 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096084524 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.156448113 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122749804 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.113213347 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122994402 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104984913 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12756057 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097607196 seconds)
  done (took 5.007801946 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148555896 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.207258017 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137414269 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.161156199 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.158098805 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124787585 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.219356033 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.168954011 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20750175 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122920295 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.122871216 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121991303 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.143938136 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124459426 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.150584325 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097126301 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124366244 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096473071 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.134531252 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098585023 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.148235953 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122093965 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099688558 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.124378607 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097041636 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.158537315 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096844802 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.141180792 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123898131 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104771601 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126656874 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096983293 seconds)
  done (took 5.372843792 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.108584984 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.135842778 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.123381606 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.150808109 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.103476415 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.135508054 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.108359365 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.132192379 seconds)
  done (took 2.059850169 seconds)
done (took 30.854958189 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.12306274 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.143224668 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.116655838 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.137251377 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.187970917 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.099918445 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.142113798 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.099700576 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.138029849 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.119351938 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.124224763 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.102786375 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.145484077 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.106009024 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.187780064 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.138742882 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.195240937 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.189000521 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.101877568 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.138988385 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.103150273 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.195670372 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.137926808 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.101523597 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.198347562 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.129271834 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.183320689 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.107317939 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.135217092 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.104339505 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.189432103 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.136481656 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.102334924 seconds)
  done (took 5.610992376 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.170418599 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.134563423 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.130480664 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.102854404 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.132158351 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.102201877 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.202698027 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.101943559 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.131359317 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.102320282 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.130581405 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.198108418 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.108380845 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.127208065 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.105882714 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.131336707 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.201152849 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.105098463 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.126265595 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.09188703 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.126307248 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.100861782 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.208911231 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.126710464 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.102866674 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.130651309 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.106110109 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.136668925 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.104630735 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.13220714 seconds)
  done (took 4.981636614 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.110309307 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.14845079 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.128011333 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.20295762 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.163581291 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.110746083 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.15086755 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.148294479 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.130718604 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.127680546 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.115589649 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.162092139 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.14729799 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.111458632 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.130823049 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.116471056 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.149511793 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.098775422 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.135647875 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.144559108 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.116880306 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.144292392 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.121170238 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.135955334 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.095639138 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13476863 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.136117351 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.115382074 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.139022598 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.116986406 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.132472507 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.102972652 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.12983007 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.111129102 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.132987953 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.135964548 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.12379207 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.140414122 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.113809134 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.156272533 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.132469724 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.103975904 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.155489644 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.159529639 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.128587812 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.137909864 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.11284664 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.143167845 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.098320598 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.146889089 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.117124169 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.127127124 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.120601738 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.128261074 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.099433553 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13886337 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.128249629 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.10641675 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.14805024 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.102745698 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.150703345 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.105492473 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140694359 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.101824543 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.138564584 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.099617724 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.126065015 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.102320022 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.15659176 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.136947796 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.138585777 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.127450642 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.10894846 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.140281998 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.108956235 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.140192929 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.097748093 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137986026 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.137321977 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.105917922 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.143006605 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.102893975 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.1318265 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.116334419 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.14635076 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.138123126 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.108977942 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.138732853 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.102524575 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.129812974 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.116943784 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.129313755 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.103244308 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.147551473 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.098285326 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.134427161 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.138247099 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.1090886 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.125943705 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.126388299 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.133515384 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.098236392 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.15430233 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.105649433 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.133261357 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.136034042 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.115968813 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.126388407 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.108679814 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.138028083 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.100175362 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.134389854 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.103517333 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.126592469 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.114772773 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.145062269 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.133706166 seconds)
  done (took 15.973376505 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.294293961 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.316232816 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.215691285 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.377885449 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.146899697 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.21062465 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.281008162 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.317213084 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.13542792 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.175334167 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.196155596 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.253417515 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.129761716 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.130632104 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.316707902 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.383120565 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.162701046 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.177072254 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.175236066 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.145172798 seconds)
  done (took 5.616268655 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.122849646 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.164845762 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.152015436 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.133809584 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.136002942 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.141315723 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.099584438 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.15446217 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.106834964 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.136334785 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.097957191 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.143400916 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.135868768 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.113305219 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.147500647 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.148282593 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.134148384 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.134133762 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.124958587 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.134610979 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.139282121 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.131589854 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.140186576 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.149593847 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.114670475 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.140477233 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.097600361 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.135681613 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.103185016 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.134309946 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.105411492 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.149798454 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.134369154 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.105982965 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.137515059 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.111741266 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.130669757 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.102098242 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.130218003 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.104103906 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.144154216 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.109339999 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.132597833 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096450127 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.144383105 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.101840973 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.141410766 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.108975621 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.1415389 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.114019274 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.138784589 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.140221118 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.106155766 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.148025602 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.102125513 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.145790162 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.111743819 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.140553004 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.134852827 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.097967467 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.126269591 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.104892746 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.132644024 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.111460346 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.137967818 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.152444247 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.114183878 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.127498635 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.105771379 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.132342965 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.103496317 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.143811448 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.15456121 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.103753646 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.131906963 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.111594438 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.132686228 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.092397776 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.13824997 seconds)
  done (took 11.104273364 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127964403 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.132791794 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.120990912 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.166318738 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.108155787 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.135724534 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.132957835 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.121424656 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.140687183 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.112340562 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.141048584 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.116532948 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.153470656 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.144900464 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.105025016 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.148115912 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.10886622 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.170175265 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.149003585 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.161547162 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.112160637 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.135276439 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.11195977 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.141269116 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.134177349 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.140333043 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.161502295 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.10987444 seconds)
  done (took 4.834096634 seconds)
done (took 49.18258899 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.202396611 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.377119834 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.155313684 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.152050368 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.160649729 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.1701383 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.175757033 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.155858186 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.054278777 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.147136971 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.155909672 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.152671778 seconds)
done (took 27.14670276 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.198081755 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.656407568 seconds)
    (2/2) benchmarking "String"...
    done (took 1.416333908 seconds)
  done (took 4.150786486 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.161355852 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.150923743 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.393325049 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.15038233 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.165819687 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.168674647 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.162321707 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.160100073 seconds)
  done (took 15.428835483 seconds)
done (took 25.019717493 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.194203723 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.332238015 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.397617334 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.169104313 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.152819803 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.165345443 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.152404687 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.170932138 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.166696016 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.1528422 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.542820839 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.408012931 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.172029329 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.526839619 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.153068996 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.177606327 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.152045345 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.394342626 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.158073057 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.205181445 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.143536131 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.154795328 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.185836214 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.162424366 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.157972616 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.161947452 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.222488132 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.157794493 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.332647654 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.161130674 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.194100928 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.155574751 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.154896802 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.159911779 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.161093415 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.155305847 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.331276693 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.163052966 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.148424704 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.156296973 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.33637394 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.169276514 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.154150015 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.157377461 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.155183837 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.194277148 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.151665854 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.26499624 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.180379068 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.183394219 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.235195087 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.525021786 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.16809318 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.163749824 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.178221072 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.368490556 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.162519102 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.20517873 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.178770352 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.163035234 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.171910708 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.158406076 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.158607269 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.155407116 seconds)
  done (took 140.584365758 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.154342638 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.160809932 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.160495119 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.175481756 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.160671006 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.160408827 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.155262632 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.154305583 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.161870098 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.163447941 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.162085824 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.161733569 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.163646706 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.124059225 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.163194739 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.177466088 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.162274982 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.180490373 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.165611552 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.158027326 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.164981488 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.162475025 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.174353324 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.157015902 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.202016848 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.256463683 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.201749373 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.188964143 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.165947379 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.156306923 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.194152519 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.18238633 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.747869274 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.027481806 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.169995627 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.177304277 seconds)
  done (took 78.638202365 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.157435455 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.157793178 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.157965269 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.189056209 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.15813623 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.157769393 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.702010727 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.710241498 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.87540916 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.611987879 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.429814331 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.412397886 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.163269706 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.249979011 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.171691428 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.15984084 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.175148394 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.202490702 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.159208226 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.160931948 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.712207654 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.175722451 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.371730919 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.352282674 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.176309142 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.190889984 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.563111641 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.159396368 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.190517306 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.576207402 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.487414149 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.206725586 seconds)
    (33/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.159735342 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.160594036 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.159593749 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.479740415 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.270751217 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.1617968 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.191562074 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.158736976 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.437990963 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.160772025 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.160568188 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.163331984 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.806594746 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.165017975 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.705003941 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.160401786 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.070980926 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.161240144 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.159736314 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.152603533 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.785156119 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.181645566 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.160881457 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.1598038 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.163522453 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.161916378 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.162466417 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.192612301 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.056827468 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.257566698 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.178487946 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.163959054 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.1917857 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.162006127 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.251731223 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.180172548 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.021705721 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.216255341 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.28720107 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.715998507 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.165115992 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.257695406 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.279000082 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.162414542 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.160832693 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.161594243 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.161813557 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.271927054 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.162875192 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.564670936 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.33465543 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.180427746 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.444349109 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.262940695 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.162202084 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.512689318 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.167274605 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.161764749 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.86109449 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.258562005 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.163260286 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.163393591 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.163248975 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.570088165 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.71688571 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.379822849 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.166765055 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.365276445 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.163123918 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.579378585 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.699521507 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.830369776 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.168283673 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.275062125 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.336680978 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.180922234 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.164869385 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.441197362 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.168527159 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.222370104 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.164182628 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.565002065 seconds)
  done (took 362.456289467 seconds)
done (took 582.761367444 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.935410262 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.882517852 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.016393887 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.918044744 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.880008234 seconds)
  done (took 10.721779582 seconds)
done (took 11.812567273 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.354030789 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.35308018 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.224512354 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.35509995 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.198148335 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.36959689 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.337615179 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.186516455 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.276527184 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.243374265 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.274073115 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.217123023 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.198282096 seconds)
  done (took 17.678168417 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.431845293 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.170176795 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.249440213 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.425721128 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.211405863 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.428063388 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.495051188 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.170727592 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.330019783 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.18297954 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.183142398 seconds)
  done (took 17.369422137 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.464056206 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.171191108 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.256625638 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.448114421 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.213967417 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.432455801 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.475932926 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.17165072 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.310825031 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.185180985 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.183685654 seconds)
  done (took 17.406469947 seconds)
done (took 53.545851696 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.210049293 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.335041388 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.198269616 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.184220474 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.180836424 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.183296313 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.18531472 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.182234086 seconds)
  done (took 10.75123726 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.178814917 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.177562164 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.177771232 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.178196126 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.177907053 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.177855988 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.178146902 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.177721254 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.178296202 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.179524189 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.177890341 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.177937039 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.178427988 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.178726302 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.179581776 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.180222047 seconds)
  done (took 19.948096834 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.180674573 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.179346938 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.178429253 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.178446439 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.179902858 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.178624287 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.181158966 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.179435929 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.179994376 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.178734444 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.180965301 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.179647351 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.179662379 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.178537447 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.179476156 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.180682905 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.180364593 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.180067315 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.182866976 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.180045067 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.180640472 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.180564574 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.181205469 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.179639003 seconds)
  done (took 29.41334601 seconds)
done (took 61.205196537 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.168756061 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.187626157 seconds)
  done (took 5.449705493 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.240569364 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.240651285 seconds)
  done (took 3.576628401 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.18112758 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.180887651 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.1815955 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.180409154 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.181720129 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.181101451 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.183390453 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.180271313 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.181020885 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.180488899 seconds)
  done (took 12.906566478 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.181272174 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.181217834 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.180833565 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.182768288 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.181079511 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.180361765 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.180698653 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.182353578 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.180427057 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.181558014 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.180965145 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.181410695 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.181937868 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.181038724 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.181056217 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.181999132 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.181608109 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.182626121 seconds)
  done (took 22.360235169 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.194992921 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.202928762 seconds)
  done (took 3.492509875 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.323087054 seconds)
    (2/7) benchmarking "second"...
    done (took 1.22441413 seconds)
    (3/7) benchmarking "month"...
    done (took 1.298314614 seconds)
    (4/7) benchmarking "year"...
    done (took 1.289313668 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.224275921 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.202689291 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.224059502 seconds)
  done (took 9.882194528 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.182862454 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.386762692 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.499339288 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.709953386 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.185315875 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.185275846 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.17784656 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.187237881 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.188489029 seconds)
  done (took 13.800275524 seconds)
done (took 72.564208195 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.183871063 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.207018586 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.181545003 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.194572007 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.479858495 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.190412771 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.188955183 seconds)
done (took 15.72567515 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.164479035 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.172665338 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.170765776 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.188610089 seconds)
  done (took 9.793733706 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.189259735 seconds)
    (2/2) benchmarking "read"...
    done (took 1.463598692 seconds)
  done (took 4.751252473 seconds)
done (took 15.643721351 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.184330587 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.185310003 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.184313133 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.183210532 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.184379916 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.183400469 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.184696567 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.182253087 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.184816476 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.185083501 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.186216986 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.184636099 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.184501666 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.18304909 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.184034441 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.184846329 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.18369438 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.183967103 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.185816767 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.184106298 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.183561834 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.185149759 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.184857907 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.185433921 seconds)
  done (took 29.524178262 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.186039372 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.184832193 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.186313689 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.187605835 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.185133662 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.185461335 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.186009794 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.185315857 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.186009988 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.184311845 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.186481009 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.185244533 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.187131726 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.186331595 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.18670665 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.187056374 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.185744472 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.187445092 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.185437861 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.186426562 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.188355728 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.18540782 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.185841514 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.187530098 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.186725759 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.185757823 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.186904625 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.186506715 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.18783022 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.187422276 seconds)
  done (took 36.689431737 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.191078268 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.192055797 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.187576262 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.187169869 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.187701481 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.187492783 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.186593283 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.186737534 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.186667394 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.188057503 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.18808697 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.187182504 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.187886283 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.187953787 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.187959831 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.190026993 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.188414416 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.187601519 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.188103793 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.18780243 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.187319945 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.189572385 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.189409679 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.188242576 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.189200661 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.188873122 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.189550666 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.189508354 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.189002411 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.187804743 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.187621168 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.188778846 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.188732405 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.190683112 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.188094828 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.190320272 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.194065877 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.194365482 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.188259156 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.190302539 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.188566683 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.190031931 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.190366423 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.189494637 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.189590989 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.189223775 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.190442642 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.190353612 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.190456088 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.190704347 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.191228646 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.189660234 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.189968352 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.189721043 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.190780918 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.191394616 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.190270706 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.190702351 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.190599752 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.189308264 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.189488968 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.190356862 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.191129979 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.190797747 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.191546088 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.191396635 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.191791971 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.191287318 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.191727332 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.192033993 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.191283316 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.191815572 seconds)
  done (took 86.754369934 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.192914102 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.192839541 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.191862733 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.192926152 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.19112129 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.193167311 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.1918593 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.19225226 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.192349758 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.192489552 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.193135956 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.192427762 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.192561112 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.193186244 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.194070826 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.192413991 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.192597752 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.192673405 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.192943288 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.192469944 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.192956977 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.193462249 seconds)
  done (took 27.343293446 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.193597168 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.193534728 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.192647332 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.195305285 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.194854081 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.194186523 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.193624864 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.193126123 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.194065713 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.192653327 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.19258569 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.191924774 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.195171078 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.193812766 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.193491689 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.195395888 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.193096677 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.196122628 seconds)
  done (took 22.595443642 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.194350437 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.194082975 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.194555578 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.194304369 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.19401556 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.195021327 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.194293541 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.195776215 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.195450699 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.194075599 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.195036718 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.195077123 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.196377688 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.19314224 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.194293903 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.195118828 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.19503673 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195324587 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.195315323 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.195107906 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.193591731 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.196039411 seconds)
  done (took 27.392544735 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.195775212 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.19593056 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.195062624 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.195800595 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.19579876 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.196315887 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.195079494 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.195331219 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.197365797 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.196594968 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.194779102 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.196942412 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.198194919 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.196558368 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.196461828 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.195271947 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.19668184 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.195778673 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.197099771 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.196365064 seconds)
  done (took 25.031121388 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.199411092 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.199667746 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.200431285 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.201034979 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.198984267 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.199890022 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.199795771 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.200949362 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.200164353 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.201049588 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.199838882 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.200129929 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.200174709 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.200235344 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.199401074 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.199022001 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.200335848 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.201467102 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.199703221 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.200372028 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.201413127 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.200698631 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.200337553 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.199985461 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.200886128 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.200251151 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.200542316 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.20061558 seconds)
  done (took 34.717113273 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.19929731 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.19852648 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.197015236 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.199825345 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.199193538 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.198920889 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.198896411 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.198889941 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.199930391 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.198839662 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.199488856 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.198401107 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.198833949 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.19878361 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.200853458 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.200592718 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.199489867 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.201182485 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.199799666 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199860172 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.199583134 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200226521 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.199410609 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.200024054 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200236089 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.199385296 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.202241704 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.198785572 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.200619922 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.200777843 seconds)
  done (took 37.098795463 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.250871009 seconds)
    (2/2) benchmarking "in"...
    done (took 1.24226246 seconds)
  done (took 3.604055262 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.201412962 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.20162834 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.200252559 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.201134237 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.201173119 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.201354352 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.199632738 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.200883622 seconds)
  done (took 10.720709811 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.199047319 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.203116645 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.202468594 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.201836912 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.202783755 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.198564921 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.206400937 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.209276885 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.198864929 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.199820286 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.20329858 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.20408706 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.201985526 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.20168082 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.199575247 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.202855735 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.205392829 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.204210812 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.206343998 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.205568474 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.205364678 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.203569847 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.205766393 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.20722727 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.201772412 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.209636218 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.209275801 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.207506389 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.199737533 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.205210387 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.20246159 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.205881188 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.205147032 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.205612767 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.203900573 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.203351386 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.210223237 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.226451928 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.208218579 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.210578107 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.204541584 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.203657372 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.202168562 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.204950525 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.203382401 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.208906721 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.205300036 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.204078138 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.20055167 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.205302185 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.209950117 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.200416142 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.206630561 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.205167082 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.206776113 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.210826652 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.231197138 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.203638521 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.209302076 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.210742768 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.22053627 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.215358453 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.205526246 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.211658132 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.211527078 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.22033464 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.212298211 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.211938223 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.206366607 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.206208068 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.209388051 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.221146774 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.21762425 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.209529431 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.209716228 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.208378456 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.202165516 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.208543797 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.211316247 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.212139963 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.210160241 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.209159515 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.213352356 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.221079664 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.203635284 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.21114864 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.210511715 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.209109217 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.205645856 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.214428731 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.233529987 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.206900333 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.202566533 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.205566207 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.206298082 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.210672187 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.205714457 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.20591986 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.208767697 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.209499815 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.209249977 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.208216208 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.211413656 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.213136886 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.209257358 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.213651276 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.214105836 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.205553019 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.214083858 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.212881548 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.211494105 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.206803565 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.208206849 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.210294062 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.208328086 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.212288002 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.211053078 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.207962426 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.213833719 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.210621454 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.213781157 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.22566619 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.213630504 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.209450983 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.210429817 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.218833979 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.210821883 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.210416428 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.213619868 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.210316749 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.208750079 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.20826438 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.213988664 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.206520519 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.213131225 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.20896198 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.211708829 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.209660126 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.212010662 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.20785225 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.210173427 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.208995646 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.209367589 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.212289257 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.213462489 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.209277451 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.216314762 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.212804389 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.210558228 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.210948478 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.212676655 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.212225046 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.208427235 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.214178684 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.209208621 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.213559785 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.208534988 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.214229891 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.212340774 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.211547277 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.212784289 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.208520921 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.212018552 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.214487154 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.213021141 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.212611969 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.213893428 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.212555197 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.212041509 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.208418399 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.213471995 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.208364416 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.212118429 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.218852348 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.213636907 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.215123214 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.21259293 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.216903108 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.215977016 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.217457204 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.212632192 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.214319628 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.217202169 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.217392239 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.220942517 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.21652341 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.21508653 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.210811851 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.211240049 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.216070192 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.213750576 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.219601016 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.223044846 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.224248557 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.212124679 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.217819354 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.211424906 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.21855725 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.214678615 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.220321235 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.216208142 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.215388003 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.211431038 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.218236123 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.213070735 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.218706068 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.212384799 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.217109771 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.214750711 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.215410799 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.215456773 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.212049845 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.213153016 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.216369595 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.216752066 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.217060592 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.210763168 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.215591156 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.210753182 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.213086083 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.217727994 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.216961153 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.218688308 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.220583875 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.214656781 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.218078887 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.216121961 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.211704395 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.217587882 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.216193943 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.215460382 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.22187024 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.218945432 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.215014922 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.222400784 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.238567616 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.213127809 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.217322269 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.219532122 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.215713203 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.215336969 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.222687719 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.217675277 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.218795263 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.21904698 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.214328736 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.219405832 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.221609833 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.222962245 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.21280964 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.218537803 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.21625176 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.218806893 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.216293027 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.217333375 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.216551204 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.218862221 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.221278238 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.217883966 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.214853149 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.22104244 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.220133093 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.219417599 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.217678091 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.225403817 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.221812293 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.219051572 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.217969886 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.217995227 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.222844486 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.21559197 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.220831534 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.217064603 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.229224632 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.234935823 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.22247944 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.221781398 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.2210263 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.223104361 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.221568498 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.219531059 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.216447259 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.21754647 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.216962398 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.21809011 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.221902172 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.216161069 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.221456697 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.217649397 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.220545194 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.222598963 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.221142242 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.216389938 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.222201228 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.221830431 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.220813734 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.215400339 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.222154411 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.21909289 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.220204795 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.218909917 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.217032844 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.227186093 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.224514853 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.219361522 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.218954585 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.217901292 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.21723082 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.219833343 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.224988521 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.222164483 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.22955919 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.219660266 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.22417223 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.220628794 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.226219691 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.22624966 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.221153363 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.228376386 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.222603638 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.2173099 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.219250076 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.223509348 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.227320308 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.229818195 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.219884685 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.226567253 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.224356305 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.223660975 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.223125032 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.224173646 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.223838299 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.223666253 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.228604204 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.246599362 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.222284146 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.222784191 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.224402436 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.224464035 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.222946341 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.217583462 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.223248297 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.227600658 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.220619137 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.221714614 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.221729656 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.224981511 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.224962117 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.224425539 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.224126837 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.223051367 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.228292755 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.228683416 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.228324563 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.224526524 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.228838868 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23002813 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.228869677 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.231900107 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.222128691 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.227939194 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.224425751 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.221721204 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.221284441 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.223187697 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.228264309 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.222554376 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.22802317 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.224362294 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.223486411 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.224177198 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.2283838 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.221294967 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.230134511 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.247842338 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.223008925 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227653131 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.225642497 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.222815765 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.228437938 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.227534542 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.222175011 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.223802894 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.228717139 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.231092975 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.222641572 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.228594393 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.222674647 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.229255881 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.226323219 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.225173428 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.227524174 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.227676689 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.223881078 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.227792341 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.226787372 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.229887851 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.223573602 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.22566474 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.224645476 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.233006137 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.232987527 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.22406285 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.229383113 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.22880797 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.224083031 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.225350923 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.230747914 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.224998272 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.228384734 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.224466511 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.229058621 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.226748332 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.227948292 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.226565126 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.228724239 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.225502489 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.226150355 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.229939315 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.228632696 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.230402968 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.225992883 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.231583291 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.225690369 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.225245566 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.229476067 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.224842084 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.231144756 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.226857531 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.230349073 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.226448393 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.230586089 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.228845812 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.228800201 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.225346515 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.226341524 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.234248863 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.232619252 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.232295799 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.231724606 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.232650602 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.225646085 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.230325066 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.231305779 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.225512832 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.227880911 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.231703264 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.226622155 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.226932438 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.228825314 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.232112062 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.234004066 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.231565288 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.228395244 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.235461055 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.254900833 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.233787136 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.227778075 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.229238383 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.226748344 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.231595239 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.230606738 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.226737169 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.236074652 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.233800168 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.233480847 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.229665522 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.229466675 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.229502981 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.235013236 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.231451924 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.228754841 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.232737377 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.229102376 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.233575881 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.231877489 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.230401414 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.226953911 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.227401816 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.230912262 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.233434957 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.232125152 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.230580741 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.231318802 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.230825007 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.234648117 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.233719971 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.230584652 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.23134884 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.228560376 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.232842652 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.228249777 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.232380869 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.231273439 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.230247808 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.234311663 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.232624311 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.232040921 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.235239692 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.23764575 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.231393842 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.227745766 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.231701214 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.234224396 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.237438329 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.235305132 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.230558934 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.232736272 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.23498854 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.234662906 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.235286279 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.231784037 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.24400704 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.261057874 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.231357363 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.231457364 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.233559906 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.237022546 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.234598093 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.233685161 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.233439641 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.235543115 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.241537563 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.235435528 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.2377541 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257853742 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.232257724 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.236663874 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.234608437 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.236154708 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.235874807 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.239995961 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.236310419 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.235717609 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.245004213 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239172262 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.240876425 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.254670143 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.238216926 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.233336161 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.237049391 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.231797513 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.237565456 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.233334138 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.238230074 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.235609048 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.235933521 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.235457227 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.231974943 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236432175 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.236191768 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.240371391 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.23670988 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.232213888 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.232700687 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.235799074 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.237535373 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.237789044 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.237718822 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.237420205 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.23773577 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.232942184 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.24553572 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.248674357 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.238594023 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.238133954 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.237760496 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.236540488 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.239138713 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.24070237 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.243250623 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.23719053 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.239532027 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.235672476 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.24071493 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.239527308 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.233714999 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.23364063 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.23479279 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.239152127 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.2472318 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.25255518 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.240411521 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.238549703 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.24023937 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.238415845 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.235326024 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.24071694 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.238647088 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.235671425 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.237786452 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.243008714 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.23954402 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.237815947 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.237276103 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.243378871 seconds)
  done (took 729.361272663 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.239206296 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238570466 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.237222349 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.23898573 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236929203 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.238506224 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.238685612 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.23709026 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.238430723 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.239457852 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.237960018 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239590512 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.239535751 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.239777421 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239496914 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.238747564 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238200517 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.239765855 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.239134076 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.238928873 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.23908964 seconds)
  done (took 27.157641978 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.239517187 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.239531706 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.239684774 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.238952666 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238253998 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.239436865 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.238985409 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23889177 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.24006846 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239611717 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.239276922 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239896768 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.239698296 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.239061451 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239552361 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240667059 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.240104009 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.240145359 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.240019837 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.240718129 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.241426293 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.239494 seconds)
  done (took 28.418987772 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.241960639 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.243379759 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.237679572 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.239957251 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.24226967 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.239859163 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.241230384 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.242259124 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.241638424 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.238289125 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.238576026 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.240446242 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.243346452 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.245804989 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.240149132 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.244684494 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.241662183 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.244132475 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.243104771 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.242539837 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.245179751 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.248403495 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.241126057 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.237812544 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.245055832 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.242495361 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.241255895 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.244412399 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.23956026 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.247830833 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.242518856 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.239527254 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.243870812 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.242022982 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.241038847 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.245512609 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.243999928 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.244289574 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.243245261 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.248328313 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.258770647 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.243747306 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.246582504 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.24871111 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.243150391 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.242917719 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.249496761 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.2427615 seconds)
  done (took 60.826309912 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.243878464 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.242711342 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.242779459 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.242493444 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.244199591 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.243398412 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.24288812 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.242970223 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.243049838 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.241381691 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.24401887 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.243057811 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.243880343 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.243197031 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.244032757 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.242889643 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.243691606 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.243178243 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.242288815 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.243410732 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.244611967 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.243574983 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.243296045 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.244225663 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.24432653 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.24377428 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.242601843 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.244666024 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.24435418 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.244568647 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.243180216 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.243579891 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.244625342 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.244564766 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.24296354 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.24444941 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.245455408 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.243042349 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.24476653 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.244782274 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.244861572 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.244088389 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.245060421 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.244467003 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.245405886 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.246599703 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.245173625 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.245544375 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.245244646 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.245463818 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.245808731 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.245817249 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.24699734 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.245381576 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.245073959 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.246166731 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.24572558 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.245732216 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.24494533 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.245092776 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.247143636 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.244593212 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.244318486 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.243705654 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.244585931 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.24331853 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.243720203 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.245153907 seconds)
  done (took 85.761697915 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.246156707 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.246244154 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246360274 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.245775152 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.247527711 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.24669164 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.247288078 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.247857887 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.247383812 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.247312051 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.245831949 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.246297152 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.245858665 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.245805194 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.245746023 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.247721241 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.24503177 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.24586062 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.245468343 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.245681169 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.245098594 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.244207925 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.246597913 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.246159139 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.246647397 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.245504389 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.244001285 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.244451877 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.245659792 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.245432617 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.246471895 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.246411991 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.246223377 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.244267295 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.246169419 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.245133264 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.245670809 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245962703 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.245459981 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.24587519 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.247268116 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.244501981 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.244704025 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.244759895 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.246876837 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.244710599 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.244581986 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.245888637 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.244154375 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.245343521 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.245792605 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.245619592 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.24603984 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.246439776 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.245872348 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.245257091 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.244444521 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.245290291 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.24641055 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.24828251 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.247124494 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.244663026 seconds)
  done (took 78.396693226 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.245893009 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.245375319 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.244181298 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.244865822 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.246226791 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.245469802 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.245181633 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.245182559 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.246177631 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.246342341 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24744603 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245712399 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246179814 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246631358 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.246315943 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24674573 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.245612453 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.244330516 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246665753 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.247043922 seconds)
  done (took 26.06843497 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.248004277 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.246134546 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.246891268 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.246458331 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.247154647 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.246508913 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.246662737 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245759088 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246408413 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245889827 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.246515826 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.247648277 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247732547 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.247051354 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.248277944 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.245906545 seconds)
  done (took 21.101523496 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.248190953 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.247132329 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.248252149 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.248626534 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.247330591 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.247194788 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.248154571 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.246542643 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.246924744 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.247811495 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.247723368 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.247467347 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.24732116 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.248958787 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.248558241 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.248598378 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.248587364 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.247887915 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.247602594 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.249473247 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.249396616 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.246807742 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.248835227 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.247511529 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.247437193 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.249435327 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.247586371 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.248861479 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.248531417 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.248367498 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.248960178 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.249145738 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.24843512 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.248533689 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.251034655 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.248517318 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.248805067 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.249258848 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.249058031 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.250614755 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.249553944 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.248709126 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.247701193 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.249136284 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.249417839 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.251459143 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.248737896 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.249240416 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.249858002 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.249674165 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.25040665 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.252542521 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.251109267 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.251537512 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.249595764 seconds)
  done (took 69.836485509 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250403069 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.250030174 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.249991334 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.251195821 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.251582795 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.250272668 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.251211983 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.252755714 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.251444419 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.250492857 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.250557809 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.253310328 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.251074683 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.25001756 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.251210971 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.25249294 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.251175809 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.251496061 seconds)
  done (took 23.677176885 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.253778159 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.251574535 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.251752838 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.251756549 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.252364862 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.252630789 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251772128 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.252254348 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252388928 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.251906499 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251881898 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.252898448 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251468376 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.253241588 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.253846294 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252396694 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.254278147 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252147578 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.252364199 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.253294624 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.25377824 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.253032206 seconds)
  done (took 28.713846887 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.249256777 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.250852929 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.247445091 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.264130025 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.263425026 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.24928588 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.248596497 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.248904758 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.270124754 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.294709272 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.288131968 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.263725519 seconds)
  done (took 16.296745349 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253490242 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253371375 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.254269455 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253902385 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254603619 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253811544 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255080996 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254050398 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253711262 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255256024 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254339398 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255446193 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255156424 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254244911 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255151225 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254851636 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254678429 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254249142 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254236079 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254213922 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255727049 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255533794 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255287734 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256224553 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256417071 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255564796 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255486029 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255534266 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256181221 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254207671 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255563581 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25544998 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254511154 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255657997 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254392004 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254932816 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256214869 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25451856 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255763592 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254333592 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.255807472 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254710781 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255425345 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256789474 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256539741 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254057045 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2546653 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254969932 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254531542 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254258165 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255647678 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254974579 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255989613 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256158765 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254778783 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254186784 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256028765 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254008064 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255282536 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255969666 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255689993 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255280513 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255253759 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255254353 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25656764 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255562003 seconds)
  done (took 83.994559585 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255969718 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.256128237 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254650922 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256104985 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254672048 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25475759 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255688191 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255962124 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255626441 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257148332 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256976336 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255364988 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255912341 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256092019 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255584599 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256497172 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256412169 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256637477 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256059008 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255822226 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255756491 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25748786 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255589815 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257304283 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256257189 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256589604 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256916009 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256152721 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255965904 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257081785 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257592085 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256255933 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256789042 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.257796085 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257405032 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256662093 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257674569 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257545119 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257819414 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256875948 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258318427 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259607988 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258107373 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256565095 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256325561 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256453338 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257038119 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257022269 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256750942 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259241274 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256527513 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256645909 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257801624 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258664549 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256807942 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257964355 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25561679 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2573427 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256428807 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257857461 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256787064 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256890316 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25787966 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256533343 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256876994 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256969873 seconds)
  done (took 84.106978069 seconds)
done (took 1706.289875334 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.420339023 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.372174918 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.252339785 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.260386826 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.254896764 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.274870343 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.263703917 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.252019412 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.253432545 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.25287792 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.253343821 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.441325969 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.307541015 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.252883032 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.25312284 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.350246385 seconds)
  done (took 25.876745478 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.28244406 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.26041963 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.368000812 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.272447124 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.279225021 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.438388547 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.317171583 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.257173194 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.420673005 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.2791748 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.247436694 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.279339955 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.256589445 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.251526422 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.277493428 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.440330619 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.499204531 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.254987722 seconds)
  done (took 27.843629856 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.685638607 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.270654514 seconds)
  done (took 5.116901882 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.276490378 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.257580767 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.258695805 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.257220684 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.250964326 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.248872987 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.255786407 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.256965195 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.249563808 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.380101855 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.26313299 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.270637091 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.275081849 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.258340626 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.261504878 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.299931624 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.415231181 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.26148646 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.259605741 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.262605643 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.257780689 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.35731741 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.300314093 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.2641167 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.377118357 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.258888407 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.263841378 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.266063501 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.382508333 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.262884034 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.257872091 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.258484455 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.259571591 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.25563673 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.723519246 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.270609636 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.267637091 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.284034751 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.262390677 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.406633007 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.260208159 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.265888395 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.250972515 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.727442374 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.396064404 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.378369132 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.272062642 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.265302304 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.26036076 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.324984659 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.263053437 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.261430359 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.319431137 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.093768143 seconds)
  done (took 81.259878083 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.25435803 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.251581734 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.43312526 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.274725 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.252403962 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.257270835 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.267432491 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.525531725 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.274696496 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.262701208 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.533040787 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.812468022 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.27836111 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.31374314 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.115452734 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.317560936 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.252480274 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.254069091 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.254228235 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.254932028 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.79838758 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.258883846 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.2555524 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.339768703 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.292736496 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.75656092 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.252183038 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.252125263 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.269416161 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.252339049 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.768684314 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.28226673 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.316153887 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.252935413 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.520093879 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.614974121 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.580656973 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.260943184 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.29070523 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.258627207 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.270867348 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.739023376 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.598559164 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.254926777 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.26829656 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.745473167 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.254208982 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.260699123 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.26213557 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.502107038 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.252300846 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.254318814 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.255122494 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.254560317 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.254422201 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.337709713 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.34384551 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.758354222 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.255791674 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.255125029 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.27420447 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.255496476 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.263922243 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.258481837 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.272669842 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.600526589 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.413843868 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.257940653 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.600161829 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.758121318 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.269950737 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.828214739 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.275174407 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.263177229 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.446825536 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.261247115 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.256813526 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.747008236 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.261357214 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.254623423 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.577772729 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.25675587 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.535333383 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.269732945 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.270169449 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.822361145 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.261541093 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.263355384 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.254479047 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.254440322 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.255414769 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.257166218 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.521995808 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.290198466 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.258605118 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.253708761 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.279051469 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.263984852 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.254724005 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.256056272 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.820306633 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.279684696 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.253605443 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.256421781 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.253407827 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.270120181 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.254560038 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.255714518 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.522400608 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.254887838 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.273006121 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.257184647 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.252854732 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.264205858 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.32876021 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.253797095 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.539184943 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.257116227 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.254123811 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.255128106 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.254032412 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.321764332 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.25414138 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.255329871 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.096126543 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.5564701 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.269875327 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.255827053 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.255327155 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.252340833 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.253911297 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.256699405 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.292845294 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.254296971 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.028296065 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.294507503 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.277152751 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.254473525 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.26439903 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.255824495 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.260662286 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.255694589 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.541165515 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.518065343 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.406065315 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.2579971 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.256169778 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.995403472 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.292189812 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.435264012 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.271225199 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.256158955 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.506073771 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.476756012 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.257632439 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.256417014 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.257003115 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.516972716 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.255434003 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.558046918 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.782903038 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.271390884 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.264661509 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.03230756 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.975369773 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.260456047 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.258881322 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.530086151 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.271816555 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.256412194 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.256013844 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.257735983 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.271288181 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.277498863 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.261291723 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.25674646 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.256484298 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.311684547 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.447838049 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.271144223 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.26617074 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.740325662 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.270508408 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.256970516 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.27466551 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.258539083 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.257764036 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.330165712 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.258300449 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.293385685 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.259184236 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.257802308 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.79496009 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.258189069 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.263748745 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.44818566 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.942621818 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.273702004 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.257879383 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.258083447 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.157618953 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.770123869 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.300956769 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.544285262 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.260093211 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.297710361 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.259574239 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.294144241 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.770116477 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.263765169 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.258167547 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.900084374 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.275261347 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.68186777 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.259595949 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.262109676 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.841569859 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.275932878 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.261514774 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.258612093 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.269263835 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.558290813 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.259825863 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.311724659 seconds)
  done (took 480.32283682 seconds)
done (took 621.582015595 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.259845366 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.264504216 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.254853043 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.264250402 seconds)
  done (took 10.214164301 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.277195995 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.267469313 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.2719696 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.267235098 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.272462255 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.265382465 seconds)
  done (took 8.794189436 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.259763614 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.267101541 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.264970769 seconds)
  done (took 7.96380808 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.459373888 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.274908058 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.596382876 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.283536717 seconds)
  done (took 8.787544916 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.272269127 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.27280302 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.272272117 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.2739757 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.278068429 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.279126453 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.276266264 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.275595199 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.278990734 seconds)
  done (took 12.651480663 seconds)
done (took 49.584550456 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.465125774 seconds)
    (2/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.253698588 seconds)
    (3/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.072497394 seconds)
    (4/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.014796322 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.320696696 seconds)
    (6/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.263223462 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.405951722 seconds)
    (8/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.99681329 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.294551497 seconds)
    (10/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.339573362 seconds)
    (11/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.028853756 seconds)
    (12/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.289684647 seconds)
    (13/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.077545446 seconds)
    (14/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.290734293 seconds)
    (15/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.36240303 seconds)
    (16/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.264139005 seconds)
    (17/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.417651951 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.300933098 seconds)
    (19/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.294905781 seconds)
    (20/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.435515543 seconds)
    (21/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.326696227 seconds)
    (22/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.263595919 seconds)
    (23/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.374767989 seconds)
    (24/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.336585187 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.365027594 seconds)
    (26/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.424593547 seconds)
    (27/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.343721712 seconds)
    (28/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.96684622 seconds)
    (29/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.256346248 seconds)
    (30/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.07379508 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.346655006 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.401835336 seconds)
    (33/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.418861664 seconds)
    (34/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.399881571 seconds)
    (35/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.273875779 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.299002087 seconds)
    (37/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.299773114 seconds)
    (38/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.267224761 seconds)
    (39/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.404619291 seconds)
    (40/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.344793975 seconds)
    (41/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.318775628 seconds)
    (42/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.947355488 seconds)
    (43/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.355652923 seconds)
    (44/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.260406528 seconds)
    (45/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.523592513 seconds)
    (46/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.304003845 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.457865946 seconds)
    (48/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.425832438 seconds)
    (49/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.360972543 seconds)
    (50/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.411551968 seconds)
    (51/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.349853738 seconds)
    (52/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.2549058 seconds)
    (53/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.330485397 seconds)
    (54/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.255496823 seconds)
    (55/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.314319843 seconds)
    (56/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.40764058 seconds)
    (57/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.260724598 seconds)
    (58/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.97343749 seconds)
    (59/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.260371287 seconds)
    (60/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.346312692 seconds)
    (61/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.323353474 seconds)
    (62/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.394559744 seconds)
    (63/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.26217649 seconds)
    (64/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.309228991 seconds)
    (65/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.315450101 seconds)
    (66/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.184945428 seconds)
    (67/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.368940462 seconds)
    (68/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.301101615 seconds)
    (69/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.303624449 seconds)
    (70/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.350011324 seconds)
    (71/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.254967238 seconds)
    (72/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.368127353 seconds)
    (73/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.343740587 seconds)
    (74/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.306673878 seconds)
    (75/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.291246946 seconds)
    (76/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.400599993 seconds)
    (77/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.01505306 seconds)
    (78/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.379069458 seconds)
    (79/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.313974628 seconds)
    (80/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.161264651 seconds)
    (81/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.05977797 seconds)
    (82/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.275861458 seconds)
    (83/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.259289066 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.37457482 seconds)
    (85/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.402622768 seconds)
    (86/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.282154975 seconds)
    (87/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.265786976 seconds)
    (88/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.48486941 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.385874585 seconds)
    (90/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.299652839 seconds)
    (91/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.303445882 seconds)
    (92/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.27723197 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.402908406 seconds)
    (94/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.303268543 seconds)
    (95/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.309825852 seconds)
    (96/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.951679425 seconds)
    (97/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.322769097 seconds)
    (98/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.446328403 seconds)
    (99/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.256991767 seconds)
    (100/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.274482166 seconds)
    (101/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.326929488 seconds)
    (102/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.259867268 seconds)
    (103/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.307559703 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.399491099 seconds)
    (105/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.259746713 seconds)
    (106/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.497690335 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.359289449 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.378106232 seconds)
    (109/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.364182241 seconds)
    (110/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.260683197 seconds)
    (111/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.282292947 seconds)
    (112/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.411080886 seconds)
    (113/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.044723891 seconds)
    (114/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.324704846 seconds)
    (115/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.314586201 seconds)
    (116/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.297763104 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.304565452 seconds)
    (118/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.400408811 seconds)
    (119/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.258758176 seconds)
    (120/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.355056438 seconds)
    (121/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.257741781 seconds)
    (122/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.460714646 seconds)
    (123/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.3643523 seconds)
    (124/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.404275319 seconds)
    (125/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.319394966 seconds)
    (126/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.329704582 seconds)
    (127/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.926083204 seconds)
    (128/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.25993568 seconds)
    (129/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.262566044 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.40881073 seconds)
    (131/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.016421895 seconds)
    (132/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.389313198 seconds)
    (133/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.36007281 seconds)
    (134/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.517935073 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.401224598 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.345227991 seconds)
    (137/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.019044421 seconds)
    (138/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.302842611 seconds)
    (139/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.960453784 seconds)
    (140/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.272362478 seconds)
    (141/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.413461483 seconds)
    (142/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.266119795 seconds)
    (143/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.299250464 seconds)
    (144/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.304236105 seconds)
    (145/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.184201143 seconds)
    (146/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.319898974 seconds)
    (147/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.311134289 seconds)
    (148/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.302648583 seconds)
    (149/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.402698116 seconds)
    (150/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.957926636 seconds)
    (151/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.414933096 seconds)
    (152/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.389332013 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.363123987 seconds)
    (154/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.320810657 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.381327361 seconds)
    (156/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.36961596 seconds)
    (157/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.413035121 seconds)
    (158/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.37204686 seconds)
    (159/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.260943477 seconds)
    (160/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.926160044 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.323001535 seconds)
    (162/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.26095924 seconds)
    (163/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.415885171 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.321717233 seconds)
    (165/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.262908031 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.380858377 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.362249117 seconds)
    (168/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.268054234 seconds)
    (169/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.31303106 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.35435099 seconds)
    (171/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.451292553 seconds)
    (172/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.262521526 seconds)
    (173/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.351309372 seconds)
    (174/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.26204549 seconds)
    (175/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.053762272 seconds)
    (176/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.462074008 seconds)
    (177/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.269218686 seconds)
    (178/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.945339653 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.477772622 seconds)
    (180/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.340180389 seconds)
    (181/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.438700619 seconds)
    (182/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.263232098 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.43278948 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.507088313 seconds)
    (185/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.280127081 seconds)
    (186/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.935398692 seconds)
    (187/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.276756969 seconds)
    (188/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.268137145 seconds)
    (189/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.140946309 seconds)
    (190/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.321953549 seconds)
    (191/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.275779085 seconds)
    (192/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.431248321 seconds)
  done (took 324.23957173 seconds)
done (took 325.41625398 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.310330008 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.3365659 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.293661881 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.294443641 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.294574659 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.262697863 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.298590708 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.295083484 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.291508292 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.291698963 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.262772413 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.286830049 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.306151751 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.28958188 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.328343008 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.295561175 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.293429527 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.288475023 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.292556068 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.294419181 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.295079026 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.29595951 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.301774907 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.29416938 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.304065319 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.304432772 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.301060646 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.293796675 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.287566662 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.293904945 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.294354806 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.300617942 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.295486643 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.289908743 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.295927092 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.288991022 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.291997908 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.328716287 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.290256835 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.281559132 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.277574008 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.28592036 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.290651815 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.291782042 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.276844249 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.283955065 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.284477378 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.292098129 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.275150372 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.246343648 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.296641753 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.267372151 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.263680783 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.229307878 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.262037435 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.287012989 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.265745874 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.281771976 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.256506458 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.26644052 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.299403629 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.281032205 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.261192446 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.273689698 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.257784996 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.275375898 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.256602409 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.263935622 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.254643169 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.264636497 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.263989882 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.253878643 seconds)
done (took 101.712447833 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.372540208 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.247187642 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.388435732 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.251126365 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.40537143 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.395236286 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.247481193 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.249242357 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.248410264 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.065759832 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.249643114 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.248338062 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.246376485 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.246216176 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.371007856 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.245953397 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.246572791 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.963101407 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.248729029 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.386630818 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.238743044 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.246536614 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.246865531 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.070014735 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.243201045 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.239096152 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.38643984 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.246494109 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.968556376 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.236771808 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.240255029 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.968919039 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.388026552 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.266489995 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.256989425 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.256187387 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.400612707 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.263792927 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.368876246 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.367019055 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.383497823 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.285858091 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.239885239 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.242520799 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.249444282 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.249862632 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.247633396 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.276591494 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.244547249 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.2482131 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.963391483 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.258143703 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.247664536 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.248880626 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.24896586 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.278982743 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.249929281 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.251336967 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.390119039 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.251536945 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.371909809 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.072688737 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.067536559 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.249637442 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.242478872 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.249602279 seconds)
  done (took 102.692519338 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.3132102 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.324818031 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.350728096 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.260451949 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.296154703 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.351110642 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.263332677 seconds)
  done (took 10.313435348 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.252953326 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.249626589 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.295694689 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.295634526 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.250915928 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.403264661 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.24885615 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.258200939 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.249618073 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.299671868 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.252252406 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.252145968 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.258817395 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.245569875 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.294319047 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.258773395 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.362159225 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.247771739 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.251157487 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.39926815 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.24957925 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.259391818 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.29910552 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.259682999 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.252126831 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.254259595 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.011891857 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.252249777 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.251887692 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.251014403 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.250942008 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.299979634 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.251072634 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.245202291 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.25072613 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.363808626 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.252427264 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.251490953 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.251802396 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.248715788 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.2527013 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.251550791 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.252972513 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.251923148 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.252459087 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.272705921 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.25320477 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.252332133 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.252329416 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.252841861 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.299726185 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.253639293 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.252555122 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.252543403 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.304802013 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.26261189 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.254067543 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.253500495 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.254067858 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.253568297 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.400047123 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.299093708 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.252579615 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.297612376 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.25397808 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.253975218 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.253380641 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.252688859 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.34202925 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.253210763 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.298721981 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.254697207 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.429271132 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.274880486 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.255153686 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.253576918 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.254173019 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.255211468 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.24734411 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.257404792 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.25431956 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.251630933 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.256863136 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.253866224 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.255082668 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.407539596 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.35951438 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.255053896 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.263780607 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.258217504 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.255463674 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.304008988 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.255077286 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.255057053 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.303332759 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.367445167 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.306784526 seconds)
  done (took 129.480219978 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.264388876 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.264362369 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.255941583 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.278653421 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.25661318 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.254748773 seconds)
  done (took 8.733427509 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.258286975 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.261208515 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.258640861 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.26044832 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.262153418 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.261933457 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.262071943 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.256997215 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.262897917 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.258823103 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.262803445 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.263583394 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.264905711 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.261028072 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.263277827 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.262088726 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.262653645 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.262681312 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.260696249 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.263441699 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.259427621 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.264013459 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.263090325 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.257848773 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.266505911 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.262703194 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.278169347 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.262410874 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.261518357 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.264024245 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.28264527 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.26438002 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.260331638 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.262939256 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.265973518 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.259524047 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.263791461 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.2639308 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.261249716 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.264913659 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.265509316 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.264666001 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.263308707 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.265418071 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.260187645 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.262640881 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.266630034 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.279886323 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.265284082 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.265640403 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.265365718 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.263539062 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.264822883 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.266059892 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.264122355 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.280645009 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.267234606 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.265782932 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.265277519 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.262751958 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.265757659 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.264966102 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.262031059 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.268117049 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.264634152 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.267012595 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.262728061 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.267911522 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.265589434 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.265115591 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.267313046 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.264444644 seconds)
  done (took 93.195639916 seconds)
done (took 345.57459037 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.224421196 seconds)
  done (took 4.392395008 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.282385749 seconds)
  done (took 3.453159578 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.165064572 seconds)
  done (took 21.337506919 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.331112504 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.283586613 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.270611926 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.260088809 seconds)
  done (took 10.313159396 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.477757979 seconds)
  done (took 3.642127028 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.252673659 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.254589198 seconds)
  done (took 5.673805843 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.414321832 seconds)
  done (took 3.578659089 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.497796902 seconds)
  done (took 3.662742909 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.26214263 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.265627361 seconds)
  done (took 5.700852379 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.24559618 seconds)
  done (took 3.409796921 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.794653824 seconds)
  done (took 17.958694452 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.262347251 seconds)
  done (took 3.429396976 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.277674276 seconds)
  done (took 3.440195766 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.635236956 seconds)
  done (took 5.798356571 seconds)
done (took 96.959871543 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.245747973 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.252633554 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.250249048 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.24591439 seconds)
  done (took 10.154991998 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.334174358 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.334114187 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.342750291 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.324633663 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.334594836 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.333311566 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.280202876 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.281762569 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.325213727 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.324297827 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.341571965 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.323273892 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.33444541 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.281530127 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.323328613 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.343472233 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.32415422 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.341751568 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.28202847 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.32526364 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.255997485 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.325972684 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.324507731 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.256016561 seconds)
  done (took 32.759552181 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.769057669 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.322976909 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.406073338 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.302992644 seconds)
  done (took 6.961328087 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.335236955 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.337014711 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.35623552 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.392259058 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.430289789 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.354331243 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.283452172 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.277542953 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.2647411 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.3371262 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.388606198 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.342932733 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.426502621 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.255663931 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.477196072 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.256493425 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.257503228 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.33710277 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.3901775 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.413266982 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.256904583 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.335574185 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.342683911 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.33615203 seconds)
  done (took 33.34714171 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.266936915 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.273567081 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.258494851 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.274608624 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.259621667 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.259959244 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.260182035 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.265164671 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.257337915 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.260032697 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.259097219 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.272906731 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.258430577 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.260729603 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.267004894 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.2605 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.26129565 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.26545273 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.267784366 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.259913807 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.258792956 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.266695723 seconds)
  done (took 28.956519037 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.247627225 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.247452131 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.599803207 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.504794903 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.248297535 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.248989823 seconds)
  done (took 13.259991787 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.321912802 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.469724156 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.259549396 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.582616719 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.673451797 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.256758198 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.256541215 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.487517428 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.781939726 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.764374151 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.314203684 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.324483681 seconds)
  done (took 18.657144831 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.255812049 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.254537568 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.259608131 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.270859945 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.306127337 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.275842218 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.263069073 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.249085491 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.312410223 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.32648003 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.275614734 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.308050784 seconds)
  done (took 20.522762564 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.343176499 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.254758903 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.254875839 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332748063 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273606411 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.10292779 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.312189672 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.955204621 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.278416605 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.531003692 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267257595 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.345658604 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.511117959 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254904406 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.278916879 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.243529193 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.491555313 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.714570241 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263510569 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257305173 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295054424 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.257208843 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.257041735 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.472602758 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.098613719 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.252268804 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.515948943 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.248588359 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513551191 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.267671379 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.259223703 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.250242708 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.523561268 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880616459 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361012719 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445137163 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253022477 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.248870979 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.241314238 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.278518233 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.252659565 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.247200563 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.255215767 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245870621 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.246156404 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.255749938 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.939659981 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.273452874 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.245474222 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.246090232 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.485714576 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349948654 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.252042567 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.245511502 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279286121 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24530567 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.252499559 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370760081 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840721899 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255365841 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255051634 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.250195418 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.248432339 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253530453 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838379287 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.256160263 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.251463425 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.251863508 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246560557 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.251430893 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.275307579 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247402785 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.269334307 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247012334 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919596927 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.254604007 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267399542 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.764164577 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250980769 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.250452969 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.478454308 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246526722 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24721971 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.248157646 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.246927308 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902593512 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.262517174 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.239642807 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.293928535 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.952116455 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.467246204 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.269591783 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279156177 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.473674075 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.235862693 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250191759 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.250969856 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250567207 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.270880464 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.936336102 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266370835 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.253987144 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.506940657 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.459634935 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249997116 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.23645226 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.710438545 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267579846 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.277877984 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.256982911 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.45224312 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.79844196 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.269605446 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248884612 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301352935 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.249795625 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952100342 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258072364 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.261529625 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.252395936 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.518484811 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.011293986 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256282985 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.316746949 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.256866599 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.249202701 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.252306651 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257580783 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.250432185 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.441118404 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275088195 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.265576503 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.250736751 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251006633 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.257037975 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256948749 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.257749066 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.475525169 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253974837 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.531594766 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251983258 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252068211 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251931001 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.475640444 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.252341141 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.279279208 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.513910824 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259445981 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.262660438 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.265553088 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.283186228 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.35885289 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28229371 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.260474531 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.512496928 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.258007101 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.258490113 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.25781728 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.260054141 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260710972 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.261860145 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257200527 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.810047331 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229866788 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.256161956 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.254075586 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.26885512 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.321558793 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.260672462 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.454472037 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.263905424 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252591503 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.261146918 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.259295425 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.478047104 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.264138263 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.253596184 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.352114551 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.709514679 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.826208247 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.269430656 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.254759944 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.253650412 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.255017324 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254711497 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253755097 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.255165737 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455749194 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.269663549 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.26973616 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.812185014 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260305098 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.254220189 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.269208447 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.266213813 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.262787919 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255910567 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.259971039 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254448953 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.261882549 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.272190844 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392521598 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.27200684 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.256163458 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.774467261 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.262848442 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.255062444 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.256549266 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287907956 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.261767446 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04705708 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.535658945 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253260235 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.512308601 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.26420692 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.278783916 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.255166469 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262470491 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274235004 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.261776484 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280940631 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.267489237 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.26372754 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264768549 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824062357 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948885272 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778906869 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.259392663 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.2590478 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.263749412 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.951949596 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274862198 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.256481436 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.482076099 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.955291244 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275417533 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.719246076 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.274819237 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.99034863 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.502941269 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.496025809 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.257882661 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.261909678 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.507063807 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.476318108 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291719364 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.257595246 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263604438 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.245513867 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796332661 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.276284909 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.345558189 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956377033 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286377848 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.265700484 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.284119644 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.258269208 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.641790744 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.276520109 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260001739 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.263541029 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.276264704 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054779653 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.279940927 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.260276308 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837938631 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.267088529 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.721556798 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277274811 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.463068316 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.272816494 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.264507496 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.265548311 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.25994117 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.519189302 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.505297065 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263446868 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.265538988 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774425992 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.133929248 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.267860599 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261354898 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966145244 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267005098 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549168007 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.267723814 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.266860971 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286351464 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.262242645 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263126006 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.261728936 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.265723285 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237455158 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.722164846 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.270159903 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266825098 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.265532099 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268100891 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.51761875 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.27866041 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.820451627 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.493907629 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.263027624 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295769142 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.268299217 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272912119 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.251939493 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.262086155 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.263860964 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289602532 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.485251513 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.26314518 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.250654373 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.263489765 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.475574462 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.262923461 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.277728274 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492576783 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.264686392 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.276727185 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984159214 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296601485 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.262452859 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28399427 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.279822785 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.30380864 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.330399921 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.466408152 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.275774562 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.274833811 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.650388728 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282456211 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.283187517 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.279624991 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360424074 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264623195 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.286268856 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.041085461 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.828009037 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956534671 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.831837082 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.508766479 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.272387428 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268487703 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265552174 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401617073 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.265579936 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.541388386 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265790717 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.269815675 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288325163 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275807357 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278915902 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.481342177 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.542716618 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.265772784 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265825188 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270971194 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.265444577 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.278052214 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.477765469 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.737412927 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.803470891 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26807285 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.277208011 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.966277028 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.561303039 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26687451 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.267094304 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267218331 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.281053332 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.284545602 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.275344575 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266615224 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40713725 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.507693928 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914454366 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.294120288 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.304948346 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.786627997 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279612423 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.526741831 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268120481 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.472930587 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.835308046 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.939625956 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.534460241 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.338270691 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.471244852 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.269303936 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405130137 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.275970643 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.267593359 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.270078079 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269304969 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.268967137 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.277567315 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.833617046 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.540713937 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.27509668 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.275726675 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30010666 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.278674572 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.494521048 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931662999 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.499714023 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.280132715 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.27382709 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.271134878 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.834365607 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.517967801 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27748298 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.277286879 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49742271 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.271597759 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.30075769 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.789395671 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.270411255 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.78875934 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.269373953 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.292487754 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282914566 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.947985574 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.836554026 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.27450231 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.733102644 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.278208124 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277125769 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.55198721 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.277952306 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.282345127 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.557050838 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.277056726 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.283471342 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.480170859 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.830024308 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.01461699 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.28845136 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299200453 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.275275546 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273690456 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267388151 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272512543 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.274419779 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.671955966 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.290717487 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273426244 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.286519569 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.282737475 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285901224 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.277626998 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273139735 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.281176717 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.280781243 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.276001346 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.293493894 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397653673 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.817709103 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297802664 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.951217165 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.598991208 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.529123485 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.283566553 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.264519324 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.279093412 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27428854 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27355234 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274279239 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.283516568 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.794349176 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.288775502 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.290007877 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.280779745 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.274362584 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.485999832 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.27473301 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.484155032 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288658773 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.299771641 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.26160822 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274411331 seconds)
  done (took 919.256429765 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.278867451 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.292646218 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.28213705 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.283900162 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.272620376 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.379355877 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.340368061 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.274172571 seconds)
  done (took 19.585941518 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.270994096 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.278676728 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.270910393 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.278447252 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.279099128 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.722736466 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.30329382 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.279609802 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.292536866 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.283332296 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.283497743 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.914045917 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.301028396 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.275381105 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.267058524 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.285205644 seconds)
  done (took 30.768897832 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.087280065 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.356199463 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.938932364 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.347721659 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.316813281 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.284313887 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.445750239 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.299165345 seconds)
  done (took 25.260145953 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.284897088 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.284764356 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.286407556 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.285917303 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.286375738 seconds)
  done (took 7.612327483 seconds)
done (took 1168.266523844 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.282723093 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.282803741 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.282378447 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.28253958 seconds)
  done (took 6.314573565 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.264089901 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.263994704 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.264422489 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.281421956 seconds)
  done (took 9.257441987 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.944773781 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.897207405 seconds)
  done (took 5.026182532 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.745133908 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.751700935 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.75164335 seconds)
  done (took 6.432272181 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.569060778 seconds)
  done (took 2.752890574 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.162295038 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.258043379 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.018948411 seconds)
  done (took 7.623726402 seconds)
done (took 38.591166578 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.271590491 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.530737119 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.42782625 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.274875819 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.43143648 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.427562252 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.076532732 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.272136183 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.278644788 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.274316902 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.286034705 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.43281263 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.994390064 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.522319249 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.993674719 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.616642129 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.459585312 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.274373825 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.273586603 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.28501764 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.07695517 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.283462815 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.283428189 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.285513022 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.434618828 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.418486724 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.275935221 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.617294927 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.27606502 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.279645378 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.420098563 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.273798318 seconds)
  done (took 79.514635826 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.273897545 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.274390798 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.28164983 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.273262122 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.27375067 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.28022108 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.275417361 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.273928299 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.276616839 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.276021598 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.274237451 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.274883964 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.277460554 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.283108171 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.275895254 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.28311626 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.274038252 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.273815318 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.275485258 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.290062619 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.276018707 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.287157877 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.275281099 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.283872397 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.27515797 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.298008069 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.275520218 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.293008167 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.275967232 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.27504021 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.299857537 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.275285555 seconds)
  done (took 74.118183772 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.275496721 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.277276798 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.293126701 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.283681236 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.275897059 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.278628776 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.279052677 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.276000617 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.288877516 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.28740559 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.280024372 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.276784066 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.280516213 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.276481433 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.275835415 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.280270317 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.27691408 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.27960279 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.277419881 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.280751371 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.277602486 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.276728401 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.276897513 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.277145442 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.278049927 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.277447825 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.27769327 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.279050733 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.299932473 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.281986547 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.278714609 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.278115699 seconds)
  done (took 74.14786612 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.601388399 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.289350251 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.292552614 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.28322083 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.292980974 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.288540785 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.283731487 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.608160092 seconds)
  done (took 14.128566122 seconds)
done (took 243.094016733 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.291681859 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.767784721 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.327555878 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.284894813 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.322024228 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.312691775 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.502664024 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.331879524 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.50148722 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.302745225 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.30559802 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.287933243 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.050301431 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.438717946 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.114002597 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.238747368 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.132702938 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.2863543 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.831920156 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.563306474 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.317023243 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.280719787 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.11208774 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.158732399 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.272396411 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.381834629 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.380544721 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.508101793 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.441828016 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.36263906 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.784286834 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.286378669 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.293775049 seconds)
  done (took 60.966649292 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.287225786 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.291632184 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.292129551 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.294043385 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.292408333 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.292558447 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.288366291 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.293482088 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.293223994 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.293132488 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.293275373 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.293075097 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.293840144 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.293552786 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.293273884 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.283400725 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.288682873 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.29267997 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.287939859 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.284881848 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.293600015 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.294009303 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.294039818 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.294629385 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.294222632 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.293738947 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.293908496 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.294463301 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.293991564 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.293888465 seconds)
  done (took 39.957573956 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.294702114 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.851560328 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.989240531 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.295234093 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.291266886 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.295150886 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.558532948 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.294685491 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.294061018 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.295670585 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.758729644 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.297897637 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.323580561 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.014521916 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.293145923 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.295873764 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.296323118 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.291070767 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.863857215 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.305681106 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.577302847 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.295421296 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.56017173 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.301177028 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.311814093 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.292449501 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.297151923 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.076528884 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.312388299 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.753731483 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.040044263 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.562462706 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.025431701 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.024581242 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.025664543 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.302565137 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.297730774 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.760018769 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.29530656 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.292945585 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.561756593 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.294229996 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.001878784 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.958489455 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.31250806 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.298495722 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.106189907 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.782250384 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.52173927 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.29913977 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.014035396 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.296940709 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.29980825 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.29568964 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.521951492 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.296057631 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.294163484 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.110915139 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.316812145 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.563593229 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.3053633 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.294883066 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.862466218 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.295267185 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.86069116 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.296540116 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.304535261 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.312854223 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.005678034 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.296913577 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.977871629 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.312515569 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.30169275 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.766586785 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.854031721 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.169663962 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.296636186 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.869060404 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.0475927 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.57993261 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.299444336 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.065665603 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.580443464 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.298602294 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.302614296 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.301976167 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.29929977 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.383348259 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.561740199 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.908446557 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.971589246 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.115718815 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.585094942 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.303190082 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.29716934 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.110604683 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.32091107 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.301113454 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.001161137 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.976629342 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.319153113 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.305150107 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.985368153 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.320790228 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.567780955 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.302225762 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.01860568 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.297024759 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.367044139 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.301242974 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.304362006 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.318155028 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.568062697 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.301372053 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.301884213 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.965636235 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.802228604 seconds)
  done (took 182.292952258 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.291277125 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.309270906 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.292557924 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.307273956 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.292545529 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.300286215 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.292946748 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.293136642 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.29736128 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.291692331 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.292735217 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.301757441 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.298687072 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.293036231 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.293742185 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.293014167 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.292911312 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.309742348 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.292894094 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.293256415 seconds)
  done (took 43.132400798 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.304281818 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.825096539 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.799823289 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.303604253 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.304032801 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.299502578 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.352018958 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.304399955 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.304005626 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.579962643 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.461772587 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.320844377 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.304302062 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.303545838 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.801024797 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.294535749 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.581515735 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.827091449 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.305796799 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.826746017 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.293969469 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.304401305 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.299779926 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.82675607 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.587136086 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.568802268 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.353679007 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.82919212 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.30545908 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.305639541 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.828081333 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.304921078 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.300684008 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.82668993 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.321047764 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.320544826 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.305101813 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.356634877 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.356324858 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.584019245 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.834130113 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.576136184 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.316679474 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.4762291 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.308560516 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.295882579 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.835429991 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.322587424 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.296446026 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.307803245 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.31446938 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.81110416 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.318853548 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.811913015 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.323381628 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.305934446 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.831531358 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.812175741 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.821751925 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.463421529 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.317769665 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.571951584 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.308165041 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.837693353 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.323963109 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.30682393 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.30776215 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.46616304 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.84807761 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.57324426 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.586196618 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.586211909 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.308083642 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.36311805 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.323908078 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.586512133 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.362447764 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.699027205 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.588084002 seconds)
  done (took 118.437791595 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.556822855 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.412035769 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.670420841 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.874256004 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.784251286 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.439177838 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.410857934 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.557095996 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.311552826 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.400024877 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.910655111 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.415376577 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.024032056 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.386062848 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.403702639 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.460466302 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.679866722 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.281095955 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.956613601 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.88605453 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.308380149 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.416808988 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.816884481 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.488211295 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.303846819 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.88809111 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.210735642 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.79788283 seconds)
  done (took 50.258446125 seconds)
done (took 496.23658049 seconds)
SAVING RESULT...
DONE!
