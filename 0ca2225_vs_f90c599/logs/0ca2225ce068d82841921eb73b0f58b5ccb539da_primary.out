cset: moving following pidspec: 21666
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.515542688 seconds)
loading group "string"... done (took 0.53211441 seconds)
loading group "linalg"... done (took 9.076402621 seconds)
loading group "parallel"... done (took 0.180966025 seconds)
loading group "find"... done (took 1.332494846 seconds)
loading group "tuple"... done (took 1.967228507 seconds)
loading group "dates"... done (took 1.382245238 seconds)
loading group "micro"... done (took 0.197193218 seconds)
loading group "io"... done (took 0.516093201 seconds)
loading group "scalar"... done (took 52.5329415 seconds)
loading group "sparse"... done (took 14.1747015 seconds)
loading group "broadcast"... done (took 1.335514222 seconds)
loading group "union"... done (took 10.371650076 seconds)
loading group "simd"... done (took 3.098587939 seconds)
loading group "random"... done (took 11.742356469 seconds)
loading group "problem"... done (took 2.261858418 seconds)
loading group "array"... done (took 24.69777466 seconds)
loading group "misc"... done (took 1.16313592 seconds)
loading group "sort"... done (took 3.843034911 seconds)
loading group "collection"... done (took 19.628139413 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.618078995 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.11961907 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.207114896 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.288312658 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.243382773 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.154057777 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.136158856 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.260079595 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.78387451 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.207604141 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.131383708 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.512597676 seconds)
done (took 6.547616927 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.255390246 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.180092353 seconds)
    (2/2) benchmarking "String"...
    done (took 0.167003837 seconds)
  done (took 1.116436698 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075955867 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.154079223 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107628894 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.092929327 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.09297202 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107937547 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.091710381 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108668794 seconds)
  done (took 1.528172019 seconds)
done (took 3.747351579 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.503969366 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.865452526 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.513451965 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.164931898 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.303293909 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.298908129 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.332686494 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.201869217 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.09100234 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.089947753 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.177054614 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.393455035 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.44319033 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.961034996 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.090808362 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.114101194 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.119072332 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.763331333 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.07823642 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.112182632 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.516095665 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.194183471 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.097446644 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124562581 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.18501019 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133294582 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.162457061 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.10391482 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.660906625 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.132698321 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.18667583 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.097615375 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.160982547 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.195257702 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.208362341 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.092770144 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677278147 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202825621 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.092926504 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098628736 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.663581241 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.119402419 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.189710383 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103207078 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.090189615 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.181741926 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.095157065 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.07681476 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.114609794 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084125871 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.165246473 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.476884263 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105561358 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.172582241 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092235719 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.687719761 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099323144 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.274603706 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.12568263 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.092993743 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091337863 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088039909 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.160360531 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.094576352 seconds)
  done (took 20.195568243 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.150255743 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.16885284 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.077398493 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.156190897 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122876603 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079175495 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.101855577 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077836044 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.108783098 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.244790862 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13826661 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.156241048 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091232455 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.087659561 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.126969675 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247563666 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108216152 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120911274 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086855683 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089119007 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140658278 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.0954324 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107325906 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092542656 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168986945 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204136105 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111381006 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124925073 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.08934551 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099342038 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14323291 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.149118466 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095956145 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.087648539 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.189854553 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.106597266 seconds)
  done (took 5.338482926 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.202364107 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122917634 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.216175972 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.16250251 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148223946 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.16844715 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.149034628 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.284606479 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.203226269 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164316282 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131560512 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.095926115 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078029735 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079416862 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096470599 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.399861313 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.180849101 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.131660563 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.155887481 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087376392 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098841287 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366775583 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101027625 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080187226 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101659924 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066967229 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.200206834 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085213221 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.100666784 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083673103 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087732822 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136686783 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.199438159 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132820987 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121045464 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101354265 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.161889153 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.100426939 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.19976849 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.112987234 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077926992 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.126169159 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11711611 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.139367932 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084604885 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.110762315 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.219422593 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082660967 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.103459048 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.089064413 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197300484 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.124378396 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.079703461 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.28681751 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117118533 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086132088 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080785743 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.100059303 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.255764398 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134039466 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081192653 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077166694 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104406412 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07722361 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.432955208 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107494292 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.987336807 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.096832534 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.140387683 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102240882 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104973317 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086502978 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084886307 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117832687 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080834264 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077330037 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078341012 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096484295 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083726109 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109506396 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084003117 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078815932 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16122862 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.098209328 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09886282 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12566345 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085669483 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096587139 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112565157 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097028611 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084409709 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.172501916 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087584991 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.092978363 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103074589 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142393494 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082875555 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.081156332 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.223947774 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083257208 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.108375991 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100215885 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126100602 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.101395748 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079635139 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101147709 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082073267 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.07694425 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.097220804 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146782772 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081832517 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082593308 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101172077 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.093028717 seconds)
  done (took 23.11802377 seconds)
done (took 49.422547729 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.454817091 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.087800429 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086649728 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107897171 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.087833894 seconds)
  done (took 1.672938316 seconds)
done (took 2.496721392 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.325677615 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.200576817 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098987871 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.196700794 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085215527 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.203961674 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.190462577 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094548422 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.216765245 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084915127 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.194572632 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084720092 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.105474498 seconds)
  done (took 2.929825948 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097504522 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104470003 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095706292 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115798838 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078778658 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095969407 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114388732 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107753114 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096159687 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.107366597 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080052944 seconds)
  done (took 1.91594647 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094576817 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099556919 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084802795 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112066775 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078885996 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.093000506 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110303746 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103489754 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092904717 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.106642082 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079508926 seconds)
  done (took 1.882101636 seconds)
done (took 7.547606666 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.118236712 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 27.129074184 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.170992095 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.288356135 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.347628671 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.255579302 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.678149065 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.158921661 seconds)
  done (took 32.125568848 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.118333721 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.157626216 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.09392444 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089042335 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.086044401 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.111466739 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.092946688 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.087395688 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.108509845 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.088614441 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.093526792 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.109147207 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.088647431 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.088218096 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.088442814 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.109474387 seconds)
  done (took 2.497767252 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.141581013 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.112918664 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.113840556 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.095363354 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089995417 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.115499339 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.097375192 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.092291252 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.10970161 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.091311274 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.098684958 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.111971556 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.093048598 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.088053226 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.111642474 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.120888126 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088981468 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.112108118 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.118787106 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.094651774 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.113782502 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.092228935 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.0925574 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.11295931 seconds)
  done (took 3.417870189 seconds)
done (took 38.86704995 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.154285582 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101161729 seconds)
  done (took 1.085023468 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.141727623 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.161094939 seconds)
  done (took 1.135972864 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109382958 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.085122101 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136279447 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101086539 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.087699096 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.104185747 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.114252059 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.104376831 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.088441757 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.087014165 seconds)
  done (took 1.853239833 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.091071997 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.091086259 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.120512052 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.141067259 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.114131375 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.091657027 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.091760919 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.088593436 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111240055 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.08791152 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.09471586 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.124440618 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.0916147 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.124057821 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.092473614 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.092849201 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.114659718 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.092918932 seconds)
  done (took 2.694265798 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.088146333 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.087548668 seconds)
  done (took 1.014278422 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.09084615 seconds)
    (2/7) benchmarking "second"...
    done (took 0.08662799 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08914201 seconds)
    (4/7) benchmarking "year"...
    done (took 0.106937338 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.08657926 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.086021455 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.104457815 seconds)
  done (took 1.489609734 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.498831761 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.266319027 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.373634479 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.104602602 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.145488339 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.341902129 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.143226762 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.100447908 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.098712923 seconds)
  done (took 2.945238563 seconds)
done (took 13.051867249 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093014692 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.225323126 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.63739903 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.109424399 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.20492549 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.16436375 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.294167133 seconds)
done (took 2.570448953 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.351046418 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.15015982 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085904129 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.085096253 seconds)
  done (took 1.512719812 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08226969 seconds)
    (2/2) benchmarking "read"...
    done (took 0.095064982 seconds)
  done (took 1.023475977 seconds)
done (took 3.382358494 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0876242 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.085538122 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.084679981 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.128510339 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.085051138 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.084785788 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.103938944 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.086329078 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.084981413 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.08490994 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.106841565 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086210558 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.085058124 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103424941 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084826886 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084574263 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.084778478 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.10347571 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084072658 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.084040035 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101313921 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086918411 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.084577792 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.08361466 seconds)
  done (took 3.058890627 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.109999265 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.086752797 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.107205474 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091292312 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.090417862 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.107219052 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.091687799 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.086189919 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089205391 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.106907002 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089379359 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.089131558 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.106765547 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.090494649 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088017829 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.107530909 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.091553034 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08683381 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105532961 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091266427 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.090453375 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103970718 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.090631118 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089604829 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.108004057 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091013772 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08801202 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.10459795 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091297554 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08888922 seconds)
  done (took 3.708276378 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097211677 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.086061139 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088750961 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114819777 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086004733 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.088480901 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.102459368 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088055851 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09021792 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087534619 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.109513114 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090260354 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085365324 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.10725209 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091526851 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09079867 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.0959531 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.105281175 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.086178146 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089663219 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109710927 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.087328692 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.08935984 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.088764015 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.107801646 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087105689 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.088673337 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.106489367 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090369048 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088819933 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.091536008 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.110880506 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089294553 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.099468199 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.11005007 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090873327 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095084181 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.085057634 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.109174013 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085598079 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.085166901 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.107166008 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.087082383 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.095558983 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.088883392 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.110265847 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.086370075 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.090326622 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.107029355 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.095086895 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.086949074 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.085354569 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.109779947 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.091221418 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.091443093 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.104103926 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091169432 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.085391087 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.1078703 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089824603 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086183335 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.086203076 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.111264342 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090272656 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.104609675 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.11356225 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.08691715 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.091511402 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.089728748 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.113810408 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.091997608 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.098606865 seconds)
  done (took 7.706677153 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.101062232 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095729307 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085837992 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.105495453 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087055775 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.085864861 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109263275 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08666477 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086627101 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.110956232 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087495162 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.086848598 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086093783 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106009418 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087299229 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086877683 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111089937 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086615902 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.086146367 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106429262 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088042222 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.090122353 seconds)
  done (took 2.919133026 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.232872384 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09415192 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.137008325 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119492949 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.104302972 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.1171582 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.091572249 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093193329 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107832733 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097598301 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094322991 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109785234 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.104457905 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094971698 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112923696 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097575691 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091426353 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.115926803 seconds)
  done (took 2.874679422 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.101356365 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09071756 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.127638913 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.088500959 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.089116624 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.088307183 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112708258 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110706479 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.089148288 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.107911934 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095279965 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089575383 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.107684167 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088869382 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088491661 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109913905 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.090128477 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087096663 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114488032 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094476994 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.093875474 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115388904 seconds)
  done (took 3.039131299 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104826657 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.088393424 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.126115061 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.092015027 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.088133389 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.087046831 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.112956241 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.088908923 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.093308675 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.108339127 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089024744 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087931553 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.121626446 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089645668 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.091991073 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106380067 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.090334371 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088037417 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106678584 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08821097 seconds)
  done (took 2.807253904 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.177240762 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124142946 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108039897 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116647864 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125786063 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106949373 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115220215 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.125774766 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107993881 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135758243 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108521532 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107810666 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135552903 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113562664 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107351952 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135260952 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114886534 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133106288 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108433176 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107512047 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.139149532 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108032808 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133674869 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108208049 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107713921 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126703188 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10813024 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11250101 seconds)
  done (took 4.222329597 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088600928 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088038872 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.085326749 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.106111015 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.087728923 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.08658961 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.085783113 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.105777687 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088654427 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087424275 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.105679112 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.088595555 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088585816 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.08757944 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105823427 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.089091603 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087464248 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.104682993 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088431459 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089214839 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.087256982 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10629229 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.089116861 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086351022 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086500916 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.107228747 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087123268 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085902065 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106105566 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088247362 seconds)
  done (took 3.640590541 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.097412875 seconds)
    (2/2) benchmarking "in"...
    done (took 0.093035503 seconds)
  done (took 1.055772928 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.095381335 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102502805 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.086912104 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106617056 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094043165 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087255525 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115898124 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09393887 seconds)
  done (took 1.649001838 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.145438237 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.165381996 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.09361051 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.100201645 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.167267911 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.158177632 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134737467 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.093432821 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.109719041 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084052409 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.158782156 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.0839896 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09274323 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087308475 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.112005336 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097383817 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.08741304 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.119070981 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.096110749 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.090615316 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112287277 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098009038 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094473361 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.118404349 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086533127 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094421156 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114872553 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103361957 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087471663 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.112730987 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090772573 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.087092041 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.113010337 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.094580847 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.089067956 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.166417954 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099394771 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107624404 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093966653 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092936704 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.14074046 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.08904724 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.093726333 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.089557646 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116002748 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.0931829 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.09381333 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.107558088 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.085346872 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086102041 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.10771429 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088177317 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.087393972 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111142871 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092795404 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098369678 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.109666551 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.090008827 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087970046 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104847244 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.09185105 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.08770439 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094217569 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.111313178 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093523189 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.092159403 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110312495 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.089993716 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.08915304 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.108232846 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092667832 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106642271 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.112337776 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.094370504 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.093994218 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.108654367 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090614409 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095142215 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10881646 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.094605592 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.092458197 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.137330627 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09504569 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086516837 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.105682505 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.097182955 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.090382604 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.092910011 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.104072054 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101418088 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.090343367 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.109055313 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085847169 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.088710504 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.106506017 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.093536339 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.085077279 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111629713 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.088598948 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.094324259 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093293651 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110094729 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093782684 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095175803 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115280631 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09185599 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.15787295 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09045593 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087078059 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.108980312 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096231898 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086389669 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.090959274 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.108174009 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090341185 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086871696 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.113382803 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093525309 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.091159832 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.112947729 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096437703 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.09421171 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.110318593 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.09055246 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088085218 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.092768359 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117034271 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094376168 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.090995915 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.109862497 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.08915877 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090898453 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.111669614 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091012967 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094511433 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108607215 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.088769878 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.090587547 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.112356789 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094253586 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088139312 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.108978898 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.095072753 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.091958139 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.091711425 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.11377755 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087973557 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084323466 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.113335016 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088555195 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.088868494 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118333045 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089606814 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.093460209 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.108616062 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100406314 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089142394 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.113794496 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094934081 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.096077415 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094241406 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.105114256 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090590188 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.093075613 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.115396036 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090013707 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.08994154 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.109652119 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.098816235 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.085899858 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.111794636 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085888176 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.09020862 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.094175936 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.111285899 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.09420567 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088677122 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.150536385 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104099199 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.095630249 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.112530526 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094101553 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.096367368 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.111226202 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.094765909 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096178653 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.114977373 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.095120483 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092090575 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11482925 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.091497738 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.091374389 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090308473 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115172681 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086371178 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.091463098 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.10493704 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.097387752 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095039016 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.113889447 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.097916681 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092612491 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110259452 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100345166 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088579239 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.093223999 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.105424738 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.096157918 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.099273951 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.117320173 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097022124 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094244725 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109456892 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.092772844 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0987763 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110406608 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094769645 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.090384216 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.085475871 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.106125764 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.096441475 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.092236199 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.107918741 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.090204026 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095170479 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11500709 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.092085851 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085339086 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.112456232 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098441115 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088286016 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112838781 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.092386977 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092063203 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119989706 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.087741938 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089572687 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095376817 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.115550417 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.089995386 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092677181 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.114055084 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100137033 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.093199977 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.110971051 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09317713 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100007216 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.110028707 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.090791219 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090392632 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.092958552 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.106962142 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.092742037 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094655516 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.110299856 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.090555223 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097358139 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116039817 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.097808927 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092551313 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.114854424 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.098648849 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.097469059 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09048215 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.116316437 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090189781 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085802376 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.109441389 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.08699082 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.091740204 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.107561978 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.097066786 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.091387009 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110062005 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.096297639 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095498621 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089984294 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.117040132 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10316502 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.106115244 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.089069802 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092081772 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092318459 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.111798977 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091895932 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.090246426 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.124455759 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.09666431 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096418552 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.110727375 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.090966529 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.097266546 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.117609712 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.100024411 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.096727227 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.116686465 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090333001 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.09526628 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090127447 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11828229 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.087063546 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092172816 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11277489 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093882717 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090195634 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.111840423 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090013735 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086430201 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.110483982 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.098158493 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091933683 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.114723441 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.094307499 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091704041 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.108961853 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091336787 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.09730994 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092050985 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.117399102 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.090999368 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086523184 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.10842149 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.097820457 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093489803 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.115964683 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.092268436 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.094794078 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.096720629 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.114726114 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.092933233 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.100099644 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.12042578 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.097907949 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099392418 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.106676674 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.092043028 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098493652 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.109399692 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.095726742 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.092512031 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087207317 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117672407 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.097168974 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094868225 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.111801004 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.089015607 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.090533055 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.117652853 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.095762094 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.093825513 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.111480435 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096909034 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089293545 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093434716 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.117028662 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.095634739 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09671727 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113780307 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.096115147 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090283534 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.118219421 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.092810802 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087729057 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.105892439 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.093366082 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.097952626 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087190717 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.119193782 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.097320011 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090354455 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.113129492 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.096767481 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090516036 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116696468 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09806746 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091796755 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.120616197 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.093501874 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092362477 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.09573561 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.116719615 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08837361 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092798014 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113071708 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099337169 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09190894 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.115863371 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096173041 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096518229 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.112365302 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.098692844 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.097287311 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.096940891 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.108930761 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.100314021 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098679092 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.114225023 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.093824303 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09297986 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.109188704 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094262067 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.098164035 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.109582054 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102879579 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.097793444 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.091558144 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112498223 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.098202395 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091756641 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119093028 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092083105 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095952482 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.109147044 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098070608 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092039423 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.118338057 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092062589 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088080058 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117517892 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.097858446 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096724492 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.09642418 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.119933557 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088674557 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087492243 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.113355225 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092484582 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100571365 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118577965 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.09423165 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093006875 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.111676849 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.093596373 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098369347 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.087972413 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.11155384 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.097209662 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095968128 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.11335108 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090352085 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.095791746 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113267421 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097672336 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.09291908 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.109868032 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.096192412 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.098643806 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.111485277 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.09129466 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091837393 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098512386 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.11591629 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091970602 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088605232 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.12081617 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097313363 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0984258 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.112400824 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.096211385 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.091336681 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.113154289 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.10093457 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092446425 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115753209 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.09404022 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098666492 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119605391 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.090164115 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091794789 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120914696 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098887295 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.099199222 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.092681634 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.115083461 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099529355 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098545105 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.113939154 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089747612 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089723116 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.113198574 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089970107 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.093277374 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100095674 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114209426 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092642755 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096326425 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.11743594 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.094930871 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.093040175 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.108285004 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100444788 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.090920125 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.118023927 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.091011436 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088063034 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.092515736 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118300445 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095486696 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.09544442 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.112824233 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.095785252 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.089008107 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.111172867 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.100757167 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097110113 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.0974031 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116130218 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.093411186 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.094797072 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.124210612 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.095122667 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.093189247 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124091823 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.099935864 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095037426 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.115002903 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100610944 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.098534362 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.114363082 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.101088756 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.09257496 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.113672373 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.10029355 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.100335376 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123847506 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09640643 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089596322 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.09637842 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.1143724 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.089779804 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.098601473 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.12094046 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.101298874 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094763822 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.11204899 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102323487 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100351139 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115548677 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094562714 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093426844 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.117540357 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094123403 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.095922161 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091943693 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.120580622 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.10058572 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098344735 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.122647447 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090826586 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100504141 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.118698842 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103933033 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.093037701 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.109566434 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090983591 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.093995355 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.098465639 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.121478217 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.097580634 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.096432601 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.117629113 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.098302895 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09514208 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.112935697 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.102540961 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.098368333 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.092062612 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.119292796 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094616398 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094835156 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.115502491 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.100002324 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.099328499 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.116630629 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104031745 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.097884581 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.114158612 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094120747 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096365176 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.11415971 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098732743 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097619639 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092116456 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.110806087 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10027512 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.100074673 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114987245 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102410081 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100078727 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.114919626 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099793675 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100814231 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.116829881 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.094892793 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097340328 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.094532754 seconds)
  done (took 60.950008864 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146646588 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100680678 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114389952 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095389617 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114227384 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116241374 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095309114 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095432158 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.115439499 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106225216 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.093902265 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11438066 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113091539 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116478541 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135722822 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104380034 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114112941 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096168828 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09365329 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095627245 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132102791 seconds)
  done (took 3.224590611 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.1149923 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.108410366 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.125926451 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109771062 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100640345 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.127482457 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.105832579 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127857922 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111169023 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102512662 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.130490885 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107522694 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.12225777 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.104320793 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1015949 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.124086043 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110683758 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10130857 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.127896347 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107677493 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.124019557 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.107786672 seconds)
  done (took 3.416414722 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.10499205 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.098760824 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.100191905 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.115622343 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.099482092 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.094517174 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.122080731 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.096671079 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.103711396 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.116140258 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.093043117 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.096390022 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10065789 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.115086913 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092599171 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.095168771 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.12479967 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.100014164 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.100128699 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.09340764 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.131398988 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.094009926 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.09661996 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.112927662 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.107038856 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.099319772 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.116408107 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.100307981 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090937231 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.119112224 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.097487197 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.095508689 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.116401019 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.092434156 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091898417 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.098810565 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.120737601 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.097133063 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.094468096 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.118850894 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.097189331 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.100117024 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.12097604 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.096806071 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.095560748 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.097708249 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.121399093 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.095148237 seconds)
  done (took 5.898122172 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.128056514 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.155923673 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.099053102 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.126394823 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133048037 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.106563917 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.098266557 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.129747283 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.096720556 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.120368379 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113139489 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.109850806 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122661309 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.103163814 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.100029597 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.121480978 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101487221 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098292757 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.124651865 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.099395849 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.102392345 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.122522724 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.109590098 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.129257383 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.103272138 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098035417 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.118607357 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.104663087 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.108576201 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.125952052 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.103730858 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.103923546 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.131635953 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.101313104 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.340016722 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.122607851 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.111648935 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.119995792 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.10279603 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.098318437 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.100270052 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125245709 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.102337264 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.13235157 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102786133 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.100886367 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.11927457 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099604902 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.108829025 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.12187226 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.107936463 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.109809309 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.122653929 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102672911 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.102904425 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.131160705 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.101069756 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.097227968 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.122392145 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.108637552 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.09668246 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.122883067 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.109792125 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.120058444 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107243797 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.109938321 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.121754027 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103188538 seconds)
  done (took 8.913012599 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135747414 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.103796101 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132738728 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114387974 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103492016 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.124967409 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103527707 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.103582207 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125999215 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110047579 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12364127 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.201276377 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.121917804 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.108908998 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10306972 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.124904985 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.104562875 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103771571 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.125183134 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103745286 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.102712621 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.134037073 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.103598251 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131545191 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116217982 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100326821 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.124856744 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105027888 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11234089 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124834705 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.115335261 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.124382131 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104739769 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112544364 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.136793412 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.104909931 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.097516123 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12597683 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.104044665 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103357034 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.122003355 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113167644 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.123877172 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.102190472 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103994108 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123120975 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114678035 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.114097585 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.130056995 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110206119 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.124314797 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115452384 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104969581 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.12549947 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114477158 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.139245292 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114948137 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113107091 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125344221 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114081937 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133603793 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.121368457 seconds)
  done (took 8.194933008 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098586365 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096761468 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.095187525 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.117104996 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.097762326 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.0953656 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095889959 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.118586301 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097245821 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097175753 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117469196 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097341697 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09575736 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09594277 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117690024 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097479444 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09556683 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.115837214 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099188108 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096869065 seconds)
  done (took 2.968846646 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108975843 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116216057 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.11916328 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106171696 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.100574334 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.123292594 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.101611404 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099525564 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098059004 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122145543 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108152863 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107507056 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120659836 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104722853 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.127028806 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106872599 seconds)
  done (took 2.701940031 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.11975405 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116729389 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.194426265 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.101743431 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.120975396 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108079368 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.099243849 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100093398 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.121076835 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.105804173 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.103331528 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.12417865 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.099874863 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.100380871 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.121579484 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.103537103 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.097758458 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.124142635 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.100678668 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.192364636 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104200548 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.100999607 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.099143816 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.124513363 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.100691411 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.101794435 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.127381179 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.099768272 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.100738027 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.122056984 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.10194593 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.106915402 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.120593388 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.104453889 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101359878 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.120644962 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101792796 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.100370236 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.122572268 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.101497609 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102855257 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.099957426 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.121935184 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103339716 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.096918846 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.12168912 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099470669 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.104821114 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.121740851 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.102976393 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.099133333 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.12557177 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107074598 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.108664509 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.128089701 seconds)
  done (took 7.098105765 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112848107 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102104495 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.130759597 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100521764 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.100825592 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.099876323 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.122810858 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.102091953 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099664006 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.12058624 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10231998 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.101909265 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.121565674 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102530922 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.100448098 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101442222 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.119790965 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.101649523 seconds)
  done (took 2.874737747 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106159478 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10031856 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105430817 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.120443302 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.10073128 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099938113 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.119081365 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.099939087 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099125913 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097761037 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121261074 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.100803498 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099109266 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.120892011 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100500609 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098976166 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.120768621 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101007737 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099473388 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097905568 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121656418 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100352078 seconds)
  done (took 3.269009102 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.114446934 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.186069966 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.110198837 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.194647679 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100157093 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097835607 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.128766193 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100477145 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.115271827 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.11964417 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.099653837 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.097785674 seconds)
  done (took 2.40335948 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130719144 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138883638 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120986225 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101729058 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110103928 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125593234 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105505659 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10379385 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13476772 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11702574 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124237548 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114374723 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112316517 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13377788 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108958764 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129703185 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105468516 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104566616 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120162329 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123703337 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10392412 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134022866 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105322342 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103661171 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126591132 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112676015 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131892818 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117098245 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104560579 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134279999 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110319419 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103390797 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134055946 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116167706 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122387995 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114372709 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104120086 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142867772 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110294917 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133993039 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101985796 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109927807 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134482291 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111206385 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133908643 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106661208 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109903578 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125723442 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106807033 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125453161 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132268122 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113332218 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130962061 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115225719 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113238028 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14920395 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116176657 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135372123 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11098903 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137937764 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114288063 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109135004 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135237487 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116427508 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130756744 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113103406 seconds)
  done (took 8.812682516 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143089816 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101233273 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125688378 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117158379 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133373615 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107101109 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105729787 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124402629 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106796643 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101041582 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172509654 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105658465 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11498443 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135815879 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106086337 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125590252 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106192669 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113084594 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123415372 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129153123 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125473651 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115583711 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113859543 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135249158 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116599783 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130463429 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106195641 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104426909 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126014006 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10683247 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110432845 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126157385 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114837261 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102283391 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135542908 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106271668 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103944481 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134204668 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105432071 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131517981 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11588269 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120988489 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127268171 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106107932 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138035614 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10644338 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104504309 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12273172 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106715257 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101217989 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138165999 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11787686 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13704261 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116077373 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104208959 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126964401 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106884992 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104955273 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127769716 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111731842 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134233358 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106427043 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128013656 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127527075 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106146455 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11408774 seconds)
  done (took 8.75541158 seconds)
done (took 167.008311778 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.152005178 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.193595944 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.147739493 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.178988915 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.096363728 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.129421037 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.149833109 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.151468901 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.094640752 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.117065816 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.095875448 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.098275844 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.18207855 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.096558842 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.094534317 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.118977885 seconds)
  done (took 3.036891637 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.193379179 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.310277894 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111219437 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120166937 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104842026 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.101464293 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120869838 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102139519 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098807342 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.130643702 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.103535203 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097494946 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129424649 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098548966 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.09911283 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.122563517 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109587254 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100744595 seconds)
  done (took 3.200500742 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.122203277 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144050731 seconds)
  done (took 1.218799323 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.132159142 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.199693457 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.277333987 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172592111 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.124011954 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140573833 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.153607275 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.134331744 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.182636127 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136755818 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.114997732 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099445031 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.149248841 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.10690804 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.111718545 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.122776849 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128515628 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.132205861 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112385015 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.102320511 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.14291381 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106263545 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105633559 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.132904932 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.1725713 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134354088 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105953951 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.105360742 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.124115786 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111746127 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.107946805 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.139912512 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.114009745 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.178118795 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105218159 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.173017702 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.111012512 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.122958477 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11187334 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099635048 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125923426 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.104979023 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.13715816 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.102188031 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105782896 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.130379127 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106855936 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.104928203 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.130940034 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.112608986 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.109126096 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.130655215 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.168806638 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.113281249 seconds)
  done (took 7.97341089 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.854970389 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.143966189 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09989333 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.981966822 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.151639912 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117077984 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.849188242 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.145278115 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234491513 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.902266207 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117315358 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.113683476 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.262091937 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.253255859 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.179454017 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.371856262 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.687854065 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.136957897 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.130859219 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165423838 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110706631 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147936456 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.123825219 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.442130041 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.102888427 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100365202 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.12987885 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.114511201 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179811405 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100909035 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.123851199 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178730556 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.288015632 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209321057 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.10144852 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122072812 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100507131 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.188628773 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273939339 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220115386 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.163334541 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12013692 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099686037 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127697434 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121840694 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096021469 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.183564645 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.19680302 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.192404167 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105806157 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.113039331 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133870394 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107908712 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.180594571 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.097663025 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.35937862 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.380163241 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101375202 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108431147 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.138191766 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269223934 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100482082 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237564228 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.149181644 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217021188 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100410362 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813111314 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.18679171 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100516332 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.128605322 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108695402 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105843469 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.130805458 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161295884 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.40670991 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.113204234 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127017813 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10155195 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.24162458 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101229984 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120255907 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16362771 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123220885 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110486552 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.1138913 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134585341 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190211248 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.248440798 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.136063965 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110173497 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126730717 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115094703 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.103017156 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.234295075 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231166995 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.177432757 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.235259666 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110562762 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184673082 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.184697458 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109063283 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.192844212 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108262299 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.139226364 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110126597 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225794166 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.156953443 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101822325 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105755845 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131973443 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.137807765 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126086248 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.111051677 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.190213777 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.466044594 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.164318176 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.120069307 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106232606 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109985887 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182246801 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107716794 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266552694 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133250073 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.186934987 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10970293 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097524397 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130929751 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.162012846 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133795674 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10981122 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131223279 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113285619 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.274166282 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224341418 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113462651 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240405635 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.190512029 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108706159 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.194371254 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108889434 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190494285 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131881567 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109869399 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102154061 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.79955267 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13761027 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109241446 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105770848 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.205564191 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100747846 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124750904 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102963786 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097732828 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.808927576 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125469065 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100577437 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102837912 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128909368 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.110913005 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108007053 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127957732 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158535281 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.26939501 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11450792 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107220521 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.12433167 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.18030952 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.103509986 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100972656 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.100602996 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124311755 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109899816 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104939165 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127363272 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190585864 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.157016655 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.231114572 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.532627465 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.12513261 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102070291 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242172506 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122002624 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.321418669 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110490597 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.236052714 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187744993 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098976667 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.37066109 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.16674108 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.207209063 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104851916 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.193009494 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09879538 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131454043 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.158950597 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123497074 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109724647 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.181269849 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.116203466 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.136739479 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.190568571 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102025976 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252340635 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098246168 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190422909 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102223864 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132269664 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.325783063 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102266214 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140862253 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.161124409 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127519543 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102790762 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.698657178 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102225182 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132704132 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111688948 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.235810592 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.186591588 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11460088 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133698211 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114416491 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.182459522 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.23446805 seconds)
  done (took 46.335659121 seconds)
done (took 62.712615485 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.291028651 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.258934262 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.305588932 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.215284376 seconds)
  done (took 2.115625229 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.288822334 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.165975626 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.237960752 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.099515884 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.250600298 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.098913 seconds)
  done (took 2.120071181 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.501713069 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.387771017 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.346724962 seconds)
  done (took 2.219435862 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.248941664 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.236711929 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.348813028 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.415399039 seconds)
  done (took 2.33917869 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.302387415 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.134613917 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126353618 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.21872493 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.285315063 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.260757397 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.154434217 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.204318364 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.15580748 seconds)
  done (took 2.868174987 seconds)
done (took 12.635419012 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.336538582 seconds)
    (2/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.141108221 seconds)
    (3/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.107173412 seconds)
    (4/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.199755429 seconds)
    (5/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.302964115 seconds)
    (6/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.358349078 seconds)
    (7/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.358937922 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.168713822 seconds)
    (9/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.306117669 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.111180173 seconds)
    (11/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.349506854 seconds)
    (12/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.318571407 seconds)
    (13/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.206408232 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.285638228 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.137495808 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.160694737 seconds)
    (17/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.207847868 seconds)
    (18/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.222115216 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.13329909 seconds)
    (20/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.100212309 seconds)
    (21/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.285351745 seconds)
    (22/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.196100801 seconds)
    (23/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.27343519 seconds)
    (24/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.17543708 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.139268048 seconds)
    (26/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.089662808 seconds)
    (27/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.199134072 seconds)
    (28/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.219979596 seconds)
    (29/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.213098058 seconds)
    (30/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.083569995 seconds)
    (31/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.23514457 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.147593961 seconds)
    (33/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.215150052 seconds)
    (34/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.177509176 seconds)
    (35/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.198293446 seconds)
    (36/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.111753147 seconds)
    (37/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.10717383 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.134132407 seconds)
    (39/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.154024089 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.107638596 seconds)
    (41/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.133145191 seconds)
    (42/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.107993277 seconds)
    (43/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.17774428 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.131307444 seconds)
    (45/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.099952609 seconds)
    (46/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.106348403 seconds)
    (47/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.083381309 seconds)
    (48/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.270746835 seconds)
    (49/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.290947046 seconds)
    (50/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.151535563 seconds)
    (51/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.152431786 seconds)
    (52/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.202240742 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.137598894 seconds)
    (54/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.133012814 seconds)
    (55/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.109944909 seconds)
    (56/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.157561189 seconds)
    (57/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.207737594 seconds)
    (58/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.177362893 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.107221153 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.165181862 seconds)
    (61/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.109561443 seconds)
    (62/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.100381236 seconds)
    (63/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.240996649 seconds)
    (64/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.127292522 seconds)
    (65/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.106919472 seconds)
    (66/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.142050861 seconds)
    (67/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.08371754 seconds)
    (68/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.220887505 seconds)
    (69/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.152885296 seconds)
    (70/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.107294574 seconds)
    (71/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.106016009 seconds)
    (72/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.109667781 seconds)
    (73/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.088944124 seconds)
    (74/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.107559307 seconds)
    (75/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.107377771 seconds)
    (76/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.127182145 seconds)
    (77/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.106222079 seconds)
    (78/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.083461293 seconds)
    (79/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.132201204 seconds)
    (80/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.085026522 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.105892537 seconds)
    (82/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.149216412 seconds)
    (83/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084992822 seconds)
    (84/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.117716985 seconds)
    (85/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.08473663 seconds)
    (86/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.087577282 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.125023069 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.108466432 seconds)
    (89/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.107370241 seconds)
    (90/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.20928296 seconds)
    (91/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.08283316 seconds)
    (92/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.14129985 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109469229 seconds)
    (94/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.083735033 seconds)
    (95/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.163013595 seconds)
    (96/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.101744897 seconds)
    (97/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.176549374 seconds)
    (98/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.107110143 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.103241982 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.107790564 seconds)
    (101/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.083206849 seconds)
    (102/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.125045936 seconds)
    (103/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.095193026 seconds)
    (104/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.167458766 seconds)
    (105/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.107852434 seconds)
    (106/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.083760645 seconds)
    (107/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.108913966 seconds)
    (108/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.08234425 seconds)
    (109/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.250113818 seconds)
    (110/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.085001541 seconds)
    (111/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.14459635 seconds)
    (112/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.20745965 seconds)
    (113/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.085221941 seconds)
    (114/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.107639617 seconds)
    (115/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.083063828 seconds)
    (116/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.220372044 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.108265803 seconds)
    (118/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.082494567 seconds)
    (119/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.083874908 seconds)
    (120/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.192947901 seconds)
    (121/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.112981195 seconds)
    (122/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.131061865 seconds)
    (123/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.084936686 seconds)
    (124/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.085219959 seconds)
    (125/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.082472255 seconds)
    (126/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.08423418 seconds)
    (127/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.1941952 seconds)
    (128/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.127558585 seconds)
    (129/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.127131145 seconds)
    (130/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.135191595 seconds)
    (131/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.085230596 seconds)
    (132/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.107747376 seconds)
    (133/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.170430549 seconds)
    (134/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.110114839 seconds)
    (135/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.160243559 seconds)
    (136/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.144417668 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.120305116 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.10910967 seconds)
    (139/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.106944452 seconds)
    (140/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.105784968 seconds)
    (141/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.181770399 seconds)
    (142/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.084000288 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.13542101 seconds)
    (144/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.185960646 seconds)
    (145/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.140515727 seconds)
    (146/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.084106303 seconds)
    (147/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.085558324 seconds)
    (148/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.108254871 seconds)
    (149/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.136432514 seconds)
    (150/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.086283943 seconds)
    (151/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.089137619 seconds)
    (152/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.176549923 seconds)
    (153/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.179452287 seconds)
    (154/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.090095251 seconds)
    (155/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.107913795 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.133049867 seconds)
    (157/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.086375098 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.102512454 seconds)
    (159/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.089969728 seconds)
    (160/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.082678972 seconds)
    (161/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.10819717 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.110683266 seconds)
    (163/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.177497967 seconds)
    (164/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.088724423 seconds)
    (165/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.107827097 seconds)
    (166/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.084656079 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.129357927 seconds)
    (168/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.126738618 seconds)
    (169/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.113357002 seconds)
    (170/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.088243622 seconds)
    (171/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.084162912 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.133200508 seconds)
    (173/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.085012442 seconds)
    (174/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.085865246 seconds)
    (175/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.085546108 seconds)
    (176/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.083515036 seconds)
    (177/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.106074385 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.111817167 seconds)
    (179/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.083589445 seconds)
    (180/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.109079649 seconds)
    (181/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.130950201 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.127314002 seconds)
    (183/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.084275108 seconds)
    (184/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.084442772 seconds)
    (185/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.10835208 seconds)
    (186/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.08471817 seconds)
    (187/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.102038174 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109532006 seconds)
    (189/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.107890561 seconds)
    (190/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.085220639 seconds)
    (191/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.086043098 seconds)
    (192/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.089058915 seconds)
  done (took 27.645120672 seconds)
done (took 28.633857399 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.218465665 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129849161 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111363449 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.111255847 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.208451129 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.11873509 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.144415221 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114345062 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.117223474 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.132540577 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.102923905 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.119024331 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.110034114 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.204145719 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.112684334 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.128899413 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.103756755 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116533213 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.146136128 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.121441434 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.207905308 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106171348 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.115001851 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.127600918 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.183093586 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130007291 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.112054678 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.110962413 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.141841487 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11012718 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.110972163 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.103015245 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.145612073 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.121278547 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10185167 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.134170539 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10249731 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089767038 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.132985085 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112451131 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.118128934 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.132508917 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.113970063 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.103211251 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.11002718 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.133203513 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103144442 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.114208166 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.125919068 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.112069533 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104736089 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.146030757 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109591777 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.101144979 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.125541317 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.106044391 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117864683 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.126259679 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.122253561 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103124463 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.102718892 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.128553207 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.112729488 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103009667 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.133015499 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.104433658 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.110322328 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.135471244 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109287172 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105853741 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101773936 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.13408635 seconds)
done (took 9.906359247 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.111971213 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.159532612 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.207370308 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.216532848 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.133074056 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.144421639 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12719386 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.131594959 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.146582193 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.128508077 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.161299217 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133150367 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.215744344 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.11630031 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119571331 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.137396911 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117880523 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.115380528 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.219143081 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.149444095 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.136993672 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.115615386 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.162178924 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.12591107 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.109173014 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.166293581 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.110307661 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.135565491 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.112282532 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.116825546 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.151932695 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.111833491 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.109138385 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.154309205 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.12431052 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.116560776 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.145619077 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.113533656 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.107982196 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.13413904 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.120186114 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.151296875 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.111545891 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119782119 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.137858562 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.118649275 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.117623711 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.141051523 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.114486432 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.112427762 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.136100987 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.139021339 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.116792606 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.142103368 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.117479016 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.116454138 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.143674286 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.118312384 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.110036232 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.142660444 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.109591173 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.11138221 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.13756637 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.134258965 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.135212009 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.118057648 seconds)
  done (took 9.844247137 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.128357365 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138701268 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.14307304 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119073697 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112660788 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.12636524 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102169104 seconds)
  done (took 1.904940115 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104820078 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.190979962 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.214181407 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.213511949 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.184117777 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.222725555 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148612239 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103473432 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133814656 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.13794236 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.189635411 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.242339195 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.108781893 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.144112339 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.189961961 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.12809879 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.191563667 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.128754081 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115991724 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.217063033 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116895093 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.130237119 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.142806955 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103368333 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.211916982 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104038019 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.267649143 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118794613 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.13390013 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.118618897 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11387976 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.208350774 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.209528769 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.118284457 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108467185 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.214006172 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.206803216 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115449604 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.226358705 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.109293022 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.211154784 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.115654152 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118656674 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.139488346 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119302192 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.171485077 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.148406205 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116480525 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.138294156 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.199884816 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.137759256 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.190902062 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.110758288 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.140136751 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.113898132 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115414483 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.149453361 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115689747 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.223855132 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116801075 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.214318601 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.212041544 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.190257862 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.214795743 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125096255 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.21504442 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.206589635 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115128398 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111376384 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.139419043 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.190681457 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.136171602 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.11656744 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.199932745 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120688161 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.21205971 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.191755928 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.137827248 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.117557047 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.107019403 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.111437579 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.130218281 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.178269805 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.139731077 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113127517 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120595578 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.142911973 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11520246 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.110195912 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.152759722 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.114393806 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.138121634 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.122430251 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115851998 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.144053932 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.19397809 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.139635927 seconds)
  done (took 15.882613176 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.109038671 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105760785 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.109275535 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.132178445 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106335644 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.10510761 seconds)
  done (took 1.721190517 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.145546688 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116108714 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150187817 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118744009 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.168835324 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.222522667 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.229396222 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112909781 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.158050455 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.13003185 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.227666733 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.229938961 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.208481416 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.145326887 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.200923222 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.147722895 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.205778169 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.140825434 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126426538 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113055429 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.146405561 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120179415 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113410187 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.214757348 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120092185 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.148437843 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.114398558 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.127603335 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.151556207 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.115546431 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.143292541 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.122273249 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.11174341 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.136926038 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.206046122 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.138142332 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114227623 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.125448827 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.144288748 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.12233425 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.231300888 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11468823 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12471624 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.15366886 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.114178346 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.110681425 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.15219881 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113782999 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.230094433 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.124821613 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.150015998 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.119474864 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120215651 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.150104848 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.113910113 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113885105 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.150848813 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.206393522 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.146639207 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.112871764 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.116589035 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.147205249 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114008014 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.12327745 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.14411309 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.128928864 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.111201764 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.143761955 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115071965 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.117666478 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.154175924 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.117532115 seconds)
  done (took 11.483411239 seconds)
done (took 41.862008885 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.526996267 seconds)
  done (took 2.576310205 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.908561898 seconds)
  done (took 1.959695125 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.024970962 seconds)
  done (took 19.111166359 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.539867822 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.611664424 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.051716615 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.156617964 seconds)
  done (took 3.413432084 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.996971592 seconds)
  done (took 2.070179295 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.294723313 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.263487513 seconds)
  done (took 1.618702414 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.744725215 seconds)
  done (took 1.818236391 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.533965102 seconds)
  done (took 2.592118896 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.366828931 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.177016387 seconds)
  done (took 1.617793632 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.627241232 seconds)
  done (took 1.70331004 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.549973929 seconds)
  done (took 20.627743447 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.25060601 seconds)
  done (took 1.32985415 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.289608309 seconds)
  done (took 1.36994754 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.648625046 seconds)
  done (took 4.728702745 seconds)
done (took 67.599203646 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.117443494 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.11940825 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.117793081 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.141309145 seconds)
  done (took 1.565091296 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.125296264 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119599098 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.12218042 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.146104771 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125127957 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.118181194 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.144989717 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122601535 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118627563 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.14761142 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120757509 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118546062 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.148323412 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119543519 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116336223 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.147058573 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124331027 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121679276 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.145075291 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.121840369 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120279727 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.145785948 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124919355 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122599454 seconds)
  done (took 4.167595345 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.117767183 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.110235406 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.111313363 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.135026537 seconds)
  done (took 1.557453547 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.130090427 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132126168 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.156631743 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.128682659 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.13269045 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.156881404 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119842999 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116211003 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143325259 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.129587473 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.135621918 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.157669465 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132750421 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120943361 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.15698796 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11465703 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.12098601 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.158128601 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.127176673 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127991132 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.146915445 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127380274 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.124580782 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.156055166 seconds)
  done (took 4.334112334 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.191735582 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.128013555 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.16913991 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160245429 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.170341046 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.114158789 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.139112174 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.148405418 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.122235696 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.116036239 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.144659879 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.162305632 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.146375003 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.119519538 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115203924 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.146526028 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.129543099 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.121433987 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.185618945 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.120631134 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.146430491 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.131613705 seconds)
  done (took 4.213634782 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.122546314 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.112637186 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.133681403 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.114425829 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121639426 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.138775689 seconds)
  done (took 1.834865161 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.109998307 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103856707 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103812134 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.129059919 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.10931528 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.10407152 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.101658968 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.130942908 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104666221 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.104115234 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.12872183 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104190074 seconds)
  done (took 2.420292968 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.346240527 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.109596688 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.135763887 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111018565 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.114740769 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.107369847 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.150151313 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.10914144 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.272198236 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.109785554 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.149492634 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.200100025 seconds)
  done (took 3.006556305 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206683964 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143403532 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.303539718 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368148967 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166269027 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187950588 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.270489805 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188802408 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.206414567 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135331629 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244254251 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153477835 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177198541 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172988823 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163134002 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.162837733 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195003283 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189153262 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174131064 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222187767 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157001489 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189443893 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179429499 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176891285 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133452799 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188019414 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118814054 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125835723 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195352365 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191120485 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174101583 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171342662 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138185608 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22022401 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262645419 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176602384 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.313686739 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131743814 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.200422195 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.181342225 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256554304 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163763439 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191297588 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180325027 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12687202 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205063886 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153001107 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.200497306 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.128265084 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167159303 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183324938 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198467472 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.206857483 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134937718 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317394046 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165607228 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168690216 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17114046 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208742664 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214984252 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164552557 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120326666 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20987435 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208134378 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20176942 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140376727 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.191347793 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124833378 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191222121 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192793734 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205672142 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156690784 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.224361631 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155702153 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156552102 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198850256 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176395089 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201587165 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156487163 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.143654498 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149186853 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133008263 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152919766 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196916281 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145023029 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198129425 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156532875 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.339861165 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187809424 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18207765 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158811251 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184792537 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156936268 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172131758 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.111050688 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171210424 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.161960401 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179988393 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132305438 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179143653 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138485046 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.125261231 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176473424 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.119642229 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182408529 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.134829517 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188691878 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156034738 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126507164 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19032546 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144834762 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.179447999 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19213168 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182285318 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154926437 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131437849 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212363903 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156745506 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.129082222 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202629593 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.209225256 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.148533519 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133162183 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191550153 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215541233 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139942562 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215089002 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134869725 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159544713 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.148746182 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184349391 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15817452 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.176180046 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127213522 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.147103209 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223113723 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.152404922 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136638783 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164999513 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157829224 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124680978 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163226023 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135175566 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138794209 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.170634338 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.131728707 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1799047 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156637725 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180483044 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15561901 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159407551 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174650777 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158285296 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.159105205 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170670974 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117173176 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.201475842 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185661365 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156229699 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201033289 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.190091905 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215864621 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158555813 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157623744 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178584205 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152653346 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.117498363 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158948571 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18155657 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160830593 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.207681889 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215018496 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.195570248 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.149170939 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171822076 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168916309 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.200936605 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152157611 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.170460238 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155992819 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189571663 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.119352838 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120547475 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.152750845 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136219796 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152508088 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135129203 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208963753 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164397452 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212385654 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182528171 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137096089 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207207606 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124621595 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186674263 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.165401885 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136876334 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.207108922 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205451325 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165443185 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166243058 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160165125 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.143865864 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12570246 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.131146217 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191139508 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132570721 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159164021 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140330093 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207784046 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173448114 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173070175 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22327964 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16619375 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.21962364 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.117073549 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.188938633 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170075023 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183179141 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.181768273 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163116377 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.161538606 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204026239 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139846693 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215666781 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153883874 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190333041 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187659985 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.181659443 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128441101 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175190863 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158104014 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164716664 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165997532 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171460556 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129160449 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179144557 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.137511126 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122309386 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214209251 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139744082 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199917084 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.184249296 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17040975 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150257105 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141405436 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184914163 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14379189 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.114177038 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199703349 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209826308 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146125745 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154338815 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202194428 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127482654 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.3479374 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21814503 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17717776 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161137907 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138525677 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187138404 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161584819 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189229626 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177477278 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167153395 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176473078 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18651848 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140791112 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156533593 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148123493 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176191704 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.149864441 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.129436749 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.182032998 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139614797 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216607672 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162544248 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159412981 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183487832 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144913437 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.149259181 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165745111 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193061708 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183261706 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201238158 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.155909151 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.191758443 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191434235 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147380925 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128937418 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.129275961 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207140349 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127551055 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187916983 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.179444437 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219732498 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189434608 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159596746 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164745236 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.124112252 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184470476 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147676512 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220052896 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13213054 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.164253276 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2203957 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.138613128 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128520842 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187064826 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303624996 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143530961 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198264628 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.121075498 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.296585812 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128426901 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131201992 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190437679 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17177306 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.15843652 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181394565 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186259872 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141951626 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186859034 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136460276 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210668752 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192023918 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193527173 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203488351 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.144215255 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18778788 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160935016 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204289356 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140786456 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.170569137 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159853045 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208784303 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.181043352 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.158378518 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156744498 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183924749 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15486102 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200453904 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134743911 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218755659 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127032152 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190296987 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135585401 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148668541 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158330603 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.203632338 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131001385 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207425629 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156860098 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159397965 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124597352 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170340283 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155371274 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135303805 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.155848454 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210441848 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127952493 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160503217 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206645961 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130734948 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183767375 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145094665 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127692482 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169210163 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139263404 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15784467 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.16986119 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211615369 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.131556294 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205043045 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163525696 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194018454 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157291891 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169314331 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663876488 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.124666865 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210265882 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144596847 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213000227 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176100571 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161923283 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184214203 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148886491 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189683324 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147233588 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.262092952 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164989342 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.183915021 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130502138 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139997635 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166766698 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.131582985 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179192318 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156913397 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165074857 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.136096036 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.153344897 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169395628 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.144165488 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16485423 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182683612 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17560496 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185293107 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.21000287 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134380014 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189567124 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202984971 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129289805 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.190563531 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173623688 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165565159 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147897381 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.129957442 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.16377621 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180358992 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.149885925 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158557463 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184223282 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159089455 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154903724 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.163445674 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161125255 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16800522 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158715499 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152646539 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.152165641 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185206176 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13243073 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.124490987 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185251231 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158981181 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.182551831 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124444313 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.171726292 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207974414 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122390707 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160322511 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27808783 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18700158 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216712847 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.147556273 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132794998 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171005999 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154010191 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.182729988 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159765238 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.15558906 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130599259 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.129818271 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.197980278 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.153861647 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187605271 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176915724 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188705336 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219572882 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13288158 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.282421314 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167541621 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157043334 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.153067658 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.12785714 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139426051 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160801067 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139232755 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213854626 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178137124 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.183560678 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.14439383 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155096321 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12441042 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128094546 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193198795 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149459174 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187224521 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142191846 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.140755944 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143502025 seconds)
  done (took 83.868304926 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.168877613 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.154364862 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.171342434 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.225152165 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200178816 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.293059403 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.233014678 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.258272242 seconds)
  done (took 2.873113862 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.122843702 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.160647912 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.144142014 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.146033046 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.119898969 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.452042478 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.159709572 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121632823 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.167234752 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.161504408 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.143576085 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.617478221 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.117385634 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.146194211 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.129232428 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.121017564 seconds)
  done (took 4.193422811 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.391300181 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.587593013 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.086349737 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.281268665 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.237233749 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.183917806 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.790904032 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.196136299 seconds)
  done (took 12.928525165 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.149505592 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136724052 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.818591831 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.264643649 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.152035801 seconds)
  done (took 2.700699271 seconds)
done (took 130.73140318 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.122999771 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12181674 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121625713 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.154551115 seconds)
  done (took 1.68617687 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.186539061 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.096343279 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.098198742 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121655359 seconds)
  done (took 1.676906062 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.442130457 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.095152303 seconds)
  done (took 1.739861856 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.149233372 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.1431823 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.164785798 seconds)
  done (took 1.645589364 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.143917705 seconds)
  done (took 1.31965416 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.129533169 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.121261621 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.240478719 seconds)
  done (took 1.672744014 seconds)
done (took 10.922119583 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122858266 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.418132244 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.434414775 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135786924 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.712197057 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.428670028 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.046680612 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176371447 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178125011 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.13880184 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134725674 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.690564114 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.034458793 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.361264243 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.992333815 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.3887951 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.700781427 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11286626 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.147777384 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114089688 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.999525822 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.138517974 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114185306 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113262387 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.728871693 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424767285 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112008707 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.397445833 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112479946 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115843913 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.42799201 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.114936421 seconds)
  done (took 17.437397536 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120149961 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175626951 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148855149 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114133545 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114701475 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.140583983 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123876116 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124770804 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.208738807 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111108719 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.160758741 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.11210863 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.11662503 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.139227401 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137979256 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111382758 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.141459592 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115380391 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119725955 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.139215266 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135469409 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11093102 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113409263 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.14269299 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112879195 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133934224 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.140711978 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124000926 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110531655 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.145100838 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117199344 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112243361 seconds)
  done (took 5.364109107 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.160073062 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182662448 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148941483 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.147730323 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.188217691 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.115320583 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.224617015 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.150004508 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204382505 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.1131279 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133695556 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.13864139 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154029796 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113393058 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.1649219 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112867064 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115258606 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.143431826 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.1214575 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11379759 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161904529 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111819803 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113882844 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.142201276 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113905464 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135292797 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.14164798 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.126198476 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111022111 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.144953927 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118172798 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112965904 seconds)
  done (took 5.671389585 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.129502512 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128133615 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135403577 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.165426686 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122758274 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125075238 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.155300505 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123697058 seconds)
  done (took 2.278003863 seconds)
done (took 31.930591588 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.135471034 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.12791272 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.128954706 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.151037692 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.19470589 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.143151689 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.127163143 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114486276 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.121319261 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.159202935 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.111697027 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.113889703 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.156575262 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.120408836 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.227047742 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.123514689 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.230981221 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.200508545 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.142382701 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.122985002 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.115680981 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.234309246 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.118861598 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.114777147 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.234779986 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.115561605 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.218816951 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.117021499 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.116193769 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.143963759 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.198363435 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.148374996 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.11648691 seconds)
  done (took 6.125451514 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.21577035 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.119060821 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.150360799 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.121152883 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.118793154 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.148837775 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.21793561 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.147783904 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.122760712 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.121134945 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.119663341 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.22809245 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.124161005 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.142950422 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121838527 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.115072504 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.246070329 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.119922959 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.111951853 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.126952564 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.114290933 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.120718237 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.259342402 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.113422323 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.120971139 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.150598414 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121640864 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.122947135 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.14923893 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.121060256 seconds)
  done (took 5.531353759 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.128440726 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134125318 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138494958 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.218276684 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.14896833 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.162333704 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.144177934 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136145963 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.1736452 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.115717972 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129916432 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.18280786 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131299623 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125395105 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.148101201 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134140556 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137195577 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.145152154 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123502108 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131843628 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.164633064 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.134551475 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142542651 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.152333639 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.114373977 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121959879 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.153165713 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.131391632 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123215817 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.1565431 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.118345655 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.118642454 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.116751568 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.180309888 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.117171864 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.15571179 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142264986 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127126732 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.156837547 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.148130083 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118124189 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.145306586 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.143801513 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170110164 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.143452841 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130932956 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.126349578 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.157216189 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.113763047 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13417118 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.185518653 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.116836511 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.136254553 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.142930254 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.114467721 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123539119 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.114394472 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.14638578 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131631829 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.11858921 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.167909808 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12328559 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125396567 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.144136227 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.127639384 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.113640608 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.113290887 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.148989131 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.14198849 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121122986 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.180702507 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.115670194 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124562151 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.155858736 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.126764793 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.1258229 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.142671601 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.126565667 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125346936 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.120047472 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.157654105 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.117161957 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117560457 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.160759613 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.136574612 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.129093913 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.157022838 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.129962084 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117181065 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.146492686 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133080896 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115772546 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.14885547 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.129229878 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.115631012 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.146488568 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.130560216 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127199426 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112816775 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.17029283 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.119788809 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113684565 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.169796408 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.121560207 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.12049254 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.154237847 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.1590689 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114165049 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.156581896 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.129867519 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114979758 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.151433779 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.121047801 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.115159215 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.161418054 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.132770851 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.123253269 seconds)
  done (took 17.234123512 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.329514356 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.316148654 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.187047075 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.318755778 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.159013628 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.21331284 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.312117505 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.312982891 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114884082 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.183363564 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.168525919 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.283891532 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.147372919 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.144917797 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.316114332 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.370462223 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.176200441 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.153769228 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.183793265 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.129153968 seconds)
  done (took 5.735941358 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.139126804 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.152518515 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.168999892 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147524698 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.121898367 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.159942742 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.116402437 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135703558 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.153019162 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126445836 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.117726464 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.161501056 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124684295 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.129347774 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.160744027 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.155183346 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.124272478 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.150123294 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.140627889 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119906541 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.139424139 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.145002102 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.125079203 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.168976745 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132168393 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.126629323 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.144241962 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122283829 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.119142456 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.149831808 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121998113 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136045008 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.151213825 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.111729394 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128260676 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.132183663 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.148441515 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.119891556 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.120188762 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.147930372 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131761799 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.12514549 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123652376 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.134116452 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.133989461 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.11635538 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.1272061 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.158897537 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.112995206 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.130855739 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.158748287 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.128022888 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.122432904 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.165145278 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.121889686 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.132264856 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.155810943 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.128514594 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.121053377 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.142987528 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.116172976 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.120015505 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.120894585 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.15711289 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129224096 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.1388172 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.162247671 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.115990048 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.119449723 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.149580793 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.120254334 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.130515917 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.16880561 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.122388544 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.119458197 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.157818606 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.121727311 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.100786747 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.124514104 seconds)
  done (took 11.891918544 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.144232489 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.119343185 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.135004077 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.181626476 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.123401156 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.121803726 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.149995939 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.136668117 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.124955697 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.158521053 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.125980324 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.12901974 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.169129799 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126212067 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.119406683 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.162478176 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.124793243 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.154404431 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.164684123 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.145503005 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.12480114 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.152067486 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.129858471 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.127632081 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.177000173 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.129032158 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143398075 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.155153284 seconds)
  done (took 5.183530762 seconds)
done (took 52.894940897 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.356159497 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.541828028 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.31562075 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.309932582 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.350827066 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.327838321 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.309868482 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.323858807 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.910646366 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.285973917 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.310889 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.308310176 seconds)
done (took 29.870085534 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.408638326 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.820377234 seconds)
    (2/2) benchmarking "String"...
    done (took 1.612570272 seconds)
  done (took 4.638893729 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.321036755 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.304197634 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.529461916 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.304779835 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.308967579 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.322936105 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.318089092 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.326078149 seconds)
  done (took 16.61948602 seconds)
done (took 27.191785551 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.384485919 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.517171023 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.559565152 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.307189885 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.309583689 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.308448295 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.307216765 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.329856466 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.311657167 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.316869402 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.702095116 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.586141436 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.319431759 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.703233619 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.320592874 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.335133589 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.306465289 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.54356992 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.306715279 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.336768829 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.286595915 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.307139535 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.310374806 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.308690972 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.311763531 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.319254112 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.332321364 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.307170431 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.498257883 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.323048719 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.338787052 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.310106666 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.332884035 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.309227256 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.316488166 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.307787567 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.505596995 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.312427673 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.296056768 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.310212868 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.509661785 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.325460332 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.310423985 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.309428327 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.311283115 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.355847948 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.296955164 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.419670579 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.330231144 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.308308712 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.382950947 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.68797768 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.32370605 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.314648037 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.318802167 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.545642732 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.316129565 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.362515434 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.331233262 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.31550486 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.310831614 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.306210739 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.310952633 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.313205112 seconds)
  done (took 150.581864779 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.30729788 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.307516238 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.321635435 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.352104678 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.312672656 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.308584078 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.307783608 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.307967773 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.307133383 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.335631008 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.311353225 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.309357555 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.31127879 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.259570601 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.313975367 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.330246764 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.31179704 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.311985406 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.327253182 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.30672895 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.308342349 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.311162589 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.320939022 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.306910056 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.346824353 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.381188208 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.3242896 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.325909103 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.316662586 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.308062815 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.346116313 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.357570106 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.892116915 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.175653377 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.315147207 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.312260208 seconds)
  done (took 84.119520359 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.308217357 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.308055209 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.307809779 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.337994523 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.307671487 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.84771748 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.853437183 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.015199832 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.933690232 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.558907201 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.542630523 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.310884926 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.39778642 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.320129602 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.30931981 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.321703478 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.33330819 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.311093587 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.307214273 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.841628124 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.31893198 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.357112394 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.481268698 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.322087923 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337049755 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.703393051 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.307960093 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.336742696 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.634406296 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.353156281 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.307194011 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.636883789 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.823771699 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.420620319 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.309207418 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.336050069 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.309051227 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.307322914 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.583533469 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.306404271 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.306862324 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.311079425 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.944207936 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.312243115 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.840139307 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.311229304 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.218784352 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.307692868 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.307751334 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.384339403 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.887746246 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.30963407 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.306844179 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.309164391 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.305996049 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.307449314 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.335662931 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.307567966 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.318754743 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.399784959 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.307736461 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.310276377 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.335629796 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.307323805 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.502349881 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.308883672 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.871629644 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.363348673 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.444214008 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.818496461 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.30483525 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.398232728 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.421983608 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.305429196 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.305874217 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.304447907 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.304527369 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.411765337 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.304604824 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.681478269 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.472622768 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.319897565 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.469590171 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.401679553 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.305056868 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.595243036 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.308966642 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.306062425 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.976903458 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.397095727 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.305949525 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.304993019 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.30600065 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.68140749 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.816274651 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.477948978 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.309804349 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.304096632 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.488428744 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.309527135 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.69568246 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.807031431 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.894243759 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.307829989 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.415355837 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.471252113 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.320499073 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.306189263 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.304291416 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.465001573 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.310070147 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.365367776 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.305775437 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.705084143 seconds)
  done (took 376.355293966 seconds)
done (took 612.261235264 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.193101812 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.142972065 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.287839299 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.15501775 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.13400103 seconds)
  done (took 12.117630415 seconds)
done (took 13.322653571 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.486322349 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.488825692 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.361120329 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.491158967 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.338012932 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.500346563 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.46774987 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.330651641 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.413999724 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.382687894 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.415092814 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.354615618 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.338692909 seconds)
  done (took 19.573680326 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.593266327 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.31516601 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.376048064 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.55391505 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.352909809 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.593234863 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.61510753 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.316815662 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.458794523 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.324802809 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.323333624 seconds)
  done (took 19.030284868 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.582612532 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.317258955 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.370528486 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.551896421 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.350248198 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.572403783 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.606111677 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.316312543 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.477700636 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.323949741 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.322314145 seconds)
  done (took 18.99706064 seconds)
done (took 58.805063531 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.222880348 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 16.737952917 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.339626983 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.402656963 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.320834391 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.334752237 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.405421664 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.323790448 seconds)
  done (took 28.293310508 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.319931323 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.320074035 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.321470515 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.319790112 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.319566096 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.317677478 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.3221103 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.319498459 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.320934274 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.319089122 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.321222271 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.319595869 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.31966757 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.32283983 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.322055057 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.319691931 seconds)
  done (took 22.331928998 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.323409728 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.321638313 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.319657385 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.319822214 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.320866459 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.320596872 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.321933224 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.320026838 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.319525519 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.320036208 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.321598268 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.320305425 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.321158413 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.321651635 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.320472504 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.322135829 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.320991686 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.31916372 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.326403784 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.321592108 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.319775637 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.320619665 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.321375624 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.320744688 seconds)
  done (took 32.913159415 seconds)
done (took 84.743643213 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.310655386 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.336078976 seconds)
  done (took 5.854635413 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.38103909 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.383571308 seconds)
  done (took 3.972829239 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.321971248 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.322135674 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.322035463 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.322661973 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.32211305 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.322231127 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.322682677 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.321577692 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.322176392 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.321554867 seconds)
  done (took 14.429469726 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.322220005 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.321928998 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.32201478 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.326709306 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.322708839 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.323871369 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.323957286 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.323003876 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.324043698 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.322872251 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.328462863 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.321879279 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.324280581 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.323208804 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.324132222 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.323628576 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.323753162 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.324440437 seconds)
  done (took 25.036428586 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.337600166 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.344787616 seconds)
  done (took 3.890559626 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.463551886 seconds)
    (2/7) benchmarking "second"...
    done (took 1.366692734 seconds)
    (3/7) benchmarking "month"...
    done (took 1.44185797 seconds)
    (4/7) benchmarking "year"...
    done (took 1.429778969 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.366217087 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.345428636 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.366318993 seconds)
  done (took 10.989500555 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.32499717 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.528960431 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.66234283 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.881513639 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.325468305 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.328341987 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.132173114 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.32753912 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.332013374 seconds)
  done (took 15.053468959 seconds)
done (took 80.434756297 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.31380302 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.373588732 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.355291214 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.3348977 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.62096687 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.349867967 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.317447356 seconds)
done (took 16.876503315 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.301779826 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.299173723 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.297924884 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.312471699 seconds)
  done (took 10.422492784 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.314037176 seconds)
    (2/2) benchmarking "read"...
    done (took 1.599508506 seconds)
  done (took 5.124920306 seconds)
done (took 16.757399518 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.328004141 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.326623461 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.325493322 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.325795427 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.327265964 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.327043135 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.325978294 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.326700526 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.327264386 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.327289897 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.32846736 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.327269384 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.327942555 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.325047998 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.325953265 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.327671057 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.326928383 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.327516223 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.326942789 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.325948272 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.327330297 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.328251722 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.326219419 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.325591821 seconds)
  done (took 33.056955235 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.327638831 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.325997293 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.327708461 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.328173483 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.327228531 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.328140113 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.326767433 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.326961377 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.327449353 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.328415862 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.325873236 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.328879617 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.329021742 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.327382615 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.328398666 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.32734647 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.327777956 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.328232365 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.328836212 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.326571773 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.329406095 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.32661001 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.328185156 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.32959168 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.327581049 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.327919805 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.328554815 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.329240728 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.328527537 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.327369522 seconds)
  done (took 41.048781646 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.335774599 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.336769214 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.332802679 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.332021826 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.331750916 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.333702001 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.331329791 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.331751263 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.331838824 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.331994889 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.331011006 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.332117314 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.332115913 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.333366662 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.332460473 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.333218882 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.332256627 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.332790131 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.330418511 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.333710677 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.333496158 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.331908777 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.332831993 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.33246076 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.333513776 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.333699775 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.332770733 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.332934112 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.332890592 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.333783363 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.332928206 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.334031999 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.332649696 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.334411662 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.332966723 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.336298533 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.336071622 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.338100876 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.334400806 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.33352781 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.33453948 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.334160882 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.334751945 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.335050531 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.334995144 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.334639789 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.334585229 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.336199119 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.33498467 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.333991657 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.334970161 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.333734578 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.335277495 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.334972153 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.336027012 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.334049019 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.335355682 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.335971803 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.334434708 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.336032261 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.335363094 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.33591662 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.335746115 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.335991827 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.336397932 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.335571144 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.334862249 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.3361598 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.336598062 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.335947995 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.336362378 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.337383385 seconds)
  done (took 97.278390551 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.3335368 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.33466524 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.333413567 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.332246835 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.332310397 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.334954985 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.332546807 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332915806 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.331738384 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.335192705 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.334399471 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.333511016 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.33437204 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.334695018 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.33476337 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.333176458 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.334644697 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.334918195 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.335270703 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.336139624 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.335656943 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.334311596 seconds)
  done (took 30.567288736 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.335391953 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.336123369 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.332851242 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.336061918 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.336462152 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.33801306 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.33451236 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.337998372 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335396194 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.33416395 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.333952954 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.335854861 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.337441846 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.333540586 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.334532436 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.337466823 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.336609721 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.337870917 seconds)
  done (took 25.263844274 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.33580724 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.335756575 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.33607154 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.335683628 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.335158566 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.337220958 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.335003778 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.33830218 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.335925644 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.335047294 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.337457791 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.337521652 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.337314026 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.334955139 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.33785061 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.335317863 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.338200855 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.334731022 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.337862756 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.335654146 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.337266894 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.336714601 seconds)
  done (took 30.620506697 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.337467158 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.336537299 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.335980214 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.334784312 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.335440815 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.335975723 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.336625666 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.332745361 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.331377361 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.329593163 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.328707425 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.330493286 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.331490819 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.328335512 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.328723314 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.329193948 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.330368095 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.329730984 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.329178422 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.328169853 seconds)
  done (took 27.863005928 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.331543244 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.331729539 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.330725077 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.331603386 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.332114874 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.334279996 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.332791551 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.331742072 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.330784867 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.33336202 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.331781787 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.33131119 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.3320956 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.332321839 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.33210761 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.331324826 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.331946878 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.330013884 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.329316492 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.32987464 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.330547764 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.329162208 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.331026802 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.333558288 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.32640865 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.326884566 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.32740431 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.327439274 seconds)
  done (took 38.481176134 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.32519427 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.32624482 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.325832691 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.322706503 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.322773768 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.321927502 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.322364748 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.321621641 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.323380484 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.323126622 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.322773931 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.320279036 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.321278811 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.320323264 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.322285342 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.319632825 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.322549893 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.321421127 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.31673168 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.315073183 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.316635889 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.317920508 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.318139613 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.315915415 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315993583 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.317136669 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.312250381 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.312952492 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.314081101 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.312452162 seconds)
  done (took 40.802514552 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.359532796 seconds)
    (2/2) benchmarking "in"...
    done (took 1.363990437 seconds)
  done (took 3.923047125 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.308325371 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.31093581 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.310673633 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.310885141 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.309744013 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.311974902 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.309557745 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.305796554 seconds)
  done (took 11.676622397 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.30319943 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.309939476 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.307168013 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.309187577 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.307994492 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.30191209 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.306090498 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.309139753 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.301403815 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.302161194 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.304096977 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.304275943 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.305118607 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.299346699 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.298573928 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.301081289 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.305190123 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.303904396 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.303900425 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.302898463 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.308251823 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.297091143 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.299998691 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.300973643 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.296590109 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.303860352 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.302053836 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.304175364 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.292896829 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.29808741 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.295012142 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.299827715 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.301104301 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.298541696 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.299988914 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.2982372 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.300259272 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.296722698 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.298181655 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.300066799 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.295928123 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.294538513 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.292039916 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.295476023 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.292281249 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.297284753 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.295233925 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.293438285 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.288898345 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.292519995 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.298715987 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.291429516 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.293876798 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.291181559 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.290732263 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.296609796 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.297860971 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.289942979 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.292832539 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.296084114 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.300209444 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.295972795 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.289857744 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.294122342 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.293333194 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.301508133 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.297520469 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.293711897 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.291761327 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.290680107 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.291858213 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.298231073 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.296491697 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.292526467 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.292172626 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.289886178 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.284831903 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.289596385 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.291215221 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.291142804 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.29159586 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.289757694 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.291704682 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.293538423 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.283435419 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.290071413 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.287068654 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.288583419 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.283087627 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.292207195 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.293683433 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.287773726 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.279844957 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.280866838 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.283986577 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.287605716 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.281323604 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.28471374 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.285946491 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.28511961 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.284702074 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.28225391 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.285100757 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.286704602 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284031623 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.288055005 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.285322208 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.278327644 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.284639447 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.286495733 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.283939623 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.279764635 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.28183835 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.285660828 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.279899696 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.283016371 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.282388522 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.279110804 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.284419013 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.28251148 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.283949263 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.293752592 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.283755577 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.282091107 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.279450266 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.28750648 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.280318354 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.278055352 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.283945093 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.280006553 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.279053835 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.27549308 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.283184274 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.275926174 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.281558378 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.275318428 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.282847237 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.279106124 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.278857468 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.274504037 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.277358172 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.274658386 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.277418079 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.277998094 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.281746648 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.275806254 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.279406872 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.276015535 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.274852205 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.275436847 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.27762823 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.27941168 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.274855471 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.278554386 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.272547806 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.277715567 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.272616856 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.278736902 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.27799493 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.278103484 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.27872991 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.269944982 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.273673718 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.277984028 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.275039934 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.273693969 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.276459525 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.276619944 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.278282226 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.270954164 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.276900831 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.269771429 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.272848811 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.28062447 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.276146197 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.276566696 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.274158065 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.277162076 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.275984584 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.275349664 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.272482696 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.274488973 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.276863175 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.277040279 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.278284965 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.275166522 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.275324782 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.270768969 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.270534309 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.276385275 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.273114758 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.280974499 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28055566 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.27956422 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.271794448 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.278343255 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.271407396 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.278429667 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.274816512 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.278092089 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.277512444 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275811998 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.271661935 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276494248 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.273389046 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.277396189 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.270991547 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.277737178 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.277195851 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.27740636 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.276615598 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.271846574 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.272889501 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.277001939 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.276094937 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.277092876 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.270721962 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.276567452 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.271021854 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.272198655 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.279087213 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.278150149 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.278322543 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.279895819 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.274098229 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.274553904 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.274179585 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.272215927 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.278083807 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.274038915 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.275921369 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.281165375 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.275501208 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.27242372 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.28026234 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.276448466 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.272272467 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.274521881 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.280391432 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.274831477 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.273167472 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.281986717 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.280574515 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.276716939 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.275911432 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272240261 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.278296583 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.275916226 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.277644647 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.269782251 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.276879277 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.272245042 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.275373915 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.271447072 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.273227455 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.273011431 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.274648019 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.279612167 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.277918579 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.272064376 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.278091927 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.27667505 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.276741664 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273482101 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.280745802 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.277348835 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.276195752 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.27489954 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.273750369 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.279972117 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.272327228 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.278163336 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.27213747 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.282864674 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.288496876 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.278932573 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.277811973 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.279698966 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.278117888 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.2769866 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.273963303 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.274289241 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273290784 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.273093382 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.273981029 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.278305566 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273700881 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.280178474 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.275882753 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.276483864 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.27952525 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.277711663 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.272551796 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.279825205 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.278550171 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.277641449 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.273852412 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.278653411 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.275062328 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.276875476 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.274950414 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.276272598 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.282411133 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.27993368 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.276292894 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.276817162 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.275658118 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.275346426 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.277730104 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.281442878 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.2780416 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.284099571 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.277252219 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.28122335 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.276710212 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.282756587 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.282615191 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.278939336 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.284654086 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.277657193 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.273399901 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.275243461 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.280294785 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.284309354 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.284694535 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.277427971 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.283544336 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.280711193 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.280298839 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.281720868 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.280152412 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.281307446 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.281650566 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.285276101 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.280363581 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.278990003 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.278798834 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.283161248 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.281750038 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.280873942 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.275831956 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279738124 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.284003157 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.277574618 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.277474997 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.27752015 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.28117696 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.282329629 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.283168341 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.282329162 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.282345084 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.285327713 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.282274217 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284145573 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.28205777 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.284480127 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.286347097 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.285294012 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.286554304 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.278607914 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.28514162 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.283821433 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.279786378 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.278743043 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.280115411 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.284209003 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.279202921 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.289576129 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.282298661 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.280112192 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.279599726 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.285598882 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.278165897 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.286765967 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.297023851 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.280259839 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.284981423 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.283170575 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.278696439 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.285628483 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.283267725 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.277951415 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.280330971 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.285521143 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.288021432 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.278880206 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.285122999 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.278663685 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.285407858 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.284979527 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.284790172 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.284393879 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.284860859 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.279536519 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.283584807 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.281127109 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.283831586 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.277364067 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.280104292 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.279271731 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.287028035 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.286235291 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.281470856 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.282148823 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.281822616 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.276147607 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.276988713 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.281953374 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.276065707 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.281847014 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.278622213 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.277250145 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.276655357 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.276288664 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.275721905 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.280564869 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.275202249 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.275013327 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.278764095 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.277986903 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.279468735 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.274198421 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.279364652 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.273717681 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.272810095 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.27892786 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.273604873 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.27903943 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274104401 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.276353662 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.274241506 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.278390172 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.277698452 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.277418019 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.272344682 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.273960322 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.280600619 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.278684895 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.27990146 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.27682128 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.281174351 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.272894796 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27913929 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.278430035 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.27449497 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.274959636 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.281255289 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.274412737 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.276726697 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.27689384 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.28119808 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.280311256 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.276537703 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.275353333 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.284461659 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.280549125 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.282022928 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.278533856 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.277729794 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.276437769 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.27990378 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.279849187 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.275365929 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.283493043 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.279563104 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.28393452 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.277278424 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.278290108 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.277476499 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.283555038 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.281046723 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.27639281 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.281703899 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.276883896 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282068869 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.281146296 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.279466122 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.273553951 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.275118516 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.277326524 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.278903745 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.280278519 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.280026464 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.278355125 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.278428471 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.283569902 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.281403464 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.281554961 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.279826207 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.2758763 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282051025 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.276777844 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.279199771 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.277659673 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.278382624 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.284214982 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281978288 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.278794923 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.282776375 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.285462163 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.283427868 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.276906827 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.27824389 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.281894272 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.28579573 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.283040124 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.277487051 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.279519772 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.284805524 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.283701028 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.284489117 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.279823237 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.291524929 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.288107614 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.279451812 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.280161694 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.282711679 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.285821356 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.283651752 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.28463028 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.280609397 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.281924935 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.288852897 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.282735312 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286294102 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.284035009 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.280604705 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.286240754 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.280956197 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.28135463 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.281962036 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.286104335 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.284882314 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.283052395 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.289880649 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.286774699 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.288278374 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.300471722 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.283897048 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.282579734 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.288305115 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.280302302 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.284874291 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.281027343 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.286533222 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.28668855 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.285957368 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.286774399 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.280566558 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.284888795 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.283219363 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.290778446 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.28450213 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.280521558 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.28286895 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.285837316 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.286303304 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.291531595 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.286219327 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.287001013 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.287078622 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.281444 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.293366723 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.293939001 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.287167704 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.286784274 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.285683363 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.284926535 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.285768772 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.287825677 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.29204397 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.2875627 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.286182464 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.283473509 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.288131462 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.287204693 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.282652771 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.283084239 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.28336691 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.287647115 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.293922691 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.298228077 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.286873168 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.283843388 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.288035567 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.288249325 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.282305209 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.288056009 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.287452986 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.283007632 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.284233727 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.29076023 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.288893619 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.286770635 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.285320933 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.292234076 seconds)
  done (took 765.657146305 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.287398727 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288243468 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28701121 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.287668872 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288336959 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286806866 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287054087 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.287201758 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.288356256 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.288160343 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.287485066 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288336746 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.28862625 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.287932183 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288380738 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.288559292 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288035336 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.289752986 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.289509727 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289191305 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.288026282 seconds)
  done (took 28.23018902 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.289766494 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.289442074 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.289464232 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.289107814 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.288415656 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.289990632 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.289401154 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290962299 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.290446821 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288963159 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.291170404 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291599709 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.288960961 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.289977706 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288710048 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.289465347 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.29159658 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.288640044 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.291984424 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.290125208 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.291355533 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.289934038 seconds)
  done (took 29.561087882 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.292496021 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.292669894 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.286689436 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.291430648 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.292576829 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.291365774 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.293198181 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.291808593 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.291445861 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.288272019 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.286967777 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.287009568 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.291958455 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.295809495 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.288032468 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.29346652 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.293685248 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.292350284 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.293681352 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.291532248 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.293271125 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.295716222 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.291705112 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.287898842 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.294315168 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.29351718 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.293222828 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.293570456 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.288067369 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.295788527 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.294287177 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.289196599 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.290794101 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.290096756 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.289152154 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.296146027 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.293817327 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.292757132 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.292826931 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.297582911 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.307605088 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.293455538 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.295983361 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.296908031 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.294558728 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.291933798 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.299250402 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.293334776 seconds)
  done (took 63.238672058 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.295665918 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.294701942 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.294503466 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.294248285 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.295265327 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.294691688 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.295429544 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.294807375 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.294110213 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.293999767 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.29350171 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.293552578 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.293265937 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.295383181 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.294978668 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.294895332 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.294477911 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.293354462 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.293444516 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.293726385 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.294192024 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.2949629 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.296052177 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.294353581 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.294619824 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.29427166 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.294890772 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.295830649 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.295306306 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.295699263 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.296596758 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.29553687 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.296859676 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.295112231 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.295293271 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.296451801 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.297504838 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.296188129 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.294674378 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.295314242 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.296730891 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.296420134 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.299515181 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.296593256 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.296074353 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.294798689 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.29662116 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.296401636 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.295391353 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.297540268 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.297363291 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.296068671 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.297483818 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.296245731 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.297072137 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.298288341 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.295822105 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.295876174 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.296999769 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.297699189 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.295640463 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.298467002 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.296825888 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.298532266 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.297786076 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.298036472 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.298282437 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.298816122 seconds)
  done (took 89.303074535 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.299423535 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.298149787 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.299230494 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29884892 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.29901657 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.299200861 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.298468303 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.299053529 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.299349865 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.29846046 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.299128587 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.299724939 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.300161638 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.299412692 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.300029604 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.298455611 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.299827843 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.299892554 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.300178246 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.300649091 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.301191233 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.299909917 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.29928259 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.299776461 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.300018184 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.300786357 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.300132139 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.301992296 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.300328306 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.301127056 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.301756507 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.301129823 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.302427875 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.301743443 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.300933411 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.301291065 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.303213272 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303397877 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.300639052 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.301167305 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.301451904 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.302059336 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.301837112 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.301951419 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.302256368 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.301460804 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.302797508 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.302284507 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.301550447 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.302637926 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.301621545 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.301460814 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.301728594 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.302528119 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.302199035 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.302051067 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.302905955 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.301600211 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.303873631 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.302938873 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.302903758 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.302310761 seconds)
  done (took 81.848028461 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.303082028 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.303348813 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.301255107 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.301501906 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.303541538 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.301447581 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.303058866 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.302972212 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.303670479 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.303432184 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304233213 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.301773356 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303866856 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303865006 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.302030454 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303154983 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.301901314 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.303528495 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.304277382 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.301844518 seconds)
  done (took 27.250848771 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.303601343 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.304774188 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.3030593 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.302254788 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.302935899 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.303405284 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.303494922 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304924423 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303091187 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304568133 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.304601187 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.304252674 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303548418 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.303546726 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.303549396 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.303811825 seconds)
  done (took 22.052132693 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.303076961 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.304202038 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.305118208 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.305292112 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.305399872 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.303068144 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.304712157 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.302594462 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.302616793 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.305581607 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.304842916 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.30691521 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.304984477 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.305326351 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.304091481 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.306187134 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.303937992 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.30335914 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.30657712 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.305349985 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.305869721 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.304145103 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.306240173 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.306136661 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.305759244 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.305437411 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.305412848 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.305307748 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.30592886 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.305973612 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.306428277 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.305930944 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.305789099 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.305158168 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.308165747 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.305580175 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.307326574 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.30640162 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.307663079 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.306669805 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.307855883 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.307064328 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.307954024 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.305799678 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.306374449 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.307872057 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.305173787 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.305962328 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.305218823 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.307643397 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.30893649 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.308512232 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.308387887 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.308632401 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.307716973 seconds)
  done (took 73.01980373 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.309232439 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.308248336 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.307386677 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.307926326 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.308833131 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.308254758 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.308046983 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.311041985 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.308170324 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.308158782 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.306844117 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.309191415 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.307985901 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.308982444 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.307432832 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.308309482 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.308605188 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.308227923 seconds)
  done (took 24.748425809 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.308258557 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.308569172 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.309997202 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.308098631 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.308098985 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.309970597 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.309392355 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.309842557 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309588633 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.309385924 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309140761 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.310318389 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310682411 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.310458682 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.30962464 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.309307828 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.311300311 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.310199129 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.30914609 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.30871079 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.312176932 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.310302435 seconds)
  done (took 30.011059162 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.304559176 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.303785902 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.304929996 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.320344151 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.317186133 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.304224464 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.304457772 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.304315327 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.324840009 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.344933081 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.339338788 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.316948046 seconds)
  done (took 16.988202309 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310963329 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312093834 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.310652344 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312377713 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311628238 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311196047 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310584637 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310261844 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312567558 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312670755 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311585374 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312337512 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312364443 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311480647 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311292604 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312432418 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310598256 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311153422 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311226489 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313738968 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310814497 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312925627 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312622227 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31134014 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31101593 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31210329 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312969736 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311946199 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311293204 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313567086 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3128204 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312371144 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312931213 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311692225 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313331432 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313884768 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311745283 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313340411 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314725288 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31323001 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.314189572 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314081174 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314548219 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313320249 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314053081 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312987669 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313948092 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313539428 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3122859 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315619459 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315678059 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312975664 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314386895 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314493091 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315188302 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315397287 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313484111 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314333523 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314884786 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313722447 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313718212 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314919394 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315153963 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3144053 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315334152 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314467501 seconds)
  done (took 87.85706652 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31598317 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.314384009 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314326495 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314607679 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314254491 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314159288 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316308893 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314335368 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313614503 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314500742 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317030094 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314552949 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314892152 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315564004 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316248791 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316190846 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315668183 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317363818 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31453773 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317638 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315806956 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314971643 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315571424 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316157123 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316304937 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316784929 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315891893 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315811285 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316189026 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31705145 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316000061 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317015074 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316465313 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.31598645 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316432913 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316268727 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316039021 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316652488 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316079625 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317887093 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316435863 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318331976 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316450394 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3165396 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316733405 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318749576 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316871056 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31767145 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316700562 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317441115 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317722464 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319040075 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318001895 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317912094 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317292706 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318546646 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316910764 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317789669 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31731689 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318917727 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317193499 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318419738 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319427516 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317679584 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317520796 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318823374 seconds)
  done (took 88.097330484 seconds)
done (took 1809.656819868 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.478155387 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.433817983 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.312643385 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.326175444 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.312847583 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.337670688 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.327597977 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.314091326 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.31258502 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.312908515 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.312997198 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.502811421 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.36831585 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.314307972 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.313035258 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.410057983 seconds)
  done (took 26.896930438 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.340286618 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.321578737 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.426436446 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.321500196 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.341240481 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.498700318 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.377123491 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.319071559 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.480068885 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.340514286 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.310028943 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.337715705 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.316987917 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.309736064 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.336533565 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.499980332 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.559487201 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.319719267 seconds)
  done (took 28.964444676 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.744455415 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.338441396 seconds)
  done (took 5.29066906 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.338354551 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.318660188 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.319098263 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.31758986 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.309884304 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.311915519 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.31778447 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.316175094 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.310141176 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.442436614 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.324782558 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.328978429 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.316943511 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.319143826 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.322072333 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.360911687 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.464122637 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.323463343 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.321846429 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.322612742 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.316842121 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.403837208 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.361058734 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.327217416 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.437513204 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.316809673 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.32457516 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.324456166 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.44632252 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.324319282 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.318097855 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.318071765 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.320651235 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.325166635 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.787852382 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.321025629 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.327230793 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.343286532 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.322939396 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.463615356 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.320497923 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.323668412 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.311605418 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.787282713 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.452975542 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.440296275 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.318392518 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.321234033 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.321836709 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.385051686 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.323581423 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.322550767 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.375931484 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.151579056 seconds)
  done (took 84.505771179 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.363992516 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.313279161 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.493652118 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.332645033 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.313930906 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.313152204 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.314227389 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.588275034 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.36832714 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.328235959 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.597985539 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.878306198 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.319609645 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.385166366 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.31825392 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.405915043 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.316116354 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.314760745 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.316507022 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.32006667 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.861306716 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.32009394 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.315932926 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.446732464 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.352410777 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.821078973 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.313726374 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.315266445 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.33033443 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.315819004 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.832585916 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.317519524 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.413398245 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.31755794 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.586099127 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.688085847 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.644799777 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.331433111 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.321719407 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.317911575 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.324955701 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.801606434 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.661870851 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.317390728 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.316160008 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.811210269 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.318239784 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.321868939 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.326336149 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.571573982 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.317205562 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.318755355 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.316709371 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.317263314 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.316622252 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.364097177 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.321023214 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.822335511 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.31774139 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.318074225 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.337719495 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.319438479 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.318844513 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.318574621 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.333156325 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.668101889 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.514859517 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.318265169 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.66534271 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.826589113 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.317528271 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.89770877 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.318031643 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.3259851 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.565820966 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.318100674 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.332183487 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.814726683 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.34537921 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.319619302 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.648392533 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.322631819 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.612159257 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.334803452 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.319791811 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.895954997 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.33502347 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.335925242 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.319196457 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.320299611 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.320015698 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.321917762 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.592110958 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.359082147 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.31968523 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.320537352 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.33928933 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.332870787 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.319152147 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.327066346 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.901241918 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.32216432 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.320011525 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.324238833 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.320729462 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.319708747 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.320322266 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.319823496 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.592357441 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.322929443 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.342437217 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.321735042 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.319892157 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.32748499 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.404950682 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.32784348 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.618200422 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.320786545 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.321132518 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.323622159 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.323407036 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.376214575 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.322048252 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.322504937 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.187109046 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.585113263 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.338686888 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.321467029 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.3219555 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.321472487 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.320835483 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.322768037 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.379678226 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.326571464 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.111458141 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.329041092 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.33106619 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.322570966 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.325974245 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.322903781 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.327243296 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.323691915 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.61707159 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.59994468 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.50827348 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.324295704 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.330966538 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.080177833 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.330983182 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.501856499 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.340726693 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.323466981 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.572397115 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.581960743 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.325550853 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.322925304 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.324019766 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.58921468 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.323562248 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.641334071 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.870435788 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.325162889 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.332835833 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.115955893 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.033025735 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.330612242 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.326735269 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.610930924 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.344093508 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.324377228 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.324576762 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.326339535 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.324730536 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.325327696 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.329001502 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.325686553 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.326038407 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.626865102 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.515774266 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.341543427 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.330437713 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.822822301 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.355909817 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.332182802 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.332358828 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.328341607 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.325379387 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.419324608 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.329002675 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.327542715 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.329200905 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.334180865 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.83885231 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.333584525 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.328210617 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.516473482 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.025403197 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.326433094 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.325741578 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.326701186 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.251856648 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.851714326 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.333787541 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.626071342 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.331837846 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.365625911 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.326211959 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.418077188 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.852125155 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.327572782 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.325592687 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.988193902 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.327011026 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.826399101 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.326774144 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.3265284 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.916125615 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.328192668 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.32692367 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.329001765 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.327853985 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.650299795 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.327857906 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.328962387 seconds)
  done (took 494.764216966 seconds)
done (took 641.628462945 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.327801039 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.328788779 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.315493673 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.334081611 seconds)
  done (took 10.529244894 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.369582904 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.335480001 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.342400971 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.335012697 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.347273323 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.335440496 seconds)
  done (took 9.290293002 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.329293081 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.330154005 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.334791008 seconds)
  done (took 8.21938272 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.544634843 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.353526013 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.684713306 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.337057968 seconds)
  done (took 9.146179155 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.344828736 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.34328875 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.343047829 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.348249658 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.372821519 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.370711946 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.348944143 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.347588501 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.369787863 seconds)
  done (took 13.414042339 seconds)
done (took 51.823124633 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.224706563 seconds)
    (2/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.338354866 seconds)
    (3/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.361764196 seconds)
    (4/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.505153531 seconds)
    (5/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.365484878 seconds)
    (6/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.316492977 seconds)
    (7/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.326872671 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.402501576 seconds)
    (9/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.478254712 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.36615931 seconds)
    (11/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.312207972 seconds)
    (12/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.157844181 seconds)
    (13/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.31528367 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.449940989 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.488231311 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.432519722 seconds)
    (17/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.485038654 seconds)
    (18/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.434112743 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.440777545 seconds)
    (20/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.497839004 seconds)
    (21/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.317698279 seconds)
    (22/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.338628154 seconds)
    (23/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.031026303 seconds)
    (24/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.318139703 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.389007392 seconds)
    (26/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.581331766 seconds)
    (27/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.187889967 seconds)
    (28/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.487197002 seconds)
    (29/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.313952911 seconds)
    (30/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.34213013 seconds)
    (31/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.619128579 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.419191735 seconds)
    (33/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.109771658 seconds)
    (34/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.219217715 seconds)
    (35/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.399450846 seconds)
    (36/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.33610772 seconds)
    (37/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.520440353 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.368006669 seconds)
    (39/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.335721099 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.47689673 seconds)
    (41/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.361655966 seconds)
    (42/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.413608359 seconds)
    (43/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.316141934 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.496600763 seconds)
    (45/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.327323246 seconds)
    (46/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.446227042 seconds)
    (47/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.191413062 seconds)
    (48/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.458140568 seconds)
    (49/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.446506236 seconds)
    (50/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.511966955 seconds)
    (51/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.590816308 seconds)
    (52/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.322631694 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.485390617 seconds)
    (54/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.374918046 seconds)
    (55/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.369424475 seconds)
    (56/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.46172599 seconds)
    (57/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.55836314 seconds)
    (58/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.320981137 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.488750999 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.596709927 seconds)
    (61/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.316710275 seconds)
    (62/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.448224394 seconds)
    (63/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.470063975 seconds)
    (64/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.424625685 seconds)
    (65/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.316121523 seconds)
    (66/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.344406605 seconds)
    (67/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.095203942 seconds)
    (68/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.146843867 seconds)
    (69/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.419743537 seconds)
    (70/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.335442002 seconds)
    (71/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.383276959 seconds)
    (72/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.372345187 seconds)
    (73/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.513928014 seconds)
    (74/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.337729574 seconds)
    (75/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.331162489 seconds)
    (76/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.428887985 seconds)
    (77/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.448952379 seconds)
    (78/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.481443403 seconds)
    (79/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.366094152 seconds)
    (80/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.316139999 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.454782469 seconds)
    (82/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.423528381 seconds)
    (83/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.090985761 seconds)
    (84/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.382894288 seconds)
    (85/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.318291504 seconds)
    (86/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.554695202 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.455501184 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.494899202 seconds)
    (89/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.36695942 seconds)
    (90/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.377067148 seconds)
    (91/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.319782845 seconds)
    (92/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.382360651 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.404119175 seconds)
    (94/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.157966158 seconds)
    (95/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.373708343 seconds)
    (96/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.454540067 seconds)
    (97/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.492452599 seconds)
    (98/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.50955118 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.39628529 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.446584874 seconds)
    (101/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.367782178 seconds)
    (102/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.427380331 seconds)
    (103/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.319102646 seconds)
    (104/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.338861901 seconds)
    (105/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.335251877 seconds)
    (106/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.174887524 seconds)
    (107/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.383464823 seconds)
    (108/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.474699008 seconds)
    (109/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.319055767 seconds)
    (110/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.319238509 seconds)
    (111/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.422122569 seconds)
    (112/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.006466609 seconds)
    (113/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.52207741 seconds)
    (114/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.369849192 seconds)
    (115/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.524673794 seconds)
    (116/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.191867243 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.3907923 seconds)
    (118/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.382556583 seconds)
    (119/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.336599723 seconds)
    (120/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.315421329 seconds)
    (121/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.405663419 seconds)
    (122/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.375045852 seconds)
    (123/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.328276177 seconds)
    (124/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.329979257 seconds)
    (125/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.562541467 seconds)
    (126/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.186159797 seconds)
    (127/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.482040523 seconds)
    (128/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.466649568 seconds)
    (129/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.424454305 seconds)
    (130/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.338646638 seconds)
    (131/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.043924975 seconds)
    (132/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.366517109 seconds)
    (133/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.373296886 seconds)
    (134/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.373999212 seconds)
    (135/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.565746999 seconds)
    (136/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.386995291 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.4337241 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.595580108 seconds)
    (139/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.45071002 seconds)
    (140/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.363486482 seconds)
    (141/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.075025412 seconds)
    (142/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.322797824 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.491954014 seconds)
    (144/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.322939815 seconds)
    (145/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.384609246 seconds)
    (146/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.418367726 seconds)
    (147/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.151014523 seconds)
    (148/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.351679479 seconds)
    (149/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.390136098 seconds)
    (150/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.320360647 seconds)
    (151/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.560975278 seconds)
    (152/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.109794628 seconds)
    (153/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.565915917 seconds)
    (154/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.463497695 seconds)
    (155/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.368954873 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.44204144 seconds)
    (157/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.329034271 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.405250402 seconds)
    (159/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.678428172 seconds)
    (160/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.424174506 seconds)
    (161/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.32120562 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.379609912 seconds)
    (163/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.443077061 seconds)
    (164/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.470307873 seconds)
    (165/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.309890632 seconds)
    (166/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.441449339 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.460047253 seconds)
    (168/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.340558037 seconds)
    (169/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.41237849 seconds)
    (170/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.008672544 seconds)
    (171/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.446801931 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.49929495 seconds)
    (173/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.527300794 seconds)
    (174/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.321799895 seconds)
    (175/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.321643717 seconds)
    (176/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.173609856 seconds)
    (177/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.479243467 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.446683015 seconds)
    (179/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.404520995 seconds)
    (180/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.377074609 seconds)
    (181/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.378091916 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.541260145 seconds)
    (183/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.495115026 seconds)
    (184/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.321899888 seconds)
    (185/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.52832791 seconds)
    (186/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.05663577 seconds)
    (187/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.451648046 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.599803897 seconds)
    (189/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.326493054 seconds)
    (190/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.327933853 seconds)
    (191/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.328308855 seconds)
    (192/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.612211377 seconds)
  done (took 340.646620315 seconds)
done (took 341.873750694 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365946429 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.428157359 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.34896424 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.348876211 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.350147809 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.342495524 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.368760895 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.350171938 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.360238428 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.359630073 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.341996602 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.357361067 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.362752659 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.357964225 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.38457992 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.351006826 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.350779218 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.358316026 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.360676253 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.361986287 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.35177484 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.35209749 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.371435182 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.350122697 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.357975101 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.359547831 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.356248497 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.353696353 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.355323704 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.362103347 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.344206238 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.356997866 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.363816201 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.360951078 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.352070941 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.359300009 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.351511066 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.430472361 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.367701464 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.360060493 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.356233154 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.364222927 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.356049395 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.357325908 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.361613975 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.371373761 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.359026707 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.367162406 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.344065315 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.369114017 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367976941 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.361486912 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.356580089 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.354181684 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.352446145 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.367382663 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.359352591 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368466372 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.356315728 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.35422982 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.385096494 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.369038633 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.361658172 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.360627178 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.358783638 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.366287583 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.359467688 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.365689136 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.356021136 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.354812479 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.35434511 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.358497364 seconds)
done (took 107.222220596 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.476233906 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.35121348 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.492915823 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.357985005 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.511508387 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.479722762 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.358433836 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.358353873 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.356957096 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.14861374 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.357492626 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.357724007 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.353014797 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.357462216 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.480019469 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.360687707 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.358336403 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.048003841 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.36169834 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.492120376 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.354093394 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.358636536 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.361880381 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.155728632 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.354194094 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.350589664 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.493955344 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.359490644 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.052425711 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.349440297 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.352276522 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.05390446 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.495817799 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.379161176 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.369631765 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.369366832 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.512778177 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.363927024 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.47340728 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.474121643 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.495168615 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.398776714 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.35006888 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.355893992 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.363285847 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.363193395 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.360465279 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.390020061 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.3555575 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.361382551 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.050932984 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.372003787 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.361524313 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.361513855 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.36113304 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.390557825 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.361874638 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.363295052 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.496112639 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.364606521 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.479714645 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.158428189 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.151780077 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.364178847 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.355357822 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.362109428 seconds)
  done (took 109.844199987 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.425920149 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.433032999 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.46749755 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.357263914 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.409139006 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.468218943 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.358058396 seconds)
  done (took 11.162310693 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.363529077 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.363684722 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.406959602 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.406371139 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.363743017 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.513507353 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.363664867 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.370270487 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.361464302 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.410826888 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.365722278 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.365950661 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.371838226 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.356624581 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.406809882 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.369301116 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.473600287 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.359335896 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.363753164 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.512812301 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.363939894 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.372746189 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.40947982 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.369521909 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.366643637 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.365288072 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.126509297 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.364865886 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.362271536 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.36734876 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.36415196 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.414142322 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.367466839 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.359156194 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.365900716 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.474607774 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.366211464 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.364144805 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.368237471 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.352858517 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.370271047 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.366110459 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.36714799 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.364355222 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.367497853 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.384335022 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.36798675 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.365678386 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.365459832 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.36952091 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.411389039 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.366135855 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.365387129 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.374550226 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.417340565 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.374874284 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.365687767 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.366326578 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.370779812 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.366012618 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.515662263 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.409146517 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.369227267 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.409600509 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.367275706 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.367804212 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.370216661 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.366067649 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.453582587 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.366093946 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.410842601 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.367136113 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.542500191 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.385396678 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.369167649 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.364882513 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.366118346 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.366626244 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.360208839 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.368627572 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.366713685 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.362942651 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.368162381 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.367335505 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.368006646 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.520665042 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.471782165 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.367385667 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.375678488 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.369685026 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.367194294 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.415010318 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.368463754 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.368355517 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.41435124 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.477587693 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.416905398 seconds)
  done (took 140.511546668 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.375889652 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.37551933 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.367039102 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.388220166 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.364970003 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.363815549 seconds)
  done (took 9.484906754 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.366419656 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.371876683 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.368977843 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.367982007 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.369943415 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.373124303 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.375205512 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.365067564 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.371872362 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.370681499 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.372769096 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.374940565 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.379782697 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.370792878 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.373782041 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.372389535 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.376241884 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.36973626 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.371159418 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.370966536 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.365229927 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.370030139 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.371784438 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.366439249 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.376125104 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.374545699 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.386414288 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.37414578 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.371365215 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.373756713 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.373181652 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.375714822 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.36744492 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.370054898 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.38012183 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.368189114 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.374155833 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.379051488 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.370635702 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.375833076 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.378214372 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.372387134 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.37457727 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.378972693 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.367942421 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.37129559 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.382379059 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.387065656 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.374076957 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.37700311 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.379428343 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.373627506 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.375478665 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.379314053 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.369715205 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.370927741 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.382097733 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.377752147 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.371882312 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.369375632 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.37523486 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.375154179 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.368516219 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.379195946 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.372313649 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.381829452 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.369736014 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.376343708 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.374060168 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.37305198 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.381816377 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.372255003 seconds)
  done (took 101.162723896 seconds)
done (took 373.404991338 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.806631243 seconds)
  done (took 4.06037156 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.367420899 seconds)
  done (took 3.620212365 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.637827965 seconds)
  done (took 22.892938967 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.407784264 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.466119119 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.394115824 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.370955137 seconds)
  done (took 10.892866628 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.665774493 seconds)
  done (took 3.920016169 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.376210527 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.36867219 seconds)
  done (took 6.000566528 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.568667157 seconds)
  done (took 3.822468521 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.602516225 seconds)
  done (took 3.857430049 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.398266554 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.382102126 seconds)
  done (took 6.041208192 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.346081943 seconds)
  done (took 3.599925833 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.216831578 seconds)
  done (took 20.470763453 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.377087391 seconds)
  done (took 3.63358757 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.40555006 seconds)
  done (took 3.659528727 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.920576853 seconds)
  done (took 6.175974967 seconds)
done (took 103.902109722 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.362549853 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.364368697 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.365933102 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.363654846 seconds)
  done (took 10.711028884 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.430587543 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.429862348 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.435257882 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.429787114 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.429891674 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.430072317 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.406631441 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.404002354 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.430258089 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.430656538 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.435946772 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.430659317 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.430056908 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.404792133 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.431340127 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.437826491 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.431666009 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.436668765 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.405312275 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.429488693 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.379752904 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.430784824 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.431074282 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.380415052 seconds)
  done (took 35.408498529 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.887992756 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.442069439 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.524968489 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.423971211 seconds)
  done (took 7.534774107 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.458901166 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.461623744 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.478987577 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.515866879 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.542125372 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.476943169 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.407031901 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.403612798 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.388298772 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.461553993 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.511068309 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.445945106 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.568106535 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.380908824 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.598051748 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.380958206 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.380072978 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.46080746 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.512386504 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.529526541 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.381220895 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.459658708 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.466291855 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.447580587 seconds)
  done (took 36.375267584 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.386664218 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.39821406 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.379881169 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.393322607 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.379266098 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.379760462 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.381085542 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.385584049 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.378203729 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.379169006 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.380406579 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.39348783 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.379402079 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.38004311 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.386910579 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.381639597 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.381744909 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.386065273 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.388136639 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.380959732 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.379187094 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.387391274 seconds)
  done (took 31.704712305 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.37021899 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.370092464 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.720534137 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.62469013 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.368481114 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.369702089 seconds)
  done (took 14.082920451 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.44503641 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.587520967 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.375175303 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.727032514 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.81605268 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.3812653 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.375584506 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.618391266 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.920615289 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.915551499 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.437379923 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.443105091 seconds)
  done (took 20.303457001 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.370537273 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.375002485 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.374757129 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.390196154 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.429172415 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.378746663 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.382568534 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.370651647 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.435151798 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.435790683 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.382100096 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.43144265 seconds)
  done (took 22.017080142 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466163907 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378344735 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.377309397 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420742108 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376420635 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.222648783 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.40001961 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.077784591 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.381132693 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651279869 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377975078 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471446265 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.630475386 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384844755 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.383792219 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.365970579 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.611801875 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891197083 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385349652 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378959024 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416409596 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386678356 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38399995 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.61402328 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.225180001 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379221041 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.641415791 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378740032 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.672263803 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.651764296 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.652969412 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385516994 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652857329 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018511891 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476408163 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.590750332 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380053387 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385491219 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.375036142 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.382654397 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387216499 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.400042557 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.647834721 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386119423 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379854045 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382448531 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09452637 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.385815236 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.378856997 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.381336931 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650193136 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482630729 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.385183334 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381129786 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464162977 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381454831 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.385148652 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505626188 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942800918 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384081728 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393397731 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.387851791 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377308511 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385700136 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019665356 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.390834137 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.385834579 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.385252769 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382458833 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.380986268 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409776193 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381897254 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.402008911 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382257291 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172431891 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387646159 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389116802 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955296729 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39473217 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.389136978 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612670498 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382110846 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38304484 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.380958687 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383343783 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096103299 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393395624 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.374740543 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427888133 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.084359606 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.594344246 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405492507 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414048104 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.606443273 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.358080559 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383526133 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.396419247 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389823101 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405425047 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.088774974 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382188746 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.387487858 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638593831 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.594179973 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389027346 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.37137861 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868013051 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386832522 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.410847319 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.39803995 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.602341515 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.999083996 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662388586 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403151917 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421323947 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.384270202 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148824512 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3892353 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.394785057 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.383999703 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664283597 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.182614317 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391498797 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453230305 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390730593 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386486868 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384779925 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392871775 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.386878634 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.594528521 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395903339 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.661026991 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.394239767 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386352882 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.38855435 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392265809 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.392880957 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.608124958 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386241999 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668604646 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387146384 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386449546 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386154082 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.608519101 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.386174945 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.397298206 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648206842 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385680955 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.403685715 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.662015298 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422180071 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495539486 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416880838 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.39825563 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.646709578 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.39111294 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.392334584 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387531295 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395731701 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39062933 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.395947619 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385325102 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004282322 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368472401 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392172441 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.388392769 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.402836277 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457012188 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.394258146 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.601592214 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.395572493 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387797043 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.400150801 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.395643235 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615134612 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65852441 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.399034525 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.46999241 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.866136984 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.000380683 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40709395 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.389779022 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.387116828 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.388873146 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389938083 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389326472 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.388373889 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.602587178 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665767286 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.415100584 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.010273297 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3959026 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38943866 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.399105619 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658570711 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.401194859 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391597372 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.39073814 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39582118 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397035664 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.666060729 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531731697 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.405324604 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391944213 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.908130272 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.397876938 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391862279 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390534345 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421873956 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390163249 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237463264 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650396784 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386690493 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.66606209 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397092092 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.412774862 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.38915666 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392013511 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397387247 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.433681211 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398639781 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.605824599 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.403444692 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398954061 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950516966 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158198438 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95431029 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411904534 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.394124673 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.413519656 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.103577107 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391600841 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391244647 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629000188 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.099078654 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392347456 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.8714059 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.397346303 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16207514 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.664007128 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62933975 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405262866 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.393627233 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671577146 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608926852 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425434769 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394608219 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397786551 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.36851351 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949959067 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391758431 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.477862443 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101590299 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392059457 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400090908 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.389622109 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.414424656 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789648775 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394713038 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39245591 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.398836311 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40102751 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242104478 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396523437 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393329523 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031676007 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.410005165 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.880599684 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393256726 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.607683238 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.669879304 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.665070062 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.39880778 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.397869537 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.647382999 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667341845 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401152151 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403169407 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968152171 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.269958766 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.400781589 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394845937 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159204911 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41441817 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.699340857 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.40152708 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.400817644 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420145095 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396381592 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395868245 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.394693772 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.400696058 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368688674 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909587823 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.404414172 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408965586 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404539948 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40205959 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.650394821 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.411207528 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.013437878 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630225156 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396668055 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45126645 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.400714053 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39867468 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.378201543 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.396294557 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.397496959 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460617772 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.618164707 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.398317482 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.377449278 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.425572917 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.606800192 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.397554532 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400033871 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.629907092 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.40103603 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.405450795 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200531188 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432286002 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.400520059 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404168892 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400893336 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443320732 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465625184 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613647234 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.674884695 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.676561435 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79437318 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406994251 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40422786 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.412556988 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493433071 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41341712 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.405951723 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.172970113 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.01995291 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.214515505 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.026649833 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.677902845 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405357322 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406499696 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399196294 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534782521 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399928727 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67458671 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399964373 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.396016279 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427624111 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403932258 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412703842 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616581941 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675275735 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399509 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402947641 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405386593 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.400815664 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.675951417 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.616087352 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917932645 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98601257 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406197655 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410261385 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.118103672 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675929329 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401977842 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401664834 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400947505 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.414006136 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.407038937 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.411837492 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409043264 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542000826 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673301562 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052074365 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.671978231 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.443632531 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.91919363 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413641498 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.661235236 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400635859 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.616336589 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.028711279 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.152223541 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671340592 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471234541 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617069424 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.404682402 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539815113 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.410668457 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.408365421 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403947325 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403133352 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.401970194 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.675388591 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032586908 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671098376 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.40670362 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.408377799 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438759543 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.617083437 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.630170084 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122708006 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.630676838 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.678657399 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.41625368 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.403127145 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.027624408 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.683149925 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409098633 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.408348682 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.631961661 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.40897469 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43086144 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.922026371 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.4015693 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978987352 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.297755317 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425174439 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414326821 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.149658674 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031857311 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.409733994 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925577991 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410838039 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40712225 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685446014 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.411224256 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.404502892 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.711662909 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.410405075 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.417674078 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626965811 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.029422921 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184290605 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.417472033 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416883904 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.413217476 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40562098 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425254894 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405807732 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414019247 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.82158329 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405094437 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405991219 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418176176 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.41682296 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423850357 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.411088228 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406858197 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.412883104 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.390034836 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.391211763 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.423010919 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.535004541 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965767429 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413594484 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.081348089 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.728930897 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.660835277 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406528401 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.389528151 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.411380189 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40781259 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408034466 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408577801 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.427544626 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990430264 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.413732904 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.704490073 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.416943389 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.617820019 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619598263 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.41648663 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.631273878 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422592054 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435259038 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.383974154 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409031287 seconds)
  done (took 990.709602772 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.402515389 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.417405758 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.406486345 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.475129339 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.406008419 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.414224206 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.424747499 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.438126972 seconds)
  done (took 20.672697551 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.401987348 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.412671664 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.415563079 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.410816211 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.405048766 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.892343251 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.415115145 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.412309857 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.425357553 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.40905047 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.413583762 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.099619761 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.43676058 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.402496024 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.394294907 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.418211784 seconds)
  done (took 33.052930343 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.544147199 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.614573017 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.441310223 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.477453808 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.406860808 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.411559749 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.667509401 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.421411232 seconds)
  done (took 27.273875026 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.416406822 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.416461792 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.41791692 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.4182191 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.416943709 seconds)
  done (took 8.375066293 seconds)
done (took 1259.477759068 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.414703571 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.413967604 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.41455251 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.414771286 seconds)
  done (took 6.94727152 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.387254436 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.385867628 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.386300251 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.403010552 seconds)
  done (took 9.851553057 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.121582838 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.029646816 seconds)
  done (took 5.440514094 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.907018848 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.917726077 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.910488723 seconds)
  done (took 7.02716801 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.697663619 seconds)
  done (took 2.988761892 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.347815915 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.410553268 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.106428216 seconds)
  done (took 8.154767733 seconds)
done (took 41.698906516 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.404931176 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.659760233 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.560063382 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.405062564 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.566224601 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.560582524 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.142732639 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.40549259 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.411810096 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.408689542 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.405311031 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.566241856 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.126332766 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.651989636 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.126222621 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.651560105 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.587532253 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.413841697 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.405782487 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.405557462 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.147472976 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.417321202 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.406700863 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.419090676 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.599295605 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.551201979 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.414064883 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.653643531 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.415229654 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.416832027 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.550622137 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.409658098 seconds)
  done (took 83.558058025 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.407367721 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.419351404 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.407551141 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.423923699 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.424599747 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.423536781 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.424028711 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.407930239 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.420170374 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.418942233 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.407783636 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.423251362 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.409929506 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.407463932 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.408582085 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.409103238 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.407473702 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.408756845 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.407262399 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.409509394 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.409640125 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.40936336 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.408945757 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.408184279 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.40796403 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.40802277 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.435297155 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.417024525 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.409649183 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.421451634 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.409664558 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.42533549 seconds)
  done (took 78.540164459 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.409171426 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.409852366 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.426082548 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.409195773 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.410069434 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.411416231 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.412254197 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.422589521 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.409783013 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.40876303 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.410283061 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.410310982 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.411146364 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.411005552 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.410111536 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.410074688 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.409873343 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.409889472 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.420481986 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.410003976 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.408660636 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.410622025 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.426529085 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.427231609 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.426929982 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.410974074 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.410740549 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.432771084 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.411706803 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.410587671 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.428348662 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.412749222 seconds)
  done (took 78.554198991 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.649384004 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.425361449 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.428574339 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.419989666 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.429553686 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.425878229 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.420244152 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.657352451 seconds)
  done (took 15.152269995 seconds)
done (took 257.094150134 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.43054759 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.930102606 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.447451969 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.432015355 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.441493007 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.441918695 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.641984944 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.445172565 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.641307002 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.434628387 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.434589889 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.418306426 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.232817815 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.571169476 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.270808176 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.385708769 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.319512362 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.419824279 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.999007778 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.708113623 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.442195798 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.414516456 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.266973989 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.322318159 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.401816217 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.507372928 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.521850912 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.649023083 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.581464503 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.50188347 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.943389997 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.434258561 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.422587281 seconds)
  done (took 65.753183041 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.419412674 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.425772163 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.429115501 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.428236536 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.424895368 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.429389073 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.420553237 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.428504895 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.429141649 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.428897981 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.428542916 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.426884161 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.428912871 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.425209826 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.426392433 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.407139337 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.420234712 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.425756863 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.420518985 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.408444824 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.425326412 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.42913427 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.428603396 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.426055144 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.429737941 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.429940273 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.426844497 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.426743903 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.426169786 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.425340463 seconds)
  done (took 44.05581306 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.430918016 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.001916231 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.167472103 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.434330877 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.422313949 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.427510384 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.714779219 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.438361828 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.426298241 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.424970942 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.91931596 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.439391363 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.455659904 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.166514102 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.429762742 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.432229611 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.431416372 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.423887988 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.007987674 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.438154612 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.714013642 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.436662919 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.713986291 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.432119687 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.426320361 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.423181696 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.427221894 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.238133584 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.44494143 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.916933923 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.221914684 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.715003487 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.18676121 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.216066499 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.2238617 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.43950173 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.43260647 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.917749353 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.431396156 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.425231735 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.714090325 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.43101237 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.167757397 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.113347443 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.444914798 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.432901786 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.270850479 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.944718185 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.679439951 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.43790777 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.204360462 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.432487914 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.43476396 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.427674207 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.672885701 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.435466946 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.426853012 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.270512797 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.449780874 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.716859764 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.44118975 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.426435096 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.007535853 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.434227433 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.002536352 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.43360892 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.434644479 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.427878728 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.172905573 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.435972765 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.111338879 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.444899375 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.433942334 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.918865397 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.012312221 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.322590794 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.429552487 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.01665278 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.214101892 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.740124466 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.438140622 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.245471331 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.741904308 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.438105088 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.437242058 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.438283475 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.4359123 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.495667569 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.714782119 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.059876412 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.117809203 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.295238718 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.741502646 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.442214557 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.428325518 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.272890431 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.453684308 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.437028926 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.171508795 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.121247835 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.447951435 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.435416442 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.107752008 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.448966843 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.721931632 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.440213666 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.208512778 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.437084884 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.497114992 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.437941964 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.436046437 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.43280615 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.720457434 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.440173464 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.438477921 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.101031199 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.952701473 seconds)
  done (took 199.322631621 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.426615199 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.425052932 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.426119454 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.424872078 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.424231627 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.432945678 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.42447376 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.427242573 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.430061729 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.425572306 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.425628994 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.433258837 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.430662281 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.425056075 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.425378938 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.445785652 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.425010385 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.452521514 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.427317465 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.425658495 seconds)
  done (took 45.891313353 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.439185762 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.994158344 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.968975044 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.440398655 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.436407084 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.432635274 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.487521889 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.443725664 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.436821681 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.732881984 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.60861801 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.445351533 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.436971794 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.437073321 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.970982425 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.41798073 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.737711711 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.002105024 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.44154177 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.996694821 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.418077808 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.440416441 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.431937794 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.997342976 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.742438734 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.722211998 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.497275702 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.004378267 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.439288262 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.437641192 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.99781965 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.442996034 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.434730402 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.989541635 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.441535419 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.45581987 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.438371914 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.491209362 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.49436044 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.738452342 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.004070661 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.73328381 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.458856965 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.601699182 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.446512925 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.41769084 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.007298055 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.443881804 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.418567342 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.440786 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.446490851 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.98312463 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.437020282 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.982807389 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.439834976 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.443561736 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.999887288 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.984925428 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.976507466 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.608347185 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.440218499 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.72591744 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.439881017 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.009658186 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.444963869 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.445609089 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.444251674 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.611671423 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.008436127 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.727665924 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.741151895 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.739449791 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.444583293 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.501920359 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.441601974 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.740922754 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.500291875 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.83347505 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.747978232 seconds)
  done (took 129.939354419 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.703526559 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.554980398 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.807984569 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.032382835 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.940091052 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.571407002 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.553166429 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.679786834 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.453031519 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.529863407 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.087629594 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.541095162 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.192635714 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.533280658 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.547534739 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.565539432 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.839382816 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.438092033 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.088292247 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.058140566 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.44295196 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.543102825 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.95053186 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.625994815 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.441990817 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.995719632 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.386800915 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.958043787 seconds)
  done (took 54.375632841 seconds)
done (took 540.633222024 seconds)
SAVING RESULT...
DONE!
