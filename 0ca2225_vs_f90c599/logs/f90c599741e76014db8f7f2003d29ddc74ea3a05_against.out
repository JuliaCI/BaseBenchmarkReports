cset: moving following pidspec: 28397
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.534807545 seconds)
loading group "string"... done (took 0.532701469 seconds)
loading group "linalg"... done (took 9.123466192 seconds)
loading group "parallel"... done (took 0.177423747 seconds)
loading group "find"... done (took 1.310872758 seconds)
loading group "tuple"... done (took 2.066957009 seconds)
loading group "dates"... done (took 1.524233537 seconds)
loading group "micro"... done (took 0.209110852 seconds)
loading group "io"... done (took 0.558170633 seconds)
loading group "scalar"... done (took 52.858602967 seconds)
loading group "sparse"... done (took 14.843070662 seconds)
loading group "broadcast"... done (took 1.349079264 seconds)
loading group "union"... done (took 11.138267808 seconds)
loading group "simd"... done (took 3.378719827 seconds)
loading group "random"... done (took 12.496050123 seconds)
loading group "problem"... done (took 2.32150472 seconds)
loading group "array"... done (took 26.581156861 seconds)
loading group "misc"... done (took 1.189521258 seconds)
loading group "sort"... done (took 3.99494478 seconds)
loading group "collection"... done (took 20.175851722 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.617708368 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.187794593 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.208371791 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.291225295 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.241989725 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.154740628 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.137996795 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.263323019 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.666285833 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.208804692 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.132193246 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.513917088 seconds)
done (took 6.364531476 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.253200251 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.180442724 seconds)
    (2/2) benchmarking "String"...
    done (took 0.172966937 seconds)
  done (took 1.036163764 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075732338 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.15343626 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107538982 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094470542 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093861092 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109790729 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093660563 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108099197 seconds)
  done (took 1.446456416 seconds)
done (took 3.502710895 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.51252401 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.8807865 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.536193298 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.162259316 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.304172393 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.303969672 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.343254226 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.204183998 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.088526415 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.088193709 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.177772228 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.397737416 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.440137371 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.962827098 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.089440643 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.115312412 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.117534939 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.775849801 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.076892464 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.11451971 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.517585022 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.195900601 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.097220747 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.127283261 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.186203617 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135489888 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.164820637 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.104792483 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.669572008 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.12921269 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.188152784 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095904874 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.162407962 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.199056919 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.212686634 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.09267975 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.686214997 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.199190968 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095757843 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099243563 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.657358825 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.117190863 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.189724995 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103491454 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.09244253 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.182882745 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.095539565 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.076508714 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.116903615 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085858058 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.168920153 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.453066642 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105085677 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.174880571 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.091072339 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.692016544 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.100048187 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.278865867 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.123377222 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.094973532 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091536035 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.090664615 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.160763745 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.09593205 seconds)
  done (took 20.215065188 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.148029594 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.164573022 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07624701 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.156280293 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.124456547 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080566067 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.102297631 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079140446 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.10829659 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.248822888 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138674424 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.156638002 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092347192 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.087853795 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.12948648 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249434664 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.10311872 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.117998457 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088752578 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.08974747 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141241035 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.098645752 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.091095925 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.111511712 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170976981 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205231056 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106486295 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122693636 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.087648004 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096518891 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141742074 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147682014 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092689647 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.087084614 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173493487 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122574113 seconds)
  done (took 5.242530513 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.201212216 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122919914 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.216600786 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.166073331 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.150042837 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.17010053 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.144197513 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.283084241 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.282745887 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160175204 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129867381 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.096216346 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079716153 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079118509 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.09876068 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.489741373 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.179407412 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.132524887 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.158135296 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088706292 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100177693 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.378577328 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101108918 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081745204 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102779584 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.069341126 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.203149809 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087610337 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.094851096 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.080849648 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087658711 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137803882 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.200128271 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.182391518 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112965378 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142504084 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085680134 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.101681282 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.199425996 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.111920975 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.075601188 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.124421958 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115482649 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.138213288 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.082343005 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.108218346 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.217159696 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081101849 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101324823 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.076125834 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.192362545 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.126982669 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.079280532 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.290997979 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.119587229 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087293375 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.082180173 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.263838856 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.115860936 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081417877 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097576843 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087616068 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077743151 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.448293056 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110166464 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.97860536 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082446871 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.159119485 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085540657 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106113716 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08804539 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085126471 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.120795524 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081378286 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078280171 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.097290972 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080478966 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.085035058 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112235889 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086185972 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079143747 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.162186918 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.099773231 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.100483887 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126653611 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087194119 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096895752 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11379043 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098199528 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.085532866 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.173717729 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08901274 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.096175678 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.100375049 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084341648 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.146117333 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081474699 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.212422101 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080987794 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.108511608 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102554568 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126844405 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.100451188 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.080598163 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097735497 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084750242 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077596542 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.097888508 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145920865 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082446728 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080482283 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.103294773 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081146886 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108252176 seconds)
  done (took 23.221777441 seconds)
done (took 49.36722606 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.457577142 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.091008739 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.090758775 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108706262 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.090339789 seconds)
  done (took 1.602061251 seconds)
done (took 2.343249276 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.320491916 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.197442093 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098394472 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.194541326 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084737488 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.202634521 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.18614014 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092502094 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.212357227 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083240767 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.191212137 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083526914 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104229473 seconds)
  done (took 2.815375406 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097439937 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105087352 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099150027 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11740822 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080693808 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097452844 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114394548 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108502801 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096362045 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108147887 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081393439 seconds)
  done (took 1.846873181 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094115027 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102205836 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087123785 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113497587 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082378967 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.094986457 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112167151 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106439642 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094201103 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109144999 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082320886 seconds)
  done (took 1.823980066 seconds)
done (took 7.224331361 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.099984677 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 27.739399351 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.166999437 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.313842589 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.36047523 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.260522079 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.664966956 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.159536767 seconds)
  done (took 32.66914546 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.167927735 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.111308925 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.088928062 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.092888598 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090561702 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.11258753 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.092656893 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089955119 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.114250579 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.09402085 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.091337458 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.106093954 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090290124 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.094848615 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.087183394 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.104536212 seconds)
  done (took 2.435603846 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.139933325 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11570774 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.112981602 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.09611128 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090529925 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.113917069 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.098209926 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.09253783 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.110571015 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.092812094 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.098831739 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.111100916 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.094530607 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.089807746 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.111183417 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.12161131 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.089823492 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.111306431 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.120380384 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.094281497 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.112499271 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.093229727 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.092486675 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.111621161 seconds)
  done (took 3.342605966 seconds)
done (took 39.193537946 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.151353901 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098347165 seconds)
  done (took 0.997197587 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.139774041 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.158010886 seconds)
  done (took 1.048630398 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.10727595 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084475945 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137004288 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101103729 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.087610025 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.103308912 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115776506 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.103896646 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.087770166 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.08778641 seconds)
  done (took 1.772056366 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088149593 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.09092208 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.119649577 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.14117492 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.113026213 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.090980961 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.092948418 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.090690216 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110648177 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.088565342 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.096093209 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.123520692 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.092082615 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12397224 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094591191 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.09274477 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.113035899 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.092425303 seconds)
  done (took 2.612682246 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.085443007 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.086822081 seconds)
  done (took 0.93123939 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.087798504 seconds)
    (2/7) benchmarking "second"...
    done (took 0.08575531 seconds)
    (3/7) benchmarking "month"...
    done (took 0.088615353 seconds)
    (4/7) benchmarking "year"...
    done (took 0.106941469 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.088714049 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.086190895 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.103062347 seconds)
  done (took 1.403745359 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.500686135 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.272298476 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.384128961 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.105791636 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.144007934 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.343720624 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.139798332 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.098488081 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.098144302 seconds)
  done (took 2.881055094 seconds)
done (took 12.398876123 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091628456 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.215381319 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.636226433 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.232950091 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.087429522 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.162776615 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.295183963 seconds)
done (took 2.485909203 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.351335577 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.154780709 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087393759 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.08657802 seconds)
  done (took 1.438454881 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080155021 seconds)
    (2/2) benchmarking "read"...
    done (took 0.094208785 seconds)
  done (took 0.942169466 seconds)
done (took 3.148425978 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084906368 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.111520206 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.104522239 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.087203883 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.085665299 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.085747455 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.104125204 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.086498202 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.085884037 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.085351651 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.106546187 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.08690178 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.085997208 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102217745 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085919008 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085435178 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085623104 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.101969798 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.08537456 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085272568 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101318902 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087052072 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.084912466 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.084455542 seconds)
  done (took 2.990358493 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10874448 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.086380917 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105923691 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091885965 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.090424663 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.107729705 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.092242036 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.087899583 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.090513648 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.107040084 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090511349 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.089504238 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.105376648 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.092417711 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089865547 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.108271947 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.092581979 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087296993 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105527985 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091316738 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.091282792 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105115612 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.091756751 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091124662 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.107953069 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091945337 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.088996113 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.104366496 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091636844 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.091035128 seconds)
  done (took 3.64709609 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.095018557 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.085801149 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088617427 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.115520625 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087812162 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089136089 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.103805341 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088955171 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090949443 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088136429 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.109068462 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090159109 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.087303574 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.108868489 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092338668 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093031472 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.097976507 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.104049517 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.087270308 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090440961 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.111179223 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.087808299 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089813771 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.088287946 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.107404706 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.088023946 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090125363 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.105796726 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09048356 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089603257 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.093963909 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.111376016 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091229934 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.102010927 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.110618919 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09103613 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.096556187 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.086368666 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.10945902 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087607347 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.085908257 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.106532337 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.088298767 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.097520006 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.089015327 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.108864097 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.088112665 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.092337359 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.107714756 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.094784275 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.087985896 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.086191515 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.110679264 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09181314 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.092665691 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.104491843 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091766948 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.086611642 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.090544932 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.107191684 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.087697408 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.086183098 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.111286421 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091814208 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.105397085 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.112109432 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089449709 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.09229306 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.091451444 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.11315254 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09385386 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.100518779 seconds)
  done (took 7.682234245 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.098791096 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093934025 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.088115392 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.106391354 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088257657 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.087789649 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109820547 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088433752 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08873195 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.110517841 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089582907 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.087413532 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086899533 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.1073809 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089154604 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08831642 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111427291 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087899901 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.087471983 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105700917 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090389324 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.092991666 seconds)
  done (took 2.859915611 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.227475663 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094301126 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138986573 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119076343 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.105419168 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.118664781 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.093720597 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094468072 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108544414 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098330605 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096621843 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109205488 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107868113 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096226523 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114701454 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099174682 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093376546 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.116862021 seconds)
  done (took 2.808464925 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.102075131 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.088672828 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.130436113 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091638736 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.089447229 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090503724 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113624681 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112345972 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.090428445 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.10788041 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098191487 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090980926 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.108695389 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090693826 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090377054 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111343735 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.09176604 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089656514 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11444015 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095530136 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095165724 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115488594 seconds)
  done (took 2.985516735 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101748002 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.087633341 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.125954604 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093493244 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.089081862 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.088424074 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.113542238 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.089248349 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.095527999 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.108245431 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091182246 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089667541 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.122411939 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091165551 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.094951572 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107882102 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.090930986 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089288692 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107046332 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.090555792 seconds)
  done (took 2.744708718 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.171618339 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123442472 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110096337 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115740555 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126667299 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109219333 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117386175 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.127518247 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108940871 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138283332 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111500583 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108170673 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135201954 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115700166 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108620499 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135424146 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117890265 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.13408611 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111265099 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108479158 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.139088154 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109540931 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135078473 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.110988671 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108489838 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126777757 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110503137 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114397408 seconds)
  done (took 4.169466906 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086318889 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0863761 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.087362689 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.105907797 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.088790244 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.087958921 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.087081447 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.106417138 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089889947 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087541598 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.105932043 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.090997555 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089014105 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.088919139 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107628581 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.090928455 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08941684 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.087557166 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10685951 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089431471 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.088979667 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106974944 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090148175 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088341624 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087652677 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.106873436 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089268251 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088455215 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106385424 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089796217 seconds)
  done (took 3.585369155 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.097499551 seconds)
    (2/2) benchmarking "in"...
    done (took 0.095504434 seconds)
  done (took 0.976737047 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.093787429 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100581577 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.088612039 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10676958 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095729306 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09040385 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116648862 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096835566 seconds)
  done (took 1.57268373 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.141299341 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.159806239 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.095549459 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.102989056 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.166599941 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.159080113 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.138372555 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.095996218 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.109925277 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08599164 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.161205043 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085992648 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09512769 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089236307 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.115040503 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100406757 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.090338475 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.121379762 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.098674076 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09238859 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115118707 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100555873 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095787743 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.119280363 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.088463457 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096447936 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.117124885 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.105595041 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089083586 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.115562134 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.092921025 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090164286 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.112841384 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098515134 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.091995422 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.168483199 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101180259 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108250331 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.096840259 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097244398 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.144375126 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091922093 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.095333333 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091689543 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116002921 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.096170138 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.095205161 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.109581846 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.088341025 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088394393 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.109451848 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091914862 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.090380087 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112619269 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.096460827 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100969994 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.111031141 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.09236982 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.090617027 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089093147 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.109933969 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087050423 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096361732 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.113121163 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0963735 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094722409 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112883622 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.092326784 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092064393 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.110658036 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095732106 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110225453 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.114753137 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.097447651 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098212609 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.110115035 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093274178 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096654311 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110512248 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.097155559 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.096259888 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.139372058 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098770104 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089716319 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.106786779 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.100657439 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.093478895 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.093543531 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.105713268 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104583589 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.093662045 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.111778992 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.088268751 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092232227 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.109211298 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.097307374 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.088727508 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113267941 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091100275 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.097496023 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096447303 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112753902 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.097353947 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097149601 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.118229006 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09603711 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.158870545 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092599437 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.090460697 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09275951 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118421984 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.089490725 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.094189203 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.109861398 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093025948 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.089724141 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.115691709 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.096943224 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.093529464 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.114601956 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.099317678 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.096552643 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.113533868 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.092420467 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.091469591 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.09561912 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11902504 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095193311 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.092229399 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.109243739 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.091575235 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.094876879 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.115079904 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.092292002 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097834458 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110960693 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.092229305 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.093350384 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.096493863 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.115535809 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.09158378 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.09352626 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.116525352 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.09309595 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.094352912 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.113889023 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089522824 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.085753687 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.113118848 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087613898 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.088363051 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117740839 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.08757817 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.089412113 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104602251 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09766349 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087962445 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.092196712 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.111761952 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.094988357 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091353204 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100376994 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089389064 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.090287965 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111788207 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.08780969 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.088104416 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.103796726 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.096400471 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.083690952 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.092594893 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.105011582 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.09098499 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.096778143 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.110851865 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.092383852 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085509192 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.146570982 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101489141 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093507183 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.109094399 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092774185 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.091745835 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.107224131 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.092876334 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093993843 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.092624613 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110216926 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.090535729 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.094020883 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.1054961 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.090308672 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087737758 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.1107171 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084338728 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.088605128 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100400097 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.093703219 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092539539 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.092084663 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.115520329 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090662408 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093362816 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.12005262 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089360466 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.092564004 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.10487568 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.093740291 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.09780075 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.115776978 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096000256 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09252055 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106582126 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.090298457 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098585323 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089622869 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.113899681 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.088530648 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.084737334 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.105860875 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.094719952 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.091078587 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.10409056 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.088539134 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092803872 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093058672 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.107891109 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083683701 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.093030399 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11387646 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085943989 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089953264 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106311832 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.08971211 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098620258 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.102658483 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089043962 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.098288525 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.118349548 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094071737 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.096032189 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.114453783 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100886885 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.095578402 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.095945458 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112877556 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100229804 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.09387056 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.109725236 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.093067798 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.095452474 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.108097018 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095345468 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.097020352 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.092356255 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.111969322 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095146073 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094777241 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.115859938 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090637653 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.090898493 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.112788205 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.095378203 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087567691 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.112593881 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087606611 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.083076204 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.104758498 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.085763994 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.089221902 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.0858019 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.114485413 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.089529319 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08806721 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.110822464 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093590321 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089153998 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.117111359 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10315889 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085144738 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.103529719 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.099974117 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091206359 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.105990757 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088320278 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.088554181 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113764255 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.095429881 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094095057 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.105332819 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.088740962 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.095798063 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.101078113 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.119520533 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.095852655 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.099870932 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.110165919 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099651711 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.09384341 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119424185 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.087776963 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094573943 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115691401 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098957677 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.093232838 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.1135743 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088589745 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.08447791 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087603474 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.117052548 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091044004 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.092075638 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109798973 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090580218 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087747618 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106007864 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.097037507 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.089914598 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.114290009 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.089237605 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085036501 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084386879 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.113947556 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092214285 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.094502051 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.106315885 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.093893826 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.095855592 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.111631388 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.091631784 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.097798329 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096526349 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.11522047 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097308949 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084436731 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.109450376 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.0967429 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.089119754 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.11703834 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.091797377 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088224634 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.119721852 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.09555046 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093491595 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.108811461 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.086191241 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.089924311 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.100684833 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.117546578 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.092012742 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.095453894 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115983757 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.087850873 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09248218 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.121159375 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.099096069 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100324781 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116687426 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099832802 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.094677519 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100942969 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.115226323 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.092482911 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.091028708 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.113096064 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.096029079 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.085602509 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.118601886 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.099302855 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088736369 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.091521703 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.117211333 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088444937 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094077343 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.113636389 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090782651 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0985815 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.109347664 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.090983324 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.095087615 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.12077716 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.093716601 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.097195095 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096446762 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.121566326 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092779407 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.099168379 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.118193095 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098682555 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.096473165 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.118246194 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.095531866 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.094921808 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.09033826 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.120785108 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096930594 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.091554184 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.112668818 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092089922 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086083571 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.110325365 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.096581327 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088404639 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.117100499 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.095846733 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090507352 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.114601202 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.098790847 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09105727 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094935712 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.10835152 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093796155 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085459054 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.116456244 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.091247864 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.095798297 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.108210225 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087344397 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094729482 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.113310368 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095995839 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094301447 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.114279604 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08750261 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086326578 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.091091344 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.10846578 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100389316 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096004036 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.11574814 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092447844 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.090439095 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.111509463 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097545898 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.087032833 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088160782 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.113520593 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094313371 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.089328551 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.107260077 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.095179323 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.090753693 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114787944 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092887856 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.086426906 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.110128216 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.096706256 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.090194994 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.106863992 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091629485 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09690772 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.109934184 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090964401 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08683649 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097724871 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.115284949 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097166919 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.09156691 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.118935432 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.090768531 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.090838765 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.115180051 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092257431 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092623173 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.110319628 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096657369 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097653819 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.104778051 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.090863722 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099702507 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.113607081 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.09822753 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.091274612 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.090794683 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116799884 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097074553 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.090684262 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.106871117 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088239866 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089868071 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.104083334 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.092046148 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098161796 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114060975 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090648038 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094794072 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097440851 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.118942872 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097495688 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.092016022 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123528208 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091150348 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09551929 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.105213703 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087869292 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.090141459 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094746598 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110835264 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.094319886 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.090875975 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.111273594 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.088383542 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089530539 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.115823929 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095389751 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.095566617 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091512147 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.11106255 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.09252489 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099214708 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.111178654 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092848129 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099489575 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.116258378 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095248145 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092259339 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116659547 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.097443436 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.091730849 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.119631986 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091807608 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.091686552 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.115958772 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.098254971 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102703085 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11075082 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088562349 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.095077783 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090124978 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.107462096 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.096783011 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096309807 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.117276093 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095058545 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.089602014 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119316958 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098899746 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092048151 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.109552509 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091963092 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.094068349 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109788095 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.095498055 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.08990542 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.096391407 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.118078689 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096668877 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.098506923 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.107413788 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100418398 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095737331 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.120808957 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.091981844 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.087311038 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.108398921 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.093454414 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.097509785 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.098230114 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.113628173 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.095788109 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.094263819 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.11342725 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094972159 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.08969111 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.116063739 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.098226927 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.090654181 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.096019308 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.112191248 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095298501 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.091436786 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.115701286 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.099122962 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093777468 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.120622693 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.09656574 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.091057229 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.109506622 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095646708 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.091875698 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093171467 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.115566069 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090370777 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.087444083 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116027489 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.09853055 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091425818 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.119183617 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100146895 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.09112214 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.114949211 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099963561 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.0952715 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.097729628 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.121599903 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.094492258 seconds)
  done (took 60.528155505 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143962775 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099424528 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115793057 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092788183 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109591729 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115045723 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092597915 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093262391 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.112319819 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10400116 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09128491 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110663287 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110064931 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11349939 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133715329 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102851393 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111059019 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094433802 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091749516 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091241759 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.127578332 seconds)
  done (took 3.092046422 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.112543395 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.105849136 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.123557531 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107894004 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098873424 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.125273398 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.103103377 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124164466 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107484202 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099703989 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.128044592 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10295652 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.120770849 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.101428862 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100561607 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.121238021 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.108420509 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09842715 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.125765949 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10426611 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.12197974 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.104531341 seconds)
  done (took 3.279547138 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.101956154 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.096587961 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097404146 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.111633423 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.096969624 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.091555114 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.119867952 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.094743692 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.101185314 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.092829342 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.109006236 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.09495172 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098033715 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.112465569 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.090978153 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.092415938 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.121778376 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.09750081 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.097881546 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.091116298 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.128678689 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.092465331 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.091475671 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.110112399 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105095041 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.097976307 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.112159413 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.097573568 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.087728396 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.116229727 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.094460715 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094155093 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.1146047 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.090139301 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.088932142 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.095845242 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.118053408 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.093356884 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.092787067 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.114932683 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.094469704 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.096864316 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.117816574 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.094266598 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.094431407 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093372354 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.117340922 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.092855185 seconds)
  done (took 5.687442381 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.125857014 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.157144545 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.096583386 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.129649658 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133342269 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.102607889 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.095230502 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126005648 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.093325461 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.116328103 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.109745772 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.107195285 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.118817327 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.10051704 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.097653159 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.119269762 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.098764639 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.095408039 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.123512997 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.097382628 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.104245326 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.128520395 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.107273368 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.126202865 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.101056357 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.096159061 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.11498636 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.102839313 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.105545124 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.121625863 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.101233646 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10137004 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.370999456 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.09907831 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.095245144 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.120197747 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.109192316 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.097449747 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.120411625 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.095982979 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.098485662 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.12172072 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.099633319 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.130193011 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.098572558 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.098285675 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.116850348 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.096463393 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.105726422 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.119106739 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.106442016 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.105581411 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.119090406 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.098498462 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.098868398 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.128792214 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.097567547 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.094427672 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.119702512 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.106969479 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.094115649 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.120407772 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.107687619 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.096597831 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.124275761 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.107281382 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.119009874 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.100841836 seconds)
  done (took 8.672860422 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134186062 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.100827556 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130621926 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110961158 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100294724 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.122466855 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102588888 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.100468741 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123082546 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106670246 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121339576 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.199940241 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.120155617 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.106748818 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10104057 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.12374343 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.103288363 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100513361 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.124447843 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102794475 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.101031145 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.131499001 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101434779 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.129163689 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114071355 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.098078285 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.122926275 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102833036 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109037224 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122882993 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.112745753 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.122466049 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102841742 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109442173 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.133599618 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.101439148 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.095485134 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122855797 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.102057598 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101157002 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.11967732 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110716595 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.100431407 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.123703695 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101623574 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.101706739 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.132078794 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.113183106 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.1281764 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107590214 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.100532862 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132530731 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101818392 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.12191118 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112126368 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.116221387 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131518561 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110423916 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121980743 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111944839 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10971383 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.139146835 seconds)
  done (took 7.974649248 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096411967 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094369369 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.093181053 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.114778656 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096004196 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093182881 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093744674 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.115073462 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094666317 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093437188 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116599095 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095095314 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094179482 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093667736 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11499641 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095162754 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093788858 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093121464 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117396416 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094622789 seconds)
  done (took 2.846482276 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.105170757 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.112449308 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.116493714 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104433327 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.09711126 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.123328962 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.098342623 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096975326 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09578462 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120027129 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106459929 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10455992 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118164724 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102705066 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.126591428 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103838048 seconds)
  done (took 2.589339387 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.117017291 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.113902757 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.189464683 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.099277945 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.119535952 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.105599939 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.09682286 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.098397615 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.120030582 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.104945244 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.100413443 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.12241392 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.098197675 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.09783766 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.11906224 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.101313281 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.094877075 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.12085215 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.099343432 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.165549811 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.12317435 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.098621802 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.097684999 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.12361566 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.098785982 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.10029149 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.125757536 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.097870657 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.097870875 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.122032876 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.100127349 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.103244712 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.118318687 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.10257234 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.098708929 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.118276417 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.099731022 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.097980152 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.100207088 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.119915343 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.099943476 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.097881558 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.119275445 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.100601822 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.094561089 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.120495389 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.096231092 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.102599746 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.118189791 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.100695264 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.097626804 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106615143 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.12704525 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.106822248 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.105211253 seconds)
  done (took 6.882489733 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11041519 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098835912 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.129360937 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096771271 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.097772115 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.097139797 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.121303621 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.098647897 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096841971 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.118920606 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100886878 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099146977 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.118450846 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099474911 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.098480308 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098439971 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.117298558 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.098846163 seconds)
  done (took 2.760802834 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.104301556 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096038103 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.101734597 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.118600709 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.097032115 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096670621 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.118103004 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.097835743 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095875918 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096723726 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.119263793 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.098937376 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095821977 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.119806683 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097740631 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096421091 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.119717148 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09906693 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097718072 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095908724 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119006538 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098242169 seconds)
  done (took 3.145276822 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.110967421 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.183277398 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107982216 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.192699433 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.097244161 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.09536401 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.12757414 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.09806584 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.113261943 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.118331875 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.096362999 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.095448633 seconds)
  done (took 2.302934097 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128280858 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13669956 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119095171 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099701896 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107120899 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124053948 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103356594 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100944555 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132342342 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114255312 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122622955 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112160998 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110511971 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131221283 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107688448 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127795827 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1035305 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101065074 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098711432 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139816287 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101249653 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133145134 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102245731 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100871191 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123768565 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110848059 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13120677 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114301166 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10151023 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132233723 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108831279 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101024041 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134166926 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113742795 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120504774 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111517833 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102007835 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13994787 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106632205 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131250296 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100491571 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106300208 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13163012 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108464175 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109817411 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124519747 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109651126 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101915066 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124838268 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123939238 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129551059 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111489596 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128966939 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112876726 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110458278 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145513711 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113571899 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132631473 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10830693 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13546145 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112432296 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107083931 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133011177 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115086455 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128818806 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111996223 seconds)
  done (took 8.589651083 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14004634 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098703182 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124842386 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1131094 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109267062 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126377406 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101358789 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123668368 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103951843 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098837274 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169925292 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101466865 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112748943 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135055178 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102589913 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123464079 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104119243 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11013138 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12059114 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126548989 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102518774 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134366568 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110143417 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133113129 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114060564 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129694223 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104219805 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102815709 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123871927 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104616607 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107571409 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124995367 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112348327 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098890922 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133203499 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102770193 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103131182 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134175263 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102395997 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129355704 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112496449 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118777022 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125219228 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103340756 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136196571 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104391402 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102163674 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121154612 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104444492 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0990009 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136305072 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115762237 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13477862 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113385842 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102643627 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124320999 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103640306 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102961069 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125230717 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109223798 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110808623 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124770398 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126481086 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125020625 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103903804 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110994946 seconds)
  done (took 8.526727957 seconds)
done (took 163.667360583 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.150889056 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.189767943 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.147519215 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177604198 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093344135 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.126552867 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.147749147 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.14818911 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.090878405 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115068818 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093873056 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096174005 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.181247962 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093243325 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.091978515 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.094984005 seconds)
  done (took 2.905986493 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.191094741 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.309454022 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.116106101 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119786574 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101770767 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099109591 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.118122066 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100244112 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096736 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127473607 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10008425 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094976282 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127551963 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09650832 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.097088667 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.121929458 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107028139 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099635014 seconds)
  done (took 3.101765744 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119676616 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.140407627 seconds)
  done (took 1.139394382 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129915764 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.197382213 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.275428738 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172729985 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120367888 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.137537151 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15180579 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132207209 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.17918112 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134594225 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112356453 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09775354 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147831271 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.102499645 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.110606148 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.121096749 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12571503 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.130668442 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.110261133 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099629825 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140848971 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104268823 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.1043804 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.131604912 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.1689091 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131434974 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103820963 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101224221 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.122683982 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.10975097 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106785324 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136962555 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110928833 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175222022 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103070286 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.170179732 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.10861216 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.12041117 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.109663302 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09762638 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.12446662 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.10287638 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.114153405 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120703358 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102979809 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.129145244 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104659456 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102512228 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.129584549 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.110509794 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.10638993 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.12956433 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.167737083 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.111209016 seconds)
  done (took 7.781329212 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.853789485 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.147011642 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098769852 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.008605205 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148934444 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114294117 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.847046416 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.144332118 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.230776533 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.901782571 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114780432 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.112124091 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.261288062 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.251091662 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.179129382 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.369881089 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.685339304 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.13682295 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128002928 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165047162 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108223347 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14673435 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120762619 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430677726 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100337723 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098512026 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128425154 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.113028119 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.17661363 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.09852431 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.100981651 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197418588 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.285097043 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.2078513 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098287399 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120586196 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098891217 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.186586048 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270804897 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218286594 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.160180126 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118393448 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098559641 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.106562098 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.140464969 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094688555 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180672461 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.192262536 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.188445821 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103131283 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110804433 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131832832 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10693528 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.177670736 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.095610655 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.354713499 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.374743903 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099472389 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106356121 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.137129385 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267821232 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.09888385 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.233367842 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147052983 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215552049 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099190155 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.845399588 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.183724995 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09766227 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104249107 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127421781 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104085567 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.127237317 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160087219 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.404408967 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111832452 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123755142 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10014178 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.239742342 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.098442658 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09669197 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181499498 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098853933 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130237412 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.112271547 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133391444 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.187687486 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.246586216 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.133698516 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108002652 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.102061141 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134710377 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099628738 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.231808544 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228413671 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.17689106 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.230710808 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108311095 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.18117104 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.160346221 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128908955 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.188554821 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106698282 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113450283 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129571298 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224282389 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.154349122 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100301222 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10358533 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.128858147 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.138281949 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101347736 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130266353 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.184716724 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.44184088 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.184904005 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.116348555 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104179994 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108466294 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179926136 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106221756 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264704391 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13070794 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.162448255 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12900066 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.095527103 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.105965876 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.182851687 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131079465 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108552641 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10620672 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132988 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.270620611 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222027344 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112924429 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241304009 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.188177975 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.1070987 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.19294831 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106509127 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188448842 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107891566 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129620705 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100509811 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797562392 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135194749 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108941084 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103409891 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.204092246 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097663764 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.100042241 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.122036471 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096277751 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.805329945 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101637477 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120227062 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101449911 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.105568733 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.130244193 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108047553 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.102952777 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180730798 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242145148 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.135433413 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10436057 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.120637905 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.157630478 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.122355986 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100401936 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.099336937 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.120096191 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110674461 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.103601931 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.122430421 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16913637 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.17706435 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.228898416 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.532194396 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.120525609 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100322126 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240683892 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098112249 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.316908241 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131360036 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.238162256 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18606581 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.096633988 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.349110253 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.18674474 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.202150761 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.103667505 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189741609 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.096979067 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.106064004 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.180892699 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.098021929 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131263762 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.175035729 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.116374381 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.11147228 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.209647012 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101490148 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247853857 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098107036 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.187307515 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101180627 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106249845 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.344362612 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100429911 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117536565 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.17986083 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10306434 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.122820791 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.71380053 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101147544 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110237396 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.130528157 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.234145596 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.183751662 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113835868 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107337226 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.136913766 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.181364349 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209479992 seconds)
  done (took 45.831899294 seconds)
done (took 61.637266768 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.287771535 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.2549824 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.307586371 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.214437684 seconds)
  done (took 2.036050583 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.290212148 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.169519507 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.233935296 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.096928326 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.248468562 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.098135573 seconds)
  done (took 2.043052308 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.503464614 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.389235375 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.345763684 seconds)
  done (took 2.145991664 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.251211118 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.237403478 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.349761335 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.409412985 seconds)
  done (took 2.272853791 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.310871982 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.138375189 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.128891192 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.218550892 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.284023747 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.25972601 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.156500188 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.20697555 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.152909909 seconds)
  done (took 2.810874547 seconds)
done (took 12.215026213 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.366439646 seconds)
    (2/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.329910875 seconds)
    (3/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.348725444 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.278655938 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.200421132 seconds)
    (6/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.262489238 seconds)
    (7/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.328198339 seconds)
    (8/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.243773086 seconds)
    (9/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.108437905 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.129953104 seconds)
    (11/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.104235088 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.133458459 seconds)
    (13/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.135741324 seconds)
    (14/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.306158377 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.134352243 seconds)
    (16/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.30232417 seconds)
    (17/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.230631367 seconds)
    (18/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.136888069 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.161643935 seconds)
    (20/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.245391494 seconds)
    (21/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.220330393 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.104398134 seconds)
    (23/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.358067183 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.122897654 seconds)
    (25/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.249437851 seconds)
    (26/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.143237616 seconds)
    (27/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.138207325 seconds)
    (28/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.104379327 seconds)
    (29/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.19639279 seconds)
    (30/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.13062454 seconds)
    (31/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.106925023 seconds)
    (32/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.17554152 seconds)
    (33/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.214872181 seconds)
    (34/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.179008223 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.169469694 seconds)
    (36/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.106235518 seconds)
    (37/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.103431243 seconds)
    (38/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.129558648 seconds)
    (39/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.175748929 seconds)
    (40/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.243559423 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.108059757 seconds)
    (42/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.175902974 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.130561448 seconds)
    (44/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.329599597 seconds)
    (45/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.263872372 seconds)
    (46/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.223882103 seconds)
    (47/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.19299888 seconds)
    (48/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.201861519 seconds)
    (49/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.083360113 seconds)
    (50/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.082078013 seconds)
    (51/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.105307232 seconds)
    (52/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.149942129 seconds)
    (53/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.106155268 seconds)
    (54/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.199995501 seconds)
    (55/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.083366302 seconds)
    (56/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.098808078 seconds)
    (57/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.150792099 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.164719687 seconds)
    (59/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.082307571 seconds)
    (60/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.149968006 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.130498786 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.105931559 seconds)
    (63/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.086868559 seconds)
    (64/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.190557157 seconds)
    (65/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.171601403 seconds)
    (66/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.102612188 seconds)
    (67/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.106986404 seconds)
    (68/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.181634036 seconds)
    (69/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.104214204 seconds)
    (70/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.190797506 seconds)
    (71/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.175543344 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.129399758 seconds)
    (73/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.083160697 seconds)
    (74/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.12429144 seconds)
    (75/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.208767274 seconds)
    (76/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.105318739 seconds)
    (77/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.087471387 seconds)
    (78/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.09292936 seconds)
    (79/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.221801818 seconds)
    (80/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.122638981 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.103540978 seconds)
    (82/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.151512148 seconds)
    (83/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.08922251 seconds)
    (84/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.105768978 seconds)
    (85/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.115661698 seconds)
    (86/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.083102331 seconds)
    (87/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.106178861 seconds)
    (88/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.105189416 seconds)
    (89/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.130641327 seconds)
    (90/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.084198267 seconds)
    (91/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.083899536 seconds)
    (92/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.08208745 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.122786817 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.108105086 seconds)
    (95/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.083652743 seconds)
    (96/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.082852871 seconds)
    (97/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.080924914 seconds)
    (98/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.106223972 seconds)
    (99/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.110585019 seconds)
    (100/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.10490307 seconds)
    (101/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.12117114 seconds)
    (102/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.120274209 seconds)
    (103/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.098557826 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.120935626 seconds)
    (105/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.178148281 seconds)
    (106/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.177435614 seconds)
    (107/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.089203222 seconds)
    (108/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.22153016 seconds)
    (109/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.106949293 seconds)
    (110/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.227124396 seconds)
    (111/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.08403532 seconds)
    (112/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.087755144 seconds)
    (113/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.083000105 seconds)
    (114/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.082487693 seconds)
    (115/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.215884438 seconds)
    (116/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.083836369 seconds)
    (117/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.129416904 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.105894562 seconds)
    (119/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.104898238 seconds)
    (120/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.174936013 seconds)
    (121/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.085539876 seconds)
    (122/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.206607531 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.129734388 seconds)
    (124/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.173828294 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.115626373 seconds)
    (126/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.202306634 seconds)
    (127/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.149950808 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.104641289 seconds)
    (129/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.13269297 seconds)
    (130/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.088567169 seconds)
    (131/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.083033621 seconds)
    (132/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.083899609 seconds)
    (133/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.124903408 seconds)
    (134/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.107269286 seconds)
    (135/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.082986321 seconds)
    (136/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.147895486 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125888218 seconds)
    (138/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.084494213 seconds)
    (139/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.123631375 seconds)
    (140/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.113867948 seconds)
    (141/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.154169685 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.105927599 seconds)
    (143/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.107142291 seconds)
    (144/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.155351774 seconds)
    (145/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.152216531 seconds)
    (146/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.1060166 seconds)
    (147/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.107481636 seconds)
    (148/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.094757307 seconds)
    (149/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.102895484 seconds)
    (150/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.08358295 seconds)
    (151/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.109160459 seconds)
    (152/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.100431939 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.109519108 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.129364709 seconds)
    (155/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.084398746 seconds)
    (156/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.085004483 seconds)
    (157/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.111156733 seconds)
    (158/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.082328746 seconds)
    (159/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.107641519 seconds)
    (160/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.083173321 seconds)
    (161/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.110772775 seconds)
    (162/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.081959142 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.128170682 seconds)
    (164/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.154324822 seconds)
    (165/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.182525069 seconds)
    (166/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.107362418 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.107814128 seconds)
    (168/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.084287948 seconds)
    (169/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.082420844 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.151201481 seconds)
    (171/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.086118802 seconds)
    (172/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.083727898 seconds)
    (173/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.082713935 seconds)
    (174/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.140893962 seconds)
    (175/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.084379485 seconds)
    (176/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.102803475 seconds)
    (177/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.083577352 seconds)
    (178/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.13103961 seconds)
    (179/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.085406999 seconds)
    (180/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.084880032 seconds)
    (181/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.09293258 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.148682514 seconds)
    (183/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.085511457 seconds)
    (184/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.084761226 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.106178018 seconds)
    (186/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.122978448 seconds)
    (187/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.084852286 seconds)
    (188/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.088948893 seconds)
    (189/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.084892613 seconds)
    (190/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.082310568 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.130347087 seconds)
    (192/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.090278751 seconds)
  done (took 27.45106111 seconds)
done (took 28.371305565 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.214302085 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.128576997 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.108816658 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.108719635 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.204503179 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.11901586 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.142630803 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112566598 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.11324919 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.133004205 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.099535215 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.116661139 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.107219789 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.201503372 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110963291 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.126885812 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100795275 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.113825454 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.142480204 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.119381135 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.204001557 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105032201 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.112490522 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.125161173 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.181592026 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130926792 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.108031522 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.10884312 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.139862056 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.108430195 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.107029359 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.099488153 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.142400225 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.118749936 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100017203 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.131318862 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100891781 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089889782 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.132598134 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.11009869 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.115844942 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.106127804 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.135883871 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101519772 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.107098857 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.131841506 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101391923 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.111164156 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.123707164 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.109264749 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10295261 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.144408935 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.106175681 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.102204979 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.125196329 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103184409 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.114638411 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09974001 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.142492044 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100371365 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.101269713 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.127692789 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.110985262 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099922335 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.131035025 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102301684 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.108133613 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.132337893 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.108512297 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103285288 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09973727 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.13413442 seconds)
done (took 9.680725262 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108004399 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.157709812 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.201836344 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.212501286 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.130185768 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.142508219 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122192309 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.129364522 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.143673317 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.126724223 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.157981827 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130374597 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.211035078 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.113321708 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.115901069 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.136306248 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11522981 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.11335399 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.214986111 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.123290874 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.157118921 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.112580482 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.158184034 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.124585037 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107209013 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.155333552 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.10794323 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.134475476 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.109395047 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.124616444 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.148527976 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.109399314 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.106353927 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.152963584 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.121351219 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.113751447 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.143220873 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.110780323 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.105793708 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.131826277 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115952211 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.124510425 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.133014156 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117852394 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.135047784 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.116112375 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.116331522 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.138559997 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.110740445 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.110063727 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.13339083 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135601229 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.113798411 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.140018252 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.114357126 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.11519482 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.13971511 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.11694465 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.107650023 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.1403542 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.10781246 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.108038683 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.135704422 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.130608528 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.107420667 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.141637273 seconds)
  done (took 9.597906881 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127703654 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137621943 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.139996755 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.11609151 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.109854213 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.123993126 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.098556002 seconds)
  done (took 1.821938156 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.101692077 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186771345 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.208665936 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.209378495 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.178986942 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.219830152 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146264581 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101082262 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132133921 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.135675026 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.186214163 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.239344179 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.106659707 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.142857645 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.185346033 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.127437213 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.187851087 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.127145557 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.113279812 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.211866541 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114134694 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.127289101 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.139506946 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101276132 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.209372288 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101805263 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.263731054 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116631934 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.132372123 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.11447054 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11112735 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.2061949 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.206910546 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.115036969 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.104829035 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.211756533 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.205573643 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112855691 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.222036779 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106406862 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.208600438 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.113213788 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115615387 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.137982808 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.11724909 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.192756216 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120630964 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.113101204 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.1382654 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.194355886 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.13585332 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.185011406 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.133457556 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.114002144 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.110750852 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.138927913 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122274991 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.113390778 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.22109813 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115059813 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.209727614 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.208889711 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.184177778 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.212031163 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122551389 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.212209595 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.203779908 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.112992431 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109575596 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.138754189 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186414329 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.135538698 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114470382 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.196857679 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118003335 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.210008438 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.185410332 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.135499281 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.114986977 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.104033219 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.110664628 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.128108885 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.174213793 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.139492033 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111220944 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118680054 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141487092 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111949605 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.105695358 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.151371156 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.112285229 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.136633978 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.119660822 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.11156965 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.142385292 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.189688439 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.137899842 seconds)
  done (took 15.543010157 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107228616 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.102417858 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.10707176 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.128959182 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.103194987 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.102219604 seconds)
  done (took 1.633121791 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.14215254 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.113221871 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.148919797 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.115410728 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.165991989 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.218737622 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.226790718 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110219915 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.156241279 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12749147 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.221090531 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.198454703 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.230917413 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.11590142 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.223841864 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118046283 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.227706372 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111643062 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.15125285 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11160622 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.116220824 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.145002291 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11212643 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.211629069 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117430294 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.144440987 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112798922 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125477708 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.149004256 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113038173 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.11689972 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.143226522 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.109623111 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.110761156 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.226215294 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.10803704 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.136224571 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.125420283 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.11501719 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.145308334 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.200388353 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.137617264 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12330315 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122053542 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.138956138 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.108763965 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121012446 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.139406767 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.225118558 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.12360895 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.123689592 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.141351486 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119256549 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.12297081 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.135925387 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111928655 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121967254 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.228117009 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.116181772 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.135963795 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.11453294 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.117424045 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.137975468 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.123002546 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.114158436 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.150282218 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.109964545 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114546121 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139041254 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.116260962 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121643822 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.14044177 seconds)
  done (took 11.203468386 seconds)
done (took 40.754352211 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.56580885 seconds)
  done (took 2.54989159 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.9070856 seconds)
  done (took 1.894665413 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.410319443 seconds)
  done (took 19.428432606 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.537670186 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.610005938 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.055910591 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.151166094 seconds)
  done (took 3.342235605 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.9999181 seconds)
  done (took 2.004468625 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.293360122 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.262255642 seconds)
  done (took 1.54772837 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.72349011 seconds)
  done (took 1.72784838 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.534374737 seconds)
  done (took 2.526501039 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.361342872 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175198962 seconds)
  done (took 1.539439647 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.633223072 seconds)
  done (took 1.639561063 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.603502105 seconds)
  done (took 20.609607588 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.246481629 seconds)
  done (took 1.258530893 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.286766139 seconds)
  done (took 1.300017809 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.635229283 seconds)
  done (took 4.648665346 seconds)
done (took 67.012395199 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.114049984 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.116475884 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115709035 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.140224319 seconds)
  done (took 1.487303802 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.121540247 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.116567918 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.120419414 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.14165004 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123054507 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116318787 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.142718537 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.118449117 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116230107 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.146155812 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117543061 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116309782 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145216888 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116655834 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114548554 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.145520711 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.120848594 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.116365127 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.14284381 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.118921498 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117267285 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.144021041 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121995743 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119310232 seconds)
  done (took 4.031594741 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.113850311 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.106644982 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.108430904 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132328734 seconds)
  done (took 1.476958383 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.126795133 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128663919 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.152858267 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125165978 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128548492 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153753108 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116677656 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.11328471 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.141360347 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126957699 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133646549 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.155607286 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129551275 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.11940029 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.153870921 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112677635 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117872387 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155600782 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124112902 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.124923157 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.14402825 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123862509 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.122098017 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.151893427 seconds)
  done (took 4.196276023 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.189756233 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.124860344 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.166603151 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.158191707 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.168164362 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.111455575 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.135820068 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.145357656 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.120234682 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.114309319 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.141660711 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.159771737 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.14495532 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.114839591 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113613279 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.144690613 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.125340592 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.118496304 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.183774699 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.117451801 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.146210361 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.127589067 seconds)
  done (took 4.088749663 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.119591059 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107684928 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.102017323 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.136577624 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.118484424 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.110392229 seconds)
  done (took 1.719105297 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.107334291 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101162719 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.101771516 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126895785 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.105623415 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.10057324 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.099454451 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.128473671 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.10158112 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.10107263 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.126293141 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.100677521 seconds)
  done (took 2.323566294 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.341795219 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.106901908 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.135557582 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.107616316 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.112252461 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.104419982 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.147708865 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.106746386 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.267312472 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.106828529 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.145955368 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.195762825 seconds)
  done (took 2.900981257 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204144301 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141835587 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.297419489 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.365667334 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160194596 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185043037 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.269636544 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187160396 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200544593 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132508887 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241127947 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151743059 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173842844 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170486751 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160455975 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.159950721 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190874095 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187101205 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171745657 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194919568 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178918985 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185500286 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175245137 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173797989 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131151836 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184172147 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.115046219 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122451441 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190074717 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159565733 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193632889 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168629701 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13636682 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217305838 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232636521 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201029996 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284204089 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155277351 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.177815512 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.203821414 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252843266 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135015957 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211638632 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174976591 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125593149 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173085134 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176886271 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.19401124 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.126676404 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136744312 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203306968 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195306549 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.174126267 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158975749 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311040184 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161623055 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.137259936 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195481672 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206121106 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184959199 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188514032 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.117299394 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206003288 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205058087 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175951723 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.162929826 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.16017987 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146304381 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162868683 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.2171996 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173618516 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182240116 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.223824543 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126263374 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181408444 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166736671 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20097365 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170351739 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182833078 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.114312438 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17216679 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132228202 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122333333 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.224710818 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116586679 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222751733 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127325738 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.341987383 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212587801 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152078189 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18444667 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153349464 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182212164 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138915743 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.137337631 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143141807 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.18596617 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152300958 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154910632 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152809026 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131997134 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.151008446 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147128821 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.143921054 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153178936 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.131130576 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187069241 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178518438 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126956796 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158599995 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171914612 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.147070003 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191962896 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204999003 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127778408 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126197772 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212709234 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177981366 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.128032211 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197166347 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179744731 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.173447913 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133150201 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187518985 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184078934 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164552084 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184079511 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160088357 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129445156 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.171080296 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156744697 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180859057 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150933794 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122553666 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.17405343 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217930703 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.123620256 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131050569 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190603481 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126732019 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148546271 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134015035 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130006235 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.163275066 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.138511778 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.157534309 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149808042 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180931302 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151049581 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179852404 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128987891 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202132031 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128145976 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.180911794 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142326112 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.112908141 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.19584596 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207574069 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12520482 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225269312 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159121793 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215456644 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181182582 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126766017 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200183735 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12356854 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.114766434 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185511736 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150162703 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185299017 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.173476004 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211438778 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.188407457 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.143891793 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172157047 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16222245 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.199381542 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17308574 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139809476 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151874667 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188095952 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.115841087 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.14636928 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.122513952 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131614764 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153519143 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129807192 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19995935 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158864148 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208657422 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181007259 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134046729 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207004063 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.120920497 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184472539 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.160783861 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162588173 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.175250703 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204148378 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161947247 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165136717 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15623139 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.142846784 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12133528 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.126181336 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189156397 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129011262 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158413037 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136307123 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207412917 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167056986 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171609378 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220559538 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161224784 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.21577958 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.114483607 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.188325269 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166649464 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182537062 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.180491088 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158859703 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.155213524 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202773959 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135331584 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212938812 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151985618 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185914022 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210625018 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.151371983 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124667138 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172258479 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155136397 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162592454 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16189644 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169435786 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125707821 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174546346 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134802587 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11968068 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209266889 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136067809 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193935165 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.18216239 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165490109 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146839274 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138171005 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179939713 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140458736 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.113237425 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194110111 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178089316 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168354011 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150541229 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19897165 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124477814 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.345070202 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212133282 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174873054 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157528179 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137325356 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182347315 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159384632 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18524801 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175718295 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164257021 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173073857 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182691563 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138871367 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123897847 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172404814 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145736087 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.174524118 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.127806977 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.180831255 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.1381521 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210690538 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134370763 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18309269 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153634521 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.170852758 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.147284554 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134612414 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219509794 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179167401 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169772929 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.178080276 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.1610932 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216922997 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118533494 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152002931 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.127711508 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203138129 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127030577 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15642577 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.205041557 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217192199 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186874082 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156881932 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160720717 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.122559645 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15258638 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172758053 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21589177 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131675379 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160057669 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190721387 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.161975352 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128185749 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156711498 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307297148 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170490873 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169690533 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.117819396 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.302095009 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151409474 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129139808 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158778449 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194853732 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.127527133 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.205689668 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156846661 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165213362 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159368395 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158592379 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183560699 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215242245 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190846062 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168902695 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.168720965 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15502786 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185177765 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170843162 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168620194 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140021791 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187103852 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176526888 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.206694092 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.127368284 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1832448 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153062552 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181719202 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166917011 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161463553 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185120279 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154161406 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159237212 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163235732 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118995514 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181419878 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.17589967 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15498441 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172428926 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183369443 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127431769 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149649245 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141012649 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179464588 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135285962 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.126274304 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207371973 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.123724319 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1885679 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17521553 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15501619 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152277004 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169035302 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125748189 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137311823 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16641538 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126800046 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.167848901 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203510009 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.125339247 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204102358 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188532015 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159922836 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182741072 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138143376 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.688255063 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.12413796 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175581734 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17259292 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212851515 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147789784 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185497547 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155056144 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143759666 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189756166 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171259315 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.237341026 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187466101 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.153289396 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126088856 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164996418 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135262442 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.156907472 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149629619 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181561089 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136653784 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.130149121 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.181187314 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136875254 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.171123741 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13436146 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206202307 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144758721 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210483251 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177042358 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162133895 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157538469 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197574522 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125200684 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.188247415 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167589978 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165447614 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141693133 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.157279448 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132664877 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204817686 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.120914964 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152826028 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186356894 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153121657 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182127178 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.130111169 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186501894 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136747054 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183128533 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122657067 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.147005465 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184343896 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129102627 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.149862836 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15560304 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183036051 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.152886655 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120382464 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.196179172 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1798117 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.147585668 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129443608 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300665395 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155471972 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214216306 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.145029254 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15913379 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140114162 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17832973 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.151548818 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155082781 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.155077774 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126266957 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.153201095 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.16966667 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.175876323 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15644091 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201171096 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158381722 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219463646 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.130902522 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.311289694 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136792856 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152917361 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.15458465 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.123139312 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164728775 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130667094 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135444706 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213929093 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204505037 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.150267997 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.170349835 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131087348 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.120687546 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154952199 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162237685 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176020574 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155033863 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167995906 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.112747803 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139782158 seconds)
  done (took 82.329681856 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.16711115 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151090292 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168179367 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221441876 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195807236 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.289313674 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.230624312 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253171363 seconds)
  done (took 2.784575736 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119409057 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.156907688 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.139260911 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.142786433 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.116811216 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.447617684 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.157740492 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.118550198 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.164950602 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.158500508 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.13977769 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.618863389 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.1172947 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.14489661 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.128948872 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.116525485 seconds)
  done (took 4.085909821 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.436159558 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.589005553 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.23833869 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.279707143 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.232763509 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.179239016 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.802169443 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.192125965 seconds)
  done (took 13.062774386 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.146398237 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.133200438 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.317189689 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.769974968 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.150062029 seconds)
  done (took 2.631787198 seconds)
done (took 128.122016627 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.12053157 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.118996824 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.117793468 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.151910653 seconds)
  done (took 1.610207162 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.184951087 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.095187723 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.097342834 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.122605493 seconds)
  done (took 1.610973893 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.440673782 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.094495943 seconds)
  done (took 1.67188567 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.14666253 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.146842934 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.162862904 seconds)
  done (took 1.579620633 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.140586932 seconds)
  done (took 1.252841576 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.126743126 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.119880461 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.238665879 seconds)
  done (took 1.602164284 seconds)
done (took 10.446959736 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119595793 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.413374122 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.431268317 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133258631 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710483571 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.4269824 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.027473626 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.173339439 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173978162 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.136740843 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130480181 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.687033295 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.043713127 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.371999224 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.999026001 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.383269961 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.693282638 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110051069 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.143711478 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111227167 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.008066357 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.135848751 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111046247 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110575384 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.716834199 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.419775978 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108571407 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.400449573 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108650483 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.111991203 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.425201808 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109711793 seconds)
  done (took 17.293339862 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118236165 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172613586 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145108826 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111283042 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112533039 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.137856775 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12262353 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121083526 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204087025 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109232122 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.15916109 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108770063 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114154199 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.136757476 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.13512581 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108436127 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111713992 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.14213338 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117742008 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110391697 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.159718708 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108620196 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110678424 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139637679 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108853136 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130884202 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.138371813 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12164886 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108430526 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.141867403 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114041468 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108800351 seconds)
  done (took 5.214765081 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.1566866 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179688026 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149044391 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146644548 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.184816979 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.11118071 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.221915149 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147348618 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203893133 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109952137 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131527155 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.135715457 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.150871086 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110602281 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.16328035 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109773512 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111630563 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.140554162 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118617857 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111820954 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.160627068 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109346734 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111440284 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139818897 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110559141 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133483709 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.14040922 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122490283 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109096593 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.141805516 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11611398 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110268926 seconds)
  done (took 5.529625003 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.125465079 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126424875 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132960889 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.163548903 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120019552 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123970259 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.153374237 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121099884 seconds)
  done (took 2.1960431 seconds)
done (took 31.35151833 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.13297428 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.126505618 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.126579758 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.151277108 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.191198657 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.143856346 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.125304677 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.113349778 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.150159059 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.128854694 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109229201 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.113241411 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.156483669 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.117875204 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.223517463 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.121467776 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.228473263 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.194534054 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.143480549 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.12261564 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.11491605 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.229674969 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.117834003 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.113198972 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.232228557 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.113253844 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.215288184 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.116908573 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.146830629 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112309153 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.222503936 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.118363746 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113241138 seconds)
  done (took 6.003130772 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.208671975 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.116549576 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.149094896 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118036153 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.115984663 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.145796081 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.212854664 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.14677337 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.118932515 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117195615 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.117285631 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.223477565 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.121030293 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.140043395 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.119082192 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.114663599 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.242801813 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.116596956 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.10963143 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.125871751 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.11071712 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.117373413 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.254671417 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.109480513 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.117110543 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.14932589 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.119713775 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.120843334 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.145730757 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.118382027 seconds)
  done (took 5.380101715 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.125486267 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132186195 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.135853113 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.21454817 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.146622328 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.160974514 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140203492 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.132940563 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.172007591 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.112126966 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.12721541 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.179353172 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129495529 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.121618128 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146149868 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131650803 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134378996 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.141785044 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.120470745 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129875174 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.160269531 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130460159 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.13929525 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.150295067 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.110963244 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.1183006 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.150550537 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127472208 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.119368118 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.125091677 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.145001604 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116107225 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.113691371 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.176868112 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115790015 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.154564729 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.13926513 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124057535 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.125994582 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.173818929 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.11573193 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.11391372 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.170315131 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167336323 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.141783857 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127322427 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.12339717 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.124265935 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.140656938 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13058691 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.154514969 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.145368984 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.13396906 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.113322155 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.140017841 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119650229 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.111678875 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.144485936 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126923609 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.115492161 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.166413748 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120923456 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.122373307 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.114090544 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.153445663 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.110982543 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.110275864 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.145864772 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.13932444 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.118297333 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.178480056 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.112212152 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123810568 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.152654209 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123573454 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.123035467 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.110424975 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.153638479 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123304866 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.117617571 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.154816353 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.115291006 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.115173404 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.15790822 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.133223528 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125878522 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.153796256 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.126489431 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.114510895 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.143367168 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130477843 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.113188325 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.14533822 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.126965812 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.112743914 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.115466232 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.155194469 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123925033 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.109623608 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.168168853 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.116402608 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.111398371 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.167492452 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.119284181 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.117527282 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.150954042 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.156885587 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114431411 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.152916161 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.127052516 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.111610329 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.119313388 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.148592998 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.112205301 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130557345 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.157846168 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.119944611 seconds)
  done (took 16.852925848 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.324931206 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.311384657 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.18153386 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.313817537 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.16129693 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.210517026 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.309043373 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.309260007 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112410839 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.181753716 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.166076248 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.2787135 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.145736984 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.140778771 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.312199837 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.365544461 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.174049509 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.150814207 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.180834246 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127504655 seconds)
  done (took 5.611176416 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.135367955 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.148278052 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.165808975 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.143593906 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.118803186 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.158185355 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.112475782 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.131066678 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.151722059 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123890132 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.115926979 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.157804838 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.122675104 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.126021868 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.158386574 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.152585208 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.121225076 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.147971231 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136565262 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117528934 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.135871473 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140108162 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120767969 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.165963201 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.12950888 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.124545729 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.140947816 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119521591 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.116376667 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.118559338 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.146866854 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132215096 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.118420346 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.140306079 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125221395 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.129053201 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.145730579 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.116449394 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.118558712 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.116091598 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.159411018 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.123206886 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.121563949 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.131899441 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.13133525 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.11546022 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122981049 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.156193792 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.111856286 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.127925795 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.15582974 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127216631 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.11948977 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.160089838 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.117021288 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.12967324 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.152319004 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.125271437 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.118636572 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.110684525 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.141431791 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.117522729 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.118379456 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.153388507 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126313873 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.132762613 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.159847867 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.114159288 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.117259978 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.146762425 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118115561 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.12761832 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.164330251 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.119501923 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.116998935 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.153942725 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.119247112 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.099932413 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.121772521 seconds)
  done (took 11.599619547 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140531995 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.119212331 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131581237 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.180489944 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.125118347 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.118983333 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.149276469 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134322875 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.123501969 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.158499116 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.124470394 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.126343838 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.169918389 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126222873 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.117950359 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.159294732 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.122990705 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.152556701 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.164420077 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141269896 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124051797 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.149403818 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126595661 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.126741889 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.174396714 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125317486 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140895214 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.157250941 seconds)
  done (took 5.080938619 seconds)
done (took 51.658173762 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.30855566 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.480871023 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.256127679 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.253466347 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.288125785 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.255510546 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.252680525 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.254594808 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.735626502 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.231652754 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.257298403 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.253833649 seconds)
done (took 28.983819779 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.34721025 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.775121754 seconds)
    (2/2) benchmarking "String"...
    done (took 1.533938516 seconds)
  done (took 4.460518572 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.247923114 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.249008305 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.470911222 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.247361792 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.249260478 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.264432444 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.25899565 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.253715248 seconds)
  done (took 16.144320806 seconds)
done (took 26.353050508 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.311079249 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.429569902 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.492835641 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.250799801 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.252062355 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.275645252 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.249656945 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.282219363 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.252753057 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.253539249 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.663839153 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.510766478 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.262885091 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.634379377 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.253702161 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.252094416 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.270333408 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.498948818 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.255155408 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.27963698 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.230387786 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.234635635 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.2725606 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.256511209 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.258192273 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.255496114 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.25038058 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.25558155 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.453199168 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.266544347 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.286322587 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.251545611 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.322954418 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.260569313 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.262202476 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.251050656 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.461266722 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.263164318 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.237694689 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.258687587 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.442161897 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.255644803 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.251427532 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.256402547 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.258331394 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.314001663 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.240197375 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.366853335 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.278124748 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.252601567 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.263636885 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.63607541 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.267759641 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.254421592 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.256551456 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.480334666 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.27495615 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.316766351 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.27804123 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.253175947 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.252256887 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.256424096 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.262627324 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.271452669 seconds)
  done (took 146.915353296 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.252129369 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.257848511 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.254038001 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.299927801 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.257654115 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.258655154 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.253464717 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.253240127 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.259115503 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.288126747 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.257950657 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.25736179 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.258481234 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.206985685 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.260021819 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.271645736 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.260271084 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.255009279 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.26400247 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.254836038 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.273603931 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.259114535 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.254259165 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.254348632 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.260911609 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.335044693 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.297543505 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.260240828 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.264166901 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.255319995 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.298957598 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.262368514 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.891233569 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.122956969 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.265432729 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.280977675 seconds)
  done (took 82.171428559 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.254135036 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.255331277 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.255515331 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.288500093 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.255113721 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.843066422 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.851022481 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.973774924 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.661196019 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.656314902 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.558417666 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.257284162 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.347759297 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.264003602 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.251844576 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.266806795 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.278967038 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.254102701 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.251439558 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.838589555 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.269292825 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.276686128 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.430874961 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.266771917 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.284785107 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.646695928 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.250939038 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.28375393 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.582218534 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.300390444 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.250221883 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.630312236 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.798433557 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.253668007 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.363082348 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.250996725 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.282090172 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.248922169 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.53121101 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.250357205 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.250872996 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.252292924 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.921112399 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.254267615 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.822463102 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.254031465 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.216564855 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.252967423 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.249801306 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.46562349 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.940393727 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.252904319 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.249555961 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.2500912 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.249220824 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.248816874 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.280933838 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.544753569 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.347286288 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.251001759 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.253244941 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.281996592 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.249580023 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.484654226 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.25020827 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.509967326 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.312639126 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.487332652 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.822000057 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.254544308 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.346955482 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.370112703 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.24997527 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.251442775 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.250955541 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.250371631 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.361317703 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.250374739 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.658959293 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.425688417 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.267769801 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.608345619 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.352198849 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.252900119 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.620286061 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.254772068 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.25112547 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.017121561 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.35032466 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.250417006 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.251395365 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.251154302 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.662806748 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.251222727 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.825297474 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.501247565 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.256458722 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.88460175 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.257908188 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.679360379 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.806628893 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.936511373 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.257065582 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.25228809 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.364089572 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.427444966 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.26838428 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.253200986 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.611700339 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.256939824 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.315060496 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.253797074 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.252670983 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.654212524 seconds)
  done (took 372.310581346 seconds)
done (took 602.550891758 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.144510782 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.080853735 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.231232691 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.091174316 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.07143243 seconds)
  done (took 11.772713645 seconds)
done (took 12.926334212 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.442167819 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.443305562 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.312787535 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.444769785 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.285084387 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.459385776 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.430960727 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.273357647 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.366469313 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.334616113 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.366786353 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.305793292 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.285909364 seconds)
  done (took 18.905330515 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.530302267 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.262983526 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.321389228 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.518997911 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.297011085 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.532237158 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.577756043 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.26256283 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.403048893 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.269118865 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.270273098 seconds)
  done (took 18.399459683 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.556574189 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.263641039 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.316553982 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.532584588 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.296104715 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.528053456 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.563237493 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.262474412 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.415647941 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.272744606 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.268438257 seconds)
  done (took 18.42852238 seconds)
done (took 56.887958494 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.110632319 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 17.265284521 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.28534452 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.351143263 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.266457871 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.281201805 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.348906905 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.270028944 seconds)
  done (took 28.333114416 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.265622314 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.265316576 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.264449037 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.263548599 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.264449547 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.266948871 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.262646427 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.265162563 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.265523127 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.262757094 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.26495142 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.266559377 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.264000847 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.268176953 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.263096952 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.264166337 seconds)
  done (took 21.390203404 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.266675354 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.264272403 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.263685403 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.264182107 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.26665179 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.263752176 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.263331532 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.264434105 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.263795983 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.264906431 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.265432198 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.264350456 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.267318748 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.26361931 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.264052447 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.26571777 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.264737592 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.263973681 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.269337099 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.263136101 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.26976395 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.26359029 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.264385494 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.264012731 seconds)
  done (took 31.512284711 seconds)
done (took 82.388254379 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.259340143 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.256217447 seconds)
  done (took 5.668722314 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.324711714 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.322667633 seconds)
  done (took 3.801863542 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.264899195 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.263616595 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.266062762 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.264030642 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.264206955 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.264365953 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.264538192 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.264951656 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.263681427 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.263318784 seconds)
  done (took 13.797820117 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.264010878 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.264917863 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.264204905 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.269307192 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.264944342 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.264017811 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.264586956 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.266509568 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.263887128 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.264337918 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.267326337 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.26437943 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.264938384 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.265453317 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.264272285 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.26388915 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.264322446 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.26435309 seconds)
  done (took 23.924888771 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.278473245 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.287434142 seconds)
  done (took 3.719030836 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.411296745 seconds)
    (2/7) benchmarking "second"...
    done (took 1.30723297 seconds)
    (3/7) benchmarking "month"...
    done (took 1.382380179 seconds)
    (4/7) benchmarking "year"...
    done (took 1.371276325 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.306422115 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.285636356 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.30701428 seconds)
  done (took 10.525382174 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.266930472 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.480489708 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.612479805 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.834535956 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.267137618 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.270147534 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.100232714 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.270359973 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.270941844 seconds)
  done (took 14.527289135 seconds)
done (took 77.118740041 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.255311477 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.324351378 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.284785067 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.278892486 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.604355264 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.257675226 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.260317343 seconds)
done (took 16.420214359 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.24046503 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.242457261 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.248206789 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.264491704 seconds)
  done (took 10.150860451 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.25588249 seconds)
    (2/2) benchmarking "read"...
    done (took 1.574031197 seconds)
  done (took 4.987328071 seconds)
done (took 16.293565287 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.268613637 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.26683463 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.269248698 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.26738389 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.267837506 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.267321548 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.267092092 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.267333262 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.268558264 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.268033275 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.268480941 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.26854057 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.269088902 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267223701 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.268556855 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267275609 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26967026 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.26718746 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.268441937 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267506913 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.269116334 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.270813779 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.266968807 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.268632594 seconds)
  done (took 31.591501131 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.268670162 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.270793551 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.26958177 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.270344981 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.26988768 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.270570769 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.270118977 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.267696918 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.270449409 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.269268321 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.267699675 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.267966149 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.269460506 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.268723604 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270503593 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.267826685 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.267612968 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26716653 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269641549 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.268308691 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.271478883 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268872127 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.269535718 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.269254086 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.270843873 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.269611346 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.270531332 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.269284453 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.27075388 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.269460909 seconds)
  done (took 39.237554271 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.277136298 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.277541182 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.272974231 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.273739606 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.273803233 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.273072512 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.273005041 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.272756651 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.272952281 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.273894398 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.274797528 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.273771215 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.274636125 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.274179711 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.27356126 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.275520119 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.274072557 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.27587544 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.273675996 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.273488643 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.274433849 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.275417363 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.274035588 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.273865135 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.274657181 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.276805437 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.274589065 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.274358418 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.275274883 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.274451208 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.274830881 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.276082452 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.274991178 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.275342631 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.274505024 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.277342961 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.278300277 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.279995482 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.274982359 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.277349136 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.278714048 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.276203894 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.275493655 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.274457199 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.275609283 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.276660882 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.276961301 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.275596723 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.278166493 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.276786681 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.276308857 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.276155977 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.275370409 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.276991975 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.276412324 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.276231523 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.277734152 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.275715857 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.27633896 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.275173619 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.275964957 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.275838932 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.27672176 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.274047098 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.278432714 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.276171454 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.275863476 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.275581219 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.275792728 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.276708579 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.276528381 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.275905789 seconds)
  done (took 92.997061405 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.273952892 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.272427456 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.273134219 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.272967469 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272944175 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.273174847 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.272757612 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276286407 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273753884 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.274008838 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274643899 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.274126457 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272457993 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.275103061 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275561328 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.272214825 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.274288684 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.273711179 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.275353779 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.275828992 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.275104591 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.273673154 seconds)
  done (took 29.189786871 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.273599911 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.277037632 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.273440967 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.277574031 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.277273727 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.27650177 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.275637717 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.277369446 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274982342 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.275184146 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273249815 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274126205 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.276302621 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27352173 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.273767402 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.279146378 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.276028272 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.276670112 seconds)
  done (took 24.123047224 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.27507468 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.273864603 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.273611089 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.274359416 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.27535228 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.2749899 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.275658797 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.275466399 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.27601828 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.274156457 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.276194047 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275243993 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.277937698 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273717383 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27472567 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.27469696 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.277602737 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274669629 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.276270187 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.275875264 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.276832816 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.276325854 seconds)
  done (took 29.219143545 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.276894028 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.275527202 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.274483015 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.274609425 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.274030013 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.276934692 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.276112204 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.276556741 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.276528528 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.27755372 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.275366181 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.275519814 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.277690064 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.274584847 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.275443379 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.274224908 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.276083336 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.274723044 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.277180244 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.27514933 seconds)
  done (took 26.677063537 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.281779207 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27740034 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.278745067 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278316938 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278273496 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.278930439 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278859885 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.279066953 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.279035635 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.278868083 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.27867416 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.280305323 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280503411 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.279529598 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.280438806 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28007975 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.280006542 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.279546437 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.281364544 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280142032 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.279955155 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.280466325 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.28052687 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.280455505 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.280094964 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.279902928 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281307553 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.282362649 seconds)
  done (took 36.997159244 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280195892 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.278874767 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.276914736 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.279176578 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.278413011 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.277388732 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.278190443 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.27835231 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.279638089 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.277699744 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.279469193 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.277959281 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.27865741 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.278280836 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.279509162 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.279786564 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278497763 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.279143299 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.277995718 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279237237 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.27950725 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27917909 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.279067109 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.279580445 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277759388 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.281293282 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278136654 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.280443948 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.280519012 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.278996699 seconds)
  done (took 39.532968773 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.299571487 seconds)
    (2/2) benchmarking "in"...
    done (took 1.299978397 seconds)
  done (took 3.762655131 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.279099236 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279991462 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.278570308 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.279308776 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.279140278 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.281026186 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.28019786 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280414459 seconds)
  done (took 11.403154273 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.27548607 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.280558635 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.28227556 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.2815088 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.281532744 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.274656088 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.286485847 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.28558153 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.276003841 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.27891142 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.280350157 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.280467981 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.278242021 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.278430667 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.278101316 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.279699626 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.28347226 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.282845177 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.281868602 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.282776856 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.281554209 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.277875956 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.285557036 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.284371423 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.277940304 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.285991382 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.284467012 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.287941814 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.27686198 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.282050408 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.278542727 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.283272037 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.283098063 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.282306068 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.282251414 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.281679708 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.284707602 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.282157981 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.285406584 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.286979165 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.282421595 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.280278886 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.279495028 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.280301437 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.280562654 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.286579258 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.283125027 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.28095335 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.277809655 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.280556939 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.286809599 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.277311154 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.283080028 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.28156821 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.281157012 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.287100889 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.288740883 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.280183021 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.283721276 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.286273142 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.292749422 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.288595611 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.282112249 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.286165854 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.286802362 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.29544651 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.28819483 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.286841086 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.284687754 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.28427286 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.286948704 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.293749556 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.291645511 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.285902684 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.284016111 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.285140988 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.281507384 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.285804164 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.287531875 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.285691195 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.286547451 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.285023209 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.288812515 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.294553078 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.280339833 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.288042772 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.286189284 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.285549719 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.279585872 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.288031695 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.290702253 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.285953661 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.280129226 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.280937231 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.281290372 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.285412968 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.279549748 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.281952253 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.285856056 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.286162234 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.285680859 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.283064877 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.286774051 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.287204708 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.285659569 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.286500718 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.288826421 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.281315681 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.288141238 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.289175449 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.286436324 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.28129491 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.285060988 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.284551797 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.281519302 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.287123828 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.287301113 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.282241466 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.289050612 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.285500097 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.287551839 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.298215857 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.288665369 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.287919128 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.284146282 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.293312302 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.286630134 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.282806073 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.288037968 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.283740064 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.285161946 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.285634158 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.287080995 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.28167172 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.288076893 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.28140853 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.285811374 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.286281172 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.288258986 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.282214691 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.282996873 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.281988198 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.283416983 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.285796502 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.289768268 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.282728416 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.290192711 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.283604521 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.283955103 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.285233936 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.288865536 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.286537167 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.281955728 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.289978455 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.283138621 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.288057266 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.282448788 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.289171287 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287801395 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.288424464 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.286950757 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.28231867 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.283839062 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.287277158 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.284890221 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.283146338 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.286644606 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.287180557 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.287262256 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.281968922 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.287372701 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.279807836 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.28425871 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.290854395 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.287107684 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.286564757 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.283516893 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.28975636 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.28604209 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.287468641 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.283320012 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.285807333 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.288530639 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.288811759 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.290207423 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.287502936 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.286933038 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.281490506 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.281083806 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.286360634 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.284216005 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.290681605 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.293954367 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.294278976 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.282534697 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.288370239 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.281066218 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.288526333 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.284494092 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.288599534 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.286406415 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.289993067 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.280625301 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.285973079 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.281736011 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.286898367 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.280346642 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.286780464 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.287608447 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.285341317 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.286100262 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.280079336 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.281891944 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.286532291 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.286568403 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.286565837 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.283390302 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.286634089 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.280634569 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.281097359 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.287391975 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.287434929 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.286598946 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.288102448 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.286164364 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.285848302 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.283455646 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.282154137 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.286610934 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.284541491 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.28548316 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.29276585 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.28868884 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.283748228 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.289784694 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.286776877 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.284490274 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.286810133 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.290708074 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.288590559 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.285423788 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.292276319 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.291876594 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.287485977 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.28866795 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.28122241 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.289098391 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.288910276 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.29005966 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.281846775 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.288914111 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.284254658 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.287368457 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.283834113 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.286143727 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.285617821 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.286843916 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.291330893 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.289702943 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283839041 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.289642697 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.289744013 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.288816608 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.286408454 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.294939337 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.289113275 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.286218107 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.286745472 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.284581641 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.29299449 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.284877852 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.289524008 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.283747082 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.295869736 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.301913504 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.291629898 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.289654857 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.291852405 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.292226334 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.288575382 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.287537686 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.286898532 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.286547134 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.285481648 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.285973891 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.290791677 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.287037721 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.291024739 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.288914723 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.288454812 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.29196107 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.290605227 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.284466761 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.291349191 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.291549272 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.289869138 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.284983845 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.290246139 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.286488326 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.287878974 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.287622429 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.286043123 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.298609475 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.290010686 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.287427669 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.286816918 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.28701152 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.287573612 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.287422323 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.293901946 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.287260491 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.295748494 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.288548742 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.291337257 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.286849716 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.294691192 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.293076464 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.288980748 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.294871603 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.289946653 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.283813361 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.285456187 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.29188084 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.293341924 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.294478406 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.287381283 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.29332762 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.290672432 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.29074193 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.291812359 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.292576355 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.291108245 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.291035268 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.295486446 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.290472116 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.287464438 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.288816265 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.293390135 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.291793677 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.292257743 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.285734545 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.290319016 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.294370394 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.288034782 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.288445624 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.287562382 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.292916072 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.29205851 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.293258883 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.292625627 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.291718442 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.29539938 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.293279453 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.294847437 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.294189541 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.295055926 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.296149844 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.294824426 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.298306215 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.288747029 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.294616824 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.291715902 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.289125644 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.287916225 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.289291257 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.295162665 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.287736386 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.300875333 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.29427345 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.290395018 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.290058236 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.295443852 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.289023214 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.29795218 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.308222615 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.289165695 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.296777816 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.292266235 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.289106794 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.2969538 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.294956485 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.287241192 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.290808126 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.2955117 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.299416771 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.289107107 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.294724263 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.289522631 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.295992717 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.296975126 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.29508039 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.295201295 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.293545292 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.290190001 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.29647803 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.293467402 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.298307331 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.290931523 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.292022066 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.291700675 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.299744358 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.298400795 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.292056819 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.297796125 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.29671304 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.290853013 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.291457074 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.297804703 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.293040277 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.298337995 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.291792795 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.295690311 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.29468366 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.293901551 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.293265604 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.298096742 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.291951682 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.292953302 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.298433126 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.297056095 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.297510826 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.293386903 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.299857052 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.29203801 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.290813454 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.299674036 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.29125741 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.299209882 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.295004648 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.296421142 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.292998943 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.297091871 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.297182395 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.298178587 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.29002036 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.291709948 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.299810813 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.297177269 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.298574551 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.296417263 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.300162107 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.294480354 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.295541744 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.296542726 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.292318755 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.294948192 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.298461576 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.294950727 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.295010544 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.295919566 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.298980892 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.302142196 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.297982495 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.294152113 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.304013352 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.300520761 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.302384875 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.295107835 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.29687381 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.296854769 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.297783516 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.299511106 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.294437045 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.304109689 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.302167735 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.299681362 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.298684097 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.297817778 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.295819767 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.300312575 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.299852973 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.296674547 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.301628507 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.297365752 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.301609527 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.299798479 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.298440596 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.294482877 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.294468428 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.296758698 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.298287119 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.299265127 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.296047265 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.296566708 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.296182942 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.301772391 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.300351335 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.298405346 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.300068764 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.295672564 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.300928376 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.295793479 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.298183258 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.298280002 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.296112598 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.302106056 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.301226663 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.2977542 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.301318533 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.303926755 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.29931204 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.294895668 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.295898556 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.299934319 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.304101479 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.301022072 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.29674965 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.297648437 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.302527255 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.300981953 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.302437605 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.296986806 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.310461787 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.305672285 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.29752244 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.297944215 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.301630408 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.304441075 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.301440666 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.302195386 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.298827503 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.301293736 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.306801553 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.303471436 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.304522664 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.301982205 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.298573973 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.303856765 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.299430721 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.300813235 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.30157338 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.305302315 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.304317411 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.301107927 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.309852683 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.307183668 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.305724777 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.319726579 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.303649124 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.300056274 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.306503745 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.298345351 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.303861382 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.301067609 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.305143717 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.304439542 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.305502714 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.304621197 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.299665048 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.302642357 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.303075606 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.310646384 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.305549748 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.299204377 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.300032307 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.30315875 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.30648582 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.308692501 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.304883967 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.305832016 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.306254136 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.299563471 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.312113094 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.313417705 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.307088389 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.305481825 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.304603147 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.304175904 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.305728981 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.306716085 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.31041879 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.307344391 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.305061947 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.303378594 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.308622509 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.306732296 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.302110269 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.300792722 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.302232351 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.305861271 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.312125782 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.316905478 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.308026529 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.305850015 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.307220158 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.307433673 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.302492677 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.30862189 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.308474778 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.303234855 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.302867584 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.30980702 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.307870269 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.307108515 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.304571536 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.311095468 seconds)
  done (took 771.030920106 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.307816437 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.305778088 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.306019134 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.308107661 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.308090538 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.307921848 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.307589525 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.306389841 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.307247598 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.307559128 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.306590331 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.307120925 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.307737736 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.309187691 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.307670393 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.308864254 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.307484064 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.307566757 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.308410314 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.307372482 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.308710835 seconds)
  done (took 28.645646385 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.310439131 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.308379083 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.307867831 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.30769945 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.307548753 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.309308228 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.307304722 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308300739 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.309690724 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.308571444 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.310615308 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.309819383 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.308193793 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.309506503 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308363661 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.310370616 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.310290795 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.309396665 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.310464261 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.30950114 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.310809602 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.309393922 seconds)
  done (took 29.988612428 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.312325335 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.310983878 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.304631927 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.312134938 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.311334723 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.310177766 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.312725124 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.312227024 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.310447904 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.306716991 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.306600759 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.306161265 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.311150488 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.315326834 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.307650759 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.315501597 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.313401934 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.313558157 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.3137432 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.311936486 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.314109463 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.316229169 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.312914076 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.305696318 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.31607237 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.313276728 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.312802651 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.313970545 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.306000114 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.316278707 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.313882302 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.306567452 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.311371704 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.308739721 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.306544371 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.3145272 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.31444308 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.312152 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.312382372 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.315555633 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.326421889 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.312914313 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.314377932 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.316281535 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.313264065 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.309455377 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.317564642 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.312911384 seconds)
  done (took 64.175841659 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.31599659 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.314891738 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.31373262 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.313680291 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.314048142 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.314089939 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.313664371 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.314372234 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.312084671 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.312401017 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.313206403 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.314926766 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.313065663 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.313866601 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.314071679 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.31439612 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.313672606 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.314255744 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.314307677 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.313209793 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.313148768 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.315544729 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.313720405 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.312939084 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.315880539 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.315021448 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.313349937 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.315522044 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.313243136 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.314403764 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.316780879 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.315541554 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.31574354 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.315571366 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.313955765 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.31348529 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.31552027 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.313542731 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.313514081 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.313425333 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.315077137 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.313702897 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.304562123 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.305316021 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.303428361 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.303822552 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.303382338 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.304361646 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.303080234 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.300860181 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.297794666 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.296096959 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.296806841 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.295694883 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.297012156 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.297200953 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.296620585 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.288299254 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.292289771 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.289022808 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.288970248 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.290852615 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.28987289 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.29227133 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.291488215 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.287144177 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.288023641 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.289212823 seconds)
  done (took 90.083562331 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288600024 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.28800288 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288270609 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287164997 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.282554952 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.282302075 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.283948471 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.281846213 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.282736412 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.28284407 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.282819394 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.281340065 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.278388992 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.278573641 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.278041952 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.279269015 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.278378257 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.278358351 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.2805736 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278528151 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.277750234 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.277264496 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.277714734 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.27665526 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.277485477 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.276739118 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.278447195 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.274291817 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275905997 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.275986821 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.276545663 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.277600884 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.275347043 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.274837192 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.27595967 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.275948942 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.275925072 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275249969 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.276411248 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.276696213 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.275365104 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.277168752 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.276423451 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.274475428 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.274942425 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.275357426 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.274955461 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.275309408 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.276869592 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.274526466 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.275107084 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.271821999 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271178426 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.270166378 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.270843841 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.271144993 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270369628 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.27301962 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.270332122 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.268139619 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.266229559 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.267702791 seconds)
  done (took 80.344025895 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.266368682 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.268094308 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.266932451 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.265050079 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.266595375 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.263639855 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.264157491 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.265022399 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.265209642 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.265117034 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266433706 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.2650425 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265490548 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266740617 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.264020726 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266294464 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.264906699 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.265108326 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.265830599 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.266184735 seconds)
  done (took 26.466303694 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.265172155 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.266929507 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.265175525 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.265296871 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.266362244 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.266021199 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.266354376 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265729344 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263940524 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265691652 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.266553675 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.266087991 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264902289 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.266811593 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.263542211 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.262261616 seconds)
  done (took 21.400517771 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.262957576 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.263184528 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.263184112 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.263645858 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.264431494 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.25968723 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.261733528 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.258467252 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.259028931 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.260860321 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.26089098 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.260224886 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.263519708 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.258263178 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.257361983 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.25921425 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.257107473 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.257782171 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.258250422 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.25817493 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.259838864 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.25724473 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.257135592 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.258285886 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.255359389 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.257355023 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.256214429 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.256272385 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.257872852 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.257449615 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.256512051 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.257699128 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.256344366 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.257064674 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.258988586 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.256921755 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.258016131 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.258322016 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.25947359 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.257822264 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.258160652 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.257326324 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.25970893 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.260200627 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.258152461 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.258550198 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.256846282 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.258663971 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.256570418 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.258113845 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.258774631 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.258906479 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.259697887 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.259162517 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.259257476 seconds)
  done (took 70.388500484 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.260031733 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.259088095 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.258106734 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.259852911 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.259928937 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.258821032 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.258618783 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.260093526 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.257877903 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.259387481 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.258277579 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.260997673 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.259920997 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.259471471 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.258434661 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.260290344 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.258717017 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.257709913 seconds)
  done (took 23.813051168 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.260522224 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.260357155 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.260915335 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.258307689 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.258760495 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.260952101 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.25897587 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.260494736 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259873555 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.260132635 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258512869 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.261014847 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260935066 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.260820356 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.259881763 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25971389 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.261166109 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.261506169 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.259341837 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.260508311 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.261161151 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.261018766 seconds)
  done (took 28.872915598 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.25548573 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.255288796 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.254230569 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.269669587 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.268488487 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.255436174 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.255330495 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.254663652 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.27611547 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.294808152 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.290621829 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.266173181 seconds)
  done (took 16.345678547 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26250773 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262489018 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.261101447 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264157267 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262501059 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261049802 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262438871 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261606298 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263631225 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261564424 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262392183 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2633749 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263480804 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261349308 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263564493 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264603781 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262635123 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261122032 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261836282 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264205206 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262350489 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264008673 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262660462 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262983159 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263325043 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261716997 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264024127 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264255884 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262174213 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263893514 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2639931 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263454558 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264088642 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26275812 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26327101 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263816845 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263259611 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264819392 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265771771 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263565294 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.26612432 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266040093 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264967013 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263957974 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263598941 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263593595 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264826468 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263637911 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265221889 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265477139 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265876465 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263284708 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265229856 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265101692 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265691787 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267015723 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264782562 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265387963 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265999511 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265351588 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266264793 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263218972 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262785906 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262019733 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263960621 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262284976 seconds)
  done (took 84.556378554 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262836861 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.264473331 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257120558 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258903817 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25809542 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258357654 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258321253 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258585996 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259094701 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259218267 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25692816 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2562581 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25688476 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255707434 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256260693 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257176738 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25583362 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257420132 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253651018 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25554106 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254741685 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254040777 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255402672 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255462321 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25506789 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258087054 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254064188 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253873229 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254477658 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254030907 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254894367 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253962002 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254282188 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.255419199 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256277394 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254500271 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255025343 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254234808 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255072222 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256932258 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255329206 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257555751 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254799872 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255411532 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256335237 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255688023 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255880404 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255762747 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256075164 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256848511 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255824333 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25609219 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256797885 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255756385 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255643197 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25541913 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256595752 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258390133 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256047397 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257169703 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257070878 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256499648 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258606319 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256512225 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256812781 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257865097 seconds)
  done (took 84.076998527 seconds)
done (took 1786.076097058 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.415566426 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.370460427 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.250465 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.261537486 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.251890383 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.246435762 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.261784168 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.251919651 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.251876325 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.251389276 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.25054661 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.445569913 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.24982625 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.25272694 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.25316999 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.348630389 seconds)
  done (took 25.76003468 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.276508921 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.268888664 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.370012424 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.269619273 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.289070071 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.444652804 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.322538276 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.26785328 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.424090021 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.28319088 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.267725469 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.286892729 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.265753426 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.270298202 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.281469459 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.444842966 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.498711586 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.270733644 seconds)
  done (took 27.950619175 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.676879809 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.27778809 seconds)
  done (took 5.10906567 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.284640138 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.266133592 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.266958188 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.265109961 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.257502619 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.258966862 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.265636327 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.259140911 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.269666296 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.386183451 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.272270045 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.279839094 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.265367008 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.267220571 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.270145841 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.309390799 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.417785329 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.271281998 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.27066469 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.271222008 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.267399461 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.353511981 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.305652195 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.271597117 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.381997011 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.266612186 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.272966626 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.273917488 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.405925293 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.271837537 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.265992182 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.26730742 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.267975582 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.260455317 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.73102065 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.261306937 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.276305606 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.292025679 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.270549838 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.413596337 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.267970115 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.272655915 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.26088916 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.740130573 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.391801505 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.383258676 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.266596703 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.268530967 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.270194451 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.331893857 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.269926962 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.270724305 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.325740908 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.091793616 seconds)
  done (took 81.623539104 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.31076573 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.262344596 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.442246293 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.28715949 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.262522525 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.266053972 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.263179729 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.529037063 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.311034715 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.272707162 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.54234142 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.819405082 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.271218707 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.342997937 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.218554236 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.35434339 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.264098428 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.263065295 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.265974648 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.26710675 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.803896377 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.269243346 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.264768168 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.380011332 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.30114284 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.760407852 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.26356917 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.264694767 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.281018572 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.264101573 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.776078385 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.271162053 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.359313115 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.267385983 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.528266987 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.625367794 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.587194095 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.269347724 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.267945774 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.266774262 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.273664857 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.744437462 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.604402518 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.26548032 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.280102942 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.752823091 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.265389245 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.265721725 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.275776148 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.519420207 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.265828687 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.265793637 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.26598141 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.266321394 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.264933875 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.301993983 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.367675564 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.763053707 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.266154275 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.27315885 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.289468092 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.267054958 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.274394085 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.269221707 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.286293275 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.608466479 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.464336712 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.277695673 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.607125203 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.76854087 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.265847992 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.842618568 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.266878659 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.277519863 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.270000229 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.274013706 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.266118623 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.754498335 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.287916451 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.265512443 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.590132246 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.271467406 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.547334922 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.284258684 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.266335711 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.836611417 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.269391774 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.285150952 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.268260924 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.267208845 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.268206642 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.270098152 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.537152497 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.303026636 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.269433272 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.269205853 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.26981675 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.278489368 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.268430079 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.268333892 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.843134741 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.268748888 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.269167756 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.271512828 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.268514319 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.269030336 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.271767898 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.268539843 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.541336653 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.268524792 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.293068942 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.27203807 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.270833725 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.278571469 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.358391589 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.268781932 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.558602025 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.270333681 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.270111181 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.275587104 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.269824268 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.2927648 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.270116374 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.277124569 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.136489778 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.528751306 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.286281881 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.271343774 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.271938575 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.271272456 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.269654082 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.27070287 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.331242438 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.273451679 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.053565899 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.276059762 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.273364876 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.270480873 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.279176113 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.271000928 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.279253205 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.273160945 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.563033176 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.535764784 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.44891619 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.273949421 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.279325891 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.027802321 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.314779915 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.450839013 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.289235842 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.272817208 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.520701984 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.478417528 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.273179425 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.272129402 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.273521808 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.540559169 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.272206249 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.583407236 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.807784761 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.271487308 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.272097642 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.056828242 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.966771005 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.277320105 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.276973837 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.546987991 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.288367767 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.272287236 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.272172736 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.273895625 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.272274876 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.274516893 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.277700167 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.271862405 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.272944388 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.58828465 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.462868479 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.288876027 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.278603337 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.76658797 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.313553762 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.276681873 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.273970515 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.277242001 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.273177268 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.359408391 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.277934964 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.286478503 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.276542944 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.274931055 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.779680803 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.274046522 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.275279812 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.463737033 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.961221098 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.279309845 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.273716473 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.274130391 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.205197722 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.794070641 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.276495404 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.56428527 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.283164795 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.312961421 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.275347853 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.368502384 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.79133005 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.2762016 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.275140273 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.932333997 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.275019959 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.791408302 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.276055727 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.275310758 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.858172287 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.275504653 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.279154237 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.278279898 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.288810673 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.582145092 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.27613602 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.282190666 seconds)
  done (took 483.605976135 seconds)
done (took 625.195541473 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.276000198 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.279121679 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.26133548 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.279637572 seconds)
  done (took 10.267111234 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.318765151 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.282527571 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.291623899 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.28216526 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.294935552 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.281372061 seconds)
  done (took 8.923613354 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.276067614 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.281961597 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.281375234 seconds)
  done (took 8.011120014 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.488338896 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.296212722 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.62588869 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.288991236 seconds)
  done (took 8.87268373 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.290792535 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.290522842 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.291977952 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.295146071 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.318143846 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.318583181 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.297374324 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.295627141 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.318241774 seconds)
  done (took 12.888439185 seconds)
done (took 50.135057911 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.122163206 seconds)
    (2/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.122314632 seconds)
    (3/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.278726769 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.395951346 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.379493759 seconds)
    (6/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.938964451 seconds)
    (7/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.279733555 seconds)
    (8/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.260703442 seconds)
    (9/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.273137046 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.347751986 seconds)
    (11/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.314849306 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.310489223 seconds)
    (13/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.36621833 seconds)
    (14/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.309993521 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.435743672 seconds)
    (16/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.315551689 seconds)
    (17/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.278849678 seconds)
    (18/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.289041857 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.439296997 seconds)
    (20/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.163583371 seconds)
    (21/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.261190829 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.431984694 seconds)
    (23/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.260712883 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.364343047 seconds)
    (25/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.378474597 seconds)
    (26/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.316953427 seconds)
    (27/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.292195803 seconds)
    (28/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.425972251 seconds)
    (29/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.504208878 seconds)
    (30/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.31722181 seconds)
    (31/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.310229867 seconds)
    (32/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.464175715 seconds)
    (33/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.417888102 seconds)
    (34/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.083346286 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.384373029 seconds)
    (36/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.320951224 seconds)
    (37/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.36231643 seconds)
    (38/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.312344226 seconds)
    (39/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.271817327 seconds)
    (40/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.270913067 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.389730942 seconds)
    (42/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.087681119 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.356243232 seconds)
    (44/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.035354927 seconds)
    (45/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.397223509 seconds)
    (46/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.434568495 seconds)
    (47/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.420045372 seconds)
    (48/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.094049932 seconds)
    (49/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.125337948 seconds)
    (50/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.46494807 seconds)
    (51/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.315051874 seconds)
    (52/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.344670667 seconds)
    (53/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.281502791 seconds)
    (54/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.26978529 seconds)
    (55/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.04322495 seconds)
    (56/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.393951178 seconds)
    (57/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.411523742 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.534704273 seconds)
    (59/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.397893146 seconds)
    (60/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.363512005 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.534577987 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.544610084 seconds)
    (63/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.413537126 seconds)
    (64/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.271484865 seconds)
    (65/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.263798748 seconds)
    (66/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.346136552 seconds)
    (67/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.313513417 seconds)
    (68/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.38818209 seconds)
    (69/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.391416081 seconds)
    (70/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.499590063 seconds)
    (71/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.263607046 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.451001259 seconds)
    (73/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.160924216 seconds)
    (74/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.371028242 seconds)
    (75/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.265537 seconds)
    (76/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.456956992 seconds)
    (77/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.545079541 seconds)
    (78/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.276061447 seconds)
    (79/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.265838348 seconds)
    (80/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.404598743 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.392289695 seconds)
    (82/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.371442988 seconds)
    (83/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.279007081 seconds)
    (84/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.313117143 seconds)
    (85/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.264922334 seconds)
    (86/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.437345755 seconds)
    (87/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.323359841 seconds)
    (88/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.310135064 seconds)
    (89/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.283598248 seconds)
    (90/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.470124035 seconds)
    (91/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.265839003 seconds)
    (92/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.269582119 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.427224909 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.313541077 seconds)
    (95/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.265209003 seconds)
    (96/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.43679716 seconds)
    (97/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.362661526 seconds)
    (98/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.941989369 seconds)
    (99/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.367335696 seconds)
    (100/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.321190839 seconds)
    (101/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.450567637 seconds)
    (102/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.270775412 seconds)
    (103/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.404138725 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.352023642 seconds)
    (105/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.349653416 seconds)
    (106/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.386763229 seconds)
    (107/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.530952944 seconds)
    (108/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.085563021 seconds)
    (109/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.359742765 seconds)
    (110/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.976299574 seconds)
    (111/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.268395382 seconds)
    (112/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.463576633 seconds)
    (113/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.271011871 seconds)
    (114/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.428750352 seconds)
    (115/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.366949649 seconds)
    (116/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.265719222 seconds)
    (117/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.396130612 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.322136883 seconds)
    (119/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.312225215 seconds)
    (120/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.463284724 seconds)
    (121/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.268714345 seconds)
    (122/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.269339956 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.398474272 seconds)
    (124/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.288683347 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.393190315 seconds)
    (126/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.419412065 seconds)
    (127/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.501507224 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.391852241 seconds)
    (129/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.28632883 seconds)
    (130/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.424803557 seconds)
    (131/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.437854512 seconds)
    (132/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.267808415 seconds)
    (133/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.352734987 seconds)
    (134/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.286756038 seconds)
    (135/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.286698993 seconds)
    (136/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.350943465 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.372607239 seconds)
    (138/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.452254536 seconds)
    (139/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.416663257 seconds)
    (140/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.414454394 seconds)
    (141/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.285201206 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.39972026 seconds)
    (143/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.093393646 seconds)
    (144/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.533168749 seconds)
    (145/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.503393805 seconds)
    (146/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.348815445 seconds)
    (147/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.385694886 seconds)
    (148/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.251388505 seconds)
    (149/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.308126856 seconds)
    (150/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.296511345 seconds)
    (151/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.984675397 seconds)
    (152/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.365064748 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.450541204 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.412355677 seconds)
    (155/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.004290308 seconds)
    (156/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.27582999 seconds)
    (157/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.361442484 seconds)
    (158/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.359599627 seconds)
    (159/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.049858683 seconds)
    (160/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.327415736 seconds)
    (161/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.373568485 seconds)
    (162/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.363170869 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.351475285 seconds)
    (164/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.43187003 seconds)
    (165/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.229089736 seconds)
    (166/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.054357136 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.324300738 seconds)
    (168/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.270641233 seconds)
    (169/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.37031399 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.412234421 seconds)
    (171/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.565477407 seconds)
    (172/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.467201599 seconds)
    (173/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.507176343 seconds)
    (174/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.304819406 seconds)
    (175/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.001841905 seconds)
    (176/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.291067592 seconds)
    (177/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.442850013 seconds)
    (178/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.316215948 seconds)
    (179/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.133206625 seconds)
    (180/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.271357008 seconds)
    (181/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.270730176 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.514192713 seconds)
    (183/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.270345244 seconds)
    (184/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.293739667 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.416238931 seconds)
    (186/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.396618145 seconds)
    (187/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.271772175 seconds)
    (188/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.507672341 seconds)
    (189/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.285592155 seconds)
    (190/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.108325418 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.465822879 seconds)
    (192/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.615868425 seconds)
  done (took 330.465561936 seconds)
done (took 331.639100543 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.314699801 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.375377099 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.297694787 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.29806662 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.300255206 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.290847269 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.317167995 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.29899105 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.308175614 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.308384735 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.290660337 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.304543501 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.310883769 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.306155811 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.332526219 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.299297819 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.299408066 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.306174756 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.310447369 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.312259618 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.300635579 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.300395529 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.31987023 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.301375566 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.308447774 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.308548447 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.305394152 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.296865158 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.303048009 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.311246939 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.300118184 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.306969523 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.314310938 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.309996949 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.302974941 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.307345539 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.301899577 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.379377516 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.317426693 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.308735905 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.305823741 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.314547764 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.305418519 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.306406884 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.309496561 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.321455294 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.309938513 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.31558253 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.300277857 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.299610278 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.31706009 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.311143191 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.305434961 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.29923268 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.29281251 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.31661758 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.308567811 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.317587718 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.307185755 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.302810251 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.335425032 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.315908754 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.310322051 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.311929934 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.306656571 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.315290616 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.309834834 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.314796594 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.305275361 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.303693753 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.304195471 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.306705186 seconds)
done (took 103.480978438 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.434479833 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.302619259 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.445412887 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.306801881 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.466034934 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.437645973 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.306439914 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.308017328 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.305683857 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.126277107 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.306909539 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.307600279 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.302720299 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.306447635 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.435946978 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.307665806 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.306667177 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.021107944 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.30954893 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.447028867 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.303135424 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.30675579 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.308476407 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.130218576 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.305580424 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.302827499 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.44792525 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.309496835 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.021039039 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.299572793 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.295897879 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.022113139 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.450234682 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.328271055 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.317701233 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.317005577 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.468189231 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.313400133 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.433521911 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.43305732 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.445715085 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.348002751 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.301185473 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.306913248 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.312077506 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.311349052 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.308227614 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.339661643 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.304681167 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.309481813 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.022325852 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.320094031 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.308986575 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.309837459 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.308891183 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.340077799 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.308859138 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.312887595 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.450679792 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.311384055 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.43263198 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.132488246 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.130010779 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.310882511 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.298017266 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.309914632 seconds)
  done (took 106.690934867 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.374349849 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.380180821 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.415236964 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.307509209 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.356611337 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.414585093 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.306581897 seconds)
  done (took 10.745296895 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.312178513 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.312861615 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.355946005 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.355168716 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.310969349 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.491661106 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.312393827 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.318380839 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.31982117 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.359112666 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.314893107 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.313490289 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.311154291 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.306907782 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.354814131 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.317121515 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.422082748 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.309173344 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.312760318 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.460934887 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.311434738 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.320508237 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.359256792 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.319477506 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.315151366 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.313158478 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.080854034 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.313076447 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.311362904 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.315017647 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.311789472 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.362175913 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.315103215 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.307679781 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.313290951 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.426256169 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.313988195 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.312928633 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.317221448 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.311314603 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.317406994 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.314921098 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.316793198 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.312924553 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.317304234 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.333615187 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.315792693 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.314893869 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.314286627 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.317376399 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.359896514 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.313929706 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.313916688 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.314084229 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.364618742 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.323454249 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.315481073 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.314047541 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.320582202 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.314164161 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.461595473 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.356604318 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.317916901 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.35776108 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.314177783 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.317200961 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.318366134 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.316092104 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.401128373 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.315540939 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.357938517 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.31588695 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.49069974 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.333825972 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.318891977 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.31333559 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.313569755 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.316903703 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.310275829 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.317447703 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.314861379 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.312532162 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.316279614 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.315724102 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.315804252 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.516166811 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.42182354 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.316132589 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.325068548 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.31910437 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.316250733 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.365610712 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.31751828 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.315831858 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.363658295 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.426837308 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.366335102 seconds)
  done (took 135.558716916 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.326463256 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.325919185 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.316365302 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.339629047 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.313598113 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.313036325 seconds)
  done (took 9.131553764 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.315179791 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.320057512 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.317399336 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.318013117 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.317825632 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.32191353 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.324483651 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.314783919 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.32133187 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.320755872 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.32187562 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.325464223 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.328703235 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.319307106 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.323367754 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.32378277 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.324353174 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.317983512 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.319193949 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.320972419 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.314855124 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.319426542 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.319824791 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.315132209 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.326173185 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.322395373 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.334358993 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.322257488 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.319948015 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.322547564 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.322585181 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.324009732 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.316930145 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.319202366 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.327976909 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.317042057 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.322412571 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.326248907 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.319892027 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.324639982 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.327245876 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.321225543 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.323086287 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.328021668 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.317920148 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.319671059 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.329990152 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.336901173 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.324578922 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.327050688 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.328349744 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.322179232 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.325676681 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.329242272 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.318292277 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.319064594 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.331448563 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.326874012 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.322263641 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.317794898 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.32293668 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.326947382 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.319368569 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.32805431 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.321449922 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.330155257 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.318714887 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.325436212 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.323519889 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.321935098 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.328879239 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.321334333 seconds)
  done (took 97.439227016 seconds)
done (took 360.75264145 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.670664722 seconds)
  done (took 3.872155132 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.311591805 seconds)
  done (took 3.514701782 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.205631378 seconds)
  done (took 22.410125111 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.335493766 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.396168567 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.342945734 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.326820539 seconds)
  done (took 10.603638753 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.57544071 seconds)
  done (took 3.777515458 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.315780914 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.337511524 seconds)
  done (took 5.857668144 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.484835178 seconds)
  done (took 3.686953191 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.527884467 seconds)
  done (took 3.730668958 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.322979833 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.331082061 seconds)
  done (took 5.866497554 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.295189492 seconds)
  done (took 3.498178851 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.220361864 seconds)
  done (took 20.424051933 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.328144925 seconds)
  done (took 3.532193123 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.378283619 seconds)
  done (took 3.581511194 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.797254401 seconds)
  done (took 6.000132788 seconds)
done (took 101.558022209 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.312301839 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.31883983 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.318870688 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.318776887 seconds)
  done (took 10.471491668 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.379018734 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.378599302 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.383612958 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.379342802 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.380157918 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.380375239 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.353774829 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.353456353 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.379842632 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.378698499 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.384793014 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.378714785 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.380215107 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.35379918 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.380521581 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.384958313 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.380395706 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.385524179 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.354814934 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.379095571 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.329658784 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.380832368 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.379807414 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.328367946 seconds)
  done (took 34.133020726 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.836477084 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.39102631 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.472679025 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.372216261 seconds)
  done (took 7.276404677 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.407900722 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.410472396 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.426686657 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.464125668 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.491686387 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.426383005 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.355728208 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.349989228 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.335643402 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.412015119 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.460629466 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.398824886 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.496678296 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.329933363 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.619123852 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.329767794 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.330246803 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.409993608 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.462983394 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.479418275 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.329488565 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.408705884 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.414815781 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.399891011 seconds)
  done (took 35.156522001 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.334825784 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.347328075 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.328299839 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.342001483 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.329091842 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.329382684 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.329805048 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.334275199 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.327986363 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.328063127 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.328907011 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.341622549 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.328381 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.328409039 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.335283168 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.331029669 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.330520715 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.334893376 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.337471528 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.328308831 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.329134187 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.336834159 seconds)
  done (took 30.528512364 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.317350616 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.317299258 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.669648025 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.572643149 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.31933687 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.322979567 seconds)
  done (took 13.72651639 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.390886805 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.529847401 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.324762014 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.663938487 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.751988999 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.329214874 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.324347925 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.563476284 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.850073551 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.846835721 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.384535506 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.390624781 seconds)
  done (took 19.559772012 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.319619962 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.324285322 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.324387042 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.339495411 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.377901285 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.330746637 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.33282894 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.32029707 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.384005836 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.386783626 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.331690581 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.378410691 seconds)
  done (took 21.358888166 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413895456 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.328404094 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.326255333 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354653001 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326548815 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.168515024 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.325793151 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.01241029 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.330983882 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.602316913 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33189142 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416804988 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.582005053 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334427165 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.33261254 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.303843692 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.555513814 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802176861 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334082273 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333128394 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361253116 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.329128137 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.332963712 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.531899516 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.171423299 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327787275 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.591005802 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.328412068 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599096535 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.577155924 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.578145512 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335993446 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603488971 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962989818 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42876262 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526136058 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330628416 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.330299889 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.304368081 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.331215729 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341727705 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.331431903 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.572722419 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336351192 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.330440397 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342629201 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027118024 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.337248986 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.331400957 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.331096714 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.575037986 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433437788 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.335241062 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.331687598 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376974205 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331699195 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.335756811 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456324968 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894018465 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33174425 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365076695 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.336700335 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.337002855 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34552881 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919968606 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.342543251 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.336283442 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.335971068 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332019293 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.344036749 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358161885 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332422929 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.355145691 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331215374 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011133609 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.34688477 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333745143 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.868628803 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34488189 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.337976714 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.562535493 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333848194 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333393493 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.331910092 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.332810764 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005346682 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340355584 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.321808732 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.37614436 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.020088099 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.531750131 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355768067 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363404072 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.557473611 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.309296334 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334355783 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.338220018 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335725304 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356549711 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.025048649 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334046826 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.338628778 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59090227 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.544438171 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334336941 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.320475814 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790698194 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339454371 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.364127718 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.346132664 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.53761871 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.8979309 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590834237 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340480439 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372320098 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.336997831 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059202855 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340208178 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.344838141 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.343191971 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604763817 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.101042053 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33711935 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405063668 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342220106 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.337428729 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350666885 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340514926 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.335789187 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.53353648 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353926388 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.586953108 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.344617031 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337203617 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.336236085 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37099515 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.339705287 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.558314086 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340467631 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618830534 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336675725 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336870017 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337920413 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.558602594 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.335336721 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.347443992 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.597459998 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351627815 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.351794288 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.589079922 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37366683 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446742569 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36759902 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.346491419 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.597925752 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.343797035 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.343673352 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35207404 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.342870248 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339988567 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.346966418 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339655695 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90012056 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320877405 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343233882 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.340342018 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.353690292 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406927024 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.345552426 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.539607754 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.352642153 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335899226 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.346636681 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.342852065 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568587745 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.582875898 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.350538285 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419848744 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.79891091 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.901707747 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359169172 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.34089997 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.339380677 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.339385669 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340643841 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339654192 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.340162486 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541594971 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.594174859 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.342362508 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.907504833 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348723994 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.350045507 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.346790285 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.587599662 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.35267205 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342774832 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.349642761 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344581038 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350596297 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.592154922 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48126354 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.355965649 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.342213323 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.902936425 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.349277352 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.342696756 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.34324343 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373790639 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.34188854 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170271627 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.602692622 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346938532 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590452017 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.355813613 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.362879013 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.341594532 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344007962 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344908643 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.351031824 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367558391 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.545031495 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.347936607 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347963197 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904558414 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047443174 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867280147 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361423846 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.355315461 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.347543638 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.041612302 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343458609 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344742954 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.574391974 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.042191124 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34404959 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.805219153 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.34345124 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.105949847 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59173507 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.580120987 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355692552 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.345862501 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.593455236 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.559144192 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378202948 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357397703 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349257865 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.321211493 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879758469 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345553183 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424241053 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043623321 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345910301 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.346316022 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.413111425 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.360608059 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.732434882 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.34589316 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345988464 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.348883987 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.351178827 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179817298 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.351045389 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345713134 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942055063 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.355325835 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.809918872 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346161971 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.547215234 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.597684678 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.595303191 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.350816989 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.345270963 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.60360094 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595440596 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351886963 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.349081049 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872927673 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.21698959 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.353261873 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347334865 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072997087 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357470138 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.625940581 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.365784274 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.350818776 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367976471 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.348886759 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348397317 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.346413709 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.35404884 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32486289 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819117801 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.352644468 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364013618 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362302495 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352717012 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.60173347 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.363285214 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.918613386 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.582738781 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359043962 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379923997 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.353743184 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360946526 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.326642905 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.349572078 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.350034152 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409749727 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.570797457 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.349494599 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.325085491 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364111898 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.55845433 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.349123804 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.349361784 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577849617 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.348307739 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.361790895 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069357452 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387008814 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.364645199 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350602335 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.350642261 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389908317 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418369934 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.552008604 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.602993586 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.604127273 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.741192435 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350664716 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368887624 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.364333528 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446011403 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350448162 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.355601679 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.130010363 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923142588 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058242054 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.929995394 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.606267914 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.357058805 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35938278 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351618793 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48794636 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351833885 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626267009 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352376135 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.361876231 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373439196 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365153392 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354002661 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.583418944 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627204137 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352342641 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364026678 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357322484 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.35268887 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606128529 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.568162946 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826706734 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889023457 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354391169 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.364928138 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.057387299 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627991857 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353633883 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354371956 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354134404 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.368463993 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.371173673 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.359658671 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353823003 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490599537 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601160463 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998958366 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.601199238 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.395570129 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.870801973 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354852693 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.607759974 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.120930913 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.557633022 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.926896707 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.047251571 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623683885 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4248348 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.557500373 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.357494703 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491125925 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.361545825 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.359971977 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356045768 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355768787 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.353760194 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.605421353 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.935902465 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622182062 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.360784418 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.359191279 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389023773 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.559158024 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.578272227 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035207788 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.577093393 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611227132 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.364190793 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.356694545 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.935944369 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.611566052 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35914701 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.361846393 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569789053 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.356853596 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385329857 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.875671055 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.357587892 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888828935 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.289607614 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377235983 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356784739 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.046748729 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942244644 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.358391467 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837088636 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359515441 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369574254 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637069848 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.363428884 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.358875817 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646838724 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.362087012 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.358770159 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.567590086 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.928076318 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.115242341 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.37396333 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375759703 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.360322605 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358565091 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369665092 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359264403 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370070748 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.769382047 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.360656684 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359558188 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372394693 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.358234611 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372191548 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.363229692 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359859893 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.365613182 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.351861934 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.336374346 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361577889 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485044583 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900989932 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359866368 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.03937145 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.683715859 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.615853062 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.374533723 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.341098229 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.365540103 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361236968 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36102101 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361610624 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.373366461 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894083313 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.377668777 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.61463219 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.371254736 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.571293837 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.571456652 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.361046877 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.565727733 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380493735 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387133128 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.33852848 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362229258 seconds)
  done (took 963.972894963 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.368484625 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.362600289 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.3615541 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.412406316 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.384236226 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.475651943 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.362910258 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.377021597 seconds)
  done (took 20.345380463 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.362349536 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.369802011 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.361375101 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.369005347 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.371382748 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.827932105 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.371242384 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.36585907 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.379210898 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.360652342 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.361458241 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.036305813 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.385192027 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.363139109 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.357754815 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.370888075 seconds)
  done (took 32.255430255 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.473410762 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.547526232 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.293632237 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.407714629 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.393009008 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.366488855 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.593901619 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.3752757 seconds)
  done (took 26.694569556 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.370186003 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.370155355 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.371354761 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.369875318 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.375289928 seconds)
  done (took 8.098739105 seconds)
done (took 1224.784174266 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.36950723 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.369624948 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.36845503 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.369722699 seconds)
  done (took 6.719361152 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.340560822 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.341061805 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.342183071 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.357054222 seconds)
  done (took 9.623221131 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.045153715 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.990854462 seconds)
  done (took 5.278588778 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.860325594 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.862402819 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.853848855 seconds)
  done (took 6.819820334 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.648239684 seconds)
  done (took 2.891296417 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.281236604 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.362036598 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.041321419 seconds)
  done (took 7.928694372 seconds)
done (took 40.50346694 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.3604238 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.605750506 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.514574471 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.358931907 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.520509312 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.515365047 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.096825139 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.361718735 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.37043495 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.363888816 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.360331864 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.522118764 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.080207282 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.609088811 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.079385915 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.609488869 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.52491637 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.367891069 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.367131664 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.365136985 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.101866103 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.369895404 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.361602813 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.386969342 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.521663799 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.505273438 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.367449798 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.606757245 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.360748201 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.37092407 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.506153908 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.375221799 seconds)
  done (took 82.032973951 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.374679047 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.367364715 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.375021107 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.369413915 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.3658174 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.374494609 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.364431222 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.362830712 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.367339771 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.363141138 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.369844466 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.37220263 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.36481949 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.363454709 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.379739603 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.363260482 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.37795207 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.363396288 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.362852314 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.363656633 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.364253187 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.363690064 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.364247431 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.363266808 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.3751834 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.364292679 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.380478023 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.364033734 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.364572088 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.364845633 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.363810688 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.391628375 seconds)
  done (took 77.036606088 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.367366182 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.376849501 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.363777307 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.363632393 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.379140896 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.382719989 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.366829462 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.362963409 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.363135515 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.378478932 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.36423568 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.378478894 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.364568601 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.363935274 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.379768392 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.364608298 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.394093576 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.37892347 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.365142052 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.365830972 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.383273436 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.366793185 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.369686978 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.373504764 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.376099459 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.367065826 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.376937853 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.365263375 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.378401577 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.364296139 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.370167732 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.369117216 seconds)
  done (took 77.132646388 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.603344434 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.381135231 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.382598435 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.37599899 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.382614564 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.380061431 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.374698636 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.611018051 seconds)
  done (took 14.740016033 seconds)
done (took 252.186887761 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.387018108 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.863273619 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.401665409 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.371240889 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.392079915 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.39742792 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.591086964 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.397238063 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.592401711 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.388893349 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.388844604 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.382500102 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.159864938 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.528617984 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.229892791 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.34379963 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.242196148 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.37254666 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.931530721 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.652549147 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.396469714 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.368295339 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.24366664 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.254606786 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.354246751 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.455470617 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.467764019 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.595144115 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.527890131 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.451342581 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.879097546 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.378638017 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.374889344 seconds)
  done (took 64.012486696 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.375069797 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.379427698 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.383525399 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.384564024 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.381260795 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.383555672 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.374882017 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.384115091 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.384254426 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.384366318 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.38371429 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.38210528 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.382200486 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.381362442 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.381138654 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.361119605 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.375312467 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.380940198 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.375776591 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.361129709 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.37976109 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.384551576 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.383374622 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.381325798 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.384671755 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.385197322 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.382199379 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.382052051 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.381162802 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.38068261 seconds)
  done (took 42.658120932 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.384077051 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.94805552 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.096817517 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.389213259 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.378008219 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.381334432 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.659891628 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.391858877 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.381639334 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.380360997 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.874160366 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.393521366 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.410002225 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.106565467 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.385468776 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.386482576 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.388375916 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.377641334 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.958686324 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.392164675 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.659991084 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.391529881 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.661463722 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.392133503 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.382466252 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.380358612 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.383124888 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.219728563 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.403668554 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.863002426 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.143873918 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.660640041 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.146552934 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.148673997 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.138657333 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.393434905 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.387914141 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.873276759 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.385986039 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.38020465 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.659951437 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.384267844 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.110349187 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.052390663 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.399632194 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.389076741 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.227152153 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.894719112 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.622600753 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.391628491 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.140628606 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.388984039 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.390676013 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.382737364 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.619895361 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.387899678 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.381686734 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.226188356 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.407425596 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.661672588 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.395277473 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.38231571 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.958929575 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.386572576 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.952410412 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.388149058 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.390240144 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.383740311 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.112433083 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.389898034 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.064881182 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.403477624 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.390831072 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.862463721 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.957319717 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.278203028 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.384788278 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.967482767 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.187137413 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.682840928 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.391464494 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.220018215 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.685217175 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.391651772 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.393350214 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.39253698 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.391708391 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.457734771 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.660866833 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.999133543 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.056552281 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.23542988 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.685852375 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.396757364 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.384806112 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.229734088 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.412856689 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.393122133 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.11171973 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.068309153 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.405841384 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.391643015 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.055796884 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.408015543 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.667251429 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.39425405 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.153475535 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.390697245 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.458460466 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.393278658 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.392316543 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.389235612 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.666687146 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.394387392 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.394913054 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.061828659 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.89756474 seconds)
  done (took 193.632115943 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.380028235 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.380523325 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.381630118 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.379589221 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.380857932 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.388366007 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.379516865 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.378915642 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.384628757 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.380714598 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.38011032 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.388311905 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.386001911 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.380707948 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.380606236 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.380278669 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.380447025 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.39633672 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.379965407 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.379887783 seconds)
  done (took 44.909122452 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.394975898 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.941186198 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.908288827 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.401254428 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.391336554 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.388076938 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.441292883 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.392502199 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.39218827 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.682827409 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.561666809 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.40178378 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.393810742 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.392069068 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.906667368 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.376566132 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.681708536 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.935385939 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.397972413 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.938609049 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.375638622 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.395875086 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.386992493 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.941893042 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.694001304 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.671145148 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.448732522 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.946358712 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.397907949 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.392564793 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.942837499 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.400046022 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.38897118 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.926670381 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.400890131 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.411913 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.394800493 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.445668849 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.447665426 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.684035879 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.942217684 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.675626938 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.412324858 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.560275417 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.397041532 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.373075469 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.948959476 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.403156851 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.375436718 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.396405797 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.401661152 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.916737722 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.394555127 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.916084883 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.399836343 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.399138986 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.946631661 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.923012349 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.917432574 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.561539906 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.395754593 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.671865554 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.400078837 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.954090818 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.404026294 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.39894553 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.39862872 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.560786715 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.952313282 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.678181102 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.693346582 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.692887844 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.404670806 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.453448968 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.397164423 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.690040934 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.456592942 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.790231428 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.691296922 seconds)
  done (took 126.024179882 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.646184818 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.501754545 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.756412865 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.978426083 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.885591461 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.527143197 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.500765894 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.632008449 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.393686279 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.500019676 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.020185881 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.491384306 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.087359994 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.478702681 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.494833394 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.518193475 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.778789746 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.389572489 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.032168087 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.001612957 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.401205137 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.502339727 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.895472553 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.582356658 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.387947712 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.947448328 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.328273591 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.901258585 seconds)
  done (took 52.829600967 seconds)
done (took 525.314784802 seconds)
SAVING RESULT...
DONE!
