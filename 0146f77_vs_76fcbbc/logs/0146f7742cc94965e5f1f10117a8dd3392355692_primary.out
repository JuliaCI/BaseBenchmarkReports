cset: moving following pidspec: 1577
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.393028747 seconds)
loading group "string"... done (took 0.614583993 seconds)
loading group "linalg"... done (took 8.797958065 seconds)
loading group "parallel"... done (took 0.219418231 seconds)
loading group "find"... done (took 2.462007543 seconds)
loading group "tuple"... done (took 2.179849866 seconds)
loading group "dates"... done (took 1.40857759 seconds)
loading group "micro"... done (took 0.683480473 seconds)
loading group "io"... done (took 0.723526438 seconds)
loading group "scalar"... done (took 46.118464725 seconds)
loading group "sparse"... done (took 13.174575686 seconds)
loading group "broadcast"... done (took 1.304447975 seconds)
loading group "union"... done (took 2.548814387 seconds)
loading group "simd"... done (took 3.019266768 seconds)
loading group "random"... done (took 11.49218405 seconds)
loading group "problem"... done (took 2.471766582 seconds)
loading group "array"... done (took 23.114922519 seconds)
loading group "misc"... done (took 1.689280653 seconds)
loading group "sort"... done (took 3.714633871 seconds)
loading group "collection"... done (took 17.94258571 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 1.035695076 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.161114794 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.242839704 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.651574059 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.306781049 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.206815277 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.191011548 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.206518055 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.625162394 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.231053749 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.178693442 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.423835227 seconds)
done (took 7.229902776 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.333251346 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.092061257 seconds)
    (2/2) benchmarking "String"...
    done (took 0.238254925 seconds)
  done (took 0.964291653 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.097765623 seconds)
    (2/2) benchmarking "String"...
    done (took 0.146742407 seconds)
  done (took 0.881076147 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.135681998 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.192421128 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.149320694 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.134240582 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.150844249 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.147884378 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.133827497 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.149671323 seconds)
  done (took 1.691607315 seconds)
done (took 4.635495888 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.520776564 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.944572454 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.574890703 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.2156421 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.347839041 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.360804019 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.316927222 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.269123554 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.137319624 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.114096446 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.237363303 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.49324263 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.447662934 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.995959099 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.09731144 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.216336304 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.202258819 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.886166607 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.123093302 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.151456964 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.5343858 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.252907194 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.159301696 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.149849187 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.228517526 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.168796243 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.170831631 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.147290093 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.780848066 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.180932289 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.237846655 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.126770865 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.1681719 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.204742098 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.280515241 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.154217455 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.79520181 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.247114187 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.126106349 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.142870656 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.776446753 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.166516694 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.251277855 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.148398633 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.112469011 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.19104819 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.140888877 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.122202671 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.153272376 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.14441605 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.217656127 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.567056292 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.153472007 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.240855248 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.15314985 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.80265828 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.144079132 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.323610599 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.183495875 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.152944305 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.122027033 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.147667091 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.210589241 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.139455651 seconds)
  done (took 23.348074931 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.251169985 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.25363143 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.124149811 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.205776973 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.189649625 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.124137928 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.148408339 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.123985598 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.17400865 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.230710227 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.185881538 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.256763055 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.138236802 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.134513255 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.230460031 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.296268135 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.169438783 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.150334118 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.151177674 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.14005571 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.186057187 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.140681294 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.155630658 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.15451572 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.21281434 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.249812606 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.157243674 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.169599116 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.148325149 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.143407186 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.188393752 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.207249791 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.123360791 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.150039884 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.237204339 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.152339378 seconds)
  done (took 7.114582769 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.280790856 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.148275784 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.308209233 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.232739788 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.151064306 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.191286898 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.226137737 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.238154456 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.333603773 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.341043936 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.223556097 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.157722446 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.157127573 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123069578 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.141384395 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.123446984 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.890810011 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.220406113 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.205993084 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.233177085 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.156131159 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.126793366 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.762725701 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.129897889 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.146596045 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.140178531 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.110479689 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.266491683 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.137473012 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.637335248 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.149872884 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12783848 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.159222372 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.238243269 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.174251446 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.184324203 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.167959288 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.155516061 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.129001645 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.252255764 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162134136 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.13916962 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.125420401 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.177271551 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.160789184 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.154210102 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165864629 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.181023961 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.147741377 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.153266708 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.207955622 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.240234818 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.228768132 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.131407823 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.325776086 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.16938874 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.144647203 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.152904371 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.89489254 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.168746632 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.143484013 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.125561732 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.156520115 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.141367082 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.859578577 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.165253285 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 2.092401242 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.128835986 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.202406386 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.156902393 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.159961191 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132143572 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.148343422 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.152757282 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.148486699 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125808115 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.147506179 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.126515107 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.151047849 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.144321641 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.146532102 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.125422764 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.209556946 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.144392303 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.167041479 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.172757163 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.135583931 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.146481486 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.173661556 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.129899242 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.142048616 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.136811799 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.249940492 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.161461662 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.144255124 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.159965624 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.190764947 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.147531985 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.374185192 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.131260648 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.142504144 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.170012125 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.147639072 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.172349009 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.16004752 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.129937395 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.147818013 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.124998644 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.144200588 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.193667331 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.145637865 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.125550647 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.151378901 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.139025185 seconds)
  done (took 34.370895131 seconds)
done (took 65.469429772 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.492273586 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.108202821 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.13000781 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.110439053 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.127975955 seconds)
  done (took 1.681720659 seconds)
done (took 2.378420073 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.233894931 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.345093161 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.24802876 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.159943725 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.215093528 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.213310422 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.199098435 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.211514136 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.220155888 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.235992716 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.127385559 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.23663396 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.227644971 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.215399319 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.128298989 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.250749457 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.212978928 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.198064854 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.249036064 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.152903563 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.16181026 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.150564965 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166642096 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.13313534 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.16476135 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.150148298 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.168216265 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.150062138 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.15899281 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.134108955 seconds)
  done (took 2.404890158 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.191167152 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.149304974 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.158902911 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.140767304 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.163168921 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.133502301 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.144856731 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163373706 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.169052149 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.14693153 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.157855823 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.133226513 seconds)
  done (took 2.370499865 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.124788603 seconds)
done (took 9.95823102 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.245735638 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.007711851 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.203855558 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.314623845 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.382810808 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.323619461 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.678027052 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.255510899 seconds)
  done (took 16.243387412 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.267085303 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.139513877 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.156738539 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.144057546 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.160560033 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.143159164 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.155407819 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.139533284 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.158830015 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.140147094 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.153268468 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.144667818 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.159431791 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.142236087 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.161859931 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.139978607 seconds)
  done (took 3.274582149 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.185600607 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.182258252 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.14507652 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.164300926 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.143445262 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.164344545 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.149396817 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.162877126 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.140809517 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.159592563 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.149103376 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.162956813 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.16452007 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.14197611 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.16265244 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.165892606 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.157602643 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.145853948 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.180017719 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.147181513 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.163105834 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.143946975 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.161421126 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.146596502 seconds)
  done (took 4.575679113 seconds)
done (took 24.808229841 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.205960125 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.149985261 seconds)
  done (took 1.081358938 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.215929003 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.230207899 seconds)
  done (took 1.175429579 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.161877591 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.154878004 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.169409775 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.167329663 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.138629101 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.155902138 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.181428936 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.140198252 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.155271587 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.139527698 seconds)
  done (took 2.297480066 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.146458617 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.158178525 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.154760119 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.226110477 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.164668628 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.14159941 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.1598833 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.143164325 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.16064638 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.139387021 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.159549284 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.157989451 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.161671507 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.157675368 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.160653139 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.160756053 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.147894704 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.158063231 seconds)
  done (took 3.592976571 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.143144197 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.140712637 seconds)
  done (took 1.01428772 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.14871495 seconds)
    (2/7) benchmarking "second"...
    done (took 0.155113943 seconds)
    (3/7) benchmarking "month"...
    done (took 0.143159939 seconds)
    (4/7) benchmarking "year"...
    done (took 0.156158941 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.139832451 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.154997186 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.140733714 seconds)
  done (took 1.77494171 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.589373337 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.272395605 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.404781858 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.104990849 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.157095189 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.375142116 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.158680899 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.107132123 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.105617683 seconds)
  done (took 3.039154158 seconds)
done (took 14.703926483 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.143903513 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.334984601 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.687272278 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.161896885 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.157130013 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.199995207 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.39811591 seconds)
done (took 2.826347841 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.366232712 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.212296775 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.121999814 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.142571912 seconds)
  done (took 1.581327567 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.136994386 seconds)
    (2/2) benchmarking "read"...
    done (took 0.163016284 seconds)
  done (took 1.045642513 seconds)
done (took 3.371828126 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.163334988 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.157757655 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.144007091 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.159397363 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.14290401 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.159215495 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.143437634 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.157048053 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.143739796 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.158125613 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.142243668 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.160803745 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.141215195 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.160104375 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.140560482 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.159674431 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.143674095 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.158221654 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.143690415 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.159662216 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.141816799 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.158583914 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.14205201 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.161233694 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.159729837 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.143987271 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.157539892 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.264335998 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.160173682 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.14311831 seconds)
  done (took 5.415552392 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.147423987 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.135411081 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.156057794 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.146696666 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.155656771 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.13863117 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.153669875 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.13880134 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.158439507 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.140548183 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.157992684 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.139714555 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.15716742 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.139807708 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.158490747 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.14226837 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.164452138 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.138269527 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.156528663 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.141271076 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.159901347 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.138943069 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.155598893 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.139514281 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.155451877 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.136415687 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.156320315 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.139961579 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.139238592 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.156640494 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.1410478 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.159552912 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.138777952 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.167067955 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.142569038 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.157385594 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.14416806 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.155018826 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.139754766 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.154314204 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.136325066 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.156797887 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.139072924 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.162507271 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.13931617 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.157698948 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.140095027 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.157069475 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.140383307 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.158729059 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.137033312 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.156592821 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.14187409 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.157884563 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.143694599 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.154786051 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.141162714 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.15434312 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.142499121 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.139296032 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.155591767 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.136635979 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.161818365 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.140529769 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.172914978 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.145497064 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.157909725 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.142153231 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.160414646 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.1455838 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.162340992 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.14928061 seconds)
  done (took 11.489129142 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.142444576 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.139806573 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.158409316 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.139863783 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.158450561 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.140399225 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.15871602 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.139988781 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.157967839 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.140605784 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.156972428 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.140329087 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.157395874 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.140930416 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.158766906 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.140415588 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.157465711 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.142363077 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.157992549 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.143036876 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.139795393 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.159024566 seconds)
  done (took 4.03261519 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.287206136 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.146843043 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.210149951 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.173180015 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.160103374 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.171642278 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.146383895 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.165561032 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.144793483 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.168968366 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.149386537 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.164243809 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.17842517 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.150971358 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.170329617 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.151762493 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.165530963 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.150950477 seconds)
  done (took 3.814694977 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.142693314 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.139613903 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.159354976 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.139896206 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.160691624 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.139915662 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.161735678 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.142178015 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.159771382 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.140883027 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.159178361 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.14092339 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.159247557 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.14153169 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.158391403 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.141365508 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.159031006 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.142691229 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.139875932 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.161015469 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.140533247 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.160686149 seconds)
  done (took 4.056148852 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156773263 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.161234672 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.163005481 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.165039516 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.143937399 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.161661738 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.147656336 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.162089373 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.148934943 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.161036516 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.144225454 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.161266047 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.158245023 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.16307999 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.149022365 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.161394765 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.143837676 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.161695603 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.142549897 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.160774088 seconds)
  done (took 3.884919197 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.258073728 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.15949262 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.178497387 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.167699234 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.177989443 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.158709634 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.185793132 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.157771678 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.176851775 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.186657235 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.16014941 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.17817682 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.166565458 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.183825226 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.159204987 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.187545784 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.185563418 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.166925537 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.178317048 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.16012043 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.189070655 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.177731052 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.168656247 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.178237344 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.159670508 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.178409001 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.15867041 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.183032368 seconds)
  done (took 5.702526074 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.158129097 seconds)
    (2/2) benchmarking "in"...
    done (took 0.168918882 seconds)
  done (took 1.10296694 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.146642059 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.143635004 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.163682725 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.144598271 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.164162087 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.142763257 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.164182805 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.14337351 seconds)
  done (took 1.98179271 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.257154298 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.261645256 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.146952401 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.174313971 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.260302841 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.242356569 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.17999925 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.16975906 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.143656696 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.156758027 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.252306755 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.155949501 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.143635771 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.159248683 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.143775186 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.16806686 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.14519736 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.172027384 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.159989079 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.164087726 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.148754421 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.166829544 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.144646325 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.173930078 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.13785075 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.164765281 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.146342665 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.176849324 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.139059767 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.165221906 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.1405526 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.164673704 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.146567242 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.166993978 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.143287785 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.257193063 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.171742829 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.138931189 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.164551035 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.148378191 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.189849211 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.162985877 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.144593349 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.1603185 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.147242094 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.167423076 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.148530851 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.162150913 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.136392777 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.157306775 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.145069374 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.156785226 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.143869668 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.160683911 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.143421397 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.168345638 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.145806384 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.16005032 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.140605944 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.159165176 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.142204677 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.157958555 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.146200965 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.165676265 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.14414172 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.163730368 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.141465652 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.164646068 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.144255781 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.165103153 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.142455396 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.177613711 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.144166755 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.168743402 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.148948955 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.166544788 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.140439999 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.170025111 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.142845914 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.16501185 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.147340659 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.186398308 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.146052667 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.161093556 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.139640909 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.17378523 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.145321988 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.167254658 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.135786763 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.173378848 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.164859017 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.147266764 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.137264484 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.164435153 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.139917457 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.169685228 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.137589335 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.166190591 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.142571505 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.170105849 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.150029208 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.164090289 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.165743773 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.151344541 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.168836945 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.144288932 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.215527729 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.139730216 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.161867435 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.144856593 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.171119799 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.137910617 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.165331922 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.144651737 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.162735193 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.140193028 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.1698146 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.154450831 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.16662075 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.148008917 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.166388754 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.145396443 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.166923473 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.144635372 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.162007013 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.148810685 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.17583528 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.145325215 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.168530261 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.145963326 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.166532135 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.144689517 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.169611029 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.141605467 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.170070975 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.142295133 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.166513881 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.146151348 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.172238414 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.144613491 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.161159512 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.142650666 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.166157131 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.143812408 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.149812602 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.16533172 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.143432262 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.157247981 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.14689177 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.160884231 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.147207649 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.173677613 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.141866925 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.168162103 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.142397566 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.174081099 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.14420153 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.169648192 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.149451823 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.170297023 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.151438337 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.157514841 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.143583777 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.167844427 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.147890995 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.161557999 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.148503384 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.166097499 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.152742365 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.158992344 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.150319539 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.158560172 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.143667231 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.170975718 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.149059695 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.168925788 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.142317889 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.198773272 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.158136107 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.171690568 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.144988128 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.165857521 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.150694941 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.164183121 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.149949663 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.171409966 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.151954716 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.16320618 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.144026166 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.171911542 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.142681349 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.167215296 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.144589925 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.167191905 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.138686241 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.167949801 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.139175669 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.170468846 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.148490046 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.170628496 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.152415234 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.168492804 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.144971803 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.174561528 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.142500178 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.170713627 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.139308181 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.171678991 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.157151878 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.172254309 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.153010005 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.166795435 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.142385224 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.168398877 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.155235933 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.169405853 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.146506523 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.167521589 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.139961053 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.160135371 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.151816794 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.169764488 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.142275745 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.166397017 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.147277787 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.168480047 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.144316459 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.159462605 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.151067359 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.169884048 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.142012122 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.167771464 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.142393621 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.165249957 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.151912752 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.160675263 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.142963197 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.168228782 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.150185449 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.16634573 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.147478672 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.169906995 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.152084217 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.169572452 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.149480629 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.164484086 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.154741429 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.164799414 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.145566957 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.164231024 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.148278461 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.161385773 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.147635933 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.16821678 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.142248656 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.163611539 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.148890145 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.173246407 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.150935067 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.166063366 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.151113206 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.172743896 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.151968394 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.164879439 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.151333772 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.163859463 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.139134416 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.164615695 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.139113855 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.170343969 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.142461369 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.172806738 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.144701282 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.166507769 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.150187467 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.170018998 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.143844407 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.173138735 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.176710379 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.141892306 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.159157126 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.147022307 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.164784275 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.144537481 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.163477486 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.150257921 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.167448934 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.154319587 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.170339821 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.144266516 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.167034865 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.156085396 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.16329972 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.153464399 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.174414123 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.154250989 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.162920821 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.153176494 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.164914068 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.15156209 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.161387025 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.146752592 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.166317593 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.147012783 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.164220745 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.146798992 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.163982094 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.140502533 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.164122806 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.153129615 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.166909754 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.15213556 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.168621361 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.14501333 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.164264422 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.144676397 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.174038568 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.146311055 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.174585054 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.148467692 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.163102568 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.140192655 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.172892239 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.148430087 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.173751819 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.141924583 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.171572382 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.154529763 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.171578283 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.148742424 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.176318143 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.156365873 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.173868869 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.153921139 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.162408435 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.145257538 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.172832835 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.147068514 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.171922464 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.150736023 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.162736493 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.150500598 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.173970257 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.150138451 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.166692673 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.140584189 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.169678902 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.154808281 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.171300433 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.151817616 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.170609636 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.1495675 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.162747028 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.152688741 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.173926364 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.149151681 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.17476518 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.14897986 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.172458292 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.146525117 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.17638168 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.149840366 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.163414153 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.142291382 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.165754585 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.154540053 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.162953783 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.153875865 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.174303926 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.145728563 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.167150719 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.153087949 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.166208324 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.15136766 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.174000139 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.146237663 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.178938891 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.150165086 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.166978808 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.15268371 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.174738336 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.143716315 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.166390283 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.147950821 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.175587581 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.148551104 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.17395189 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.149680905 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.175061118 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.152517579 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.173331161 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.154025279 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.173875491 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.144295625 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.176581136 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.152343301 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.170983174 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.146117825 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.167841083 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.144255669 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.167934116 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.155720101 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.166872562 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.156549115 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.173765884 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.146772826 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.168436598 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.155893162 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.169509441 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.155290195 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.16756426 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.149749944 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.164807049 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.150020517 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.169147886 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.155012003 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.166707469 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.143517955 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.176038126 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.153910724 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.175513066 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.151416227 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.177409997 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.143792314 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.164470645 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.151164901 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.168763485 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.157970568 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.173117221 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.146683109 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.170380119 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.150989324 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.172499202 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.154759093 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.165223761 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.146116114 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.171735589 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.150398426 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.169824998 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.143878874 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.174829676 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.147476785 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.174041189 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.147364641 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.167239068 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.147606405 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.178529445 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.147030095 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.166762961 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.144650041 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.17710068 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.147936402 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.168889138 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.143399154 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.178053999 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.172059802 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.157206845 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.16727901 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.150225689 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.166732885 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.152899526 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.176806357 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.149594604 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.169670762 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.149086249 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.175298216 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.156455247 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.163333468 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.147551339 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.180482363 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.155195469 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.172240245 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.153167673 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.168905273 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.156859404 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.176740787 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.153255571 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.164300392 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.14639736 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.169045476 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.145263699 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.17318742 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.155803819 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.17013946 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.14738423 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.175617842 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.155090798 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.173241917 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.152960867 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.164710477 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.15798588 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.167345679 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.154431408 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.166170171 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.145976739 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.173190729 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.156389615 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.169552416 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.151399817 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.172484854 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.153729083 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.165424491 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.148704557 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.173290097 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.155135852 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.175674857 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.149783555 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.169585665 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.15387958 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.180778012 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.153426624 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.16967921 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.15794286 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.178610285 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.151994285 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.170787258 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.155299242 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.177019384 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.153724431 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.178803906 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.148004923 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.169919821 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.157385217 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.177676405 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.160006273 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.172267626 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.144459452 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.175701 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.147975857 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.165453704 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.154813121 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.179472371 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.156712386 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.173182175 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.147713935 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.180875378 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.154375826 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.172988883 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.148273561 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.170012183 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.154683985 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.170339909 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.154767448 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.170049975 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.158224222 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.179324121 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.157530297 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.180626008 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.144980067 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.178535743 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.152298305 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.181100741 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.152596302 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.168180117 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.144927606 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.176522168 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.157764 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.179187474 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.154760792 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.176739363 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.15546838 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.175073907 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.152078243 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.170535526 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.157798297 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.178484579 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.15293179 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.175707193 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.150987681 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.173378953 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.153488273 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.180281508 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.158523854 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.173793161 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.16147936 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.18040622 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.150990568 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.171730375 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.152869839 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.176784647 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.152876674 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.178471392 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.149002609 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.167745205 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.156752695 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.181321008 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.15174381 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.18178355 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.157827952 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.172533399 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.153515731 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.180820857 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.155041137 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.175241354 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.152085624 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.177140992 seconds)
  done (took 96.364373515 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.201559518 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.183184023 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.15419655 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.175244319 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.171927605 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.178131216 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.154490525 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.177602168 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.155834896 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.185451682 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.153572144 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.176483829 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.168393583 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.197681123 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.194110572 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.164039834 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.175833587 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.156751022 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.176389635 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.156034743 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.19192279 seconds)
  done (took 4.518599604 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.156906573 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.153171818 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.176018516 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.154087785 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.177903669 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.154331457 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.17666215 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.154982329 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.176143952 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.152681859 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.175594559 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.154405605 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.175318112 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.154674012 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.174536993 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.154704747 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.176596473 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.156751803 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.153484496 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.177007485 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.154016155 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.17673067 seconds)
  done (took 4.488499273 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.178524969 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.156589111 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.174921077 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.154352726 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.180657492 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.153842773 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.181768932 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.154972177 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.186656608 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.149991194 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.169660668 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.150591331 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.176916249 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.154284077 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.173016301 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.154418454 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.186454218 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.157211129 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.182954916 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.15510564 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.168964336 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.155036023 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.179284683 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.147025534 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.182268196 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.159048682 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.180969332 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.158649179 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.168577323 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.159761491 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.179412818 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.149565396 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.167923951 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.147366382 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.16819584 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.159333668 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.1579088 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.179560386 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.154853929 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.17095286 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.156108621 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.183257726 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.146376024 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.179314788 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.154987322 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.173546761 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.158021421 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.177985331 seconds)
  done (took 8.832474495 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.186753785 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.215910276 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.159008426 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.208002573 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.194563298 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.165464606 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.181703397 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.184084022 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.182365283 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.157927343 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.194538784 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.193803866 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.161231883 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.18446941 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.163052122 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.183032191 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.160834481 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.179765455 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.163232917 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.180845077 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.163326481 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.184149733 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.168286626 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.191854205 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.183572978 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.161440314 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.180591052 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.163455422 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.190454878 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.165448594 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.184456508 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.164721502 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.191516035 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.158292373 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.18191272 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.161221907 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.193536445 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.183879035 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.161596767 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.179126468 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.161718614 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.185084357 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.161368755 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.194414688 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.160649048 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.184635969 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.159915448 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.179753151 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.16913472 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.184685756 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.166635367 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.193947934 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.185276225 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.161211767 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.186151512 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.170650524 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.183701456 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.158978431 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.185666059 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.167913371 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.181474735 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.162686328 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.191943718 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.183894924 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.166625454 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.192542817 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.163384591 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.185134076 seconds)
  done (took 13.015215686 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.191118967 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.186574206 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.172521162 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.195976069 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.163902293 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.188473205 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.163995278 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.186439367 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.186309456 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.170701264 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.185821261 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.299681716 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.166491573 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.194696579 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.164366808 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.188970809 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.163382097 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.186868779 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.163570047 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.186845154 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.187344819 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.425335168 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.186721205 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.171824137 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.198214576 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.160611587 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.186890466 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.185581753 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.174589353 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.18670653 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.175019534 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.187356059 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.163935752 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.196683872 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.196916559 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.164758813 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.181333593 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.165536549 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.187090331 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.164581316 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.183798823 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.171758434 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.187660298 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.160920546 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.187507769 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.164403043 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.194289493 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.19771588 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.17036767 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.193240776 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.164144499 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.196938625 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.18692329 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.166946358 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.195592073 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.179381059 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.195239872 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.194376569 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.166876636 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.196986302 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.173786833 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.202891761 seconds)
  done (took 12.485191836 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.161126714 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.159147822 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.181910151 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.160075762 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.183443522 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.158456268 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.18338666 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.159844678 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.183109903 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.159752075 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.182552164 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.159331067 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.183400392 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.159638016 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.181726396 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.159407185 seconds)
  done (took 3.616839198 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.178968514 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.199627661 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.263038859 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.164595205 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.185738925 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.16792835 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.184355545 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.162982646 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.182352218 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.165590051 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.18638118 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.163122276 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.199727627 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.161725309 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.183453342 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.163119925 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.182994817 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.163804847 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.184375335 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.26587032 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.16461687 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.186687396 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.161635695 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.186680535 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.161768145 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.188078584 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.169866844 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.183449137 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.162023909 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.185347361 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.16159944 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.190494428 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.159363019 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.187804153 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.162798716 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.18465542 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.162207262 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.185291609 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.163056603 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.185356409 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.162083921 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.185169416 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.161021407 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.187846761 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.159939873 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.185982781 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.158668889 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.191528969 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.161777937 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.187289099 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.161264568 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.190340073 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.164572764 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.192709322 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.168752333 seconds)
  done (took 10.73187293 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.174082236 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.184791389 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.174696599 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.182521378 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.163164509 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.185903968 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.163948358 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.186242428 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.164179033 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.182608291 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.164767663 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.186702165 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.163953528 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.185931437 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.163467118 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.185538711 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.160659845 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.185824754 seconds)
  done (took 4.073531387 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.159896208 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.15903148 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.184603763 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.159368589 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.184351291 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.159615919 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.184771368 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.159643003 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.18438758 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.15883197 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.182865382 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.160388446 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.184479854 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.159880238 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.183107893 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.160397242 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.18222176 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.16120143 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.158441801 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.184289124 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.160051884 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.183966179 seconds)
  done (took 4.668717082 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.173130828 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.287611449 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.192638963 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.298782265 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.158557515 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.18231735 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.189587659 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.160622756 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.19631886 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.158008755 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.180717574 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.158611842 seconds)
  done (took 3.254611246 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189604298 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.22116988 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.161961847 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.186471046 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17042852 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.191939417 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.165677365 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.190639755 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.174709393 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.201532765 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.190540685 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.174982297 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.198563452 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.175069117 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.194313329 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193342283 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.168404881 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.188160081 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.164249013 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.207104125 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.167208228 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198866434 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.166271983 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189910937 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.189288878 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.177200584 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19852903 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.177507838 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.191683467 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17305113 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196638689 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.188995367 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.175536198 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.201443801 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.163520034 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198423411 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.16659619 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.206008209 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195083212 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.175445717 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.187153365 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.17097015 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19958196 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194911982 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175234529 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.190910271 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.172267693 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.190858429 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.167044852 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.213235869 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.19533864 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.176066055 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19599245 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.174265948 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19860533 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.211385298 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.178451384 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.200217311 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.17137057 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.202387174 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.198737248 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.173915433 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.200374959 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.177074353 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19773103 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.198193258 seconds)
  done (took 13.254283279 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.204764189 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.188641072 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167442287 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.203548282 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.17482779 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.191377679 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.191090245 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.169029962 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.190300769 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1651621 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.234678678 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.168188096 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.200346098 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.199037221 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.169205857 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192058678 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.167938585 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.201133805 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165019589 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.214742509 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193508735 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.177189647 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.199478178 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.176732197 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.203017073 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195038712 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.169272514 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191301838 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169359496 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.191450613 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.173014209 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192716419 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.175894894 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.189596998 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.176238389 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192954463 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.192368465 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.174038968 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192989671 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.174371972 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.201235927 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.182649652 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192491733 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19172784 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.181179215 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193788773 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.169105832 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.189528533 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16819208 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189361922 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.178652828 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.204996447 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.203184581 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.176653564 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193016409 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.168100424 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.192152936 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.168965895 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193698642 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196725413 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.178604133 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192832424 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.18867391 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.194236862 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.17055324 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.200496247 seconds)
  done (took 13.262455474 seconds)
done (took 234.787788435 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.331158689 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.356607014 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.154252949 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.486218127 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.153312609 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.860759392 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.82476811 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.261865932 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.155328397 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.177634617 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.15645668 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.197941833 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.502519087 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.177618714 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.15594786 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.195843568 seconds)
  done (took 32.08441788 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.362185865 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.405012048 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.195085329 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.160263482 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.184550222 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.161997033 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.181246638 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.162992857 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.182576596 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.167910662 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.182471114 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.156451403 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.188727464 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.158080692 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.182302731 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.161099135 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.188955538 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.160648682 seconds)
  done (took 4.487182418 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.18097889 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.233748228 seconds)
  done (took 1.362314032 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.193136373 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.280398744 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.384039035 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.233647821 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.181077593 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.202351013 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.232685582 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.172839478 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.274618114 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.196361949 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.173425556 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.182134099 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.18732352 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.189945638 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.17683379 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.183504625 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.186347431 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.200485488 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.173381081 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.188218753 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.208441468 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.164646831 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.189405983 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.175097908 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.266027466 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.195063773 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.16518131 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.185921367 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.163434732 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.19767364 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.171311935 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.201428161 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.171955097 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.241597935 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.187985378 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.23966455 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.16455594 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.185821485 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.174315995 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.185278078 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.164286596 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.188773774 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.195251968 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.161071903 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.182008773 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.166263328 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.181473095 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.16204054 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.193219106 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.163985624 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.193596607 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.166551304 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.237416133 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.188921375 seconds)
  done (took 11.526007254 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.003881003 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.208860412 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.18566002 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.152702747 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.208288435 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.172843609 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.990425678 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.185754229 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.317163677 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.09536595 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.204313245 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.169380717 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.331963155 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.34388209 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.344995227 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.420721321 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.850007809 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.199231023 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.21708532 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.205804956 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.193532594 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.202769783 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.178334812 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.52214888 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.160992063 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.185528972 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.190266183 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.17105783 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.241407379 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.184584531 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.166572583 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.264595917 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.361733992 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.276561837 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.187754761 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.159493695 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.185494054 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.253281746 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.334494427 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.282873939 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.255355803 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.18335361 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.160373008 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.190524372 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.176107607 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.183808619 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.248360128 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.25901307 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.259867089 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.165957535 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.195361033 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.169115045 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.189877578 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.246204527 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.15805815 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.452173495 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.428583111 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.188294028 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.167401153 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.199219034 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.333295758 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.187607877 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.302357422 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.20781831 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.281111425 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.160305534 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.904624561 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.252864342 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.162213699 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.190755568 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.166159809 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.193717218 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.164959202 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.249656321 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.499152914 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.168108332 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.191399956 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.185298483 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.294480402 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.162044995 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.187010288 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.246297627 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.16382677 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.193203535 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.170354106 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.193984509 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.257568155 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.340326934 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.1683167 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.193198557 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.166515667 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.197060864 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.186909025 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.273599922 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.321494283 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.242886797 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.297309814 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.166861395 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.24969048 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.252971227 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.193438419 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.255236268 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.166545137 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.199632768 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.166285747 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.317523373 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.224312823 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.18627968 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.191476891 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.168703999 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.227722339 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.164861895 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.193307751 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.256522401 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.558471689 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.254148302 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.183280787 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.168530909 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.191899971 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.244677053 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.170753844 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.326709919 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.195639898 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.253720411 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.167986391 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.186236521 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.168386439 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.24781414 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.19819905 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.192545667 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.168566317 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.19624266 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.345617175 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.289013767 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.171890565 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.340296156 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.259800371 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.169735361 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.262581128 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.193291767 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.254256845 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.17369766 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.190623594 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.164367588 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.8787841 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.200637552 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.192893856 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.16951894 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.272972334 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.162036962 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.191732546 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.163194116 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.1861852 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.8753989 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.191183206 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.162981578 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.18918684 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.170563453 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.193902601 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.169194183 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.194741849 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.249123877 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.312704158 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.198042796 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.168357418 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.188768934 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.246797769 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.163371689 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.188878441 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163220388 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.189657482 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.170239858 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.19487799 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.165890242 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.254359983 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.244624697 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.324300936 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.633340291 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.162913188 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.191009002 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.307967422 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.191482911 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.391838892 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.194691904 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.304781964 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.250534573 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.185072609 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.432994845 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.253916337 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.273429652 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.16747541 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.257669395 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.187352554 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.169791977 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.246837351 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.188830519 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.171748764 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.245012552 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.198755811 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.170274509 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.355082186 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.164175057 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.315133161 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.186132116 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.258331055 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.165563501 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.195522841 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.396800587 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.18740564 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.177190007 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.247033095 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.194706745 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.165637286 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.038504886 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.191153983 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.172546844 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.195302751 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.302743465 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.251065226 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.198725793 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.170800877 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.199654072 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.249985438 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.299016585 seconds)
  done (took 62.557132459 seconds)
done (took 112.958119225 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.323061039 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.255726507 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.401486028 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239147193 seconds)
  done (took 2.269778653 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.346430594 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.204754593 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.301990329 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.1865564 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.309520847 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.161470961 seconds)
  done (took 2.506318466 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.236827391 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.231301037 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.232607153 seconds)
  done (took 1.702143019 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.273177702 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.272998205 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.41525852 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.325431516 seconds)
  done (took 2.350447243 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.343188006 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.178916521 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.220741927 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.292768316 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.308837087 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.271726307 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.223340857 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.237068067 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.194623421 seconds)
  done (took 3.30975379 seconds)
done (took 13.137137297 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.210216811 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.219370582 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.18472814 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.202556058 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.193871951 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.223194729 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.191378547 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.218122177 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.191267108 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.20466728 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.188569321 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.202097673 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.307980017 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.216857979 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.175388113 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.21648757 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.175511344 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.226022502 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.192714252 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.20148661 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.193726918 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.201072061 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.174700412 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.207477759 seconds)
  done (took 5.917197491 seconds)
done (took 6.922098249 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.311666829 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.154833825 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.172372706 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.201562282 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.293340521 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.201630883 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.218952358 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.173493954 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.210657659 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.173219749 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.190617683 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.210474748 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.175107248 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.305084118 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.203302199 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.165964034 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.191464773 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.186014703 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.212945678 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.190434786 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.292182125 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.193326963 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.184799797 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.191566568 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.293799676 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.167730097 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.199555571 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.174998311 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.214431104 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.173924223 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.200351964 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.164880941 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.215538751 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.18873488 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.190974206 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.17491239 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.190003603 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.134924358 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.199559679 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.178266005 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.211049903 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.17636962 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.19920011 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.16728148 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.199726772 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.175258083 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.189472157 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.178961942 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.188546677 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.177485542 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.191381588 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.19139952 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.199419106 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.164298631 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.189079613 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.166557633 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.211205629 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.166518073 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.213958525 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.167187551 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.191836285 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.165476237 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.201637618 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.165859138 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.19968966 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.16667733 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.199760665 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.17702548 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.198887255 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.167438471 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.189424665 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.174897796 seconds)
done (took 15.008919093 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.173747474 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.233287709 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.308221942 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.312266733 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.192760215 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.211088052 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.206222123 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.188924674 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.203461933 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.183147056 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.228877159 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.197662512 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.310209284 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.210911094 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.208458075 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.179349637 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.20366374 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.17255187 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.307680895 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.21851357 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.188171948 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.209764473 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.217110015 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.184549123 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.193314572 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.203127918 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.20027667 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.178089056 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.194434992 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.178557114 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.218139649 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.169903704 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.200025436 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.186735219 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.213625705 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.179434286 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.209134167 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.203711809 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.171863902 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.195209622 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.177879894 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.211600907 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.170439052 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.209734687 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.177971204 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.210938724 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.176924222 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.208335588 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.170194393 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.203272645 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.170920818 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.222225359 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.18151858 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.214216371 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.206540729 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.183696711 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.207072609 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.184827462 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.199302015 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.189338939 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.196398103 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.171969921 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.195346927 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.190885765 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.198973445 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.182683948 seconds)
  done (took 14.382530072 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.19395919 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.228025022 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.180130595 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.210182991 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.176114534 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.192339366 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.163933464 seconds)
  done (took 2.383523265 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.16900306 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.325453343 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.315031199 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.315443896 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.307700796 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.356634697 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.191192789 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.194909579 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.201875985 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.205886213 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.327677359 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.411130872 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.17730345 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.209571298 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.322640439 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.166438555 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.319709672 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.299853643 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.210770227 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.321460867 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.212011812 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.200655793 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.208387016 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.167282062 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.318399948 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.197709492 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.368309139 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.213338518 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.177323003 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.208569981 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.181772096 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.272838489 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.320261123 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.211290494 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.175480308 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.316091382 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.312454713 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.210998461 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.393899917 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.172250356 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.309576604 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.209423248 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.184831335 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.209534973 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.182676035 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.303750843 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.215287348 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.182997232 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.209964601 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.332745398 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.205216474 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.324878903 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.180383416 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.209102114 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.178257224 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.212138737 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.18850369 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.210381075 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.332329437 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.211233482 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.318182311 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.3224494 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.316123989 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.320504442 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.219214692 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.325588336 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.303576879 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.18149515 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.316384102 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.21281678 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.321765702 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.180535503 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.210385311 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.31087918 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.213142435 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.325420113 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.32542003 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.179544172 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.210176498 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.171874753 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.211318922 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.16802901 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.3380112 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.183814241 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.207653232 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.189016099 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.210007936 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.182483022 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.313127862 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.221621343 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.181430023 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.210309173 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.214847291 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.184360758 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.211860002 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.327458395 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.179220628 seconds)
  done (took 24.852123272 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.176472122 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.169145369 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.200970623 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.194890558 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.170658067 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.169532577 seconds)
  done (took 2.156455298 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.211635072 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.209951157 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.193352262 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.212124822 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.231610651 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.313830185 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.320362294 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.209457348 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.230458594 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.195553769 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.317059128 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.318604567 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.315957488 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.217786715 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.322403583 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.186508095 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.321641421 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.21333361 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.191868368 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.20982756 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.210359738 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.189944984 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.207107322 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.308522901 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.186526739 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.21478639 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.177661169 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.225165954 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.191475156 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.206285959 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.186051814 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.213275997 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.175242683 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.205415192 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.321626501 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.204215685 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.181318659 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.214965979 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.186039585 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.211777865 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.322411855 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.182306668 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.221038947 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.187561 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.208263053 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.175896315 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.213919609 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.20383763 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.323947764 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.187564065 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.2153698 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.18525892 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.213100422 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.188024786 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.204326047 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.178672039 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.215238465 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.326592342 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.187231116 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.205863378 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.212058797 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.186446895 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.205892339 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.190211419 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.212789036 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.187431882 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.204956547 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.185187146 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.209906599 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.185646579 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.217136356 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.185256799 seconds)
  done (took 16.975812468 seconds)
done (took 61.775432616 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.645386153 seconds)
  done (took 2.723427537 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.215819279 seconds)
  done (took 2.298076267 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.808567278 seconds)
  done (took 19.918837348 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.500727981 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.418050511 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.089992359 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.242786957 seconds)
  done (took 3.335199247 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.159946405 seconds)
  done (took 2.25522115 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.469127503 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.346568503 seconds)
  done (took 1.903214561 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.823035764 seconds)
  done (took 1.925231269 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 8.607836593 seconds)
  done (took 9.696596045 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.369823721 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.285650865 seconds)
  done (took 1.754138563 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.721665769 seconds)
  done (took 1.826976791 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 509.198399936 seconds)
  done (took 510.306974746 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.323221252 seconds)
  done (took 1.426246122 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.36154848 seconds)
  done (took 1.469367972 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.750498431 seconds)
  done (took 4.860196771 seconds)
done (took 566.791551441 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.190677189 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.213918472 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.189010548 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.212230141 seconds)
  done (took 1.902102916 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.193915306 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.209883135 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.189447605 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.210682672 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.190863802 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.210829865 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.184234212 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.213298525 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.184317207 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.21268844 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.185624687 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.209791122 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.187489605 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.210068795 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.18421573 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.213676667 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.189612226 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.212622654 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.18570142 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.211578587 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.185874228 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.213849109 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.188657847 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.217041679 seconds)
  done (took 5.903731335 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.186765026 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.174537641 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.206405153 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.173591636 seconds)
  done (took 1.856346264 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.200784517 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.226470992 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.197876484 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.221372075 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.199581765 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.226387259 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.18321862 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.212375129 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.184288785 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.225661687 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.200751701 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.230432383 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.196328365 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.220165268 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.222607646 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.187911916 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.215853845 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.199090586 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.221501219 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.197708121 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.216975677 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.193819569 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.212291315 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.196363825 seconds)
  done (took 6.111177281 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.265828587 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.227911962 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.211229048 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.260463753 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.244261784 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.183675409 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.241874393 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.189845475 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.220437018 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.193131608 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.215308962 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.23023826 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.219720737 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.18738938 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.215915586 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.218159129 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.195306398 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.216960773 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.227501813 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.218495022 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.190717792 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.226253696 seconds)
  done (took 5.927434596 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.341974335 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.176305539 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.205180919 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.173765822 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.218308732 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.178645522 seconds)
  done (took 2.416908575 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.180807126 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.168922749 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.200920774 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.169421171 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.20311562 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.171216529 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.198931156 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.170732508 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.200619481 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.170111819 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.198807924 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.170933882 seconds)
  done (took 3.328827633 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276574349 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.219438767 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.351568583 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.463300843 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25986855 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.25615602 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.374757399 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225055478 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.275628588 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.235248763 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280305959 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229380276 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.25040947 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285821255 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20882282 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.245092255 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271300469 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.306645371 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211080959 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311735677 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254459485 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.276448277 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.288483759 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21633696 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.236307083 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259055873 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.189011125 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.222394753 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261455472 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233021037 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274904124 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251756283 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.239545938 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25294242 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.323181378 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275282314 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.390909507 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201500781 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.258751212 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.291361353 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.330826976 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23756101 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.288550696 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220925281 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.226332643 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.29018653 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216183071 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.284034059 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.230617983 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212299839 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279413622 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278410711 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.267377052 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203846593 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.400267689 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230991688 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.238872244 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244578959 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284519919 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30120668 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280378618 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.219958986 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.268285391 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288939655 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284745464 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.238800269 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.262196871 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191519393 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261760736 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.307498582 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282145545 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25604999 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.288065193 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199134371 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271907883 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.264529489 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222343135 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.307038367 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272558014 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.2180772 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219619511 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23357945 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192734478 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.287880628 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217531788 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.317729244 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200130496 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.271709625 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274232155 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21978684 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.261584417 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.260879071 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259429483 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215939283 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.155025342 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212236524 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.258158018 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254707159 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197336751 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.250707878 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20639486 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.223961932 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247121579 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.190778686 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271084904 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.190498387 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25794291 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271862565 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.199682775 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279640117 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.246500186 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.261383352 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236203843 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.297521899 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229490911 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199819243 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.320274157 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27037988 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.234277721 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.26755841 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.267809806 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.238324799 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233008503 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234334637 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.29112834 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.243372688 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.303664191 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206229512 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.234171557 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.222718028 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242909765 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.258251876 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.260266455 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195396571 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.265672589 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288033903 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.223810247 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208515872 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283282141 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23206284 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195079426 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233649959 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20473011 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.242185135 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.249603958 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.207525121 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255089847 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264104308 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.236455083 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256536621 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232891782 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241242759 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228919646 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.270816923 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215771986 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.217975662 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.274425195 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.29905276 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198081994 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280247054 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.260196032 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276441526 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243207402 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229677893 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.283485629 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195690321 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.220263872 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260810391 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.237865154 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.264329852 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.290355011 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274429295 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.263901845 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.263331525 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217609274 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267834228 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.286517825 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255560092 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.208531891 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275224341 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269451063 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.189663751 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.222921374 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.19548621 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236856658 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19815101 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.237208367 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.282239674 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265271904 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.270518327 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.237104165 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23948409 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.298353024 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.192524337 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260011982 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.27627342 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237801379 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.259745816 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292909851 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283175229 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.237447686 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263432393 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.190188007 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224368886 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.203288546 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.259614288 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203756007 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.235866557 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241072645 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.291342239 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237056034 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249359835 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.286722001 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265200753 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.305507213 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.189061766 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.26288145 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263841118 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239120707 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.286431061 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204183568 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.258566121 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.297240158 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241113071 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290768254 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240489391 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.282712688 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.295226755 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.265530837 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200570805 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.244258418 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258592918 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208072208 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.262289485 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.210213101 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2328224 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247150615 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.205876377 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.243016455 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288187961 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241744091 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244674913 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.255933574 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270206919 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193803032 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242056105 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.27651933 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214075874 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.163175682 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264349119 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260603058 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251021776 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254160344 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267836911 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20003568 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.422843263 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283007324 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238004864 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.237800773 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237435125 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.24242477 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.257690943 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259744524 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.283686341 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212010146 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310340982 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.273679609 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.237754327 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20222522 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.247311797 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.218888018 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.225742496 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.25416606 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.233651277 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.243872377 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291571299 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237390705 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244584951 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280443847 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.244934981 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.219819839 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239345689 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.330956074 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271998003 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240813993 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.270230117 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.264941202 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284583409 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193569708 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227121593 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.201814362 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.28741303 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229406381 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248682023 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.265736325 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28021879 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2790279 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264440556 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210540964 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.229921268 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.26878716 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218028533 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283685848 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236670135 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.237716547 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256647248 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.216254402 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199858822 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.262695237 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.391693163 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.246913847 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239698723 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.194787993 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.385564471 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200472071 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.233475809 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.228848075 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2704786 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.235458224 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.25721505 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277037288 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242120393 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.228856557 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237357106 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.274517502 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282019186 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268166143 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246793838 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.248489217 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.264824151 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257511411 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244797989 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249034628 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.246665213 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230425301 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300735047 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.278144147 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.201720408 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2735836 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275031114 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.273043363 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242980736 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242758759 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285385768 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198481091 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26878514 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238933721 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194883799 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263544089 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.262244052 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202656864 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274723753 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275505181 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200758861 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230754905 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249227338 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238612723 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243412707 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.230316045 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288974547 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.200461622 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.287315959 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316651098 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200204431 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.270857724 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.24249482 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200482328 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242213032 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213006381 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234748249 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.248733992 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27619875 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.233888944 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273873997 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238621052 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265818438 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25647562 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242198558 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.33875876 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.229938281 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299054659 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220892317 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.300125533 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.25225596 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247003657 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.274615344 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253974439 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266606589 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218298972 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.325730494 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268957545 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.268313487 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204262631 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244435129 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2090574 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.237481003 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.221335024 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274090481 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246775447 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.206090362 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.27199512 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247104995 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.218451928 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.244882576 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.306413417 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220886737 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289485062 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.290097595 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.243018001 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281068152 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244467432 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233745814 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.269595652 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274986556 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216019116 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257134445 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.205771143 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.240480721 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321003062 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.195834327 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.262908115 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279357674 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.274410179 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246372599 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.238267356 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281765726 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211793904 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281717942 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228157382 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.223018367 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.274389051 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.235472465 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.199397024 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27707754 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261460281 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.237378884 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.246800313 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.248876565 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297801479 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.225940504 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205474846 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.394863053 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264551824 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.299735762 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.190035013 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241176584 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217423673 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26502123 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.269712537 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275331825 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.203650193 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234669493 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.217153758 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.250358638 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.196435431 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.278839261 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.287067644 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259367486 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255582331 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.238818651 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.358080937 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213746372 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.277617212 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.174386269 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.233558776 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212095961 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239195675 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24496642 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.279818125 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322532286 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.237797637 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.250996695 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.237605833 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.199220698 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233696777 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.233199752 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254344265 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273037615 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221421532 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.192134038 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212761867 seconds)
  done (took 122.288905073 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254403303 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.248590432 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.25961536 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.316277456 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.286286579 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.387906065 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.323399547 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.337374467 seconds)
  done (took 3.659173539 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.196025201 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.238698673 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.247772868 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.219722732 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.183423744 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.571505965 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.240975161 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.224564888 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.23412433 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.225765252 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.213534724 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.642063544 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.223001029 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.222027931 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.223793407 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.182355672 seconds)
  done (took 5.527601692 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.474743648 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.761206355 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.532708603 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.424773526 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.381118717 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.298746433 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.969958275 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.292482591 seconds)
  done (took 14.382794712 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.248935715 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.279052534 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.480416762 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.447167407 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.289021411 seconds)
  done (took 2.99737828 seconds)
done (took 177.401437048 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.202860358 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.227943697 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.199503091 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.230650809 seconds)
  done (took 2.098284063 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.254912 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.14984311 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.187397104 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.149882077 seconds)
  done (took 1.987564403 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.47470634 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.150298991 seconds)
  done (took 1.902356118 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.222412851 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.239644245 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.209727986 seconds)
  done (took 1.936500711 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.213790228 seconds)
  done (took 1.472087868 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.199248698 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.190932881 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.380411523 seconds)
  done (took 2.032272049 seconds)
done (took 12.679866574 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.221016817 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.037083071 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.65505038 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.20750664 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.826094818 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.471570976 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.543534207 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.252717559 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.308282063 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.184692171 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.248793567 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.786760539 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.527686727 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.954823414 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.512510404 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.95341663 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.80179269 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.18507814 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.223977077 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.186702411 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.522420814 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.183152623 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.216912681 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.184778583 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.799093497 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.490544857 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.216543597 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.96505112 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.215125501 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.223659164 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.475392492 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.21386733 seconds)
  done (took 24.041277094 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.190950942 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.275199763 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.240369773 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.218943359 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.193132102 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.218801434 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.196042946 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.23122816 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.319997879 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.185434927 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.239329889 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.184641239 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.22426361 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.186219866 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.241607773 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.185490973 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.219854463 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.186325121 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.225278864 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.187527671 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.240108122 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.183801172 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.219694082 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.186111276 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.218743317 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.233545733 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.187656846 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.229331534 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.18547109 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.226278268 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.191278171 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.21712171 seconds)
  done (took 8.132792929 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.23302327 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.284090434 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.240691916 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.257469638 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.272236745 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.188050599 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.306519087 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.254407377 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.29333435 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.220715685 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.207281318 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.21815746 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.258536689 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.187110076 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.242126098 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.186556408 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.220398869 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.18802682 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.225682926 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.188247235 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.240730437 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.185386567 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.220636585 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.18801052 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.218979113 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.206346374 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.218241778 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.199185138 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.217957094 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.226314036 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.193871802 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.217185424 seconds)
  done (took 8.471914729 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.205256882 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.231965629 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.212663828 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.24201817 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.197207959 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.230786581 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.201993952 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.22682054 seconds)
  done (took 3.021259329 seconds)
done (took 44.927956815 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.212617837 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.235260618 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.207867117 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.233403628 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.347926238 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.193633646 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.238698965 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.19371824 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.233446305 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.208261862 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.217251735 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.195757153 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.238417326 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.198428994 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.350052886 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.234833466 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.355075177 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.351993854 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.19391784 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.235867029 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.195687727 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.35500169 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.234355791 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.194378114 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.329440952 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.226257598 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.343003998 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.19804848 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.232540576 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.186469617 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.351793608 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.232796276 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.194513207 seconds)
  done (took 9.415613888 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.303489734 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.232364437 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.195724205 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.229345956 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.737760095 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.228542377 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.336864748 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.196221461 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.228920332 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.19521526 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.228268486 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.320352001 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.201140376 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.223171726 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.198374836 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.17141143 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.3392493 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.230522498 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.188896786 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.153626867 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.226499761 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.19412454 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.349645308 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.226491328 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.196462876 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.229645418 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.19706252 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.235496667 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.198448994 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.228692152 seconds)
  done (took 8.718501523 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.204907357 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.240273639 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.216778478 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.296705156 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.226375481 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.242568226 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.212670211 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.241834246 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.216755505 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.223449193 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.205407003 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.258418733 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.207165437 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.234750465 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.188320979 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.240451239 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.204424017 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.222859124 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.198159773 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.242013271 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.241951866 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.207152788 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.244762042 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.202489814 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.220742161 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.199268253 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.231198249 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.202945804 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.230864903 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.205521388 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.224069326 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.192240249 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.225292522 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.225339354 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.224642423 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.203895425 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.244493308 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.203378271 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.236457233 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.22240393 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.225846541 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.191557826 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.249128546 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.246797884 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.225234613 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.200002746 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.226397074 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.203837066 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.222839789 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.206466128 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.266546965 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.222999159 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.211228159 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.222145511 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.1882322 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.231437123 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.191451435 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.226328614 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.207004693 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.224657713 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.211953919 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.230557881 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.203455712 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.225469426 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.202576915 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.22348879 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.190991187 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.227225834 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.217581196 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.231507476 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.227925526 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.224638341 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.202895942 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.236536974 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.201806466 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.236330034 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.189303348 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.234521514 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.202703741 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.229330947 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.204170269 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.227885986 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.193373864 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.240173341 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.212106982 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.238447692 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.202541192 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.23526546 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.192189121 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.227708905 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.209633827 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.225877656 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.194927183 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.237210628 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.19149647 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.228673289 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.201737604 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.233307236 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.189198283 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.250964995 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.194058589 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.224750499 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.216365371 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.229708634 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.194709262 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.233448821 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.232405351 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.225356355 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.200337718 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.23581826 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.191815908 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.233666044 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.192918546 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.225175934 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.206497121 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.24061934 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.199708569 seconds)
  done (took 26.980217433 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.452904745 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.43951104 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.293920705 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.523695841 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.203452662 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.395524824 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.440929603 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.443337106 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.227057806 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.225669985 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.282223067 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.440564316 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.192438473 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.254776507 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.447186782 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.52579064 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.220767954 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.267041167 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.262434444 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.204189658 seconds)
  done (took 8.064825733 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.204690429 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.258794067 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.214529331 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.243450735 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.202690206 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.240661538 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.192162684 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.246180912 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.204016281 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.233518707 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.19667957 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.232868891 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.20483807 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.239438651 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.207717207 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.24304027 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.201051423 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.228256152 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.214791127 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.230051563 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.166076381 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.24990364 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.202013484 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.246991251 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.209548854 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.236477512 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.191094482 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.229831149 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.199535848 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.233923045 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.196029516 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.232207071 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.20002099 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.167182877 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.237137783 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.206737938 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.233017159 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.195060065 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.231264383 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.194008255 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.239946499 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.203807554 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.234903012 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.162943584 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.245064579 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.173757776 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.205788095 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.238090481 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.169076553 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.246374366 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.20530507 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.239632267 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.200691235 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.247433036 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.199410912 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.242828407 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.202731365 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.240274452 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.197878678 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.225326674 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.190356032 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.228417619 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.200940193 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.240428107 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.205130252 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.23462661 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.201961515 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.225907998 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.196418224 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.230333026 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.194958538 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.238965926 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.213535696 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.235489393 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.200215623 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.237658262 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.201337856 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.158736031 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.235218437 seconds)
  done (took 18.43359358 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.222844801 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.237890412 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.211273296 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.259076536 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.20479557 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.232712095 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.203376828 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.245701998 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.208088292 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.245069379 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.209253297 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.241402275 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.215755465 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.237777331 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.202305876 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.244503144 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.203866381 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.26603793 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.204360713 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.254410949 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.207171916 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.231613531 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.205717085 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.239913102 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.253452347 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.205901686 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.254134372 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.206306164 seconds)
  done (took 7.700002619 seconds)
done (took 80.585541582 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.612303136 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.67815657 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.431860511 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.433246716 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.426287775 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.475162429 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.43404648 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.433106768 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.967748452 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.407917298 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.434315433 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.43329698 seconds)
done (took 31.547582891 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.528172639 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.158174386 seconds)
    (2/2) benchmarking "String"...
    done (took 2.163393832 seconds)
  done (took 5.656072413 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.134900866 seconds)
    (2/2) benchmarking "String"...
    done (took 2.142943399 seconds)
  done (took 5.599977913 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.438022322 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.425422329 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.846944261 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.422505204 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.424458255 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.428802913 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.445220062 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.424023412 seconds)
  done (took 17.741204604 seconds)
done (took 35.288566233 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.450595824 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.711651267 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.70389626 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.405687395 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.427453947 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.421776034 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.425278322 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.489951126 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.431811529 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.408428379 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.896495901 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.723528724 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.439349906 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.850811626 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.408175283 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.424063959 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.423669326 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.763086054 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.426413166 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.444112009 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.411138135 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.407205237 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.427757846 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.472367727 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.439156417 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.431914432 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.415418621 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.423567172 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.720025421 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.451972493 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.439496661 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.439708461 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.417199159 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.42418091 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.424099969 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.43671199 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.711039412 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.442035031 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.40921394 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.430056809 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.712015667 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.450602783 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.438699405 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.434189308 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.408277951 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.443488878 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.411719945 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.548362564 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.445206361 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.437641775 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.498946584 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.842753231 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.43319102 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.438002686 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.427878461 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.751057048 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.429174418 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.556976637 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.473052517 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.435669559 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.440296322 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.425382718 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.481804328 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.441181691 seconds)
  done (took 158.985876343 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.430813442 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.42602723 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.425116653 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.427485439 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.427656962 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.427212569 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.428792573 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.428557873 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.425933922 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.426286049 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.428286331 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.42786023 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.429605426 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.381692866 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.438348515 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.450910946 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.447355232 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.426925967 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.436615608 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.427426441 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.442774078 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.429667979 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.428767444 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.429206959 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.447774334 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.520084744 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.448190913 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.453633743 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.440358694 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.428907899 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.443897111 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.432830651 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.155365795 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.29822372 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.443680295 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.434111768 seconds)
  done (took 88.576783179 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.431002823 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.432367614 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.431772395 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.473315995 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.431795288 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.432402022 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.076086954 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.098366856 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.504065146 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.907846062 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.085174198 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.790028941 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.430999593 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.529303916 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.440931731 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.429043876 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.532254796 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.453491637 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.432034927 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.43324492 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.104429926 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.444652403 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.003919769 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.61965783 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.429532456 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.473932231 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.836396466 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.430353895 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.474539241 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.162028125 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.774861302 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.469049911 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.430057711 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.433163785 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.872643504 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.549989371 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.431619041 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.472797554 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.432973109 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.731540498 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.431093246 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.437380623 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.439344649 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.163958793 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.434377984 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.076567541 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.431560829 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.523317696 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.433175091 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.435664425 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 23.076738258 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.327363433 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.434121926 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.435700839 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.437980338 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.43521522 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.434574877 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.475571111 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 23.023591622 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.428546765 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.434703077 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.44336922 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.474294125 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.434886789 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.014818974 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.432572429 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.045915961 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.487743689 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.597076472 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.109014559 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.436554086 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.536575763 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.555479664 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.432147591 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.434514145 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.438625805 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.436978452 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.554025197 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.43349303 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.272389442 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.623702892 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.435121501 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.133814361 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.538525564 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.434154636 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.876786821 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.437283443 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.436488682 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.291830392 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.43944258 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.538576909 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.435360084 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.43943559 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.437256667 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.27653092 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.108325982 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.791081463 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.440227684 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.70425956 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.436040291 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.440518128 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.424089238 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.069779788 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.174160844 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.439415424 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.558026173 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.628193574 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.437504461 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.438933116 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.130993116 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.441914988 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.499562304 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.440369294 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.844486984 seconds)
  done (took 410.245621807 seconds)
done (took 659.132660913 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.423612808 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.420873306 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.434620273 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.41965543 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.440921562 seconds)
  done (took 13.475184713 seconds)
done (took 14.810939216 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.442320757 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.438416031 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.443444134 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.233287784 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.445367057 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.439938471 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.439328973 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.443095674 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.438659791 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.439207232 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.198849345 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.441048272 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.451538111 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.376899767 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.21900726 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.441276719 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.31759154 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.443516355 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.440428347 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.754972178 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.449266802 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.505048637 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.746228349 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.481865911 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.764355922 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.788689627 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.448865965 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.603488889 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.485547075 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.4623157 seconds)
  done (took 20.829459079 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.324753751 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.749194267 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.450721566 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.527989268 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.752520306 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.48663899 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.767165546 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.819118094 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.449790495 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.60775652 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.466284141 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.464556711 seconds)
  done (took 20.882158457 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.180280501 seconds)
done (took 93.090541022 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.484263154 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.5543744 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.481783748 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.463111553 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.462257314 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.461395979 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.463364619 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.461475259 seconds)
  done (took 13.169998004 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.461715555 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.460626783 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.460343814 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.458958694 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.461018711 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.46121299 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.459090554 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.458259236 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.458552189 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.461235823 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.460061539 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.459915779 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.459111222 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.461734725 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.461583458 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.463612596 seconds)
  done (took 24.708701944 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.465407839 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.460862257 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.459454938 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.462215139 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.459195871 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.461093209 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.459809165 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.461358053 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.461903196 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.460432861 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.459442931 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.461223229 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.460492412 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.460543022 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.463365901 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.460758415 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.459639194 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.461121661 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.464045149 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.46255186 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.461535816 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.462303298 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.460243426 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.461556602 seconds)
  done (took 36.411746116 seconds)
done (took 75.630892001 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.457210502 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.442579478 seconds)
  done (took 6.237427921 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.523609974 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.521852372 seconds)
  done (took 4.388322098 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.46433672 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.462716564 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.461145216 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.463488019 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.462835678 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.46290434 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.463552085 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.462761984 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.46500831 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.463433802 seconds)
  done (took 15.973713492 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.466064671 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.463457331 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.464261336 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.463675177 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.462527904 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.460049364 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.462972235 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.465174913 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.464633177 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.462247538 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.463939342 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.464653892 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.462531339 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.461035717 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.463620441 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.46187413 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.463635227 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.46259746 seconds)
  done (took 27.683012755 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.477820976 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.483427343 seconds)
  done (took 4.303913284 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.593193131 seconds)
    (2/7) benchmarking "second"...
    done (took 1.502736921 seconds)
    (3/7) benchmarking "month"...
    done (took 1.569014312 seconds)
    (4/7) benchmarking "year"...
    done (took 1.561502257 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.502399365 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.487331524 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.507765063 seconds)
  done (took 12.069103423 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.458126868 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.758743636 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.950525246 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.621964168 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.444240612 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.202580981 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.43040344 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.200043441 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 2.162826321 seconds)
  done (took 18.573590945 seconds)
done (took 90.571543007 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.451371839 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.522207981 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.481445372 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.464617317 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.808934354 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.45769881 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.45267718 seconds)
done (took 17.986286517 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.44341564 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.451569508 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.449267159 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.460778861 seconds)
  done (took 11.148302733 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.452529428 seconds)
    (2/2) benchmarking "read"...
    done (took 1.774377066 seconds)
  done (took 5.57236254 seconds)
done (took 18.06727969 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.47054965 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.465245192 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.469868257 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.467439825 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.470677824 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.468049 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.464810369 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.463455359 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.466354603 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.467848905 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.468260963 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.467706802 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.467194464 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.4691386 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.466196171 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.466421457 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.470303533 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.468900785 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.468997632 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.470264767 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.467934239 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.468136989 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.468992067 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.467156722 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.46588761 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.467617624 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.469145979 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.469800074 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.472250269 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.470818563 seconds)
  done (took 45.394433011 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.473481237 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.46900926 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.469423901 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.471168894 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.468815488 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.468246744 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.470996987 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.467571816 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.469052882 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.470862334 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.468515386 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.46837782 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.470518927 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.470386741 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.469338589 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.468467764 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.46818986 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.467590356 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.469814111 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.469168049 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.466486923 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.472713778 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.470527964 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.471430839 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.470986618 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.470088103 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.470690459 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.470009055 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.471389172 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.469956936 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.470933734 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.472484611 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.470512684 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.469463172 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.4705835 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.469130718 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.472883622 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.473961712 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.471331646 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.473331389 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.474248515 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.472083933 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.472623112 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.473956042 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.473942948 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.47282492 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.472818414 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.470106812 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.47175737 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.47485484 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.470562257 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.47392039 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.472060672 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.469835918 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.4729748 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.474307615 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.472680633 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.471773996 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.471420626 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.472070972 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.469749475 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.472730799 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.473546477 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.474365004 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.471612588 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.470204798 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.473079416 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.476345949 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.475274634 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.474375057 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.475871069 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.473305488 seconds)
  done (took 107.294928486 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.477498318 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.476186786 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.475315567 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.477450265 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.473766258 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.478433827 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.476886843 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.47800847 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.476786856 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.477385767 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.474725233 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.476500948 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.474362898 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.474675551 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.476097373 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.475742549 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.476523299 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.476300172 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.4728439 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.476651863 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.474577891 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.47497065 seconds)
  done (took 33.825134605 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.478153116 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.47758943 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.475868028 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.478322878 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.477602151 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.472758723 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.47337823 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.474911337 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.475904111 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.476792467 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.473905686 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.477597671 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.476368837 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.47452481 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.475637098 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.474507689 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.474131542 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.477575082 seconds)
  done (took 27.920628985 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.477451124 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.475583517 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.474283866 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.476058602 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.475421915 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.477113946 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.4739986 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.477184595 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.476058943 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.476219127 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.475923069 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.477956736 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.476924175 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.477831456 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.478088639 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.479486039 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.479632705 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.475653711 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.476949962 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.475634215 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.475824885 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.479340988 seconds)
  done (took 33.846326894 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.477294282 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.476446263 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.477010392 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.477808341 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.479818046 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.47794729 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.475874391 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.481240399 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.477866651 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.476562956 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.476844166 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.479279958 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.482692708 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.476262831 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.47702174 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.475918622 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.479787126 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.480217763 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.475671998 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.47811978 seconds)
  done (took 30.91829648 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.481481358 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.482488263 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.48276967 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.481841679 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.482110427 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.487312406 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.48266083 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.483210628 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.483951231 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.485316541 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.482069179 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.485932812 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.482900889 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.483419387 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.484179743 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.485504695 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.483481424 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.486575473 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.485481904 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.483810441 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.483549929 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.481973095 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.480433147 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.481317679 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.485544229 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.484160014 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.482414226 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.484903312 seconds)
  done (took 42.901562049 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.50209186 seconds)
    (2/2) benchmarking "in"...
    done (took 1.499874057 seconds)
  done (took 4.360662225 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.484538043 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.479690716 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.482539223 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.484394875 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.48565724 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.483492574 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.483271432 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.484061073 seconds)
  done (took 13.225961085 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.477591973 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.48454243 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.485459922 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.485300847 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.485689431 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.476202984 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.485157815 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.488016023 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.477952742 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.475323796 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.481595882 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.478986411 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.480716416 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.481873461 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.479110417 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.479383187 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.485996373 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.488422832 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.488625245 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.486802957 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.485320495 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.481522353 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.48519096 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.48788128 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.480341922 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.489899749 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.484600406 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.49011087 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.47854866 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.487805075 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.481533777 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.490179495 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.487753904 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.489947415 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.486926692 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.487903576 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.493171837 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.48609627 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.485332457 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.48945148 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.489698659 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.486449551 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.485081995 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.485947214 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.484450699 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.488848094 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.490111803 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.488379456 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.481929425 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.485044703 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.490134257 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.478846989 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.488479063 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.486086053 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.482618459 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.493182741 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.49341261 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.483220962 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.486659522 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.488493691 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.499031499 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.493617364 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.489801527 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.49262962 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.487647696 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.489261599 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.498294094 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.494034694 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.493542954 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.490258068 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.489881464 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.498357922 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.49575781 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.495381083 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.492468774 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.491643068 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.484812302 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.497289227 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.494355789 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.493172561 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.494432078 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.492366503 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.489422316 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.489043824 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.489135747 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.49459518 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.48933658 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.492512937 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.486958591 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.497710402 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.496668997 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.493854034 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.485361823 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.48880612 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.490798023 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.496245374 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.484207742 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.491502342 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.495762272 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.494790377 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.490335334 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.487983184 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.491496555 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.497696419 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.491768376 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.492456753 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.49683701 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.488245142 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.50025234 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.498518386 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.496079625 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.486703455 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.491873121 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.500815272 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.486652134 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.49454949 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.49964537 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.485623507 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.497910167 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.493367442 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.49238658 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.495775108 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.497381425 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.493194652 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.488616629 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.496012776 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.497750517 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.491833519 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.501739131 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.494829596 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.495896777 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.492517427 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.499683384 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.491295178 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.49833623 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.486262707 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.499557807 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.495333766 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.497120439 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.49063453 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.496893983 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.490328199 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.496812941 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.495098638 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.499719933 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.490352891 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.50305285 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.494102737 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.492277779 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.497860998 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.499006851 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.498347477 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.491619791 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.498452645 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.48674519 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.501731992 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.492594462 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.500616308 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.499124917 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.497437885 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.498416211 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.491449834 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.493666544 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.499833258 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.496757817 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.495832925 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.503247456 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.498280196 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.499363936 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.494023082 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.502778657 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.492735742 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.497376792 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.503476475 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.501438681 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.499403334 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.497995468 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.504289299 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.498946786 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.499620131 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.494158438 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.499108238 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.507251287 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.500526277 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.504169237 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.499660283 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.498749988 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.491904579 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.494961646 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.498466858 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.489067251 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.503444821 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.506080362 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.506898689 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.497162 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.504153942 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.494085342 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.503404336 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.500436066 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.504270479 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.50321185 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.497291662 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.494339058 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.503659538 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.493825312 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.502903477 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.49195656 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.50201304 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.501140456 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.499023569 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.499798312 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.493681346 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.497714046 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.506734001 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.500667374 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.500443675 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.492776499 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.507145981 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.493177612 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.495294851 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.506119162 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.502311134 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.506433264 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.506138505 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.501728263 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.509037 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.502384872 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.499921077 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.507232997 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.500648007 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.504452323 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.509322866 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.501814168 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.499674126 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.510124287 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.504181145 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.498503153 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.508117354 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.51364223 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.507265953 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.498258421 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.508188096 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.504096623 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.506216289 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.50566688 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.497279895 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.509306248 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.507777314 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.511167329 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.499976191 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.506320445 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.500712084 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.50756192 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.504097305 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.506395874 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.502831936 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.504914054 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.510058593 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.504407299 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.496112714 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.507354145 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.500919163 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.505320717 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.497641578 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.509596712 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.507228327 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.503438428 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.504845166 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.499852465 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.509612002 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.498366919 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.50872233 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.498025819 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.514017243 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.518447852 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.502523176 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.508282602 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.507042132 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.506770226 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.505838176 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.500521148 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.500823923 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.503033521 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.500707163 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.501027505 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.509628623 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.502376157 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.510406419 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.505608156 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.5076371 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.507384138 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.509524179 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.502635921 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.513585263 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.506788757 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.508617402 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.50086017 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.510214564 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.501643604 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.508712503 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.509387952 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.503329189 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.518134866 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.511425713 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.508280427 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.507928209 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.501538539 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.501743014 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.50931503 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.512080038 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.503680863 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.511282789 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.500950861 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.50888093 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.510195372 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.514383732 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.51439389 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.502429622 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.511872501 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.510736456 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.503633575 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.505877672 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.511183197 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.514489499 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.517302797 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.503045675 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.516511691 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.508404004 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.510475755 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.510416498 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.510296681 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.511649537 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.510714159 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.515488291 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.512805161 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.506193363 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.510085436 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.517389805 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.508946723 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.510299467 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.50002672 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.51558526 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.518189153 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.502802266 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.509548879 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.509543191 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.513765876 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.50877275 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.5132806 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.510428866 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.510436075 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.515753905 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.514010799 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.518887277 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.515621731 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.517151574 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.521507509 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.521404504 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.521261542 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.508862692 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.515590625 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.514478822 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.508171461 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.504253422 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.509665841 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.518853783 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.50659436 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.520849484 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.513522696 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.511402794 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.515538794 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.519186055 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.503986887 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.513254817 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.518480394 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.502039552 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.515081592 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.512831226 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.507028275 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.520144128 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.512927181 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.506554385 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.510224037 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.514132502 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.51651047 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.50874128 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.515597311 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.507271667 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.517237305 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.515995766 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.514101897 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.515976045 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.514187953 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.509153555 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.514003993 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.513073344 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.521426685 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.508551491 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.51709875 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.51031198 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.521264011 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.521070534 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.509330492 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.520753024 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.514228746 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.508873798 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.51299546 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.518654029 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.509284772 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.519124368 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.507151211 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.514421197 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.510620253 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.516208464 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.516429012 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.518119465 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.508487335 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.508774683 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.516507746 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.512593439 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.51984258 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.511512006 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.522238581 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.508710152 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.508978857 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.518491662 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.510971486 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.524213234 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.511942242 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.512208076 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.513813259 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.519985459 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.514462968 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.515991582 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.506078733 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.509036048 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.521792944 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.51806508 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.512817561 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.511330836 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.517699454 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.510270962 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.513877254 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.514154644 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.511708486 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.512986465 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.522035211 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.513416561 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.513395916 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.511233573 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.521213597 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.521456489 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.520476743 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.513340121 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.523074484 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.526341587 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.52605402 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.512454132 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.512415266 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.512218098 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.520377674 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.520378841 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.512353451 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.528732664 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.524416535 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.522617949 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.521669009 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.519745058 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.512732879 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.52061265 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.518846442 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.514609818 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.525837869 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.515250542 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.525068521 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.518051882 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.519150815 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.512631071 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.513392495 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.515203045 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.513223882 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.522106105 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.518514312 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.52142549 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.519200233 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.527157657 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.520488352 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.524916354 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.521370154 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.51725878 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.522485493 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.513963498 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.525147273 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.521966987 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.515827555 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.524067299 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.523227451 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.514780157 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.519340914 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.524055788 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.521153064 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.518610649 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.520973607 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.527120191 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.528183355 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.519652147 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.518290668 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.521593987 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.525625491 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.519784765 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.521973336 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.5177315 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.532661212 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.53167066 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.517766696 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.519813029 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.526077963 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.533807094 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.525221512 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.522188943 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.517832288 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.521004562 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.523116885 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.521075091 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.526933264 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.52967733 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.52012651 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.525299722 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.518603455 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.518884308 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.525198453 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.529621526 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.523398454 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.519548557 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.533278963 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.530683096 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.520784987 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.537565536 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.528630688 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.526962486 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.530205768 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.517185167 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.524370109 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.521340837 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.53071864 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.525718046 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.523765524 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.524538774 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.517905052 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.528001168 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.531924344 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.534803619 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.523485549 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.517217247 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.521425562 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.526444643 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.524790651 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.52654671 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.525439533 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.524966269 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.526896318 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.520768974 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.537342938 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.541076088 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.534003381 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.525803373 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.529423199 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.531251947 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.528710866 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.524143753 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.531354901 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.525433013 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.527152715 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.527181771 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.537227399 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.528315732 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.525552579 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.526933737 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.522342758 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.535844476 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.538442658 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.545219922 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.530517399 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.528387201 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.528167236 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.527815378 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.523560194 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.53142232 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.52709497 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.524058654 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.5257778 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.532379485 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.528510374 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.528935516 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.525098763 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.531743332 seconds)
  done (took 899.714638231 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.534065365 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.52842096 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.526819781 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.529096012 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.527575769 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.530450432 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.529548449 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.530229368 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.529174299 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.530092284 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.530923002 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.527336784 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.531498745 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.530564116 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.532076786 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.529563157 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.529120924 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.53112224 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.532527868 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.533033495 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.530178431 seconds)
  done (took 33.535928294 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.530841148 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.5319508 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.531820014 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.530050903 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.530171859 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.53011046 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.533041352 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.532187475 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.531324814 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.531506925 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.531344604 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.530991438 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.529236113 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.529547225 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.534376263 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.532954644 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.530889186 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.535876959 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.531248962 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.533523088 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.531314333 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.531739962 seconds)
  done (took 35.098795126 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.533624565 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.531577862 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.525958211 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.540526147 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.533543726 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.535069101 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.534852912 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.532929885 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.531388822 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.526214375 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.529109991 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.527393807 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.530863077 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.536479285 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.528827784 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.541671564 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.536695703 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.535283517 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.53308137 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.534151921 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.53904004 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.545152046 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.53934819 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.52821035 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.536121417 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.53134391 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.536681198 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.537696402 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.524883996 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.538800066 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.532515978 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.529326735 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.538307872 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.535905426 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.529686943 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.541863813 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.539538449 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.535767828 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.539520789 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.537324986 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.543329578 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.539820155 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.54165162 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.544033121 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.53844489 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.53220077 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.539627681 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.536342694 seconds)
  done (took 75.099703556 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.540966394 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.537619498 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.541072306 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.53718749 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.542476617 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.536869669 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.540740346 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.536662776 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.538856813 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.539904358 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.538274909 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.540304509 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.538834049 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.53888033 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.542897744 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.536348221 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.539835304 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.540693517 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.540123603 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.540563822 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.542474855 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.54312996 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.542853421 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.540706431 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.536697163 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.542865563 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.540714123 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.537649361 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.539448698 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.54122895 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.542311957 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.542604639 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.54461985 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.542525853 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.541355098 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.541997015 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.541523476 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.540074219 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.537307699 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.538939018 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.539125207 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.542704342 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.544873821 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.543552444 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.542047677 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.543703258 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.540483969 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.545191687 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.540916492 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.54368095 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.545721642 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.541838498 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.542223111 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.543962361 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.543828818 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.541047634 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.543604097 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.544330119 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.542697333 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.543187394 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.538754181 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.544851379 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.541972451 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.539742056 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.543940378 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.541975759 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.543281966 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.546683162 seconds)
  done (took 106.225914522 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.543894996 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.542554187 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.54717398 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.544513597 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.544316862 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.538143599 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.544072459 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.542709365 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.543570699 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.542400264 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.538840956 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.542975034 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.548379493 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.542222955 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.545300909 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.544848328 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.542886481 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.544330473 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.546491218 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.540523398 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.541899755 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.543863304 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.540413289 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.541782682 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.544836992 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.542772319 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.53934042 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.54238156 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.543619608 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.542617935 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.540962292 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.545428061 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.546076422 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.542839383 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.541028899 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.542073298 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.545298811 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.542540477 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.542779131 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.545779273 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.548462575 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.546336732 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.543675416 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.545224846 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.544464744 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.542443919 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.545340946 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.5455784 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.545304343 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.546422793 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.543437608 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.544240264 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.546879645 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.545831822 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.545241288 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.546430452 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.546528111 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.542964093 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.546766625 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.546905015 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.549581415 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.550618942 seconds)
  done (took 97.157201845 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.548910801 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.549280178 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.547518911 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.548528953 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.549500972 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.553277367 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.54818436 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.546096075 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.547278297 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.549336435 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.549896671 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.547966468 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.545265404 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.549079665 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.547329283 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.54758201 seconds)
  done (took 26.188419307 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.550755005 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.549203766 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.550463183 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.550458252 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.547384399 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.548748966 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.546426512 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.550035558 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.549926045 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.550715772 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.551455944 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.54975632 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.549749297 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.546032755 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.547462451 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.549017718 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.552994223 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.546968739 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.549988377 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.546151017 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.547912118 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.551857084 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.550732781 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.550116774 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.548072969 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.551002407 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.54768616 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.550794542 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.554552026 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.556172662 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.550573121 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.552986753 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.553462182 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.549908084 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.552394918 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.551521026 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.550372553 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.547718551 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.549548681 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.551737055 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.551124311 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.55104064 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.552563299 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.550971698 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.551972258 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.553030423 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.551505798 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.552374178 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.588035821 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.55361964 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.551651692 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.550322557 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.550470894 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.555520642 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.552833179 seconds)
  done (took 86.741204136 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.555671773 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.54989004 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.552248342 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.551365212 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.556545239 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.551920736 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.552779797 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.55419771 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.557515548 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.555936774 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.552131061 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.552496014 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.552195276 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.552875388 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.554381233 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.55313216 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.551963646 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.550216712 seconds)
  done (took 29.374845645 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.554313657 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.554332505 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.550430852 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.551156187 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.548807201 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.554678886 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.551656183 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.553014433 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.552558327 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.55421616 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.552056622 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.553663451 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.556391545 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.552720036 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.553075576 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.555464438 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.552490648 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.553741776 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.553610704 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.552300914 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.553915612 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.554000485 seconds)
  done (took 35.588418052 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.545185994 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.544249011 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.541386007 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.557820988 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.55359361 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.541904184 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.545301686 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.548507335 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.568494936 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.565430024 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.563105941 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.5515879 seconds)
  done (took 20.045567089 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.554582206 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.55685101 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.553619404 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.554726978 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.555741493 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.556013492 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.555439327 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.555049589 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.552934041 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.55713627 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.555665846 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.557574359 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.554585505 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.555221478 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.556586437 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.557386963 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.556218364 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.55866009 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.55583864 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.555665894 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.559031407 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.556176356 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.556499507 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.555847965 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.554606535 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.557696539 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.55437692 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.556921228 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.555491255 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.556963884 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.557083811 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.557854787 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.55778138 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.556690289 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.558360353 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.557360981 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.557474299 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.558168571 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.557729165 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.557615631 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.557399431 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.560174979 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.558468172 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.558297995 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.556558592 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.558569316 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.5589269 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.557565438 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.56132379 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.560042985 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.558614201 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.558189718 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.560527761 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.560167733 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.559036108 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.558444487 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.55945834 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.559521431 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.559356793 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.55871767 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.558534115 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.559892291 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.56000672 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.559338955 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.559803693 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.559664755 seconds)
  done (took 104.224555555 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.562986494 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.560268083 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.563187143 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.559234659 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.560881017 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.560472864 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.560340808 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.559090177 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.561934387 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.564798064 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.562751011 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.561435808 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.562491004 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.561447716 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.559650995 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.560784246 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.561742448 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.561962281 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.560863679 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.560299618 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.559687503 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.561713173 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.560008732 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.559557939 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.559465516 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.561046595 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.561600697 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.561587066 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.563063378 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.560114918 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.561622993 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.563712903 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.561502114 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.560204177 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.561940004 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.562690435 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.561255953 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.562186366 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.561399749 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.560494994 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.562594949 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.562102611 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.561866058 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.562514221 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.564498995 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.561617224 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.562843397 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.564492214 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.562107675 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.562386239 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.567072919 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.562619336 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.56486654 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.563181806 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.563624647 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.562887646 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.563305523 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.566272911 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.564922802 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.563009422 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.564164544 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.564209063 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.565551655 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.562315013 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.565004468 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.565022186 seconds)
  done (took 104.546846822 seconds)
done (took 1994.577874444 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.549793589 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.549321712 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.556243884 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 10.812180013 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.554696103 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.212971189 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.178461861 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.551615432 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.557321236 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.561420346 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.553739682 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.555423898 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.906315727 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.553095132 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.556148144 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.554489727 seconds)
  done (took 58.192687132 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.588554571 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.565360696 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.705099342 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.560704445 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.593457688 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.780264934 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.627154022 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.567785916 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.768116907 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.560883678 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.567739462 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.584527788 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.563196277 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.562333841 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.578212516 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.785459049 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.870998711 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.567155036 seconds)
  done (took 33.827038527 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.12410998 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.598121651 seconds)
  done (took 6.1514981 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.591567181 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.562531768 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.565883349 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.562617965 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.569313996 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.552265215 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.562578361 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.558264831 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.561877644 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.715269383 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.566501314 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.573906761 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.562752902 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.561936346 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.569865452 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.611115176 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.697989869 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.572548945 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.568955479 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.568765668 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.561048388 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.763189822 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.611439433 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.576140007 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.712246018 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.568353582 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.571221258 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.575567711 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.714457996 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.570843858 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.562917971 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.561636445 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.562961893 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.555414921 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.146986852 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.556191809 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.594572805 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.571146154 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.571244623 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.724071733 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.564812795 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.571209839 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.556890464 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.145293539 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.693551084 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.8162084 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.562921505 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.564739978 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.566636574 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.721452146 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.565209328 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.566626349 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.630084886 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.568842753 seconds)
  done (took 98.83100594 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.566996335 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.557532877 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.748106498 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.585765296 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.554555627 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.554578765 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.575620905 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.924447118 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.560877513 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.556528997 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.902546093 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.278277553 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.559359701 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.614696131 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.603543898 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.619597005 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.558609386 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.56389029 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.556652981 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.559583205 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.178470485 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.556053589 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.574637697 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.752721986 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.603457698 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.198437344 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.558795307 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.557727176 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.562746938 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.552900959 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.247674947 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.571705393 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.642865873 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.558544444 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.889954566 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.033549136 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.986233271 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.556002137 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.563203353 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.558458096 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.591681111 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.187854442 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.013507434 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.557636672 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.576395845 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.18525611 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.556635375 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.563936836 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.571473269 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.839431743 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.559651702 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.563022858 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.558318101 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.560313179 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.558972203 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.624896569 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.644144963 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.181466369 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.559635821 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.55861552 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.60932271 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.56150083 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.569244418 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.561329134 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.560609014 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.014716359 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.75994965 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.562682492 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.01202299 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.241506485 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.562329193 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.315727624 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.562478292 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.584091441 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.675726464 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.56183473 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.560207358 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.176317521 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.58668203 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.558248804 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.995022655 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.562760283 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.920433605 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.58210174 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.561149846 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.198779212 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.571471136 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.629325822 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.563682214 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.574160968 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.559814011 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.564090023 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.894047618 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.605113909 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.564332494 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.56215406 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.583797883 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.560906951 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.562126958 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.569577215 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.317901068 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.574051109 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.563019256 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.563968108 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.564525704 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.566339982 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.567261073 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.568275546 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.853952918 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.569483001 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.567703524 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.567029796 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.561426586 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.573247399 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.763277919 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.573189977 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.965088037 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.568715407 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.565814243 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.585596799 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.563926187 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.578630294 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.562650421 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.565061639 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.533409772 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.924227324 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.586518209 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.582792652 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.565451878 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.568196567 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.567311656 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.561700029 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.605165486 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.565512878 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.448888384 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.593702321 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.597182754 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.565225475 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.581484574 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.565474967 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.569794085 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.567534162 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.904607901 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.903424417 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.785262223 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.568734507 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.568308694 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.456324752 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.60471525 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.755908665 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.588098554 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.566607652 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.873716278 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.780459891 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.567791409 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.566242391 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.570713424 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.860127505 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.567033942 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.910488282 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.275015026 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.570439491 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.57751407 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.452479505 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.340108532 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.570316849 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.572317567 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.91393272 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.585690202 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.580296196 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.568977133 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.568090941 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.566919982 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.575679367 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.577040458 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.569793121 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.567487152 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.641131934 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.769067999 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.585992842 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.574236974 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.203995001 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.576995285 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.566525996 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.572695262 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.568441094 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.570139394 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.628097596 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.57440738 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.593619031 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.569977391 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.569547207 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.276954331 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.571294797 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.569234015 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.772963766 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.40457177 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.570942919 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.570353842 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.573121869 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.625491692 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.2332654 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.576554557 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.975570171 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.58478439 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.617986785 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.571689732 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.605083279 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.233688538 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.574122628 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.567705316 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.402550717 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.572367718 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.348975429 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.57094554 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.572194636 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.338495708 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.574810103 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.57523462 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.5742951 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.569730265 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.88853557 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.574270391 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.618418933 seconds)
  done (took 553.849369896 seconds)
done (took 752.280679919 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.572286294 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.57514615 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.576207688 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.573073354 seconds)
  done (took 11.744650117 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.590563561 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.579746901 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.588398425 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.579344026 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.589520011 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.579106944 seconds)
  done (took 10.957525383 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.573011823 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.574850988 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.574750391 seconds)
  done (took 9.172851031 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.833205129 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.576233377 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.007099691 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.575552304 seconds)
  done (took 10.444115481 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.589397026 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.587685274 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.588682455 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.590141155 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.591256779 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.593702681 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.597339801 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.59184013 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.593642072 seconds)
  done (took 15.77089955 seconds)
done (took 59.538088098 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.652627199 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.658428601 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.599206047 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.626537672 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.710032901 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.661609831 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.665601189 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.667795312 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.661683671 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.616129575 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.659883885 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.605782451 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.654219998 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.773308595 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.616501289 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.66323052 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.606972052 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.757012749 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.657464559 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.620196115 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.684462252 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.613392072 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.616574606 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.576780442 seconds)
  done (took 43.077961351 seconds)
done (took 44.530088669 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.617491151 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.676862901 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.585632297 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.586215941 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.588715917 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.5951969 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.608429458 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.585491922 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.598944662 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.602580467 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.595063789 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.59444256 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.602113611 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.596381541 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.620571867 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.588806945 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.584610665 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.599183455 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.601131438 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.605137605 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.588901097 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.587779825 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.613849214 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.587105113 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.595178001 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.597092515 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.591681964 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.589380065 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.59483677 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.604619941 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.596034131 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.593168059 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.604456859 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.6004862 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.59188893 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.600485337 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.590406562 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.681681904 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.610323187 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.597956217 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.596238326 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.60471645 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.595079378 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.594903447 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.600420342 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.615180158 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.595613143 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.60524049 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.594450243 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.585740491 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.608380507 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.600903263 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.598296257 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.589978862 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.59307114 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.600157006 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.600329572 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.610394446 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.598242528 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.594300706 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.623359222 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.613306694 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.602188285 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.598506547 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.597077878 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.605575951 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.601322766 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.607560453 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.598755421 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.59456098 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.593271452 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.599369573 seconds)
done (took 124.740907372 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.715947026 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.588447308 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.74575009 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.60016251 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.761416829 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.71418505 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.60104276 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.598060647 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.602475931 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.391511242 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.598016511 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.603210263 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.589724792 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.601583251 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.715607213 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.599530549 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.600989898 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.285880196 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.601422975 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.729399249 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.593727787 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.601676485 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.600360401 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.3901021 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.590917881 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.586904725 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.732591461 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.599844117 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.286047284 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.58319655 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.584497366 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.290556083 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.732884223 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.617460116 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.609192725 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.609463753 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.761103541 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.602859701 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.717737445 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.720428342 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.752118713 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.638625328 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.584247196 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.590173348 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.603524977 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.601469825 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.598439099 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.628689467 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.593132189 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.604182927 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.289981391 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.611860481 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.598692621 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.603821889 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.603764565 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.630893645 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.604654794 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.604155774 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.735504764 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.604311988 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.719308428 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.391441828 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.393273389 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.603817364 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.590432982 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.604303788 seconds)
  done (took 125.907930767 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.663930984 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.668164242 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.721082082 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.594484496 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.643914193 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.726361421 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.595073518 seconds)
  done (took 13.073705256 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.599788077 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.607533266 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.643752475 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.646156315 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.601795517 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.767590876 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.607791385 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.604927804 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.60289635 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.646951198 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.606727908 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.605614371 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.612549414 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.59099557 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.645419286 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.602957692 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.717496873 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.59842475 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.605710305 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.746837619 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.606824832 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.617478469 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.646554389 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.606875093 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.606498428 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.603931613 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.353512019 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.603849129 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.604141378 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.605356582 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.605707701 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.66498903 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.607387474 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.596593368 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.604951023 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.711469496 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.606271705 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.606120405 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.605294912 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.5954588 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.605402485 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.60673536 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.606387663 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.605314927 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.60629536 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.622179869 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.606674099 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.605679353 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.607734047 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.607028016 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.647808572 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.606677237 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.60600055 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.607474968 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.652708871 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.615734353 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.606748922 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.607570995 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.607462828 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.606978863 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.75065537 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.645868148 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.609631309 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.648478442 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.606575401 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.607466025 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.607558573 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.609593201 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.692493314 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.607195385 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.647171654 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.606848724 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.778927176 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.624298682 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.607573977 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.60319579 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.603103821 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.607977372 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.597062043 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.607993368 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.607505992 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.600800587 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.604891591 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.609276967 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.609928438 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.759832321 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.70914628 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.609295194 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.615189971 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.608570121 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.607826611 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.651429203 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.610941627 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.608991533 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.650776033 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.719664343 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.654044473 seconds)
  done (took 163.951267091 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.6158353 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.615590508 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.605657926 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.62894911 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.604987063 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.603403769 seconds)
  done (took 11.143035119 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.605222381 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.615790002 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.612080629 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.611781066 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.612894298 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.613059099 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.611467513 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.603843311 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.614202669 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.612082857 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.612402914 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.615864031 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.61291485 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.618600895 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.615276603 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.612898859 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.610589139 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.610324584 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.617881973 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.613142742 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.601340102 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.61176978 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.613486167 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.609314535 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.619255693 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.618399497 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.630900863 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.616916042 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.61924098 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.612997191 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.623295073 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.625867249 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.619785293 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.622824787 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.629723687 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.618464217 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.628656183 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.626290642 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.625880349 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.62558637 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.625563986 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.627063825 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.622249314 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.619047473 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.610817575 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.617486441 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.63018494 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.642625886 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.61871183 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.618365222 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.621212548 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.619703219 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.623966429 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.624549087 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.622670729 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.619290516 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.63363694 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.627887192 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.62767519 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.62284812 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.62730761 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.630796387 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.611450483 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.633299384 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.627318097 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.630594277 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.621948158 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.636804774 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.632704256 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.633913309 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.633043542 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.633527266 seconds)
  done (took 119.158920006 seconds)
done (took 434.691580815 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.008071988 seconds)
  done (took 4.48049337 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.874283102 seconds)
  done (took 4.350045226 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.32107891 seconds)
  done (took 26.810961719 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.700341462 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.614028516 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.645188313 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.607539571 seconds)
  done (took 12.042867666 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.246715492 seconds)
  done (took 4.720384464 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.615210696 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.615317685 seconds)
  done (took 6.708844071 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.999729897 seconds)
  done (took 4.473974051 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 9.488622429 seconds)
  done (took 10.976793908 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.62238164 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.617774606 seconds)
  done (took 6.725213025 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.596458025 seconds)
  done (took 4.070865217 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 535.728274413 seconds)
  done (took 537.206687221 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.624856083 seconds)
  done (took 4.106028506 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.65728282 seconds)
  done (took 4.130064084 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.783791255 seconds)
  done (took 7.257609452 seconds)
done (took 639.53304998 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.609613164 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.609561409 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.601285644 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.601515084 seconds)
  done (took 11.895617341 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.686698035 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.686052606 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.701596309 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.682285898 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.67696222 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.687281622 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.648307615 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.651823137 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.67652422 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.675954125 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.685563916 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.679063073 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.68869243 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.646666175 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.674865056 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.688718698 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.67287065 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.692139116 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.650152034 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.682266256 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.622847888 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.680619052 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.674358824 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.623373642 seconds)
  done (took 41.615142728 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.132511406 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.682699345 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.769914474 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.664840769 seconds)
  done (took 8.727562202 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.729109183 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.726708441 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.745387386 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.783154999 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.823810065 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.743199136 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.649101718 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.644262345 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.631341176 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.725166076 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.800578758 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.724184283 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.946874296 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.621337652 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.94012784 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.628676237 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.623601158 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.729682116 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.782986073 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.811215834 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.628676932 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.733214669 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.745798766 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.731085775 seconds)
  done (took 43.125445737 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.636969054 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.64344698 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.625072978 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.641422925 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.628540188 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.626231522 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.626578569 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.62907766 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.627655174 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.625000882 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.626917899 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.639261608 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.624563573 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.62773299 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.633136503 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.628540492 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.628279052 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.632761805 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.632740566 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.626209799 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.624586593 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.630991867 seconds)
  done (took 37.345353331 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.610524551 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.608509838 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.960468069 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.863393591 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.611411158 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.606843627 seconds)
  done (took 15.74060577 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.707275232 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.855200975 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.615110395 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.059921118 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.142389604 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.616117882 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.616806989 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.904925981 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.282638803 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.312741676 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.666117585 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.695658456 seconds)
  done (took 23.957679716 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.703056667 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.622441905 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.622457102 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.69276925 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.621837053 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.619919066 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.684634783 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.166647783 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.626082243 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.899246303 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.621097617 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.702757254 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.87183439 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.623043312 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.62124716 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.597836511 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.85207931 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.23534459 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.624228084 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.625146243 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.653206447 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.629181725 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.628644243 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.876966453 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.622806953 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.623712414 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.887345051 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.621089932 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969047274 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944790719 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9423698 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.624039027 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.9004799 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129752288 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.728237474 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874198304 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.623838013 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.624050846 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.605293682 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.631453552 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.633240904 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.622616867 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940662512 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.626256554 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.625342583 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.624339786 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171394281 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.63243198 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.624153473 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.624628773 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947174727 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.707270615 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.631553573 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.626165905 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.629133993 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.620949142 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.630039406 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.748047922 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.263659345 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.626594734 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.624829328 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.623195751 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.620002698 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.625398389 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.371288415 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.632916143 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.633160811 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633059593 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.626036431 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.636080349 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645137178 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.624514153 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.64259914 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.627744312 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.574990455 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.635083596 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.626748465 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.301170465 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.628105421 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.626068972 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853810341 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.626712438 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.629663923 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.625285768 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.629570689 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.564614842 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.637003489 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.603323155 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.656881781 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.176462215 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.881949478 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.647747058 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.656159911 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.850645887 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.602239129 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.630178019 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.6420876 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.628887869 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.647978952 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.180051163 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.6260879 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.630343167 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881650303 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.839293216 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.640568337 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.601893376 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182933663 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.635817601 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.649247029 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.640362152 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.882497118 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.347270094 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952943052 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637098989 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.664172572 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.631493621 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.61820782 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.642526123 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.634535155 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.638580851 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.945377112 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.605343724 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.628752688 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.705097095 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.630964 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.632857757 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.641400568 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.632413541 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.629639015 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.868669325 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.636693296 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.945890138 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.638095925 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.635655499 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.641198944 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.63904027 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.632975642 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.851953652 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.636099835 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.903753971 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.632138955 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.634235836 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.625893102 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.847599341 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.649216973 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.641134039 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.974070547 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637938404 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.648692976 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94972421 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.66994102 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.747418161 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.668650614 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.653200382 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.880570299 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.637450718 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.642667294 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.651613286 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.632095508 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637267841 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.643267754 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.623781076 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377106211 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.617291806 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.636422109 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.634405498 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.650968055 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.70741903 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637667297 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.896286621 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.632123131 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.62703924 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.637492092 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.65237359 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.853875749 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95540807 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.648620082 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.805889694 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.18674828 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.355775604 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647785545 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.633063639 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.632756427 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.632297227 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.634150705 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.632757319 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.633686793 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900029889 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.966118106 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.624630805 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.360495064 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.636840807 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.650197963 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.642737854 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.955718301 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.647261935 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637068378 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.651470153 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.636756638 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.638762139 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.958373736 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854834394 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.652601177 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.637226157 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.152322427 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644175789 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.638391052 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.637697762 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.664570193 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.655990888 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273132312 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.979877815 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.651185618 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.962435814 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.654195953 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.652360474 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.641438009 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654528356 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.642990029 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.643737343 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.647912396 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.901610754 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.660948109 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.638851533 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275826901 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.600481545 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.296803291 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.646489751 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.63439783 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.63847946 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.195868977 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.640383788 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.640768232 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.92788369 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.194038798 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.634198783 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193682769 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.633471171 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.560345355 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95924039 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.869034252 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.643508759 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.649146684 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961604407 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.85363569 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.669776949 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.649512368 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.636841967 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.612513534 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278377968 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.652441641 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.81957422 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201195623 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650991017 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.640151699 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.708357887 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.655697156 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.127889038 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.636060661 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.641547443 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.653330879 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.638094643 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27567191 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.646266213 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.638403784 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.382825 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.653993091 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.198390228 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.636096894 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.902970817 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.962117251 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.942119616 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.643467138 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.640144986 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.883740576 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967293326 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.646902501 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.660284639 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.300471485 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.502168905 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.648064343 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.64514998 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.640642737 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.647840937 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987844399 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.657403176 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.660278827 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648307556 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.642328209 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.643932317 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.643968381 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.653025756 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.629833235 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.27164227 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.647277313 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656091363 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.658904012 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644926799 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.893528785 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.657685627 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.352820959 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.875756411 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.663404108 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.678467912 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.647893687 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655311204 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.619251268 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.643421888 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.642861894 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659488195 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.868357614 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.654176211 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.617470045 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.727562727 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.85460929 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.642983019 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.640991455 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916979523 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.644016704 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.660305386 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.613433512 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.674477523 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.659873107 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648464973 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.644819139 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.680320139 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.719485843 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911021129 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.965717482 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.965143139 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141326637 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660025572 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.646814984 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.663729221 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.727502144 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650294101 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.647736204 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.663536363 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359753781 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.60244155 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.365164558 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972352139 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.650621517 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648994274 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.64849412 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887164482 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.648696916 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.921158653 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.651937128 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.644149513 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.670759622 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66132999 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664249119 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861269009 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.926280804 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.651288818 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.654516938 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646313152 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.650256158 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.975580203 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.861962387 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.286194123 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.351357217 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650624366 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.662045223 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.212015473 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.924215305 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.647565379 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.648540745 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65161943 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.671210658 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.648028324 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.65582357 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650526673 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871786195 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970170739 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.18553961 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.969725011 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.676072555 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.526386703 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650909028 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.918699343 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482692075 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.91563928 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372518931 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.506202692 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910380368 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.722651627 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916851139 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.651093309 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887054636 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.656947067 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.649863053 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.648971775 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.648581316 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.648339391 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.974725145 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380181374 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90833485 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.656177182 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.657647224 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.680250589 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.915090966 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.876279455 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.60702988 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.870544442 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979201937 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.6595444 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.653528678 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393368068 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.978677394 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653219723 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.654614027 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929383996 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.656631624 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.687186449 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.524675675 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.651523739 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.356754166 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.870489779 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.674422337 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664152339 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.53077977 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411359099 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.660616816 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.300716093 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.654982097 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.656142839 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.929813813 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.659464733 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.654120191 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.941262065 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.664142111 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.672506215 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923717534 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.407671967 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.553116897 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.658876856 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665884894 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.661433133 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.653339192 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.717164549 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652153813 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.663693934 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.157436687 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.656318284 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656887672 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.666398867 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.665421863 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.653311017 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.676301832 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654852249 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.659397751 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.651698607 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.625593378 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.660162983 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777080779 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300924468 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656337583 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.272339873 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.992492267 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.905157193 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.655602659 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.632234198 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.667079104 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660671659 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.659788021 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656196815 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.650956374 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.378591624 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.663192652 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.986412877 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664336748 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.870768782 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87241592 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.656957113 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928710989 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.669458267 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.678274759 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.632252187 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663026718 seconds)
  done (took 1116.417294812 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.689740136 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.665079772 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.669442307 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.753596141 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.702124683 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.718202984 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.662269064 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.712361986 seconds)
  done (took 23.087839903 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.659950381 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.659348472 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.672063099 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.661162174 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.668377448 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.230782332 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.653278979 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.65835852 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.676987606 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.659997433 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.65577572 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.413785329 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.663377535 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.654168746 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.652938661 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.662033428 seconds)
  done (took 37.428706426 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.26320533 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.71709074 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.665842706 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.766039434 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.710447452 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.659851142 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.245439794 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.655872322 seconds)
  done (took 31.199275175 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.671133708 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.663846654 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.667257704 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.665524001 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.667475369 seconds)
  done (took 9.849536259 seconds)
done (took 1401.867520724 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.668182875 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.663390353 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.666704567 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.6698558 seconds)
  done (took 8.182514854 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.637926495 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.636486217 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.635705783 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.649955953 seconds)
  done (took 11.075608595 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.116592736 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.327290397 seconds)
  done (took 5.957544251 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.66349173 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.423827747 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.410941198 seconds)
  done (took 9.01345084 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.969401066 seconds)
  done (took 3.481828853 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.07511846 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.116795433 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.661014262 seconds)
  done (took 8.370114403 seconds)
done (took 47.597884682 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.661702173 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.422438081 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.826024487 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.660672716 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.85050251 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.827411228 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.946328235 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.653213715 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.65676876 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.657277666 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.657553609 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.873244823 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.933401743 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.426093173 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.935212699 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.428449518 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.83358377 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.662200312 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.656998174 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.658928446 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.946828321 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.656704412 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.661780197 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.668649866 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.832164514 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.817170485 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.667985744 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.421464171 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.672495188 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.672682738 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.814838453 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.667674085 seconds)
  done (took 92.248127877 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.667227174 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.654445885 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.654504202 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.654244572 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.657135871 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.656537507 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.656672838 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.672628195 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.658698834 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.655741067 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.656195866 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.671015949 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.658332419 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.656272243 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.660378392 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.660395182 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.658086123 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.668247216 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.658475865 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.677465304 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.660311645 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.657714822 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.657054763 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.673270857 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.656970518 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.658191416 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.66514595 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.667265096 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.656007014 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.65479872 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.657371675 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.66303666 seconds)
  done (took 86.660941633 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.659416622 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.684210138 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.654112131 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.657552547 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.658880684 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.681580155 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.659898714 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.664120617 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.656594021 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.668455772 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.657263682 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.658012693 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.661118315 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.672273753 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.659827808 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.676049105 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.658483424 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.659286984 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.66349338 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.667999123 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.663970824 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.663329478 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.67917135 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.660028476 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.673924021 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.660846878 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.659689876 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.65820814 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.660762539 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.668664045 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.662043689 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.657749981 seconds)
  done (took 86.77044956 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.902364667 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.672805714 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.677499921 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.66893884 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.675996405 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.675225092 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.671334073 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.90901113 seconds)
  done (took 17.37602133 seconds)
done (took 284.5742513 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.669365751 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.669113953 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.695363588 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.669722174 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.712459174 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.698771707 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.912738976 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.696946643 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.89431286 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.670174912 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.691944186 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.675358133 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.624901228 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.825198221 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.668304666 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.673877479 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.665059765 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.664982497 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.688331761 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.929264403 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.697565233 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.665821325 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.673725753 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.672727525 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.647139644 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.748277574 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.753645986 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.838706288 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.802954154 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.748051809 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.667087432 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.67352978 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.694231353 seconds)
  done (took 76.205173405 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.673822242 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.677427425 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.681740173 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.677472611 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.682782793 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.679487513 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.670294726 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.680034488 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.68181104 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.681349776 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.681191514 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.682128344 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.679322052 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.681540682 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.681621943 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.659551585 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.675078795 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.68094227 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.674168769 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.661010704 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.682349428 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.679684629 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.684790138 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.678284363 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.678714959 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.682408503 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.681597383 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.680120931 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.678796913 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.681772764 seconds)
  done (took 51.880254948 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.684004324 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.675353635 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.665471216 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.682328966 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.673548577 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.676886637 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.029562552 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.684801687 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.680551805 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.678163051 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.66944792 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.685774608 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.730995276 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.671929028 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.6796911 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.685140511 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.686648105 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.681065366 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.687914866 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.691348779 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.039727831 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.686740594 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.033920717 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.694762454 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.683021693 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.676631872 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.682002901 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.6770505 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.679907585 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.673876063 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.672825164 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.019433229 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.69389784 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.690791148 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.674706229 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.685112821 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.684548903 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.668840513 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.680376787 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.675699601 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.024510406 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.676755297 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.671156071 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.668187277 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.682326004 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.688919208 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.667514861 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.670119537 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.975235629 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.684991488 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.672530866 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.683839793 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.687746202 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.682478315 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.978821275 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.681680103 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.677629452 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.6712961 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.686108414 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.026751497 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.687796781 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.683339813 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.687019998 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.67831664 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.679180334 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.678901266 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.691862744 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.683446224 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.671819548 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.683036079 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.670498968 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.679691405 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.687486426 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.674469235 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.679513186 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.674904991 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.680175379 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.688729033 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.672048801 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.029735578 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.68756801 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.673159583 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.049608405 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.68347349 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.688721456 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.690732851 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.688022573 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.759830468 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.031055123 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.661818231 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.69614181 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.677568033 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.038985589 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.692419659 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.685566635 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.674883512 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.691109304 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.690995289 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.674050109 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.676305394 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.686732881 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.696704351 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.678646307 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.685721076 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.034643674 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.689234892 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.673869077 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.686066558 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.759917789 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.690426426 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.695514145 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.686812337 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.044051672 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.690555278 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.694815938 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.676929394 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.683168443 seconds)
  done (took 241.307097502 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.679207752 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.681664342 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.717072119 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.676806936 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.679644254 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.686773916 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.678689656 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.67718038 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.686288505 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.678409124 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.678413798 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.68995122 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.687994827 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.678310875 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.693455631 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.680733241 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.675884026 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.704459559 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.682984257 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.678616827 seconds)
  done (took 51.229762655 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.696640231 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.387999236 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.335636896 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.694770971 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.693530167 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.687233633 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.757662801 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.695610818 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.694374891 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.058020652 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.899995265 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.701946128 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.695070352 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.695883395 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.331572957 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.673612793 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.055160859 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.369497486 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.695225383 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.368986933 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.672490834 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.694153172 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.687137371 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.373837348 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.068821798 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.038755976 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.759436005 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.376688875 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.694367395 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.695540389 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.374687764 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.697839594 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.689496223 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.367760595 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.698855393 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.712180908 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.698223655 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.762164722 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.763467408 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.05610956 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.379163942 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.051208827 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.709435707 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.888090341 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.700705441 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.672834831 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.384209659 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.701372466 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.672282799 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.696452393 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.701537995 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.344895484 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.68719303 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.346801393 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.699536277 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.698581424 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.378480502 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.348986424 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.336845126 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.901097772 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.691505243 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.044735663 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.700498616 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.386979943 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.699786726 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.696650115 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.700909602 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.907609053 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.374848224 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.043629541 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.062793229 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.064191463 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.702437047 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.774636554 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.702318643 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.063157498 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.769144954 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.159503706 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.06614109 seconds)
  done (took 153.529340459 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.010606514 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.804552226 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.147443461 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.344338965 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.270658337 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.849918731 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.826171825 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.973807794 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.694550119 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.796914277 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.478819708 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.799692126 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.534290338 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.773921389 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.811625337 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.836078597 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.178090637 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.697848659 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.419525704 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.44642961 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.694577635 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.804779654 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.519595465 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.123679911 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.690049199 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.519706923 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.688689705 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.293720591 seconds)
  done (took 63.575153134 seconds)
done (took 639.246060348 seconds)
SAVING RESULT...
DONE!
